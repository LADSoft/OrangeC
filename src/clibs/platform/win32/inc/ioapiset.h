#ifndef _IOAPISET_H
#define _IOAPISET_H

#ifdef __ORANGEC__ 
#pragma GCC system_header
#endif

/* ApiSet api-ms-win-core-io-l1 */

/* #include <apiset.h> */
#include <apisetcconv.h>
#include <minwindef.h>
#include <minwinbase.h>

WINBASEAPI HANDLE WINAPI CreateIoCompletionPort(HANDLE, HANDLE, ULONG_PTR, DWORD);
WINBASEAPI BOOL WINAPI GetQueuedCompletionStatus(HANDLE, LPDWORD, PULONG_PTR, LPOVERLAPPED *, DWORD);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI BOOL WINAPI GetQueuedCompletionStatusEx(HANDLE, LPOVERLAPPED_ENTRY, ULONG, PULONG, DWORD, BOOL);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI BOOL WINAPI PostQueuedCompletionStatus(HANDLE, DWORD, ULONG_PTR, LPOVERLAPPED);
WINBASEAPI BOOL WINAPI DeviceIoControl(HANDLE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
WINBASEAPI BOOL WINAPI GetOverlappedResult(HANDLE, LPOVERLAPPED, LPDWORD, BOOL);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI BOOL WINAPI CancelIoEx(HANDLE, LPOVERLAPPED);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI BOOL WINAPI CancelIo(HANDLE);
WINBASEAPI BOOL WINAPI GetOverlappedResultEx(HANDLE, LPOVERLAPPED, LPDWORD, DWORD, BOOL);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI BOOL WINAPI CancelSynchronousIo(HANDLE);
#endif /* _WIN32_WINNT >= 0x0600 */

#endif /* _IOAPISET_H */
