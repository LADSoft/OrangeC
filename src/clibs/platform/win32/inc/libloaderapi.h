#ifndef _LIBLOADERAPI_H
#define _LIBLOADERAPI_H

#ifdef __ORANGEC__ 
#pragma once
#endif

/* ApiSet api-ms-win-core-libraryloader-l1 */

/* #include <apiset.h> */
#include <apisetcconv.h>
#include <minwindef.h>
#include <minwinbase.h>


#define FIND_RESOURCE_DIRECTORY_TYPES  (0x0100)
#define FIND_RESOURCE_DIRECTORY_NAMES  (0x0200)
#define FIND_RESOURCE_DIRECTORY_LANGUAGES  (0x0400)

#define RESOURCE_ENUM_LN  (0x0001)
#define RESOURCE_ENUM_MUI  (0x0002)
#define RESOURCE_ENUM_MUI_SYSTEM  (0x0004)
#define RESOURCE_ENUM_VALIDATE  (0x0008)
#define RESOURCE_ENUM_MODULE_EXACT  (0x0010)

#define SUPPORT_LANG_NUMBER  32

typedef struct tagENUMUILANG {
    ULONG NumOfEnumUILang;
    ULONG SizeOfEnumUIBuffer;
    LANGID *pEnumUIBuffer;
} ENUMUILANG, *PENUMUILANG;

#ifdef STRICT

typedef BOOL (CALLBACK *ENUMRESLANGPROCA)(HMODULE, LPCSTR, LPCSTR, WORD, LONG_PTR);
typedef BOOL (CALLBACK *ENUMRESLANGPROCW)(HMODULE, LPCWSTR, LPCWSTR, WORD, LONG_PTR);

typedef BOOL (CALLBACK *ENUMRESNAMEPROCA)(HMODULE, LPCSTR, LPSTR, LONG_PTR);
typedef BOOL (CALLBACK *ENUMRESNAMEPROCW)(HMODULE, LPCWSTR, LPWSTR, LONG_PTR);

typedef BOOL (CALLBACK *ENUMRESTYPEPROCA)(HMODULE, LPSTR, LONG_PTR);
typedef BOOL (CALLBACK *ENUMRESTYPEPROCW)(HMODULE, LPWSTR, LONG_PTR);

#ifdef UNICODE
#define ENUMRESLANGPROC  ENUMRESLANGPROCW
#define ENUMRESNAMEPROC  ENUMRESNAMEPROCW
#define ENUMRESTYPEPROC  ENUMRESTYPEPROCW
#else /* !UNICODE */
#define ENUMRESLANGPROC  ENUMRESLANGPROCA
#define ENUMRESNAMEPROC  ENUMRESNAMEPROCA
#define ENUMRESTYPEPROC  ENUMRESTYPEPROCA
#endif /* !UNICODE */

#else /* !STRICT */

typedef FARPROC ENUMRESTYPEPROCA;
typedef FARPROC ENUMRESTYPEPROCW;

typedef FARPROC ENUMRESNAMEPROCA;
typedef FARPROC ENUMRESNAMEPROCW;

typedef FARPROC ENUMRESLANGPROCA;
typedef FARPROC ENUMRESLANGPROCW;

#ifdef UNICODE
typedef ENUMRESTYPEPROCW ENUMRESTYPEPROC;
typedef ENUMRESNAMEPROCW ENUMRESNAMEPROC;
typedef ENUMRESLANGPROCW ENUMRESLANGPROC;
#else /* !UNICODE */
typedef ENUMRESTYPEPROCA ENUMRESTYPEPROC;
typedef ENUMRESNAMEPROCA ENUMRESNAMEPROC;
typedef ENUMRESLANGPROCA ENUMRESLANGPROC;
#endif /* !UNICODE */

#endif /* STRICT */

WINBASEAPI BOOL WINAPI DisableThreadLibraryCalls(HMODULE);
WINBASEAPI HRSRC WINAPI FindResourceExW(HMODULE, LPCWSTR, LPCWSTR, WORD);

#if (_WIN32_WINNT >= _WIN32_WINNT_WIN7)
WINBASEAPI int WINAPI FindStringOrdinal(DWORD, LPCWSTR, int, LPCWSTR, int, BOOL);
#endif /* _WIN32_WINNT >= _WIN32_WINNT_WIN7 */

WINBASEAPI BOOL WINAPI FreeLibrary(HMODULE);
WINBASEAPI DECLSPEC_NORETURN VOID WINAPI FreeLibraryAndExitThread(HMODULE, DWORD);
WINBASEAPI BOOL WINAPI FreeResource(HGLOBAL);
WINBASEAPI DWORD WINAPI GetModuleFileNameA(HMODULE, LPSTR, DWORD);
WINBASEAPI DWORD WINAPI GetModuleFileNameW(HMODULE, LPWSTR, DWORD);
WINBASEAPI HMODULE WINAPI GetModuleHandleA(LPCSTR);
WINBASEAPI HMODULE WINAPI GetModuleHandleW(LPCWSTR);

#ifdef UNICODE
#define FindResourceEx  FindResourceExW
#define GetModuleFileName  GetModuleFileNameW
#define GetModuleHandle  GetModuleHandleW
#else /* !UNICODE */
#define GetModuleFileName  GetModuleFileNameA
#define GetModuleHandle  GetModuleHandleA
#endif /* !UNICODE */

#define GET_MODULE_HANDLE_EX_FLAG_PIN  (0x00000001)
#define GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT  (0x00000002)
#define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS  (0x00000004)

typedef BOOL (WINAPI *PGET_MODULE_HANDLE_EXA)(DWORD, LPCSTR, HMODULE *);
typedef BOOL (WINAPI *PGET_MODULE_HANDLE_EXW)(DWORD, LPCWSTR, HMODULE *);

WINBASEAPI BOOL WINAPI GetModuleHandleExA(DWORD, LPCSTR, HMODULE *);
WINBASEAPI BOOL WINAPI GetModuleHandleExW(DWORD, LPCWSTR, HMODULE *);

WINBASEAPI FARPROC WINAPI GetProcAddress(HMODULE, LPCSTR);
WINBASEAPI HMODULE WINAPI LoadLibraryExA(LPCSTR, HANDLE, DWORD);
WINBASEAPI HMODULE WINAPI LoadLibraryExW(LPCWSTR, HANDLE, DWORD);

#ifdef UNICODE
#define PGET_MODULE_HANDLE_EX  PGET_MODULE_HANDLE_EXW
#define GetModuleHandleEx  GetModuleHandleExW
#define LoadLibraryEx  LoadLibraryExW
#else /* !UNICODE */
#define PGET_MODULE_HANDLE_EX  PGET_MODULE_HANDLE_EXA
#define GetModuleHandleEx  GetModuleHandleExA
#define LoadLibraryEx  LoadLibraryExA
#endif /* !UNICODE */

#define DONT_RESOLVE_DLL_REFERENCES  0x00000001
#define LOAD_LIBRARY_AS_DATAFILE  0x00000002
#define LOAD_WITH_ALTERED_SEARCH_PATH  0x00000008
#define LOAD_IGNORE_CODE_AUTHZ_LEVEL  0x00000010
#define LOAD_LIBRARY_AS_IMAGE_RESOURCE  0x00000020
#define LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE  0x00000040
#define LOAD_LIBRARY_REQUIRE_SIGNED_TARGET  0x00000080
#define LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR  0x00000100
#define LOAD_LIBRARY_SEARCH_APPLICATION_DIR 0x00000200
#define LOAD_LIBRARY_SEARCH_USER_DIRS  0x00000400
#define LOAD_LIBRARY_SEARCH_SYSTEM32  0x00000800
#define LOAD_LIBRARY_SEARCH_DEFAULT_DIRS  0x00001000
#define LOAD_LIBRARY_SAFE_CURRENT_DIRS  0x00002000

#if (NTDDI_VERSION >= NTDDI_WIN10_RS1)
#define LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER  0x00004000
#else /* NTDDI_VERSION < NTDDI_WIN10_RS1 */
#define LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER  LOAD_LIBRARY_SEARCH_SYSTEM32
#endif /* NTDDI_VERSION < NTDDI_WIN10_RS1 */

WINBASEAPI HGLOBAL WINAPI LoadResource(HMODULE, HRSRC);
WINUSERAPI int WINAPI LoadStringA(HINSTANCE, UINT, LPSTR, int);
WINUSERAPI int WINAPI LoadStringW(HINSTANCE, UINT, LPWSTR, int);

#ifdef UNICODE
#define LoadString  LoadStringW
#else /* !UNICODE */
#define LoadString  LoadStringA
#endif /* !UNICODE */

WINBASEAPI LPVOID WINAPI LockResource(HGLOBAL);
WINBASEAPI DWORD WINAPI SizeofResource(HMODULE, HRSRC);

typedef PVOID DLL_DIRECTORY_COOKIE, *PDLL_DIRECTORY_COOKIE;

WINBASEAPI DLL_DIRECTORY_COOKIE WINAPI AddDllDirectory(PCWSTR);
WINBASEAPI BOOL WINAPI RemoveDllDirectory(DLL_DIRECTORY_COOKIE);
WINBASEAPI BOOL WINAPI SetDefaultDllDirectories(DWORD);

#if (_WIN32_WINNT >= _WIN32_WINNT_VISTA)

WINBASEAPI BOOL APIENTRY EnumResourceLanguagesExA(HMODULE, LPCSTR, LPCSTR, ENUMRESLANGPROCA, LONG_PTR, DWORD, LANGID);
WINBASEAPI BOOL APIENTRY EnumResourceLanguagesExW(HMODULE, LPCWSTR, LPCWSTR, ENUMRESLANGPROCW, LONG_PTR, DWORD, LANGID);

WINBASEAPI BOOL WINAPI EnumResourceNamesExA(HMODULE, LPCSTR, ENUMRESNAMEPROCA, LONG_PTR, DWORD, LANGID);
WINBASEAPI BOOL WINAPI EnumResourceNamesExW(HMODULE, LPCWSTR, ENUMRESNAMEPROCW, LONG_PTR, DWORD, LANGID);

WINBASEAPI BOOL WINAPI EnumResourceTypesExA(HMODULE, ENUMRESTYPEPROCA, LONG_PTR, DWORD, LANGID);
WINBASEAPI BOOL WINAPI EnumResourceTypesExW(HMODULE, ENUMRESTYPEPROCW, LONG_PTR, DWORD, LANGID);

#ifdef UNICODE
#define EnumResourceLanguagesEx  EnumResourceLanguagesExW
#define EnumResourceNamesEx  EnumResourceNamesExW
#define EnumResourceTypesEx  EnumResourceTypesExW
#else /* !UNICODE */
#define EnumResourceLanguagesEx  EnumResourceLanguagesExA
#define EnumResourceNamesEx  EnumResourceNamesExA
#define EnumResourceTypesEx  EnumResourceTypesExA
#endif /* !UNICODE */

#endif /* _WIN32_WINNT >= _WIN32_WINNT_VISTA */

WINBASEAPI HRSRC WINAPI FindResourceW(HMODULE, LPCWSTR, LPCWSTR);

WINBASEAPI HMODULE WINAPI LoadLibraryA(LPCSTR);
WINBASEAPI HMODULE WINAPI LoadLibraryW(LPCWSTR);

WINBASEAPI BOOL WINAPI EnumResourceNamesW(HMODULE, LPCWSTR, ENUMRESNAMEPROCW, LONG_PTR);

#ifdef UNICODE
#define FindResource  FindResourceW
#define LoadLibrary  LoadLibraryW
#define EnumResourceNames  EnumResourceNamesW
#else /* !UNICODE */
#define LoadLibrary  LoadLibraryA
#endif /* !UNICODE */


#endif /* _LIBLOADERAPI_H */
