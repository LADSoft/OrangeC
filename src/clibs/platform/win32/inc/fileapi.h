#ifndef _FILEAPI_H
#define _FILEAPI_H

#ifdef __ORANGEC__ 
#pragma once
#endif

/* ApiSet api-ms-win-core-file-l1 */

/* #include <apiset.h> */
#include <apisetcconv.h>
#include <minwindef.h>
#include <minwinbase.h>

#define CREATE_NEW  1
#define CREATE_ALWAYS  2
#define OPEN_EXISTING  3
#define OPEN_ALWAYS  4
#define TRUNCATE_EXISTING  5

#define INVALID_FILE_SIZE  ((DWORD)0xFFFFFFFF)
#define INVALID_SET_FILE_POINTER  ((DWORD)-1)
#define INVALID_FILE_ATTRIBUTES  ((DWORD)-1)

typedef struct _WIN32_FILE_ATTRIBUTE_DATA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA, *LPWIN32_FILE_ATTRIBUTE_DATA;

typedef struct _BY_HANDLE_FILE_INFORMATION {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD dwVolumeSerialNumber;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD nNumberOfLinks;
    DWORD nFileIndexHigh;
    DWORD nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION, *LPBY_HANDLE_FILE_INFORMATION;

#if (_WIN32_WINNT >= 0x0602)
typedef struct _CREATEFILE2_EXTENDED_PARAMETERS {
    DWORD dwSize;   
    DWORD dwFileAttributes;
    DWORD dwFileFlags;   
    DWORD dwSecurityQosFlags;
    LPSECURITY_ATTRIBUTES lpSecurityAttributes; 
    HANDLE hTemplateFile;
} CREATEFILE2_EXTENDED_PARAMETERS, *PCREATEFILE2_EXTENDED_PARAMETERS, *LPCREATEFILE2_EXTENDED_PARAMETERS;
#endif /* _WIN32_WINNT >= 0x0602 */

#if (_WIN32_WINNT >= 0x0501)
typedef enum _STREAM_INFO_LEVELS {
    FindStreamInfoStandard,
    FindStreamInfoMaxInfoLevel
} STREAM_INFO_LEVELS;

typedef struct _WIN32_FIND_STREAM_DATA {
    LARGE_INTEGER StreamSize;
    WCHAR cStreamName[ MAX_PATH + 36 ];
} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA;
#endif /* _WIN32_WINNT >= 0x0501 */

WINBASEAPI LONG WINAPI CompareFileTime(CONST FILETIME *, CONST FILETIME *);
WINBASEAPI BOOL WINAPI CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES);
WINBASEAPI BOOL WINAPI CreateDirectoryW(LPCWSTR lpPathName, LPSECURITY_ATTRIBUTES);
WINBASEAPI HANDLE WINAPI CreateFileA(LPCSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
WINBASEAPI HANDLE WINAPI CreateFileW(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
WINBASEAPI BOOL WINAPI DefineDosDeviceW(DWORD, LPCWSTR, LPCWSTR);
WINBASEAPI BOOL WINAPI DeleteFileA(LPCSTR);
WINBASEAPI BOOL WINAPI DeleteFileW(LPCWSTR);
WINBASEAPI BOOL WINAPI DeleteVolumeMountPointW(LPCWSTR);
WINBASEAPI BOOL WINAPI FileTimeToLocalFileTime(CONST FILETIME *, LPFILETIME);
WINBASEAPI BOOL WINAPI FindClose(HANDLE);
WINBASEAPI BOOL WINAPI FindCloseChangeNotification(HANDLE);
WINBASEAPI HANDLE WINAPI FindFirstChangeNotificationA(LPCSTR, BOOL, DWORD);
WINBASEAPI HANDLE WINAPI FindFirstChangeNotificationW(LPCWSTR, BOOL, DWORD);
WINBASEAPI HANDLE WINAPI FindFirstFileA(LPCSTR, LPWIN32_FIND_DATAA);
WINBASEAPI HANDLE WINAPI FindFirstFileW(LPCWSTR, LPWIN32_FIND_DATAW);
#if (_WIN32_WINNT >= 0x0400)
WINBASEAPI HANDLE WINAPI FindFirstFileExA(LPCSTR, FINDEX_INFO_LEVELS, LPVOID, FINDEX_SEARCH_OPS, LPVOID, DWORD);
WINBASEAPI HANDLE WINAPI FindFirstFileExW(LPCWSTR, FINDEX_INFO_LEVELS, LPVOID, FINDEX_SEARCH_OPS, LPVOID, DWORD);
#endif /* _WIN32_WINNT >= 0x0400 */
WINBASEAPI HANDLE WINAPI FindFirstVolumeW(LPWSTR, DWORD);
WINBASEAPI BOOL WINAPI FindNextChangeNotification(HANDLE);
WINBASEAPI BOOL WINAPI FindNextFileA(HANDLE, LPWIN32_FIND_DATAA);
WINBASEAPI BOOL WINAPI FindNextFileW(HANDLE, LPWIN32_FIND_DATAW);
WINBASEAPI BOOL WINAPI FindNextVolumeW(HANDLE, LPWSTR, DWORD);
WINBASEAPI BOOL WINAPI FindVolumeClose(HANDLE);
WINBASEAPI BOOL WINAPI FlushFileBuffers(HANDLE);
WINBASEAPI BOOL WINAPI GetDiskFreeSpaceA(LPCSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
WINBASEAPI BOOL WINAPI GetDiskFreeSpaceW(LPCWSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
WINBASEAPI BOOL WINAPI GetDiskFreeSpaceExA(LPCSTR lpDirectoryName, PULARGE_INTEGER, PULARGE_INTEGER, PULARGE_INTEGER);
WINBASEAPI BOOL WINAPI GetDiskFreeSpaceExW(LPCWSTR lpDirectoryName, PULARGE_INTEGER, PULARGE_INTEGER, PULARGE_INTEGER);
WINBASEAPI UINT WINAPI GetDriveTypeA(LPCSTR);
WINBASEAPI UINT WINAPI GetDriveTypeW(LPCWSTR);
WINBASEAPI DWORD WINAPI GetFileAttributesA(LPCSTR);
WINBASEAPI DWORD WINAPI GetFileAttributesW(LPCWSTR);
WINBASEAPI BOOL WINAPI GetFileAttributesExA(LPCSTR, GET_FILEEX_INFO_LEVELS, LPVOID);
WINBASEAPI BOOL WINAPI GetFileAttributesExW(LPCWSTR, GET_FILEEX_INFO_LEVELS, LPVOID);
WINBASEAPI BOOL WINAPI GetFileInformationByHandle(HANDLE, LPBY_HANDLE_FILE_INFORMATION);
WINBASEAPI DWORD WINAPI GetFileSize(HANDLE, LPDWORD);
WINBASEAPI BOOL WINAPI GetFileSizeEx(HANDLE, PLARGE_INTEGER);
WINBASEAPI DWORD WINAPI GetFileType(HANDLE);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI DWORD WINAPI GetFinalPathNameByHandleA(HANDLE, LPSTR, DWORD, DWORD);
WINBASEAPI DWORD WINAPI GetFinalPathNameByHandleW(HANDLE, LPWSTR, DWORD, DWORD);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI BOOL WINAPI GetFileTime(HANDLE, LPFILETIME, LPFILETIME, LPFILETIME);
WINBASEAPI DWORD WINAPI GetFullPathNameW(LPCWSTR, DWORD, LPWSTR, LPWSTR *);
WINBASEAPI DWORD WINAPI GetFullPathNameA(LPCSTR, DWORD, LPSTR, LPSTR *);
WINBASEAPI DWORD WINAPI GetLogicalDrives(VOID);
WINBASEAPI DWORD WINAPI GetLogicalDriveStringsW(DWORD, LPWSTR);
WINBASEAPI DWORD WINAPI GetLongPathNameA(LPCSTR, LPSTR, DWORD);
WINBASEAPI DWORD WINAPI GetLongPathNameW(LPCWSTR, LPWSTR, DWORD);
WINBASEAPI DWORD WINAPI GetShortPathNameW(LPCWSTR, LPWSTR, DWORD);
WINBASEAPI UINT WINAPI GetTempFileNameW(LPCWSTR, LPCWSTR, UINT, LPWSTR);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI BOOL WINAPI GetVolumeInformationByHandleW(HANDLE, LPWSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPWSTR, DWORD);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI BOOL WINAPI GetVolumeInformationW(LPCWSTR, LPWSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPWSTR, DWORD);
WINBASEAPI BOOL WINAPI GetVolumePathNameW(LPCWSTR, LPWSTR, DWORD);
WINBASEAPI BOOL WINAPI LocalFileTimeToFileTime(CONST FILETIME *, LPFILETIME);
WINBASEAPI BOOL WINAPI LockFile(HANDLE, DWORD, DWORD, DWORD, DWORD);
WINBASEAPI BOOL WINAPI LockFileEx(HANDLE, DWORD, DWORD, DWORD, DWORD, LPOVERLAPPED);
WINBASEAPI DWORD WINAPI QueryDosDeviceW(LPCWSTR, LPWSTR, DWORD);
WINBASEAPI BOOL WINAPI ReadFile(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
WINBASEAPI BOOL WINAPI ReadFileEx(HANDLE, LPVOID, DWORD, LPOVERLAPPED, LPOVERLAPPED_COMPLETION_ROUTINE);
WINBASEAPI BOOL WINAPI ReadFileScatter(HANDLE, FILE_SEGMENT_ELEMENT[], DWORD, LPDWORD, LPOVERLAPPED);
WINBASEAPI BOOL WINAPI RemoveDirectoryA(LPCSTR);
WINBASEAPI BOOL WINAPI RemoveDirectoryW(LPCWSTR);
WINBASEAPI BOOL WINAPI SetEndOfFile(HANDLE);
WINBASEAPI BOOL WINAPI SetFileAttributesA(LPCSTR, DWORD);
WINBASEAPI BOOL WINAPI SetFileAttributesW(LPCWSTR, DWORD);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI BOOL WINAPI SetFileInformationByHandle(HANDLE, FILE_INFO_BY_HANDLE_CLASS, LPVOID, DWORD);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI DWORD WINAPI SetFilePointer(HANDLE, LONG, PLONG, DWORD);
WINBASEAPI BOOL WINAPI SetFilePointerEx(HANDLE, LARGE_INTEGER, PLARGE_INTEGER, DWORD);
WINBASEAPI BOOL WINAPI SetFileTime(HANDLE, CONST FILETIME *, CONST FILETIME *, CONST FILETIME *);
#if (_WIN32_WINNT >= 0x0501)
WINBASEAPI BOOL WINAPI SetFileValidData(HANDLE, LONGLONG);
#endif /* _WIN32_WINNT >= 0x0501 */
WINBASEAPI BOOL WINAPI UnlockFile(HANDLE, DWORD, DWORD, DWORD, DWORD);
WINBASEAPI BOOL WINAPI UnlockFileEx(HANDLE, DWORD, DWORD, DWORD, LPOVERLAPPED);
WINBASEAPI BOOL WINAPI WriteFile(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
WINBASEAPI BOOL WINAPI WriteFileEx(HANDLE, LPCVOID, DWORD, LPOVERLAPPED, LPOVERLAPPED_COMPLETION_ROUTINE);
WINBASEAPI BOOL WINAPI WriteFileGather(HANDLE, FILE_SEGMENT_ELEMENT[], DWORD, LPDWORD, LPOVERLAPPED);
WINBASEAPI DWORD WINAPI GetTempPathW(DWORD, LPWSTR);
WINBASEAPI BOOL WINAPI GetVolumeNameForVolumeMountPointW(LPCWSTR, LPWSTR, DWORD);
#if (_WIN32_WINNT >= 0x0501)
WINBASEAPI BOOL WINAPI GetVolumePathNamesForVolumeNameW(LPCWSTR, LPWCH, DWORD, PDWORD);
#endif /* _WIN32_WINNT >= 0x0501 */
#if (_WIN32_WINNT >= 0x0602)
WINBASEAPI HANDLE WINAPI CreateFile2(LPCWSTR, DWORD, DWORD, DWORD, LPCREATEFILE2_EXTENDED_PARAMETERS);
#endif /* _WIN32_WINNT >= 0x0602 */
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI BOOL WINAPI SetFileIoOverlappedRange(HANDLE, PUCHAR, ULONG);
#endif /* _WIN32_WINNT >= 0x0600 */
#if (_WIN32_WINNT >= 0x0501)
WINBASEAPI DWORD WINAPI GetCompressedFileSizeA(LPCSTR, LPDWORD);
WINBASEAPI DWORD WINAPI GetCompressedFileSizeW(LPCWSTR, LPDWORD);
#endif /* _WIN32_WINNT >= 0x0501 */
#if (_WIN32_WINNT >= 0x0501)
WINBASEAPI HANDLE WINAPI FindFirstStreamW(LPCWSTR, STREAM_INFO_LEVELS, LPVOID, DWORD);
WINBASEAPI BOOL APIENTRY FindNextStreamW(HANDLE, LPVOID);
#endif /* _WIN32_WINNT >= 0x0501 */
WINBASEAPI BOOL WINAPI AreFileApisANSI(VOID);
WINBASEAPI DWORD WINAPI GetTempPathA(DWORD, LPSTR);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI HANDLE WINAPI FindFirstFileNameW(LPCWSTR, DWORD, LPDWORD, PWSTR);
WINBASEAPI BOOL APIENTRY FindNextFileNameW(HANDLE, LPDWORD, PWSTR);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI BOOL WINAPI GetVolumeInformationA(LPCSTR, LPSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPSTR, DWORD);
WINBASEAPI UINT WINAPI GetTempFileNameA(LPCSTR, LPCSTR, UINT, LPSTR);
WINBASEAPI VOID WINAPI SetFileApisToOEM(VOID);
WINBASEAPI VOID WINAPI SetFileApisToANSI(VOID);

#ifdef UNICODE
#define CreateDirectory  CreateDirectoryW
#define CreateFile  CreateFileW
#define DefineDosDevice  DefineDosDeviceW
#define DeleteFile  DeleteFileW
#define DeleteVolumeMountPoint  DeleteVolumeMountPointW
#define FindFirstChangeNotification  FindFirstChangeNotificationW
#define FindFirstFile  FindFirstFileW
#define FindFirstFileEx  FindFirstFileExW
#define FindFirstVolume FindFirstVolumeW
#define FindNextFile  FindNextFileW
#define FindNextVolume FindNextVolumeW
#define GetDiskFreeSpace  GetDiskFreeSpaceW
#define GetDiskFreeSpaceEx  GetDiskFreeSpaceExW
#define GetDriveType  GetDriveTypeW
#define GetFileAttributes  GetFileAttributesW
#define GetFileAttributesEx  GetFileAttributesExW
#define GetFinalPathNameByHandle  GetFinalPathNameByHandleW
#define GetFullPathName  GetFullPathNameW
#define GetLogicalDriveStrings  GetLogicalDriveStringsW
#define GetLongPathName GetLongPathNameW
#define GetShortPathName  GetShortPathNameW
#define GetTempFileName  GetTempFileNameW
#define GetVolumeInformation  GetVolumeInformationW
#define GetVolumePathName  GetVolumePathNameW
#define QueryDosDevice  QueryDosDeviceW
#define RemoveDirectory  RemoveDirectoryW
#define SetFileAttributes  SetFileAttributesW
#define GetTempPath  GetTempPathW
#define GetVolumeNameForVolumeMountPoint  GetVolumeNameForVolumeMountPointW
#define GetVolumePathNamesForVolumeName  GetVolumePathNamesForVolumeNameW
#define GetCompressedFileSize  GetCompressedFileSizeW
#else /* !UNICODE */
#define CreateDirectory  CreateDirectoryA
#define CreateFile  CreateFileA
#define DeleteFile  DeleteFileA
#define FindFirstChangeNotification  FindFirstChangeNotificationA
#define FindFirstFile  FindFirstFileA
#define FindFirstFileEx  FindFirstFileExA
#define FindNextFile  FindNextFileA
#define GetDiskFreeSpace  GetDiskFreeSpaceA
#define GetDiskFreeSpaceEx  GetDiskFreeSpaceExA
#define GetDriveType  GetDriveTypeA
#define GetFileAttributes  GetFileAttributesA
#define GetFileAttributesEx  GetFileAttributesExA
#define GetFinalPathNameByHandle  GetFinalPathNameByHandleA
#define GetFullPathName GetFullPathNameA
#define GetLongPathName GetLongPathNameA
#define RemoveDirectory  RemoveDirectoryA
#define SetFileAttributes  SetFileAttributesA
#define GetCompressedFileSize  GetCompressedFileSizeA
#define GetTempPath  GetTempPathA
#define GetVolumeInformation  GetVolumeInformationA
#define GetTempFileName  GetTempFileNameA
#endif /* !UNICODE */

#endif /* _FILEAPI_H */
