#ifndef _MAPIUTIL_H
#define _MAPIUTIL_H

#ifdef __ORANGEC__ 
#pragma GCC system_header
#endif

/*  MAPI utility function definitions */

#ifdef __cplusplus
extern "C" {
#endif

#ifndef MAPIX_H
#include <mapix.h>
#endif

#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

#define IPROP_READONLY  ((ULONG)0x00000001)
#define IPROP_READWRITE  ((ULONG)0x00000002)
#define IPROP_CLEAN  ((ULONG)0x00010000)
#define IPROP_DIRTY  ((ULONG)0x00020000)

#define PRILOWEST  -32768
#define PRIHIGHEST  32767
#define PRIUSER  0

#define IRONULL  ((USHORT)0x0000)
#define FIROWAIT  ((USHORT)0x0001)
#define FIROINTERVAL  ((USHORT)0x0002)
#define FIROPERBLOCK  ((USHORT)0x0004)
#define FIRODISABLED  ((USHORT)0x0020)
#define FIROONCEONLY  ((USHORT)0x0040)

#define IRCNULL  ((USHORT)0x0000)
#define FIRCPFN  ((USHORT)0x0001)
#define FIRCPV  ((USHORT)0x0002)
#define FIRCPRI  ((USHORT)0x0004)
#define FIRCCSEC  ((USHORT)0x0008)
#define FIRCIRO  ((USHORT)0x0010)

#define TAD_ALL_ROWS  1

#define FTGNULL  ((FTG)NULL)

#define SOF_UNIQUEFILENAME  ((ULONG)0x80000000)

#define OPENSTREAMONFILE  "OpenStreamOnFile"

#define MAPI_FORCE_CREATE  1
#define MAPI_FULL_IPM_TREE  2

#define RTF_SYNC_RTF_CHANGED  ((ULONG)0x00000001)
#define RTF_SYNC_BODY_CHANGED  ((ULONG)0x00000002)

#define szHrDispatchNotifications  "_HrDispatchNotifications@4"
#define szScCreateConversationIndex  "_ScCreateConversationIndex@16"

DECLARE_MAPI_INTERFACE_PTR(ITableData, LPTABLEDATA);

typedef void (STDAPICALLTYPE CALLERRELEASE)(ULONG,LPTABLEDATA,LPMAPITABLE);

#define MAPI_ITABLEDATA_METHODS(IPURE)  \
    MAPIMETHOD(HrGetView)(THIS_ LPSSortOrderSet,CALLERRELEASE*,ULONG,LPMAPITABLE*) IPURE; \
    MAPIMETHOD(HrModifyRow)(THIS_ LPSRow) IPURE; \
    MAPIMETHOD(HrDeleteRow)(THIS_ LPSPropValue) IPURE; \
    MAPIMETHOD(HrQueryRow)(THIS_ LPSPropValue,LPSRow*,ULONG*) IPURE; \
    MAPIMETHOD(HrEnumRow)(THIS_ ULONG,LPSRow*) IPURE; \
    MAPIMETHOD(HrNotify)(THIS_ ULONG,ULONG,LPSPropValue) IPURE; \
    MAPIMETHOD(HrInsertRow)(THIS_ ULONG,LPSRow) IPURE; \
    MAPIMETHOD(HrModifyRows)(THIS_ ULONG,LPSRowSet) IPURE; \
    MAPIMETHOD(HrDeleteRows)(THIS_ ULONG,LPSRowSet,ULONG*) IPURE;

#undef INTERFACE
#define INTERFACE ITableData
DECLARE_MAPI_INTERFACE_(ITableData, IUnknown)
{
    BEGIN_INTERFACE
    MAPI_IUNKNOWN_METHODS(PURE)
    MAPI_ITABLEDATA_METHODS(PURE)
};

STDAPI_(SCODE) CreateTable(LPCIID,ALLOCATEBUFFER*,ALLOCATEMORE*,FREEBUFFER*,LPVOID,ULONG,ULONG,LPSPropTagArray,LPTABLEDATA*);

#define MAPI_IPROPDATA_METHODS(IPURE) \
    MAPIMETHOD(HrSetObjAccess)(THIS_ ULONG) IPURE; \
    MAPIMETHOD(HrSetPropAccess)(THIS_ LPSPropTagArray,ULONG*) IPURE; \
    MAPIMETHOD(HrGetPropAccess)(THIS_ LPSPropTagArray*,ULONG**) IPURE; \
    MAPIMETHOD(HrAddObjProps)(THIS_ LPSPropTagArray,LPSPropProblemArray*) IPURE;

#undef INTERFACE
#define INTERFACE IPropData
DECLARE_MAPI_INTERFACE_(IPropData, IMAPIProp)
{
    BEGIN_INTERFACE
    MAPI_IUNKNOWN_METHODS(PURE)
    MAPI_IMAPIPROP_METHODS(PURE)
    MAPI_IPROPDATA_METHODS(PURE)
};

DECLARE_MAPI_INTERFACE_PTR(IPropData, LPPROPDATA);

STDAPI_(SCODE)CreateIProp(LPCIID,ALLOCATEBUFFER*,ALLOCATEMORE*,FREEBUFFER*,LPVOID,LPPROPDATA*);

typedef BOOL(STDAPICALLTYPE FNIDLE) (LPVOID);
typedef FNIDLE *PFNIDLE;

typedef void *FTG;
typedef FTG *PFTG;

STDAPI_(LONG) MAPIInitIdle(LPVOID);
STDAPI_(VOID) MAPIDeinitIdle(VOID);
STDAPI_(FTG) FtgRegisterIdleRoutine(PFNIDLE,LPVOID,short,ULONG,USHORT);
STDAPI_(void) DeregisterIdleRoutine(FTG);
STDAPI_(void) EnableIdleRoutine(FTG,BOOL);
STDAPI_(void) ChangeIdleRoutine(FTG,PFNIDLE,LPVOID,short,ULONG,USHORT,USHORT);

STDAPI_(LPMALLOC) MAPIGetDefaultMalloc(VOID);

STDMETHODIMP OpenStreamOnFile(LPALLOCATEBUFFER,LPFREEBUFFER,ULONG,LPTSTR,LPTSTR,LPSTREAM*);
typedef HRESULT(STDMETHODCALLTYPE *LPOPENSTREAMONFILE)(LPALLOCATEBUFFER,LPFREEBUFFER,ULONG,LPTSTR,LPTSTR,LPSTREAM*);

STDAPI_(SCODE) PropCopyMore(LPSPropValue,LPSPropValue,ALLOCATEMORE*,LPVOID);
STDAPI_(ULONG) UlPropSize(LPSPropValue);
STDAPI_(BOOL) FEqualNames(LPMAPINAMEID,LPMAPINAMEID);

STDAPI_(void) GetInstance(LPSPropValue,LPSPropValue,ULONG);

extern char rgchCsds[];
extern char rgchCids[];
extern char rgchCsdi[];
extern char rgchCidi[];

STDAPI_(BOOL) FPropContainsProp(LPSPropValue,LPSPropValue,ULONG);
STDAPI_(BOOL) FPropCompareProp(LPSPropValue,ULONG,LPSPropValue);
STDAPI_(LONG) LPropCompareProp(LPSPropValue,LPSPropValue);
STDAPI_(HRESULT) HrAddColumns(LPMAPITABLE,LPSPropTagArray,LPALLOCATEBUFFER,LPFREEBUFFER);
STDAPI_(HRESULT) HrAddColumnsEx(LPMAPITABLE,LPSPropTagArray,LPALLOCATEBUFFER,LPFREEBUFFER,void (*lpfnFilterColumns)(LPSPropTagArray));

STDAPI HrAllocAdviseSink(LPNOTIFCALLBACK,LPVOID,LPMAPIADVISESINK*);
STDAPI HrThisThreadAdviseSink(LPMAPIADVISESINK,LPMAPIADVISESINK*);
STDAPI HrDispatchNotifications(ULONG);

typedef struct {
    ULONG ulCtlType;
    ULONG ulCtlFlags;
    LPBYTE lpbNotif;
    ULONG cbNotif;
    LPTSTR lpszFilter;
    ULONG ulItemID;
    union {
        LPVOID lpv;
        LPDTBLLABEL lplabel;
        LPDTBLEDIT lpedit;
        LPDTBLLBX lplbx;
        LPDTBLCOMBOBOX lpcombobox;
        LPDTBLDDLBX lpddlbx;
        LPDTBLCHECKBOX lpcheckbox;
        LPDTBLGROUPBOX lpgroupbox;
        LPDTBLBUTTON lpbutton;
        LPDTBLRADIOBUTTON lpradiobutton;
        LPDTBLMVLISTBOX lpmvlbx;
        LPDTBLMVDDLBX lpmvddlbx;
        LPDTBLPAGE lppage;
    } ctl;
} DTCTL, *LPDTCTL;

typedef struct {
    ULONG cctl;
    LPTSTR lpszResourceName;
    union {
        LPTSTR lpszComponent;
        ULONG ulItemID;
    };
    LPDTCTL lpctl;
} DTPAGE, *LPDTPAGE;

STDAPI BuildDisplayTable(LPALLOCATEBUFFER,LPALLOCATEMORE,LPFREEBUFFER,LPMALLOC,HINSTANCE,UINT,LPDTPAGE,ULONG,LPMAPITABLE*,LPTABLEDATA*);
STDAPI_(SCODE) ScCountNotifications(int,LPNOTIFICATION,ULONG*);
STDAPI_(SCODE) ScCopyNotifications(int,LPNOTIFICATION,LPVOID,ULONG*);
STDAPI_(SCODE) ScRelocNotifications(int,LPNOTIFICATION,LPVOID,LPVOID,ULONG*);
STDAPI_(SCODE) ScCountProps(int,LPSPropValue,ULONG*);
STDAPI_(LPSPropValue) LpValFindProp(ULONG,ULONG,LPSPropValue);
STDAPI_(SCODE) ScCopyProps(int,LPSPropValue,LPVOID,ULONG*);
STDAPI_(SCODE) ScRelocProps(int,LPSPropValue,LPVOID,LPVOID,ULONG*);
STDAPI_(SCODE) ScDupPropset(int,LPSPropValue,LPALLOCATEBUFFER,LPSPropValue*);
STDAPI_(ULONG) UlAddRef(LPVOID);
STDAPI_(ULONG) UlRelease(LPVOID);
STDAPI HrGetOneProp(LPMAPIPROP,ULONG,LPSPropValue*);
STDAPI HrSetOneProp(LPMAPIPROP,LPSPropValue);
STDAPI_(BOOL) FPropExists(LPMAPIPROP,ULONG);
STDAPI_(LPSPropValue) PpropFindProp(LPSPropValue,ULONG,ULONG);
STDAPI_(void) FreePadrlist(LPADRLIST);
STDAPI_(void) FreeProws(LPSRowSet);
STDAPI HrQueryAllRows(LPMAPITABLE,LPSPropTagArray,LPSRestriction,LPSSortOrderSet,LONG,LPSRowSet*);

STDAPI HrValidateIPMSubtree(LPMDB,ULONG,ULONG*,LPSPropValue*,LPMAPIERROR*);

STDAPI_(BOOL) FBinFromHex(LPTSTR,LPBYTE);
STDAPI_(SCODE) ScBinFromHexBounded(LPTSTR,LPBYTE,ULONG);
STDAPI_(void) HexFromBin(LPBYTE,int,LPTSTR);
STDAPI_(ULONG) UlFromSzHex(LPCTSTR);

STDAPI HrEntryIDFromSz(LPTSTR,ULONG*,LPENTRYID*);
STDAPI HrSzFromEntryID(ULONG,LPENTRYID,LPTSTR*);
STDAPI HrComposeEID(LPMAPISESSION,ULONG,LPBYTE,ULONG,LPENTRYID,ULONG*,LPENTRYID*);
STDAPI HrDecomposeEID(LPMAPISESSION,ULONG,LPENTRYID,ULONG*,LPENTRYID*,ULONG*,LPENTRYID*);
STDAPI HrComposeMsgID(LPMAPISESSION,ULONG,LPBYTE,ULONG,LPENTRYID,LPTSTR*);
STDAPI HrDecomposeMsgID(LPMAPISESSION,LPTSTR,ULONG*,LPENTRYID*,ULONG*,LPENTRYID*);

STDAPI_(LPTSTR)SzFindCh(LPCTSTR,USHORT);
STDAPI_(LPTSTR)SzFindLastCh(LPCTSTR,USHORT);
STDAPI_(LPTSTR)SzFindSz(LPCTSTR,LPCTSTR);
STDAPI_(unsigned int) UFromSz(LPCTSTR);

STDAPI_(SCODE)ScUNCFromLocalPath(LPSTR,LPSTR,UINT);
STDAPI_(SCODE)ScLocalPathFromUNC(LPSTR,LPSTR,UINT);

STDAPI_(FILETIME)FtAddFt(FILETIME,FILETIME);
STDAPI_(FILETIME)FtMulDwDw(DWORD,DWORD);
STDAPI_(FILETIME)FtMulDw(DWORD,FILETIME);
STDAPI_(FILETIME)FtSubFt(FILETIME,FILETIME);
STDAPI_(FILETIME)FtNegFt(FILETIME);

STDAPI_(SCODE)ScCreateConversationIndex(ULONG,LPBYTE,ULONG*,LPBYTE*);
STDAPI WrapStoreEntryID(ULONG,LPTSTR,ULONG,LPENTRYID,ULONG*,LPENTRYID*);

STDAPI_(HRESULT) RTFSync(LPMESSAGE,ULONG,BOOL*);

STDAPI_(HRESULT) WrapCompressedRTFStream(LPSTREAM,ULONG,LPSTREAM*);

STDAPI_(HRESULT) HrIStorageFromStream(LPUNKNOWN,LPCIID,ULONG,LPSTORAGE*);

STDAPI_(SCODE)ScInitMapiUtil(ULONG);
STDAPI_(VOID)DeinitMapiUtil(VOID);

typedef HRESULT(STDAPICALLTYPE DISPATCHNOTIFICATIONS)(ULONG);
typedef DISPATCHNOTIFICATIONS *LPDISPATCHNOTIFICATIONS;

typedef SCODE(STDAPICALLTYPE CREATECONVERSATIONINDEX) (ULONG cbParent, LPBYTE lpbParent, ULONG * lpcbConvIndex, LPBYTE * lppbConvIndex);
typedef CREATECONVERSATIONINDEX *LPCREATECONVERSATIONINDEX;

#ifdef __cplusplus
}
#endif

#endif /* _MAPIUTIL_H */

