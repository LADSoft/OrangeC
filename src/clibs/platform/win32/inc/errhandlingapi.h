#ifndef _ERRHANDLINGAPI_H
#define _ERRHANDLINGAPI_H

#ifdef __ORANGEC__ 
#pragma once
#endif

/* ApiSet api-ms-win-core-errorhandling-l1 */

/* #include <apiset.h> */
#include <apisetcconv.h>
#include <minwindef.h>

typedef LONG (WINAPI *PTOP_LEVEL_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *);
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;

WINBASEAPI VOID WINAPI RaiseException(DWORD, DWORD, DWORD, CONST ULONG_PTR *);
WINBASEAPI LONG WINAPI UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *);
WINBASEAPI LPTOP_LEVEL_EXCEPTION_FILTER WINAPI SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER);
WINBASEAPI DWORD WINAPI GetLastError(VOID);
WINBASEAPI VOID WINAPI SetLastError(DWORD);
#if (_WIN32_WINNT >= 0x0600)
WINBASEAPI UINT WINAPI GetErrorMode(VOID);
#endif /* _WIN32_WINNT >= 0x0600 */
WINBASEAPI UINT WINAPI SetErrorMode(UINT);
#if (_WIN32_WINNT >= 0x0501)
WINBASEAPI PVOID WINAPI AddVectoredExceptionHandler(ULONG, PVECTORED_EXCEPTION_HANDLER);
WINBASEAPI ULONG WINAPI RemoveVectoredExceptionHandler(PVOID);
WINBASEAPI PVOID WINAPI AddVectoredContinueHandler(ULONG, PVECTORED_EXCEPTION_HANDLER);
WINBASEAPI ULONG WINAPI RemoveVectoredContinueHandler(PVOID);
#endif /* _WIN32_WINNT >= 0x0501 */
#if defined(WINBASE_DECLARE_RESTORE_LAST_ERROR)
WINBASEAPI VOID WINAPI RestoreLastError(DWORD);
typedef VOID(WINAPI *PRESTORE_LAST_ERROR) (DWORD);
#define RESTORE_LAST_ERROR_NAME_A     "RestoreLastError"
#define RESTORE_LAST_ERROR_NAME_W    L"RestoreLastError"
#define RESTORE_LAST_ERROR_NAME  TEXT("RestoreLastError")
#endif /* WINBASE_DECLARE_RESTORE_LAST_ERROR */
WINBASEAPI VOID WINAPI RaiseFailFastException(PEXCEPTION_RECORD, PCONTEXT, DWORD);
WINBASEAPI VOID WINAPI FatalAppExitA(UINT, LPCSTR);
WINBASEAPI VOID WINAPI FatalAppExitW(UINT, LPCWSTR);
WINBASEAPI DWORD WINAPI GetThreadErrorMode(VOID);
WINBASEAPI BOOL WINAPI SetThreadErrorMode(DWORD, LPDWORD);
WINBASEAPI VOID WINAPI TerminateProcessOnMemoryExhaustion(SIZE_T);

#ifdef UNICODE
#define FatalAppExit  FatalAppExitW
#else /* !UNICODE */
#define FatalAppExit  FatalAppExitA
#endif /* !UNICODE */

#endif /* _ERRHANDLINGAPI_H */
