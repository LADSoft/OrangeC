#ifndef _PATCHAPI_H
#define _PATCHAPI_H

#ifdef __ORANGEC__ 
#pragma once
#endif

/* Interface for creating and applying patches to files */

#ifdef __cplusplus
extern "C" {
#endif

#define PATCH_OPTION_USE_LZX_A  0x00000001
#define PATCH_OPTION_USE_LZX_B  0x00000002
#define PATCH_OPTION_USE_LZX_BEST  0x00000003
#define PATCH_OPTION_USE_BEST  0x00000000
#define PATCH_OPTION_USE_LZX_LARGE  0x00000004
#define PATCH_OPTION_NO_BINDFIX  0x00010000
#define PATCH_OPTION_NO_LOCKFIX  0x00020000
#define PATCH_OPTION_NO_REBASE  0x00040000
#define PATCH_OPTION_FAIL_IF_SAME_FILE  0x00080000
#define PATCH_OPTION_FAIL_IF_BIGGER  0x00100000
#define PATCH_OPTION_NO_CHECKSUM  0x00200000
#define PATCH_OPTION_NO_RESTIMEFIX  0x00400000
#define PATCH_OPTION_NO_TIMESTAMP  0x00800000
#define PATCH_OPTION_SIGNATURE_MD5  0x01000000
#define PATCH_OPTION_RESERVED1  0x80000000
#define PATCH_OPTION_VALID_FLAGS  0x80FF0007
#define PATCH_SYMBOL_NO_IMAGEHLP  0x00000001
#define PATCH_SYMBOL_NO_FAILURES  0x00000002
#define PATCH_SYMBOL_UNDECORATED_TOO  0x00000004
#define PATCH_SYMBOL_RESERVED1  0x80000000
#define APPLY_OPTION_FAIL_IF_EXACT  0x00000001
#define APPLY_OPTION_FAIL_IF_CLOSE  0x00000002
#define APPLY_OPTION_TEST_ONLY  0x00000004
#define APPLY_OPTION_VALID_FLAGS  0x00000007
#define ERROR_PATCH_ENCODE_FAILURE  0xC00E3101
#define ERROR_PATCH_INVALID_OPTIONS  0xC00E3102
#define ERROR_PATCH_SAME_FILE  0xC00E3103
#define ERROR_PATCH_RETAIN_RANGES_DIFFER  0xC00E3104
#define ERROR_PATCH_BIGGER_THAN_COMPRESSED  0xC00E3105
#define ERROR_PATCH_IMAGEHLP_FAILURE  0xC00E3106
#define ERROR_PATCH_DECODE_FAILURE  0xC00E4101
#define ERROR_PATCH_CORRUPT  0xC00E4102
#define ERROR_PATCH_NEWER_FORMAT  0xC00E4103
#define ERROR_PATCH_WRONG_FILE  0xC00E4104
#define ERROR_PATCH_NOT_NECESSARY  0xC00E4105
#define ERROR_PATCH_NOT_AVAILABLE  0xC00E4106

typedef BOOL(CALLBACK PATCH_PROGRESS_CALLBACK)(PVOID,ULONG,ULONG);

typedef PATCH_PROGRESS_CALLBACK *PPATCH_PROGRESS_CALLBACK;

typedef BOOL(CALLBACK PATCH_SYMLOAD_CALLBACK)(ULONG,LPCSTR,ULONG,ULONG,ULONG,ULONG,ULONG,PVOID);

typedef PATCH_SYMLOAD_CALLBACK *PPATCH_SYMLOAD_CALLBACK;

typedef struct _PATCH_IGNORE_RANGE {
    ULONG OffsetInOldFile;
    ULONG LengthInBytes;
} PATCH_IGNORE_RANGE, *PPATCH_IGNORE_RANGE;

typedef struct _PATCH_RETAIN_RANGE {
    ULONG OffsetInOldFile;
    ULONG LengthInBytes;
    ULONG OffsetInNewFile;
} PATCH_RETAIN_RANGE, *PPATCH_RETAIN_RANGE;

typedef struct _PATCH_OLD_FILE_INFO_A {
    ULONG SizeOfThisStruct;
    LPCSTR OldFileName;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
} PATCH_OLD_FILE_INFO_A, *PPATCH_OLD_FILE_INFO_A;

typedef struct _PATCH_OLD_FILE_INFO_W {
    ULONG SizeOfThisStruct;
    LPCWSTR OldFileName;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
} PATCH_OLD_FILE_INFO_W, *PPATCH_OLD_FILE_INFO_W;

typedef struct _PATCH_OLD_FILE_INFO_H {
    ULONG SizeOfThisStruct;
    HANDLE OldFileHandle;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
} PATCH_OLD_FILE_INFO_H, *PPATCH_OLD_FILE_INFO_H;

typedef struct _PATCH_OLD_FILE_INFO {
    ULONG SizeOfThisStruct;
    union {
        LPCSTR OldFileNameA;
        LPCWSTR OldFileNameW;
        HANDLE OldFileHandle;
    };
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
} PATCH_OLD_FILE_INFO, *PPATCH_OLD_FILE_INFO;

typedef struct _PATCH_OPTION_DATA {
    ULONG SizeOfThisStruct;
    ULONG SymbolOptionFlags;
    LPCSTR NewFileSymbolPath;
    LPCSTR *OldFileSymbolPathArray;
    ULONG ExtendedOptionFlags;
    PPATCH_SYMLOAD_CALLBACK SymLoadCallback;
    PVOID SymLoadContext;
} PATCH_OPTION_DATA, *PPATCH_OPTION_DATA;

#ifdef IMPORTING_PATCHAPI_DLL
#define PATCHAPI WINAPI __declspec(dllimport)
#else
#define PATCHAPI WINAPI
#endif

BOOL PATCHAPI CreatePatchFileA(LPCSTR,LPCSTR,LPCSTR,ULONG,PPATCH_OPTION_DATA);
BOOL PATCHAPI CreatePatchFileW(LPCWSTR,LPCWSTR,LPCWSTR,ULONG,PPATCH_OPTION_DATA);
BOOL PATCHAPI CreatePatchFileByHandles(HANDLE,HANDLE,HANDLE,ULONG,PPATCH_OPTION_DATA);
BOOL PATCHAPI CreatePatchFileExA(ULONG,PPATCH_OLD_FILE_INFO_A,LPCSTR,LPCSTR,ULONG,PPATCH_OPTION_DATA,PPATCH_PROGRESS_CALLBACK,PVOID);
BOOL PATCHAPI CreatePatchFileExW(ULONG,PPATCH_OLD_FILE_INFO_W,LPCWSTR,LPCWSTR,ULONG,PPATCH_OPTION_DATA,PPATCH_PROGRESS_CALLBACK,PVOID);
BOOL PATCHAPI CreatePatchFileByHandlesEx(ULONG,PPATCH_OLD_FILE_INFO_H,HANDLE,HANDLE,ULONG,PPATCH_OPTION_DATA,PPATCH_PROGRESS_CALLBACK,PVOID);
BOOL PATCHAPI ExtractPatchHeaderToFileA(LPCSTR,LPCSTR);
BOOL PATCHAPI ExtractPatchHeaderToFileW(LPCWSTR,LPCWSTR);
BOOL PATCHAPI ExtractPatchHeaderToFileByHandles(HANDLE,HANDLE);
BOOL PATCHAPI TestApplyPatchToFileA(LPCSTR,LPCSTR,ULONG);
BOOL PATCHAPI TestApplyPatchToFileW(LPCWSTR,LPCWSTR,ULONG);
BOOL PATCHAPI TestApplyPatchToFileByHandles(HANDLE,HANDLE,ULONG);
BOOL PATCHAPI ApplyPatchToFileA(LPCSTR,LPCSTR,LPCSTR,ULONG);
BOOL PATCHAPI ApplyPatchToFileW(LPCWSTR,LPCWSTR,LPCWSTR,ULONG);
BOOL PATCHAPI ApplyPatchToFileByHandles(HANDLE,HANDLE,HANDLE,ULONG);
BOOL PATCHAPI ApplyPatchToFileExA(LPCSTR,LPCSTR,LPCSTR,ULONG,PPATCH_PROGRESS_CALLBACK,PVOID);
BOOL PATCHAPI ApplyPatchToFileExW(LPCWSTR,LPCWSTR,LPCWSTR,ULONG,PPATCH_PROGRESS_CALLBACK,PVOID);
BOOL PATCHAPI ApplyPatchToFileByHandlesEx(HANDLE,HANDLE,HANDLE,ULONG,PPATCH_PROGRESS_CALLBACK,PVOID);
BOOL PATCHAPI GetFilePatchSignatureA(LPCSTR,ULONG,PVOID,ULONG,PPATCH_IGNORE_RANGE,ULONG,PPATCH_RETAIN_RANGE,ULONG,PVOID);
BOOL PATCHAPI GetFilePatchSignatureW(LPCWSTR,ULONG,PVOID,ULONG,PPATCH_IGNORE_RANGE,ULONG,PPATCH_RETAIN_RANGE,ULONG,PVOID);
BOOL PATCHAPI GetFilePatchSignatureByHandle(HANDLE,ULONG,PVOID,ULONG,PPATCH_IGNORE_RANGE,ULONG,PPATCH_RETAIN_RANGE,ULONG,PVOID);

#ifdef UNICODE
#define CreatePatchFile  CreatePatchFileW
#define CreatePatchFileEx  CreatePatchFileExW
#define TestApplyPatchToFile  TestApplyPatchToFileW
#define ApplyPatchToFile  ApplyPatchToFileW
#define ApplyPatchToFileEx  ApplyPatchToFileExW
#define ExtractPatchHeaderToFile ExtractPatchHeaderToFileW
#define GetFilePatchSignature  GetFilePatchSignatureW
#else
#define CreatePatchFile  CreatePatchFileA
#define CreatePatchFileEx  CreatePatchFileExA
#define TestApplyPatchToFile  TestApplyPatchToFileA
#define ApplyPatchToFile  ApplyPatchToFileA
#define ApplyPatchToFileEx  ApplyPatchToFileExA
#define ExtractPatchHeaderToFile ExtractPatchHeaderToFileA
#define GetFilePatchSignature  GetFilePatchSignatureA
#endif /* UNICODE */

#ifdef __cplusplus
}
#endif

#endif /* _PATCHAPI_H */
