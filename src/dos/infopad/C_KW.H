/* Software License Agreement
 * 
 *     Copyright(C) 1994-2021 David Lindauer, (LADSoft)
 * 
 *     This file is part of the Orange C Compiler package.
 * 
 *     The Orange C Compiler package is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 * 
 *     The Orange C Compiler package is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 * 
 *     You should have received a copy of the GNU General Public License
 *     along with Orange C.  If not, see <http://www.gnu.org/licenses/>.
 * 
 *     contact information:
 *         email: TouchStone222@runbox.com <David Lindauer>
 * 
 */

{
    "#define", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#elif", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#else", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#endif", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#error", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#if", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#ifdef", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#ifndef", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#include", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#line", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#pragma", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#undef", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "#warning", C_ESCAPE
}

//-------------------------------------------------------------------------

, 
{
    "_Alignas", C_KEYWORD
}
, 
{
    "_Alignof", C_KEYWORD
}
, 
{
    "_Atomic", C_KEYWORD
}

, 
{
    "_Bool", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "_Complex", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "_Imaginary", C_KEYWORD
}
, 
{
    "_Generic", C_KEYWORD
}
, 
{
    "_Noreturn", C_KEYWORD
}
, 
{
    "_Static_assert", C_KEYWORD
}
, 
{
    "_Thread_local", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "__cdecl", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "__char16_t", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "__char32_t", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "_", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "__import", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "__pascal", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "__stdcall", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "alignas", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "alignof", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "asm", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "auto", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "bool", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "break", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "case", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "catch", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "char", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "char16_t", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "char32_t", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "class", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "complex", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "const", C_KEYWORD
}


//-------------------------------------------------------------------------

, 
{
    "const_cast", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "constexpr", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "continue", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "decltype", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "default", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "defined", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "delete", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "do", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "double", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "dynamic_cast", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "else", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "enum", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "explicit", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "export", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "extern", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "false", C_NUMBER
}

//-------------------------------------------------------------------------

, 
{
    "final", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "float", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "for", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "friend", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "goto", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "if", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "inline", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "int", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "long", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "mutable", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "namespace", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "new", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "noexcept", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "nullptr", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "operator", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "override", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "private", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "protected", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "public", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "register", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "reinterpret_cast", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "restrict", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "return", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "short", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "signed", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "sizeof", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "static", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "static_assert", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "static_cast", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "struct", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "switch", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "template", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "this", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "thread_local", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "throw", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "true", C_NUMBER
}

//-------------------------------------------------------------------------

, 
{
    "try", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "typedef", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "typeid", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "typename", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "typeof", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "union", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "unsigned", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "using", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "virtual", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "void", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "volatile", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "wchar_t", C_KEYWORD
}

//-------------------------------------------------------------------------

, 
{
    "while", C_KEYWORD
}

//-------------------------------------------------------------------------

,
