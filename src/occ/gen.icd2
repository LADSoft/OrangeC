
segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@13@std@bad_cast
	DC.A 0x0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x62
	DC.B 0x61
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x61
	DC.B 0x73
	DC.B 0x74
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@13@std@bad_cast

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@14@std@exception
	DC.A @std@exception@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x65
	DC.B 0x78
	DC.B 0x63
	DC.B 0x65
	DC.B 0x70
	DC.B 0x74
	DC.B 0x69
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@14@std@exception

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@23@std@__libcpp_refstring
	DC.A @std@__libcpp_refstring@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x6c
	DC.B 0x69
	DC.B 0x62
	DC.B 0x63
	DC.B 0x70
	DC.B 0x70
	DC.B 0x5f
	DC.B 0x72
	DC.B 0x65
	DC.B 0x66
	DC.B 0x73
	DC.B 0x74
	DC.B 0x72
	DC.B 0x69
	DC.B 0x6e
	DC.B 0x67
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@23@std@__libcpp_refstring

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@16@std@logic_error
	DC.A @std@logic_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x6c
	DC.B 0x6f
	DC.B 0x67
	DC.B 0x69
	DC.B 0x63
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@14@std@exception+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@16@std@logic_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@17@std@domain_error
	DC.A @std@domain_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x64
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x61
	DC.B 0x69
	DC.B 0x6e
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@16@std@logic_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@17@std@domain_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@21@std@invalid_argument
	DC.A @std@invalid_argument@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x69
	DC.B 0x6e
	DC.B 0x76
	DC.B 0x61
	DC.B 0x6c
	DC.B 0x69
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x61
	DC.B 0x72
	DC.B 0x67
	DC.B 0x75
	DC.B 0x6d
	DC.B 0x65
	DC.B 0x6e
	DC.B 0x74
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@16@std@logic_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@21@std@invalid_argument

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@17@std@length_error
	DC.A @std@length_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x6c
	DC.B 0x65
	DC.B 0x6e
	DC.B 0x67
	DC.B 0x74
	DC.B 0x68
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@16@std@logic_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@17@std@length_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@17@std@out_of_range
	DC.A @std@out_of_range@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x6f
	DC.B 0x75
	DC.B 0x74
	DC.B 0x5f
	DC.B 0x6f
	DC.B 0x66
	DC.B 0x5f
	DC.B 0x72
	DC.B 0x61
	DC.B 0x6e
	DC.B 0x67
	DC.B 0x65
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@16@std@logic_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@17@std@out_of_range

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@18@std@runtime_error
	DC.A @std@runtime_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x72
	DC.B 0x75
	DC.B 0x6e
	DC.B 0x74
	DC.B 0x69
	DC.B 0x6d
	DC.B 0x65
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@14@std@exception+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@18@std@runtime_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@16@std@range_error
	DC.A @std@range_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x72
	DC.B 0x61
	DC.B 0x6e
	DC.B 0x67
	DC.B 0x65
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@18@std@runtime_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@16@std@range_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@19@std@overflow_error
	DC.A @std@overflow_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x6f
	DC.B 0x76
	DC.B 0x65
	DC.B 0x72
	DC.B 0x66
	DC.B 0x6c
	DC.B 0x6f
	DC.B 0x77
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@18@std@runtime_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@19@std@overflow_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@20@std@underflow_error
	DC.A @std@underflow_error@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x75
	DC.B 0x6e
	DC.B 0x64
	DC.B 0x65
	DC.B 0x72
	DC.B 0x66
	DC.B 0x6c
	DC.B 0x6f
	DC.B 0x77
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x72
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@18@std@runtime_error+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@20@std@underflow_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@17@std@bad_weak_ptr
	DC.A @std@bad_weak_ptr@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x62
	DC.B 0x61
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x77
	DC.B 0x65
	DC.B 0x61
	DC.B 0x6b
	DC.B 0x5f
	DC.B 0x70
	DC.B 0x74
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@14@std@exception+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@17@std@bad_weak_ptr

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@22@std@bad_function_call
	DC.A @std@bad_function_call@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x62
	DC.B 0x61
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x66
	DC.B 0x75
	DC.B 0x6e
	DC.B 0x63
	DC.B 0x74
	DC.B 0x69
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x61
	DC.B 0x6c
	DC.B 0x6c
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@14@std@exception+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@22@std@bad_function_call

segment end exitseg

segment codeseg

segment end codeseg

	virtual _@Token@GetId$xqv_aa_47610_dest

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4:
	PARM	#@Token@GetId$xqv_aa_47610:RAM.A
	TAG
	GOSUB	#@std@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_5:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI
	BLOCK END
	virtual end _@Token@GetId$xqv_aa_47610_dest

segment end exitseg

segment codeseg

global @occx86@copy_expression$qp27@Optimizer@SimpleExpression


global @occx86@copy_expression$qp27@Optimizer@SimpleExpression
@occx86@copy_expression$qp27@Optimizer@SimpleExpression:
; Line 69:	bool BackendIntrinsic(Optimizer::QUAD* q); 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_7:
	VAR START	node
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9:
; Line 72:	{ 

	VAR START	rv
; Line 73:	    Optimizer::SimpleExpression* rv = Allocate<Optimizer::SimpleExpression>(); 

	T4(EAX).UI =   #1.C
	PARM	T4(EAX).UI
	TAG
	GOSUB	#@#Allocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 74:	    memcpy(rv, node, sizeof(*rv)); 

	T6(EAX).UI =   #48.I
	PARM	T6(EAX).UI
	T7(EAX).A =   _node:LINK(4).A
	PARM	T7(EAX).A
	T8(EAX).A =   _rv:LINK(-4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#_memcpy:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11:
; Line 75:	    if (rv->left) 

	T9(EAX).A =   _rv:LINK(-4).A
	T10(EAX).A =   *(T9(EAX) + 38).A.A
	CONDGO	L_10:PC ; T10(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12:
; Line 76:	        rv->left = copy_expression(rv->left); 

	T11(EAX).A =   _rv:LINK(-4).A
	T12(EAX).A =   *(T11(EAX) + 38).A.A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@occx86@copy_expression$qp27@Optimizer@SimpleExpression:PC.UI
	T13(ECX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T14(EAX).A =   _rv:LINK(-4).A
	*(T14(EAX) + 38).A.A =   T13(ECX).A
	BLOCK END
	BLOCK 7

L_13:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_10:
	BLOCK END
	BLOCK 9

L_14:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_16:
; Line 77:	    if (rv->right && rv->type != Optimizer::se_tempref) 

	T15(EAX).A =   _rv:LINK(-4).A
	T16(EAX).A =   *(T15(EAX) + 3C).A.A
	CONDGO	L_15:PC ; T16(EAX).A == #0.A
	BLOCK END
	BLOCK 11
	T17(EAX).A =   _rv:LINK(-4).A
	T18(EAX).I =   *(T17(EAX) + 0).A.I
	CONDGO	L_15:PC ; T18(EAX).I == #12.C
	BLOCK END
	BLOCK 12
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_17:
; Line 78:	        rv->right = copy_expression(rv->right); 

	T19(EAX).A =   _rv:LINK(-4).A
	T20(EAX).A =   *(T19(EAX) + 3C).A.A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@occx86@copy_expression$qp27@Optimizer@SimpleExpression:PC.UI
	T21(ECX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T22(EAX).A =   _rv:LINK(-4).A
	*(T22(EAX) + 3C).A.A =   T21(ECX).A
	BLOCK END
	BLOCK 14

L_18:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_15:
	BLOCK END
	BLOCK 16

L_19:
	DBG BLOCK END
; Line 79:	    return rv; 

	T23(EAX).A =   _rv:LINK(-4).A
	RV.T3(EAX).A =   T23(EAX).A
; Line 80:	} 

	BLOCK END
	BLOCK 17

L_20:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_8:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@makeregflags$qp5amode


global @occx86@makeregflags$qp5amode
@occx86@makeregflags$qp5amode:
; Line 83:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_25:
	VAR START	ap
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_27:
; Line 84:	    int regflags = (1 << ESP) | (1 << EBP); 

	VAR START	regflags
	_regflags:LINK(-4).I =   #30.I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_29:
; Line 85:	    if (ap->mode == am_dreg) 

	T1(EAX).A =   _ap:LINK(4).A
	T2(EAX).I =   *(T1(EAX) + 0).A.I
	CONDGO	L_28:PC ; T2(EAX).I != #2.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_30:
; Line 86:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_31:
; Line 87:	        regflags |= 1 << ap->preg; 

	T3(EDX).I =   _regflags:LINK(-4).I
	T4(EAX).A =   _ap:LINK(4).A
	T6(CL).C =   *(T4(EAX) + 4).A.C
	T32(AL).C =   T6(CL).C^
	T36(CL).C =   T32(AL).C^
	T7(EAX).I = #1.C << T36(CL).C
	T8(EAX).I = T3(EDX).I | T7(EAX).I
	_regflags:LINK(-4).I =   T8(EAX).I
; Line 88:	    } 

	BLOCK END
	BLOCK 8

L_32:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_34:
	DBG BLOCK END
	GOTO	L_33:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_35:
	BLOCK END
	BLOCK 12

L_28:
; Line 89:	    else if (ap->mode == am_indisp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_37:
	T9(EAX).A =   _ap:LINK(4).A
	T10(EAX).I =   *(T9(EAX) + 0).A.I
	CONDGO	L_36:PC ; T10(EAX).I != #C.C
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_38:
; Line 90:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_39:
; Line 91:	        regflags |= 1 << ap->preg; 

	T11(EDX).I =   _regflags:LINK(-4).I
	T12(EAX).A =   _ap:LINK(4).A
	T14(CL).C =   *(T12(EAX) + 4).A.C
	T33(AL).C =   T14(CL).C^
	T37(CL).C =   T33(AL).C^
	T15(EAX).I = #1.C << T37(CL).C
	T16(EAX).I = T11(EDX).I | T15(EAX).I
	_regflags:LINK(-4).I =   T16(EAX).I
; Line 92:	    } 

	BLOCK END
	BLOCK 17

L_40:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_42:
	DBG BLOCK END
	GOTO	L_41:PC
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_43:
	BLOCK END
	BLOCK 21

L_36:
; Line 93:	    else if (ap->mode == am_indispscale) 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_45:
	T17(EAX).A =   _ap:LINK(4).A
	T18(EAX).I =   *(T17(EAX) + 0).A.I
	CONDGO	L_44:PC ; T18(EAX).I != #D.I
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_46:
; Line 94:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_47:
; Line 95:	        regflags |= 1 << ap->preg; 

	T19(EDX).I =   _regflags:LINK(-4).I
	T20(EAX).A =   _ap:LINK(4).A
	T22(CL).C =   *(T20(EAX) + 4).A.C
	T35(AL).C =   T22(CL).C^
	T39(CL).C =   T35(AL).C^
	T23(EAX).I = #1.C << T39(CL).C
	T24(EAX).I = T19(EDX).I | T23(EAX).I
	_regflags:LINK(-4).I =   T24(EAX).I
; Line 96:	        regflags |= 1 << ap->sreg; 

	T25(EDX).I =   _regflags:LINK(-4).I
	T26(EAX).A =   _ap:LINK(4).A
	T28(CL).C =   *(T26(EAX) + 5).A.C
	T34(AL).C =   T28(CL).C^
	T38(CL).C =   T34(AL).C^
	T29(EAX).I = #1.C << T38(CL).C
	T30(EAX).I = T25(EDX).I | T29(EAX).I
	_regflags:LINK(-4).I =   T30(EAX).I
; Line 97:	    } 

	BLOCK END
	BLOCK 26

L_48:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_49:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_44:
	BLOCK END
	BLOCK 29

L_50:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_51:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_41:
	BLOCK END
	BLOCK 32

L_52:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_53:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_33:
	BLOCK END
	BLOCK 35

L_54:
	DBG BLOCK END
; Line 98:	    return regflags; 

	T31(EAX).I =   _regflags:LINK(-4).I
	RV.T0(EAX).I =   T31(EAX).I
; Line 99:	} 

	BLOCK END
	BLOCK 36

L_55:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_26:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@getreg$qp5amodeir4bool


global @occx86@getreg$qp5amodeir4bool
@occx86@getreg$qp5amodeir4bool:
; Line 101:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_60:
	VAR START	apll
	VAR START	regflags
	VAR START	pushed
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_62:
; Line 102:	    pushed = false; 

	T3(EAX).A =   _pushed:LINK(12).A
	*(T3(EAX)).A.BOOL =   #0.BOOL
	VAR START	reg
; Line 103:	    int reg = 0; 

	T4(EAX).I =   #0.C
	_reg:LINK(-4).I =   T4(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_67:
; Line 104:	    for (reg = 0; reg < 8; reg++) 

	T5(EAX).I =   #0.C
	_reg:LINK(-4).I =   T5(EAX).I
	GOTO	L_64:PC
	BLOCK END
	BLOCK 5

L_63:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_68:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_70:
; Line 105:	        if (!(regflags & (1 << reg)) && !(apll->liveRegs & (1 << reg))) 

	T7(EDX).I =   _regflags:LINK(8).I
	T9(ECX).I =   _reg:LINK(-4).I
	T35(EAX).I =   T9(ECX).I^
	T38(ECX).I =   T35(EAX).I^
	T10(EAX).I = #1.C << T38(ECX).I
	T11(EAX).I = T7(EDX).I & T10(EAX).I
	CONDGO	L_69:PC ; T11(EAX).I != #0.C
	BLOCK END
	BLOCK 8
	T12(EDX).A =   _apll:LINK(4).A
	T14(ECX).I =   _reg:LINK(-4).I
	T36(EAX).I =   T14(ECX).I^
	T39(ECX).I =   T36(EAX).I^
	T15(EAX).I = #1.C << T39(ECX).I
	T16(EAX).I = *(T12(EDX) + 10).A.I & T15(EAX).I
	CONDGO	L_69:PC ; T16(EAX).I != #0.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_71:
; Line 106:	            break; 

	GOTO	L_65:PC
	BLOCK END
	BLOCK 11

L_72:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_69:
	BLOCK END
	BLOCK 13

L_73:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_74:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_66:
	_reg:LINK(-4).I = _reg:LINK(-4).I + #1.C
	BLOCK END
	BLOCK 16

L_64:
	T6(EAX).I =   _reg:LINK(-4).I
	CONDGO	L_63:PC ; T6(EAX).I S< #8.I
	BLOCK END
	BLOCK 17

L_65:
	BLOCK END
	BLOCK 18

L_75:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_77:
; Line 107:	    if (reg >= 8) 

	T17(EAX).I =   _reg:LINK(-4).I
	CONDGO	L_76:PC ; T17(EAX).I S< #8.I
	BLOCK END
	BLOCK 20
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_78:
; Line 108:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_79:
; Line 109:	        for (reg = 0; reg < 8; reg++) 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_84:
	T18(EAX).I =   #0.C
	_reg:LINK(-4).I =   T18(EAX).I
	GOTO	L_81:PC
	BLOCK END
	BLOCK 24

L_80:
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_85:
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_87:
; Line 110:	            if (!(regflags & (1 << reg))) 

	T20(EDX).I =   _regflags:LINK(8).I
	T22(ECX).I =   _reg:LINK(-4).I
	T37(EAX).I =   T22(ECX).I^
	T40(ECX).I =   T37(EAX).I^
	T23(EAX).I = #1.C << T40(ECX).I
	T24(EAX).I = T20(EDX).I & T23(EAX).I
	CONDGO	L_86:PC ; T24(EAX).I != #0.C
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_88:
; Line 111:	                break; 

	GOTO	L_82:PC
	BLOCK END
	BLOCK 29

L_89:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_86:
	BLOCK END
	BLOCK 31

L_90:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_91:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_83:
	_reg:LINK(-4).I = _reg:LINK(-4).I + #1.C
	BLOCK END
	BLOCK 34

L_81:
	T19(EAX).I =   _reg:LINK(-4).I
	CONDGO	L_80:PC ; T19(EAX).I S< #8.I
	BLOCK END
	BLOCK 35

L_82:
	BLOCK END
	BLOCK 36

L_92:
	DBG BLOCK END
; Line 112:	        pushed = true; 

	T25(EAX).A =   _pushed:LINK(12).A
	*(T25(EAX)).A.BOOL =   #1.BOOL
; Line 113:	        gen_codes(op_push, ISZ_UINT, makedreg(reg), nullptr); 

	PARM	#0.UI
	T26(EAX).I =   _reg:LINK(-4).I
	PARM	T26(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T27(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T27(EAX).A
	T28(EAX).UI =   #7.C
	PARM	T28(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 114:	        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 115:	    } 

	BLOCK END
	BLOCK 37

L_93:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_95:
	DBG BLOCK END
	GOTO	L_94:PC
	BLOCK END
	BLOCK 39
	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_96:
	BLOCK END
	BLOCK 41

L_76:
; Line 116:	    else if (reg >= 3) 

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_98:
	T29(EAX).I =   _reg:LINK(-4).I
	CONDGO	L_97:PC ; T29(EAX).I S< #3.C
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_99:
; Line 117:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_100:
; Line 118:	        pushed = true; 

	T30(EAX).A =   _pushed:LINK(12).A
	*(T30(EAX)).A.BOOL =   #1.BOOL
; Line 119:	        gen_codes(op_push, ISZ_UINT, makedreg(reg), nullptr); 

	PARM	#0.UI
	T31(EAX).I =   _reg:LINK(-4).I
	PARM	T31(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T32(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T32(EAX).A
	T33(EAX).UI =   #7.C
	PARM	T33(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 120:	        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 121:	    } 

	BLOCK END
	BLOCK 46

L_101:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_102:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_97:
	BLOCK END
	BLOCK 49

L_103:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_104:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_94:
	BLOCK END
	BLOCK 52

L_105:
	DBG BLOCK END
; Line 123:	    return reg; 

	T34(EAX).I =   _reg:LINK(-4).I
	RV.T2(EAX).I =   T34(EAX).I
; Line 124:	} 

	BLOCK END
	BLOCK 53

L_106:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_61:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@offsetToHigh$qp5amode


global @occx86@offsetToHigh$qp5amode
@occx86@offsetToHigh$qp5amode:
; Line 126:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#C.UI
	BLOCK END
	BLOCK 2

L_111:
	VAR START	low
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_113:
; Line 127:	    AMODE* rv = Allocate<AMODE>(); 

	VAR START	rv
	T4(EAX).UI =   #1.C
	PARM	T4(EAX).UI
	TAG
	GOSUB	#@#Allocate$5amode~$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 128:	    *rv = *low; 

	T6(EAX).A =   _low:LINK(4).A
	PARM	T6(EAX).A
	T7(EAX).A =   _rv:LINK(-4).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@amode@$basn$qrx5amode:PC.UI
	PARMADJ	#8.N
	VAR START	ep
; Line 129:	    Optimizer::SimpleExpression* ep = beLocalAllocate<Optimizer::SimpleExpression>(); 

	T8(EAX).UI =   #1.C
	PARM	T8(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_ep:LINK(-8).A =   T9(EAX).A
; Line 130:	    ep->type = Optimizer::se_i; 

	T10(EAX).A =   _ep:LINK(-8).A
	*(T10(EAX) + 0).A.I =   #4.I
; Line 131:	    ep->i = 4; 

	T11(EAX).A =   _ep:LINK(-8).A
	*(T11(EAX) + 8).A.LL =   #4.LL
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_115:
; Line 132:	    if (rv->offset) 

	T12(EAX).A =   _rv:LINK(-4).A
	T13(EAX).A =   *(T12(EAX) + C).A.A
	CONDGO	L_114:PC ; T13(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_116:
; Line 133:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_117:
; Line 134:	        Optimizer::SimpleExpression* ep1 = beLocalAllocate<Optimizer::SimpleExpression>(); 

	VAR START	ep1
	T14(EAX).UI =   #1.C
	PARM	T14(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T15(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_ep1:LINK(-12).A =   T15(EAX).A
; Line 135:	        ep1->type = Optimizer::se_add; 

	T16(ECX).A =   _ep1:LINK(-12).A
	T17(EAX).I =   #1.C
	*(T16(ECX) + 0).A.I =   T17(EAX).I
; Line 136:	        ep1->left = rv->offset; 

	T18(EAX).A =   _rv:LINK(-4).A
	T19(ECX).A =   *(T18(EAX) + C).A.A
	T20(EAX).A =   _ep1:LINK(-12).A
	*(T20(EAX) + 38).A.A =   T19(ECX).A
; Line 137:	        ep1->right = ep; 

	T21(ECX).A =   _ep:LINK(-8).A
	T22(EAX).A =   _ep1:LINK(-12).A
	*(T22(EAX) + 3C).A.A =   T21(ECX).A
; Line 138:	        rv->offset = ep1; 

	T23(ECX).A =   _ep1:LINK(-12).A
	T24(EAX).A =   _rv:LINK(-4).A
	*(T24(EAX) + C).A.A =   T23(ECX).A
; Line 139:	    } 

	BLOCK END
	BLOCK 8

L_118:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_120:
	DBG BLOCK END
	GOTO	L_119:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_121:
	BLOCK END
	BLOCK 12

L_114:
; Line 140:	    else 

; Line 141:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_122:
; Line 142:	        rv->offset = ep; 

	T25(ECX).A =   _ep:LINK(-8).A
	T26(EAX).A =   _rv:LINK(-4).A
	*(T26(EAX) + C).A.A =   T25(ECX).A
; Line 143:	    } 

	BLOCK END
	BLOCK 14

L_123:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_124:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_119:
	BLOCK END
	BLOCK 17

L_125:
	DBG BLOCK END
; Line 144:	    return rv; 

	T27(EAX).A =   _rv:LINK(-4).A
	RV.T3(EAX).A =   T27(EAX).A
; Line 145:	} 

	BLOCK END
	BLOCK 18

L_126:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_112:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@atomic_lea$qp5amodepn0irir4bool


global @occx86@atomic_lea$qp5amodepn0irir4bool
@occx86@atomic_lea$qp5amodepn0irir4bool:
; Line 147:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_131:
	VAR START	apll
	VAR START	apa
	VAR START	regflags
	VAR START	reg
	VAR START	pushed
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_133:
; Line 148:	    reg = getreg(apll, regflags, pushed); 

	T6(EAX).A =   _pushed:LINK(20).A
	PARM	T6(EAX).A
	T7(EAX).I =   _regflags:LINK(12).I
	PARM	T7(EAX).I
	T8(EAX).A =   _apll:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T9(ECX).I =   RV.T0(EAX).I
	PARMADJ	#C.N
	T10(EAX).A =   _reg:LINK(16).A
	*(T10(EAX)).A.I =   T9(ECX).I
	VAR START	apal
; Line 149:	    AMODE* apal = makedreg(reg); 

	T11(EAX).A =   _reg:LINK(16).A
	T12(EAX).I =   *(T11(EAX)).A.I
	PARM	T12(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T13(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_apal:LINK(-4).A =   T13(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_135:
; Line 150:	    if (apa->mode == am_indisp && (!apa->offset || (apa->offset->type == Optimizer::se_i && apa->offset->i == 0))) 

	T14(EAX).A =   _apa:LINK(8).A
	T15(EAX).I =   *(T14(EAX) + 0).A.I
	CONDGO	L_134:PC ; T15(EAX).I != #C.C
	BLOCK END
	BLOCK 5
	T16(EAX).A =   _apa:LINK(8).A
	T17(EAX).A =   *(T16(EAX) + C).A.A
	CONDGO	L_158:PC ; T17(EAX).A == #0.A
	BLOCK END
	BLOCK 6
	T18(EAX).A =   _apa:LINK(8).A
	T19(EAX).A =   *(T18(EAX) + C).A.A
	T20(EAX).I =   *(T19(EAX) + 0).A.I
	CONDGO	L_134:PC ; T20(EAX).I != #4.I
	BLOCK END
	BLOCK 7
	T21(EAX).A =   _apa:LINK(8).A
	T22(EAX).A =   *(T21(EAX) + C).A.A
	T23(EDX:EAX).LL =   *(T22(EAX) + 8).A.LL
	CONDGO	L_134:PC ; T23(EDX:EAX).LL != #0.LL
	BLOCK END
	BLOCK 8

L_158:
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_136:
; Line 151:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_137:
; Line 152:	        gen_code(op_mov, apal, makedreg(apa->preg)); 

	T24(EAX).A =   _apa:LINK(8).A
	T25(EAX).I =   *(T24(EAX) + 4).A.C
	PARM	T25(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T26(EAX).A
	T27(EAX).A =   _apal:LINK(-4).A
	PARM	T27(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 153:	    } 

	BLOCK END
	BLOCK 11

L_138:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_140:
	DBG BLOCK END
	GOTO	L_139:PC
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_141:
	BLOCK END
	BLOCK 15

L_134:
; Line 154:	    else if (apa->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_143:
	T28(EAX).A =   _apa:LINK(8).A
	T29(EAX).I =   *(T28(EAX) + 0).A.I
	CONDGO	L_142:PC ; T29(EAX).I != #2.C
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_144:
; Line 155:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_145:
; Line 156:	        gen_code(op_mov, makedreg(reg), apa); 

	T30(EAX).A =   _apa:LINK(8).A
	PARM	T30(EAX).A
	T31(EAX).A =   _reg:LINK(16).A
	T32(EAX).I =   *(T31(EAX)).A.I
	PARM	T32(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T33(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T33(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 157:	    } 

	BLOCK END
	BLOCK 20

L_146:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_148:
	DBG BLOCK END
	GOTO	L_147:PC
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_149:
	BLOCK END
	BLOCK 24

L_142:
; Line 158:	    else 

; Line 159:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_150:
; Line 160:	        gen_code(op_lea, makedreg(reg), apa); 

	T34(EAX).A =   _apa:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   _reg:LINK(16).A
	T36(EAX).I =   *(T35(EAX)).A.I
	PARM	T36(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T37(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T37(EAX).A
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 161:	    } 

	BLOCK END
	BLOCK 26

L_151:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_152:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_147:
	BLOCK END
	BLOCK 29

L_153:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_154:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_139:
	BLOCK END
	BLOCK 32

L_155:
	DBG BLOCK END
; Line 162:	    apal->mode = am_indisp; 

	T38(ECX).A =   _apal:LINK(-4).A
	T39(EAX).I =   #C.C
	*(T38(ECX) + 0).A.I =   T39(EAX).I
; Line 163:	    return apal; 

	T40(EAX).A =   _apal:LINK(-4).A
	RV.T5(EAX).A =   T40(EAX).A
; Line 164:	} 

	BLOCK END
	BLOCK 33

L_156:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_132:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@make_muldivval$qp5amode


global @occx86@make_muldivval$qp5amode
@occx86@make_muldivval$qp5amode:
; Line 166:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_162:
	VAR START	ap
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_164:
; Line 167:	    AMODE* ap1 = make_label(queue_muldivval(ap->offset->i)); 

	VAR START	ap1
	T3(EAX).A =   _ap:LINK(4).A
	T4(EAX).A =   *(T3(EAX) + C).A.A
	T5(EAX).L =   *(T4(EAX) + 8).A.LL
	PARM	T5(EAX).L
	TAG
	GOSUB	#@occx86@queue_muldivval$ql:PC.UI
	T7(EAX).L =   RV.T0(EAX).L
	PARMADJ	#4.N
	PARM	T7(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T8(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-4).A =   T8(EAX).A
; Line 168:	    ap1->mode = am_direct; 

	T9(EAX).A =   _ap1:LINK(-4).A
	*(T9(EAX) + 0).A.I =   #F.I
; Line 169:	    return (ap1); 

	T10(EAX).A =   _ap1:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 170:	} 

	BLOCK END
	BLOCK 4

L_165:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_163:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@make_label$qi:
; Line 174:	AMODE* make_label(int lab) 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_170:
	VAR START	lab
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_172:
; Line 178:	{ 

	VAR START	lnode
	VAR START	ap
; Line 180:	    AMODE* ap; 

	T3(EAX).UI =   #1.C
	PARM	T3(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_lnode:LINK(-4).A =   T4(EAX).A
; Line 182:	    lnode->type = Optimizer::se_labcon; 

	T5(EAX).A =   _lnode:LINK(-4).A
	*(T5(EAX) + 0).A.I =   #F.I
; Line 183:	    lnode->i = lab; 

	T6(EDX:ECX).LL =   _lab:LINK(4).I
	T7(EAX).A =   _lnode:LINK(-4).A
	*(T7(EAX) + 8).A.LL =   T6(EDX:ECX).LL
; Line 184:	    ap = beLocalAllocate<AMODE>(); 

	T8(EAX).UI =   #1.C
	PARM	T8(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-8).A =   T9(EAX).A
; Line 185:	    ap->mode = am_immed; 

	T10(EAX).A =   _ap:LINK(-8).A
	*(T10(EAX) + 0).A.I =   #10.I
; Line 186:	    ap->offset = lnode; 

	T11(ECX).A =   _lnode:LINK(-4).A
	T12(EAX).A =   _ap:LINK(-8).A
	*(T12(EAX) + C).A.A =   T11(ECX).A
; Line 187:	    ap->length = ISZ_UINT; 

	T13(EAX).A =   _ap:LINK(-8).A
	*(T13(EAX) + 8).A.C =   #7.C
; Line 188:	    return ap; 

	T14(EAX).A =   _ap:LINK(-8).A
	RV.T2(EAX).A =   T14(EAX).A
; Line 189:	} 

	BLOCK END
	BLOCK 4

L_173:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_171:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@makesegreg$qi


global @occx86@makesegreg$qi
@occx86@makesegreg$qi:
; Line 194:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_178:
	VAR START	seg
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_180:
; Line 195:	    AMODE* ap = beLocalAllocate<AMODE>(); 

	VAR START	ap
	T2(EAX).UI =   #1.C
	PARM	T2(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T3(EAX).A
; Line 196:	    ap->mode = am_seg; 

	T4(ECX).A =   _ap:LINK(-4).A
	T5(EAX).I =   #B.C
	*(T4(ECX) + 0).A.I =   T5(EAX).I
; Line 197:	    ap->seg = seg; 

	T6(CL).C =   _seg:LINK(4).I
	T7(EAX).A =   _ap:LINK(-4).A
	*(T7(EAX) + A).A.C =   T6(CL).C
; Line 198:	    ap->length = ISZ_SEG; 

	T8(EAX).A =   _ap:LINK(-4).A
	*(T8(EAX) + 8).A.C =   #E.C
; Line 199:	    return ap; 

	T9(EAX).A =   _ap:LINK(-4).A
	RV.T1(EAX).A =   T9(EAX).A
; Line 200:	} 

	BLOCK END
	BLOCK 4

L_181:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_179:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@makeSSE$qi


global @occx86@makeSSE$qi
@occx86@makeSSE$qi:
; Line 203:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_186:
	VAR START	reg
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_188:
; Line 204:	    AMODE* ap = beLocalAllocate<AMODE>(); 

	VAR START	ap
	T2(EAX).UI =   #1.C
	PARM	T2(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T3(EAX).A
; Line 205:	    ap->mode = am_xmmreg; 

	T4(EAX).A =   _ap:LINK(-4).A
	*(T4(EAX) + 0).A.I =   #A.I
; Line 206:	    ap->preg = reg; 

	T5(CL).C =   _reg:LINK(4).I
	T6(EAX).A =   _ap:LINK(-4).A
	*(T6(EAX) + 4).A.C =   T5(CL).C
; Line 207:	    ap->length = 0; 

	T7(EAX).A =   _ap:LINK(-4).A
	*(T7(EAX) + 8).A.C =   #0.C
; Line 208:	    return ap; 

	T8(EAX).A =   _ap:LINK(-4).A
	RV.T1(EAX).A =   T8(EAX).A
; Line 209:	} 

	BLOCK END
	BLOCK 4

L_189:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_187:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@make_floatconst$qp5amode


global @occx86@make_floatconst$qp5amode
@occx86@make_floatconst$qp5amode:
; Line 211:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_194:
	VAR START	ap
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_196:
; Line 212:	    int size = ap->length; 

	VAR START	size
	T3(EAX).A =   _ap:LINK(4).A
	T4(EAX).I =   *(T3(EAX) + 8).A.C
	_size:LINK(-4).I =   T4(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_198:
; Line 213:	    if (isintconst(ap->offset)) 

	T5(EAX).A =   _ap:LINK(4).A
	T6(EAX).A =   *(T5(EAX) + C).A.A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T7(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_197:PC ; T7(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_199:
; Line 214:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_200:
; Line 215:	        ap->offset->f = (long long)ap->offset->i; 

	T8(EAX).A =   _ap:LINK(4).A
	T9(EAX).A =   *(T8(EAX) + C).A.A
	T10(EDX:EAX).LL =   *(T9(EAX) + 8).A.LL
	PARM	T10(EDX:EAX).LL
	T11(EAX).A =   _ap:LINK(4).A
	T12(EAX).A =   *(T11(EAX) + C).A.A
	T13(EAX).A = T12(EAX).A + #8.A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@FPF@$basn$qL:PC.UI
	PARMADJ	#C.N
; Line 216:	        ap->offset->type = Optimizer::se_f; 

	T14(EAX).A =   _ap:LINK(4).A
	T15(EAX).A =   *(T14(EAX) + C).A.A
	*(T15(EAX) + 0).A.I =   #6.I
; Line 217:	        size = ISZ_DOUBLE; 

	T16(EAX).I =   #13.C
	_size:LINK(-4).I =   T16(EAX).I
; Line 218:	    } 

	BLOCK END
	BLOCK 8

L_201:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_203:
	DBG BLOCK END
	GOTO	L_202:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_204:
	BLOCK END
	BLOCK 12

L_197:
; Line 219:	    else 

; Line 220:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_205:
; Line 221:	        size = ap->offset->sizeFromType; 

	T17(EAX).A =   _ap:LINK(4).A
	T18(EAX).A =   *(T17(EAX) + C).A.A
	T19(EAX).I =   *(T18(EAX) + 34).A.I
	_size:LINK(-4).I =   T19(EAX).I
; Line 222:	    } 

	BLOCK END
	BLOCK 14

L_206:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_207:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_202:
	BLOCK END
	BLOCK 17

L_208:
	DBG BLOCK END
	VAR START	ap1
; Line 223:	    AMODE* ap1 = make_label(queue_floatval(&ap->offset->f, size)); 

	T20(EAX).I =   _size:LINK(-4).I
	PARM	T20(EAX).I
	T21(EAX).A =   _ap:LINK(4).A
	T22(EAX).A =   *(T21(EAX) + C).A.A
	T23(EAX).A = T22(EAX).A + #8.A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@occx86@queue_floatval$qp3FPFi:PC.UI
	T25(EAX).L =   RV.T1(EAX).L
	PARMADJ	#8.N
	PARM	T25(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-8).A =   T26(EAX).A
; Line 224:	    ap->mode = am_direct; 

	T27(EAX).A =   _ap:LINK(4).A
	*(T27(EAX) + 0).A.I =   #F.I
; Line 225:	    ap->length = 0; 

	T28(EAX).A =   _ap:LINK(4).A
	*(T28(EAX) + 8).A.C =   #0.C
; Line 226:	    ap->offset = ap1->offset; 

	T29(EAX).A =   _ap1:LINK(-8).A
	T30(ECX).A =   *(T29(EAX) + C).A.A
	T31(EAX).A =   _ap:LINK(4).A
	*(T31(EAX) + C).A.A =   T30(ECX).A
; Line 227:	} 

	BLOCK END
	BLOCK 18

L_209:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_195:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@moveFP$qp5amodeipn0i


global @occx86@moveFP$qp5amodeipn0i
@occx86@moveFP$qp5amodeipn0i:
; Line 229:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#18.UI
	BLOCK END
	BLOCK 2

L_214:
	VAR START	apa
	VAR START	sza
	VAR START	apl
	VAR START	szl
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_216:
; Line 230:	    if (apa->mode != am_xmmreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_218:
	T1(EAX).A =   _apa:LINK(4).A
	T2(EAX).I =   *(T1(EAX) + 0).A.I
	CONDGO	L_217:PC ; T2(EAX).I == #A.I
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_219:
; Line 231:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_220:
; Line 232:	        if (sza < ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_222:
	T3(EAX).I =   _sza:LINK(8).I
	CONDGO	L_221:PC ; T3(EAX).I S>= #12.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_223:
; Line 233:	            gen_code_sse(op_cvtsd2si, op_cvtss2si, szl, apa, apl); 

	T4(EAX).A =   _apl:LINK(12).A
	PARM	T4(EAX).A
	T5(EAX).A =   _apa:LINK(4).A
	PARM	T5(EAX).A
	T6(EAX).I =   _szl:LINK(16).I
	PARM	T6(EAX).I
	PARM	#1BE.I
	PARM	#1B9.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 11

L_225:
	DBG BLOCK END
	GOTO	L_224:PC
	BLOCK END
	BLOCK 12
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_226:
	BLOCK END
	BLOCK 14

L_221:
; Line 234:	        else if (szl < ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_228:
	T7(EAX).I =   _szl:LINK(16).I
	CONDGO	L_227:PC ; T7(EAX).I S>= #12.C
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_229:
; Line 235:	            gen_code_sse(op_cvtsi2ss, op_cvtsi2sd, sza, apa, apl); 

	T8(EAX).A =   _apl:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   _apa:LINK(4).A
	PARM	T9(EAX).A
	T10(EAX).I =   _sza:LINK(8).I
	PARM	T10(EAX).I
	PARM	#1BB.I
	PARM	#1BC.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 18

L_231:
	DBG BLOCK END
	GOTO	L_230:PC
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_232:
	BLOCK END
	BLOCK 21

L_227:
; Line 236:	        else 

; Line 237:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_233:
; Line 238:	            int m1 = (sza - ISZ_FLOAT) % 3; 

	VAR START	m1
	T11(EAX).I =   _sza:LINK(8).I
	T12(ECX).I = T11(EAX).I - #12.C
	T14(EAX).I =   T12(ECX).I^
	T126(EDX).I = T14(EAX).I S*H #55555556.I
	T18(EAX).I = T12(ECX).I S>> #1F.UI
	T19(EAX).I = T126(EDX).I - T18(EAX).I
	T20(EAX).I = T19(EAX).I * #3.I
	T21(EAX).I = T12(ECX).I - T20(EAX).I
	_m1:LINK(-20).I =   T21(EAX).I
	VAR START	m2
; Line 239:	            int m2 = (szl - ISZ_FLOAT) % 3; 

	T22(EAX).I =   _szl:LINK(16).I
	T23(ECX).I = T22(EAX).I - #12.C
	T25(EAX).I =   T23(ECX).I^
	T125(EDX).I = T25(EAX).I S*H #55555556.I
	T29(EAX).I = T23(ECX).I S>> #1F.UI
	T30(EAX).I = T125(EDX).I - T29(EAX).I
	T31(EAX).I = T30(EAX).I * #3.I
	T32(EAX).I = T23(ECX).I - T31(EAX).I
	_m2:LINK(-24).I =   T32(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_235:
; Line 240:	            if ((m1 == 0 && m2 != 0) || (m2 == 0 && m1 != 0)) 

	T33(EAX).I =   _m1:LINK(-20).I
	CONDGO	L_307:PC ; T33(EAX).I != #0.C
	BLOCK END
	BLOCK 24
	T34(EAX).I =   _m2:LINK(-24).I
	CONDGO	L_306:PC ; T34(EAX).I != #0.C
	BLOCK END
	BLOCK 25

L_307:
	T35(EAX).I =   _m2:LINK(-24).I
	CONDGO	L_234:PC ; T35(EAX).I != #0.C
	BLOCK END
	BLOCK 26
	T36(EAX).I =   _m1:LINK(-20).I
	CONDGO	L_234:PC ; T36(EAX).I == #0.C
	BLOCK END
	BLOCK 27

L_306:
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_236:
; Line 241:	                gen_code_sse(op_cvtsd2ss, op_cvtss2sd, sza, apa, apl); 

	T40(EAX).A =   _apl:LINK(12).A
	PARM	T40(EAX).A
	T41(EAX).A =   _apa:LINK(4).A
	PARM	T41(EAX).A
	T42(EAX).I =   _sza:LINK(8).I
	PARM	T42(EAX).I
	PARM	#1BD.I
	PARM	#1BA.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 29

L_238:
	DBG BLOCK END
	GOTO	L_237:PC
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_239:
	BLOCK END
	BLOCK 32

L_234:
; Line 242:	            else 

; Line 243:	                gen_code_sse(op_movss, op_movsd, sza, apa, apl); 

	T37(EAX).A =   _apl:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   _apa:LINK(4).A
	PARM	T38(EAX).A
	T39(EAX).I =   _sza:LINK(8).I
	PARM	T39(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 33

L_240:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_237:
	BLOCK END
	BLOCK 35

L_241:
	DBG BLOCK END
; Line 244:	        } 

	BLOCK END
	BLOCK 36

L_242:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_243:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_230:
	BLOCK END
	BLOCK 39

L_244:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_245:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_224:
	BLOCK END
	BLOCK 42

L_246:
	DBG BLOCK END
; Line 245:	    } 

	BLOCK END
	BLOCK 43

L_247:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_249:
	DBG BLOCK END
	GOTO	L_248:PC
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_250:
	BLOCK END
	BLOCK 47

L_217:
; Line 246:	    else if (apl->mode == am_xmmreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_252:
	T43(EAX).A =   _apl:LINK(12).A
	T44(EAX).I =   *(T43(EAX) + 0).A.I
	CONDGO	L_251:PC ; T44(EAX).I != #A.I
	BLOCK END
	BLOCK 49
	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_253:
; Line 247:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_254:
; Line 248:	        int m1 = (sza - ISZ_FLOAT) % 3; 

	VAR START	m1
	T45(EAX).I =   _sza:LINK(8).I
	T46(ECX).I = T45(EAX).I - #12.C
	T48(EAX).I =   T46(ECX).I^
	T128(EDX).I = T48(EAX).I S*H #55555556.I
	T52(EAX).I = T46(ECX).I S>> #1F.UI
	T53(EAX).I = T128(EDX).I - T52(EAX).I
	T54(EAX).I = T53(EAX).I * #3.I
	T55(EAX).I = T46(ECX).I - T54(EAX).I
	_m1:LINK(-12).I =   T55(EAX).I
	VAR START	m2
; Line 249:	        int m2 = (szl - ISZ_FLOAT) % 3; 

	T56(EAX).I =   _szl:LINK(16).I
	T57(ECX).I = T56(EAX).I - #12.C
	T59(EAX).I =   T57(ECX).I^
	T127(EDX).I = T59(EAX).I S*H #55555556.I
	T63(EAX).I = T57(ECX).I S>> #1F.UI
	T64(EAX).I = T127(EDX).I - T63(EAX).I
	T65(EAX).I = T64(EAX).I * #3.I
	T66(EAX).I = T57(ECX).I - T65(EAX).I
	_m2:LINK(-16).I =   T66(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_256:
; Line 250:	        if ((m1 && !m2) || (m2 && !m1)) 

	T67(EAX).I =   _m1:LINK(-12).I
	CONDGO	L_309:PC ; T67(EAX).I == #0.C
	BLOCK END
	BLOCK 53
	T68(EAX).I =   _m2:LINK(-16).I
	CONDGO	L_308:PC ; T68(EAX).I == #0.C
	BLOCK END
	BLOCK 54

L_309:
	T69(EAX).I =   _m2:LINK(-16).I
	CONDGO	L_255:PC ; T69(EAX).I == #0.C
	BLOCK END
	BLOCK 55
	T70(EAX).I =   _m1:LINK(-12).I
	CONDGO	L_255:PC ; T70(EAX).I != #0.C
	BLOCK END
	BLOCK 56

L_308:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_257:
; Line 251:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_258:
; Line 252:	            gen_code_sse(op_cvtsd2ss, op_cvtss2sd, sza, apa, apl); 

	T74(EAX).A =   _apl:LINK(12).A
	PARM	T74(EAX).A
	T75(EAX).A =   _apa:LINK(4).A
	PARM	T75(EAX).A
	T76(EAX).I =   _sza:LINK(8).I
	PARM	T76(EAX).I
	PARM	#1BD.I
	PARM	#1BA.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 253:	        } 

	BLOCK END
	BLOCK 59

L_259:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_261:
	DBG BLOCK END
	GOTO	L_260:PC
	BLOCK END
	BLOCK 61
	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_262:
	BLOCK END
	BLOCK 63

L_255:
; Line 254:	        else 

; Line 255:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_263:
; Line 256:	            gen_code_sse(op_movss, op_movsd, sza, apa, apl); 

	T71(EAX).A =   _apl:LINK(12).A
	PARM	T71(EAX).A
	T72(EAX).A =   _apa:LINK(4).A
	PARM	T72(EAX).A
	T73(EAX).I =   _sza:LINK(8).I
	PARM	T73(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 257:	        } 

	BLOCK END
	BLOCK 65

L_264:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_265:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_260:
	BLOCK END
	BLOCK 68

L_266:
	DBG BLOCK END
; Line 258:	    } 

	BLOCK END
	BLOCK 69

L_267:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_269:
	DBG BLOCK END
	GOTO	L_268:PC
	BLOCK END
	BLOCK 71
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_270:
	BLOCK END
	BLOCK 73

L_251:
; Line 259:	    else 

; Line 260:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_271:
; Line 261:	        if (apl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_273:
	T77(EAX).A =   _apl:LINK(12).A
	T78(EAX).I =   *(T77(EAX) + 0).A.I
	CONDGO	L_272:PC ; T78(EAX).I != #10.I
	BLOCK END
	BLOCK 76
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_274:
; Line 262:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_275:
; Line 263:	            make_floatconst(apl); 

	T79(EAX).A =   _apl:LINK(12).A
	PARM	T79(EAX).A
	TAG
	GOSUB	#@occx86@make_floatconst$qp5amode:PC.UI
	PARMADJ	#4.N
; Line 264:	        } 

	BLOCK END
	BLOCK 79

L_276:
	DBG BLOCK END
	BLOCK END
	BLOCK 80

L_277:
	DBG BLOCK END
	BLOCK END
	BLOCK 81

L_272:
	BLOCK END
	BLOCK 82

L_278:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_280:
; Line 265:	        if (szl < ISZ_FLOAT) 

	T80(EAX).I =   _szl:LINK(16).I
	CONDGO	L_279:PC ; T80(EAX).I S>= #12.C
	BLOCK END
	BLOCK 84
	DBG BLOCK START
	BLOCK END
	BLOCK 85

L_281:
; Line 266:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 86

L_282:
; Line 267:	            gen_code_sse(op_cvtsi2ss, op_cvtsi2sd, sza, apa, apl); 

	T81(EAX).A =   _apl:LINK(12).A
	PARM	T81(EAX).A
	T82(EAX).A =   _apa:LINK(4).A
	PARM	T82(EAX).A
	T83(EAX).I =   _sza:LINK(8).I
	PARM	T83(EAX).I
	PARM	#1BB.I
	PARM	#1BC.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 268:	            apl->length = szl; 

	T84(CL).C =   _szl:LINK(16).I
	T85(EAX).A =   _apl:LINK(12).A
	*(T85(EAX) + 8).A.C =   T84(CL).C
; Line 269:	        } 

	BLOCK END
	BLOCK 87

L_283:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_285:
	DBG BLOCK END
	GOTO	L_284:PC
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_286:
	BLOCK END
	BLOCK 91

L_279:
; Line 270:	        else 

; Line 271:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_287:
; Line 272:	            int m1 = (sza - ISZ_FLOAT) % 3; 

	VAR START	m1
	T86(EAX).I =   _sza:LINK(8).I
	T87(ECX).I = T86(EAX).I - #12.C
	T89(EAX).I =   T87(ECX).I^
	T130(EDX).I = T89(EAX).I S*H #55555556.I
	T93(EAX).I = T87(ECX).I S>> #1F.UI
	T94(EAX).I = T130(EDX).I - T93(EAX).I
	T95(EAX).I = T94(EAX).I * #3.I
	T96(EAX).I = T87(ECX).I - T95(EAX).I
	_m1:LINK(-4).I =   T96(EAX).I
	VAR START	m2
; Line 273:	            int m2 = (szl - ISZ_FLOAT) % 3; 

	T97(EAX).I =   _szl:LINK(16).I
	T98(ECX).I = T97(EAX).I - #12.C
	T100(EAX).I =   T98(ECX).I^
	T129(EDX).I = T100(EAX).I S*H #55555556.I
	T104(EAX).I = T98(ECX).I S>> #1F.UI
	T105(EAX).I = T129(EDX).I - T104(EAX).I
	T106(EAX).I = T105(EAX).I * #3.I
	T107(EAX).I = T98(ECX).I - T106(EAX).I
	_m2:LINK(-8).I =   T107(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 93

L_289:
; Line 274:	            if ((m1 == 0 && m2 != 0) || (m2 == 0 && m1 != 0)) 

	T108(EAX).I =   _m1:LINK(-4).I
	CONDGO	L_311:PC ; T108(EAX).I != #0.C
	BLOCK END
	BLOCK 94
	T109(EAX).I =   _m2:LINK(-8).I
	CONDGO	L_310:PC ; T109(EAX).I != #0.C
	BLOCK END
	BLOCK 95

L_311:
	T110(EAX).I =   _m2:LINK(-8).I
	CONDGO	L_288:PC ; T110(EAX).I != #0.C
	BLOCK END
	BLOCK 96
	T111(EAX).I =   _m1:LINK(-4).I
	CONDGO	L_288:PC ; T111(EAX).I == #0.C
	BLOCK END
	BLOCK 97

L_310:
	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_290:
; Line 275:	                gen_code_sse(op_cvtsd2ss, op_cvtss2sd, sza, apa, apl); 

	T115(EAX).A =   _apl:LINK(12).A
	PARM	T115(EAX).A
	T116(EAX).A =   _apa:LINK(4).A
	PARM	T116(EAX).A
	T117(EAX).I =   _sza:LINK(8).I
	PARM	T117(EAX).I
	PARM	#1BD.I
	PARM	#1BA.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 99

L_292:
	DBG BLOCK END
	GOTO	L_291:PC
	BLOCK END
	BLOCK 100
	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_293:
	BLOCK END
	BLOCK 102

L_288:
; Line 276:	            else 

; Line 277:	                gen_code_sse(op_movss, op_movsd, sza, apa, apl); 

	T112(EAX).A =   _apl:LINK(12).A
	PARM	T112(EAX).A
	T113(EAX).A =   _apa:LINK(4).A
	PARM	T113(EAX).A
	T114(EAX).I =   _sza:LINK(8).I
	PARM	T114(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 103

L_294:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_291:
	BLOCK END
	BLOCK 105

L_295:
	DBG BLOCK END
; Line 278:	        } 

	BLOCK END
	BLOCK 106

L_296:
	DBG BLOCK END
	BLOCK END
	BLOCK 107

L_297:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_284:
	BLOCK END
	BLOCK 109

L_298:
	DBG BLOCK END
; Line 279:	    } 

	BLOCK END
	BLOCK 110

L_299:
	DBG BLOCK END
	BLOCK END
	BLOCK 111

L_300:
	DBG BLOCK END
	BLOCK END
	BLOCK 112

L_268:
	BLOCK END
	BLOCK 113

L_301:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_302:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_248:
	BLOCK END
	BLOCK 116

L_303:
	DBG BLOCK END
; Line 280:	    return apa; 

	T118(EAX).A =   _apa:LINK(4).A
	RV.T0(EAX).A =   T118(EAX).A
; Line 281:	} 

	BLOCK END
	BLOCK 117

L_304:
	DBG BLOCK END
	BLOCK END
	BLOCK 118

L_215:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@aimmed$quL


global @occx86@aimmed$quL
@occx86@aimmed$quL:
; Line 284:	AMODE* aimmed(unsigned long long i) 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_315:
	VAR START	i
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_317:
; Line 288:	{ 

	VAR START	ap
	VAR START	ep
; Line 290:	    Optimizer::SimpleExpression* ep; 

	T3(EDX:EAX).ULL =   _i:LINK(4).ULL
	T4(EDX:EAX).ULL = T3(EDX:EAX).ULL & #FFFFFFFF.ULL
	_i:LINK(4).ULL =   T4(EDX:EAX).ULL
; Line 292:	    ep = beLocalAllocate<Optimizer::SimpleExpression>(); 

	T5(EAX).UI =   #1.C
	PARM	T5(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T6(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ep:LINK(-8).A =   T6(EAX).A
; Line 293:	    ep->type = Optimizer::se_i; 

	T7(EAX).A =   _ep:LINK(-8).A
	*(T7(EAX) + 0).A.I =   #4.I
; Line 294:	    ep->i = i; 

	T8(EDX:ECX).LL =   _i:LINK(4).ULL
	T9(EAX).A =   _ep:LINK(-8).A
	*(T9(EAX) + 8).A.LL =   T8(EDX:ECX).LL
; Line 295:	    ap = beLocalAllocate<AMODE>(); 

	T10(EAX).UI =   #1.C
	PARM	T10(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T11(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T11(EAX).A
; Line 296:	    ap->mode = am_immed; 

	T12(EAX).A =   _ap:LINK(-4).A
	*(T12(EAX) + 0).A.I =   #10.I
; Line 297:	    ap->offset = ep; 

	T13(ECX).A =   _ep:LINK(-8).A
	T14(EAX).A =   _ap:LINK(-4).A
	*(T14(EAX) + C).A.A =   T13(ECX).A
; Line 298:	    ap->length = ISZ_ADDR; 

	T15(EAX).A =   _ap:LINK(-4).A
	*(T15(EAX) + 8).A.C =   #C.C
; Line 299:	    return ap; 

	T16(EAX).A =   _ap:LINK(-4).A
	RV.T2(EAX).A =   T16(EAX).A
; Line 300:	} 

	BLOCK END
	BLOCK 4

L_318:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_316:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@aimmedt$qli


global @occx86@aimmedt$qli
@occx86@aimmedt$qli:
; Line 304:	AMODE* aimmedt(long i, int size) 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_323:
	VAR START	i
	VAR START	size
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_325:
; Line 308:	{ 

	VAR START	ap
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_327:
	DBG BLOCK END
; Line 309:	    AMODE* ap; 
; Line 310:	    switch (size) 

; Line 310:	    switch (size) 

	T2(EAX).I =   _size:LINK(8).I
	COSWITCH(T2(EAX).I,#D.UI,#19.UI,L_356:PC)
	SWBRANCH(#FFFFFFFFFFFFFFF4.UI,L_349:PC)
	SWBRANCH(#FFFFFFFFFFFFFFF7.UI,L_353:PC)
	SWBRANCH(#FFFFFFFFFFFFFFF9.UI,L_351:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFC.UI,L_337:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFD.UI,L_331:PC)
	SWBRANCH(#3.UI,L_329:PC)
	SWBRANCH(#4.UI,L_335:PC)
	SWBRANCH(#5.UI,L_339:PC)
	SWBRANCH(#6.UI,L_333:PC)
	SWBRANCH(#7.UI,L_343:PC)
	SWBRANCH(#9.UI,L_345:PC)
	SWBRANCH(#A.UI,L_347:PC)
	SWBRANCH(#C.UI,L_341:PC)
; Line 311:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_328:
	BLOCK END
	BLOCK 6

L_329:
	BLOCK END
	BLOCK 7

L_331:
	DBG BLOCK START
; Line 313:	        case -ISZ_UCHAR: 
; Line 314:	            i &= 0xff; 

; Line 314:	            i &= 0xff; 

	_i:LINK(4).L = _i:LINK(4).L & #FF.L
; Line 315:	            break; 

	GOTO	L_326:PC
	BLOCK END
	BLOCK 8
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_333:
	BLOCK END
	BLOCK 10

L_335:
	BLOCK END
	BLOCK 11

L_337:
	BLOCK END
	BLOCK 12

L_339:
	DBG BLOCK START
; Line 316:	        case ISZ_U16: 
; Line 317:	        case ISZ_USHORT: 

; Line 317:	        case ISZ_USHORT: 

	_i:LINK(4).L = _i:LINK(4).L & #FFFF.L
; Line 318:	        case -ISZ_USHORT: 
; Line 319:	        case ISZ_WCHAR: 

; Line 319:	        case ISZ_WCHAR: 

	GOTO	L_326:PC
	BLOCK END
	BLOCK 13
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_341:
	BLOCK END
	BLOCK 15

L_343:
	BLOCK END
	BLOCK 16

L_345:
	BLOCK END
	BLOCK 17

L_347:
	BLOCK END
	BLOCK 18

L_349:
	BLOCK END
	BLOCK 19

L_351:
	BLOCK END
	BLOCK 20

L_353:
	DBG BLOCK START
; Line 320:	            i &= 0xffff; 
; Line 321:	            break; 

; Line 321:	            break; 

	T3(EAX).UI =   _i:LINK(4).L
	T5(EAX).UI = T3(EAX).UI & #FFFFFFFF.UI
	_i:LINK(4).L =   T5(EAX).L
; Line 322:	        case ISZ_ADDR: 
; Line 323:	        case ISZ_UINT: 

; Line 323:	        case ISZ_UINT: 

	BLOCK END
	BLOCK 21

L_355:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_356:
	BLOCK END
	BLOCK 23

L_326:
	BLOCK END
	BLOCK 24

L_357:
	DBG BLOCK END
; Line 325:	        case ISZ_U32: 
; Line 326:	        case -ISZ_ADDR: 

; Line 326:	        case -ISZ_ADDR: 

	T6(EDX:EAX).ULL =   _i:LINK(4).L
	PARM	T6(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	_ap:LINK(-4).A =   T7(EAX).A
; Line 327:	        case -ISZ_UINT: 
; Line 328:	        case -ISZ_ULONG: 

; Line 328:	        case -ISZ_ULONG: 

	T8(CL).C =   _size:LINK(8).I
	T9(EAX).A =   _ap:LINK(-4).A
	*(T9(EAX) + 8).A.C =   T8(CL).C
; Line 329:	            i &= 0xffffffffU; 
; Line 335:	} 
; Line 338:	bool isauto(Optimizer::SimpleExpression* ep) 

; Line 330:	            break; 

	T10(EAX).A =   _ap:LINK(-4).A
	RV.T1(EAX).A =   T10(EAX).A
; Line 331:	    } 
; Line 332:	    ap = aimmed(i); 

; Line 332:	    ap = aimmed(i); 

	BLOCK END
	BLOCK 25

L_358:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_324:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@isauto$qp27@Optimizer@SimpleExpression


global @occx86@isauto$qp27@Optimizer@SimpleExpression
@occx86@isauto$qp27@Optimizer@SimpleExpression:
; Line 339:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_363:
	VAR START	ep
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_365:
; Line 340:	    if (ep->type == Optimizer::se_auto) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_367:
	T7(EAX).A =   _ep:LINK(4).A
	T8(EAX).I =   *(T7(EAX) + 0).A.I
	CONDGO	L_366:PC ; T8(EAX).I != #B.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_368:
; Line 341:	        return true; 

	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_364:PC
	BLOCK END
	BLOCK 7

L_369:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_366:
	BLOCK END
	BLOCK 9

L_370:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_372:
; Line 342:	    if (ep->type == Optimizer::se_add) 

	T9(EAX).A =   _ep:LINK(4).A
	T10(EAX).I =   *(T9(EAX) + 0).A.I
	CONDGO	L_371:PC ; T10(EAX).I != #1.C
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_373:
; Line 343:	        return isauto(ep->left) || isauto(ep->right); 

	T11(EAX).A =   _ep:LINK(4).A
	T12(EAX).A =   *(T11(EAX) + 38).A.A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@occx86@isauto$qp27@Optimizer@SimpleExpression:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_383:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 13
	T14(EAX).A =   _ep:LINK(4).A
	T15(EAX).A =   *(T14(EAX) + 3C).A.A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@occx86@isauto$qp27@Optimizer@SimpleExpression:PC.UI
	T16(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_383:PC ; T16(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 14
	T17(EAX).UI =   #0.UI
	GOTO	L_384:PC
	BLOCK END
	BLOCK 15

L_383:
	T17(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 16

L_384:
	T18(AL).BOOL =   T17(EAX).UI
	RV.T3(AL).BOOL =   T18(AL).BOOL
	GOTO	L_364:PC
	BLOCK END
	BLOCK 17

L_374:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_371:
	BLOCK END
	BLOCK 19

L_375:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_377:
; Line 344:	    if (ep->type == Optimizer::se_sub) 

	T19(EAX).A =   _ep:LINK(4).A
	T20(EAX).I =   *(T19(EAX) + 0).A.I
	CONDGO	L_376:PC ; T20(EAX).I != #2.C
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_378:
; Line 345:	        return isauto(ep->left); 

	T21(EAX).A =   _ep:LINK(4).A
	T22(EAX).A =   *(T21(EAX) + 38).A.A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@occx86@isauto$qp27@Optimizer@SimpleExpression:PC.UI
	T23(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#4.N
	RV.T5(AL).BOOL =   T23(AL).BOOL
	GOTO	L_364:PC
	BLOCK END
	BLOCK 23

L_379:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_376:
	BLOCK END
	BLOCK 25

L_380:
	DBG BLOCK END
; Line 346:	    return false; 

	RV.T6(AL).BOOL =   #0.BOOL
; Line 347:	} 

	BLOCK END
	BLOCK 26

L_381:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_364:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@make_offset$qp27@Optimizer@SimpleExpression


global @occx86@make_offset$qp27@Optimizer@SimpleExpression
@occx86@make_offset$qp27@Optimizer@SimpleExpression:
; Line 348:	AMODE* make_offset(Optimizer::SimpleExpression* node) 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_389:
	VAR START	node
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_391:
; Line 352:	{ 

	VAR START	ap
; Line 353:	    AMODE* ap; 
; Line 354:	    ap = beLocalAllocate<AMODE>(); 

; Line 354:	    ap = beLocalAllocate<AMODE>(); 

	T4(EAX).UI =   #1.C
	PARM	T4(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T5(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_393:
; Line 355:	    if (node->type == Optimizer::se_tempref) 

	T6(EAX).A =   _node:LINK(4).A
	T7(EAX).I =   *(T6(EAX) + 0).A.I
	CONDGO	L_392:PC ; T7(EAX).I != #12.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_394:
; Line 356:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_395:
; Line 357:	        diag("make_offset: orignode"); 

	PARM	#L_388:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 358:	    } 

	BLOCK END
	BLOCK 8

L_396:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_397:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_392:
	BLOCK END
	BLOCK 11

L_398:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_400:
; Line 359:	    if (isauto(node)) 

	T8(EAX).A =   _node:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@occx86@isauto$qp27@Optimizer@SimpleExpression:PC.UI
	T9(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_399:PC ; T9(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_401:
; Line 360:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_402:
; Line 361:	        ap->preg = usingEsp ? ESP : EBP; 

	T10(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_411:PC ; T10(EAX).I == #0.C
	BLOCK END
	BLOCK 16
	T11(EAX).I =   #4.I
	GOTO	L_412:PC
	BLOCK END
	BLOCK 17

L_411:
	T11(EAX).I =   #5.C
	BLOCK END
	BLOCK 18

L_412:
	T12(CL).C =   T11(EAX).I
	T13(EAX).A =   _ap:LINK(-4).A
	*(T13(EAX) + 4).A.C =   T12(CL).C
; Line 362:	        ap->mode = am_indisp; 

	T14(ECX).A =   _ap:LINK(-4).A
	T15(EAX).I =   #C.C
	*(T14(ECX) + 0).A.I =   T15(EAX).I
; Line 363:	    } 

	BLOCK END
	BLOCK 19

L_403:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_405:
	DBG BLOCK END
	GOTO	L_404:PC
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_406:
	BLOCK END
	BLOCK 23

L_399:
; Line 364:	    else 

; Line 365:	        ap->mode = am_direct; 

	T16(EAX).A =   _ap:LINK(-4).A
	*(T16(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 24

L_407:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_404:
	BLOCK END
	BLOCK 26

L_408:
	DBG BLOCK END
; Line 366:	    ap->offset = copy_expression(node); 

	T17(EAX).A =   _node:LINK(4).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@occx86@copy_expression$qp27@Optimizer@SimpleExpression:PC.UI
	T18(ECX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T19(EAX).A =   _ap:LINK(-4).A
	*(T19(EAX) + C).A.A =   T18(ECX).A
; Line 367:	    ap->seg = 0; 

	T20(EAX).A =   _ap:LINK(-4).A
	*(T20(EAX) + A).A.C =   #0.C
; Line 368:	    return ap; 

	T21(EAX).A =   _ap:LINK(-4).A
	RV.T3(EAX).A =   T21(EAX).A
; Line 369:	} 

	BLOCK END
	BLOCK 27

L_409:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_390:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@make_stack$qi


global @occx86@make_stack$qi
@occx86@make_stack$qi:
; Line 373:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_416:
	VAR START	number
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_418:
; Line 374:	    AMODE* ap = beLocalAllocate<AMODE>(); 

	VAR START	ap
	T3(EAX).UI =   #1.C
	PARM	T3(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T4(EAX).A
	VAR START	ep
; Line 375:	    Optimizer::SimpleExpression* ep = beLocalAllocate<Optimizer::SimpleExpression>(); 

	T5(EAX).UI =   #1.C
	PARM	T5(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T6(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_ep:LINK(-8).A =   T6(EAX).A
; Line 376:	    ep->type = Optimizer::se_i; 

	T7(EAX).A =   _ep:LINK(-8).A
	*(T7(EAX) + 0).A.I =   #4.I
; Line 377:	    ep->i = -number; 

	T8(EAX).I =   _number:LINK(4).I
	T9(EAX).I =  - T8(EAX).I
	T10(EDX:ECX).LL =   T9(EAX).I
	T11(EAX).A =   _ep:LINK(-8).A
	*(T11(EAX) + 8).A.LL =   T10(EDX:ECX).LL
; Line 378:	    ap->mode = am_indisp; 

	T12(ECX).A =   _ap:LINK(-4).A
	T13(EAX).I =   #C.C
	*(T12(ECX) + 0).A.I =   T13(EAX).I
; Line 379:	    ap->preg = ESP; 

	T14(EAX).A =   _ap:LINK(-4).A
	*(T14(EAX) + 4).A.C =   #4.C
; Line 380:	    ap->offset = ep; 

	T15(ECX).A =   _ep:LINK(-8).A
	T16(EAX).A =   _ap:LINK(-4).A
	*(T16(EAX) + C).A.A =   T15(ECX).A
; Line 381:	    ap->length = ISZ_UINT; 

	T17(EAX).A =   _ap:LINK(-4).A
	*(T17(EAX) + 8).A.C =   #7.C
; Line 382:	    ap->keepesp = true; 

	T18(ECX).A =   _ap:LINK(-4).A
	T20(EAX).I =   #1.C
	*(T18(ECX) + 14){0:1}.A.I =   T20(EAX).I
; Line 383:	    return (ap); 

	T21(EAX).A =   _ap:LINK(-4).A
	RV.T2(EAX).A =   T21(EAX).A
; Line 384:	} 

	BLOCK END
	BLOCK 4

L_419:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_417:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@setSymbol$qpxc


global @occx86@setSymbol$qpxc
@occx86@setSymbol$qpxc:
; Line 385:	AMODE* setSymbol(const char* name) 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#C.UI
	BLOCK END
	BLOCK 2

L_424:
	VAR START	name
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_426:
; Line 389:	{ 

	VAR START	result
	VAR START	sym
; Line 390:	    AMODE* result; 
; Line 391:	    Optimizer::SimpleSymbol* sym = Optimizer::SymbolManager::Get(name); 

; Line 391:	    Optimizer::SimpleSymbol* sym = Optimizer::SymbolManager::Get(name); 

	T7(EAX).A =   _name:LINK(4).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@Optimizer@SymbolManager@Get$qpxc:PC.UI
	T8(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_sym:LINK(-8).A =   T8(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_428:
; Line 392:	    if (sym == 0) 

	T9(EAX).A =   _sym:LINK(-8).A
	CONDGO	L_427:PC ; T9(EAX).A != #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_429:
; Line 393:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_430:
; Line 394:	        Optimizer::LIST* l1; 

	VAR START	l1
; Line 395:	        sym = Allocate<Optimizer::SimpleSymbol>(); 

	T10(EAX).UI =   #1.C
	PARM	T10(EAX).UI
	TAG
	GOSUB	#@#Allocate$23@Optimizer@SimpleSymbol~$qi:PC.UI
	T11(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_sym:LINK(-8).A =   T11(EAX).A
; Line 396:	        sym->storage_class = Optimizer::scc_external; 

	T12(EAX).A =   _sym:LINK(-8).A
	*(T12(EAX) + 1C).A.I =   #6.I
; Line 397:	        sym->name = sym->outputName = litlate(name); 

	T13(EAX).A =   _name:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@litlate$qpxc:PC.UI
	T14(ECX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T15(EAX).A =   _sym:LINK(-8).A
	*(T15(EAX) + 4).A.A =   T14(ECX).A
	T16(ECX).A =   *(T15(EAX) + 4).A.A
	T17(EAX).A =   _sym:LINK(-8).A
	*(T17(EAX) + 0).A.A =   T16(ECX).A
; Line 398:	        sym->tp = Allocate<Optimizer::SimpleType>(); 

	T18(EAX).UI =   #1.C
	PARM	T18(EAX).UI
	TAG
	GOSUB	#@#Allocate$21@Optimizer@SimpleType~$qi:PC.UI
	T19(ECX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	T20(EAX).A =   _sym:LINK(-8).A
	*(T20(EAX) + 38).A.A =   T19(ECX).A
; Line 399:	        sym->tp->type = Optimizer::st_func; 

	T21(EAX).A =   _sym:LINK(-8).A
	T22(EAX).A =   *(T21(EAX) + 38).A.A
	*(T22(EAX) + 8).A.I =   #A.I
; Line 401:	        Optimizer::SymbolManager::Put(sym); 

	T23(EAX).A =   _sym:LINK(-8).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@Optimizer@SymbolManager@Put$qp23@Optimizer@SimpleSymbol:PC.UI
	PARMADJ	#4.N
; Line 402:	        Optimizer::externals.push_back(sym); 

	T24(EAX).A =   #_sym:LINK(-8).A
	PARM	T24(EAX).A
	PARM	#@Optimizer@externals:RAM.A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@push_back$qRpn0:PC.UI
	PARMADJ	#8.N
; Line 403:	    } 

	BLOCK END
	BLOCK 8

L_431:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_432:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_427:
	BLOCK END
	BLOCK 11

L_433:
	DBG BLOCK END
; Line 404:	    result = Allocate<AMODE>(); 

	T25(EAX).UI =   #1.C
	PARM	T25(EAX).UI
	TAG
	GOSUB	#@#Allocate$5amode~$qi:PC.UI
	T26(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	_result:LINK(-4).A =   T26(EAX).A
; Line 405:	    result->offset = Allocate<Optimizer::SimpleExpression>(); 

	T27(EAX).UI =   #1.C
	PARM	T27(EAX).UI
	TAG
	GOSUB	#@#Allocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T28(ECX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	T29(EAX).A =   _result:LINK(-4).A
	*(T29(EAX) + C).A.A =   T28(ECX).A
; Line 406:	    result->offset->type = Optimizer::se_global; 

	T30(EAX).A =   _result:LINK(-4).A
	T31(ECX).A =   *(T30(EAX) + C).A.A
	T32(EAX).I =   #C.C
	*(T31(ECX) + 0).A.I =   T32(EAX).I
; Line 407:	    result->offset->sp = sym; 

	T33(ECX).A =   _sym:LINK(-8).A
	T34(EAX).A =   _result:LINK(-4).A
	T35(EAX).A =   *(T34(EAX) + C).A.A
	*(T35(EAX) + 8).A.A =   T33(ECX).A
; Line 408:	    result->offset->type = Optimizer::se_pc; 

	T36(EAX).A =   _result:LINK(-4).A
	T37(EAX).A =   *(T36(EAX) + C).A.A
	*(T37(EAX) + 0).A.I =   #E.I
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_435:
; Line 409:	    if (Optimizer::chosenAssembler->arch->libsasimports) 

	T38(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T39(EAX).A =   *(T38(EAX) + 44).A.A
	T40(AL).C =   *(T39(EAX) + 81).A.C
	CONDGO	L_434:PC ; T40(AL).C == #0.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_436:
; Line 410:	        result->mode = am_direct; 

	T41(EAX).A =   _result:LINK(-4).A
	*(T41(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 15

L_438:
	DBG BLOCK END
	GOTO	L_437:PC
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_439:
	BLOCK END
	BLOCK 18

L_434:
; Line 411:	    else 

; Line 412:	        result->mode = am_immed; 

	T42(EAX).A =   _result:LINK(-4).A
	*(T42(EAX) + 0).A.I =   #10.I
	BLOCK END
	BLOCK 19

L_440:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_437:
	BLOCK END
	BLOCK 21

L_441:
	DBG BLOCK END
; Line 413:	    return result; 

	T43(EAX).A =   _result:LINK(-4).A
	RV.T6(EAX).A =   T43(EAX).A
; Line 414:	} 

	BLOCK END
	BLOCK 22

L_442:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_425:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@callLibrary$qpxci:
; Line 416:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_447:
	VAR START	name
	VAR START	size
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_449:
; Line 418:	    AMODE* an = setSymbol(name); 

	VAR START	an
	T3(EAX).A =   _name:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@occx86@setSymbol$qpxc:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_an:LINK(-4).A =   T4(EAX).A
; Line 419:	    gen_code(op_call, an, 0); 

	T5(EAX).A =   #0.C
	PARM	T5(EAX).A
	T6(EAX).A =   _an:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#30.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_451:
; Line 420:	    if (size) 

	T7(EAX).I =   _size:LINK(8).I
	CONDGO	L_450:PC ; T7(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_452:
; Line 421:	        gen_code(op_add, makedreg(ESP), aimmed(size)); 

	T8(EDX:EAX).ULL =   _size:LINK(8).I
	PARM	T8(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T9(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T10(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T10(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 7

L_453:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_450:
	BLOCK END
	BLOCK 9

L_454:
	DBG BLOCK END
; Line 422:	} 

	BLOCK END
	BLOCK 10

L_455:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_448:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@oa_gen_vtt$qip23@Optimizer@SimpleSymbol


global @occx86@oa_gen_vtt$qip23@Optimizer@SimpleSymbol
@occx86@oa_gen_vtt$qip23@Optimizer@SimpleSymbol:
; Line 424:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_460:
	VAR START	dataOffset
	VAR START	func
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_462:
; Line 425:	    Optimizer::SimpleExpression* n = Allocate<Optimizer::SimpleExpression>(); 

	VAR START	n
	T4(EAX).UI =   #1.C
	PARM	T4(EAX).UI
	TAG
	GOSUB	#@#Allocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_n:LINK(-4).A =   T5(EAX).A
; Line 426:	    n->type = Optimizer::se_pc; 

	T6(EAX).A =   _n:LINK(-4).A
	*(T6(EAX) + 0).A.I =   #E.I
; Line 427:	    n->sp = func; 

	T7(ECX).A =   _func:LINK(8).A
	T8(EAX).A =   _n:LINK(-4).A
	*(T8(EAX) + 8).A.A =   T7(ECX).A
	VAR START	ofs
; Line 428:	    AMODE* ofs = make_offset(n); 

	T9(EAX).A =   _n:LINK(-4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T10(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_ofs:LINK(-8).A =   T10(EAX).A
; Line 429:	    ofs->mode = am_immed; 

	T11(EAX).A =   _ofs:LINK(-8).A
	*(T11(EAX) + 0).A.I =   #10.I
; Line 430:	    gen_code(op_add, make_stack(-4), aimmedt(dataOffset, ISZ_ADDR)); 

	T12(EAX).UI =   #C.C
	PARM	T12(EAX).UI
	T13(EAX).L =   _dataOffset:LINK(4).I
	PARM	T13(EAX).L
	TAG
	GOSUB	#@occx86@aimmedt$qli:PC.UI
	T14(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T14(EAX).A
	PARM	#FFFFFFFFFFFFFFFC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T15(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T15(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 431:	    gen_code(op_jmp, ofs, NULL); 

	T16(EAX).A =   #0.C
	PARM	T16(EAX).A
	T17(EAX).A =   _ofs:LINK(-8).A
	PARM	T17(EAX).A
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 432:	    flush_peep(NULL, NULL); 

	T18(EAX).A =   #0.C
	PARM	T18(EAX).A
	T19(EAX).A =   #0.C
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@flush_peep$qp23@Optimizer@SimpleSymbolp15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 433:	} 

	BLOCK END
	BLOCK 4

L_463:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_461:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@oa_gen_vc1$qp23@Optimizer@SimpleSymbol


global @occx86@oa_gen_vc1$qp23@Optimizer@SimpleSymbol
@occx86@oa_gen_vc1$qp23@Optimizer@SimpleSymbol:
; Line 435:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_468:
	VAR START	func
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_470:
; Line 436:	    AMODE* ofs = makedreg(EAX); 

	VAR START	ofs
	T6(EAX).UI =   #0.C
	PARM	T6(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ofs:LINK(-4).A =   T7(EAX).A
; Line 437:	    ofs->offset = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T8(EDX:EAX).ULL =   #0.C
	PARM	T8(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T9(ECX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	T10(EAX).A =   _ofs:LINK(-4).A
	*(T10(EAX) + C).A.A =   T9(ECX).A
; Line 438:	    ofs->mode = am_indisp; 

	T11(ECX).A =   _ofs:LINK(-4).A
	T12(EAX).I =   #C.C
	*(T11(ECX) + 0).A.I =   T12(EAX).I
; Line 439:	    gen_code(op_mov, makedreg(EAX), makedreg(ECX)); 

	T13(EAX).UI =   #1.C
	PARM	T13(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T14(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T14(EAX).A
	T15(EAX).UI =   #0.C
	PARM	T15(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T16(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T16(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 440:	    gen_code(op_mov, makedreg(EAX), ofs); 

	T17(EAX).A =   _ofs:LINK(-4).A
	PARM	T17(EAX).A
	T18(EAX).UI =   #0.C
	PARM	T18(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T19(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T19(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 441:	    ofs->offset = Optimizer::simpleIntNode(Optimizer::se_i, func->offset); 

	T20(EAX).A =   _func:LINK(4).A
	T21(EDX:EAX).ULL =   *(T20(EAX) + 24).A.I
	PARM	T21(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T22(ECX).A =   RV.T5(EAX).A
	PARMADJ	#C.N
	T23(EAX).A =   _ofs:LINK(-4).A
	*(T23(EAX) + C).A.A =   T22(ECX).A
; Line 442:	    gen_code(op_jmp, ofs, NULL); 

	T24(EAX).A =   #0.C
	PARM	T24(EAX).A
	T25(EAX).A =   _ofs:LINK(-4).A
	PARM	T25(EAX).A
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 443:	    flush_peep(NULL, NULL); 

	T26(EAX).A =   #0.C
	PARM	T26(EAX).A
	T27(EAX).A =   #0.C
	PARM	T27(EAX).A
	TAG
	GOSUB	#@occx86@flush_peep$qp23@Optimizer@SimpleSymbolp15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 444:	} 

	BLOCK END
	BLOCK 4

L_471:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_469:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@oa_gen_importThunk$qp23@Optimizer@SimpleSymbol


global @occx86@oa_gen_importThunk$qp23@Optimizer@SimpleSymbol
@occx86@oa_gen_importThunk$qp23@Optimizer@SimpleSymbol:
; Line 446:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_476:
	VAR START	func
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_478:
; Line 447:	    AMODE* ofs = Allocate<AMODE>(); 

	VAR START	ofs
	T2(EAX).UI =   #1.C
	PARM	T2(EAX).UI
	TAG
	GOSUB	#@#Allocate$5amode~$qi:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ofs:LINK(-4).A =   T3(EAX).A
; Line 448:	    ofs->mode = am_direct; 

	T4(EAX).A =   _ofs:LINK(-4).A
	*(T4(EAX) + 0).A.I =   #F.I
; Line 449:	    ofs->offset = Allocate<Optimizer::SimpleExpression>(); 

	T5(EAX).UI =   #1.C
	PARM	T5(EAX).UI
	TAG
	GOSUB	#@#Allocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T6(ECX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T7(EAX).A =   _ofs:LINK(-4).A
	*(T7(EAX) + C).A.A =   T6(ECX).A
; Line 450:	    ofs->offset->type = Optimizer::se_pc; 

	T8(EAX).A =   _ofs:LINK(-4).A
	T9(EAX).A =   *(T8(EAX) + C).A.A
	*(T9(EAX) + 0).A.I =   #E.I
; Line 451:	    ofs->offset->sp = func;   

	T10(ECX).A =   _func:LINK(4).A
	T11(EAX).A =   _ofs:LINK(-4).A
	T12(EAX).A =   *(T11(EAX) + C).A.A
	*(T12(EAX) + 8).A.A =   T10(ECX).A
; Line 452:	    gen_code(op_jmp, ofs, NULL); 

	T13(EAX).A =   #0.C
	PARM	T13(EAX).A
	T14(EAX).A =   _ofs:LINK(-4).A
	PARM	T14(EAX).A
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 453:	    flush_peep(NULL, NULL); 

	T15(EAX).A =   #0.C
	PARM	T15(EAX).A
	T16(EAX).A =   #0.C
	PARM	T16(EAX).A
	TAG
	GOSUB	#@occx86@flush_peep$qp23@Optimizer@SimpleSymbolp15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 454:	} 

	BLOCK END
	BLOCK 4

L_479:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_477:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@make_complexconst$qp5amodepn0


global @occx86@make_complexconst$qp5amodepn0
@occx86@make_complexconst$qp5amodepn0:
; Line 457:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_484:
	VAR START	ap
	VAR START	api
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_486:
; Line 458:	    AMODE* apt; 

	VAR START	apt
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_488:
; Line 459:	    if (isintconst(ap->offset)) 

	T5(EAX).A =   _ap:LINK(4).A
	T6(EAX).A =   *(T5(EAX) + C).A.A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T7(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_487:PC ; T7(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_489:
; Line 460:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_490:
; Line 461:	        api->offset = Optimizer::simpleExpressionNode(Optimizer::se_f, 0, 0);   

	T8(EAX).A =   #0.C
	PARM	T8(EAX).A
	T9(EAX).A =   #0.C
	PARM	T9(EAX).A
	PARM	#6.I
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T10(ECX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	T11(EAX).A =   _api:LINK(8).A
	*(T11(EAX) + C).A.A =   T10(ECX).A
; Line 462:	        api->offset->sp->sizeFromType = ISZ_DOUBLE; 

	T12(EAX).A =   _api:LINK(8).A
	T13(EAX).A =   *(T12(EAX) + C).A.A
	T14(ECX).A =   *(T13(EAX) + 8).A.A
	T15(EAX).I =   #13.C
	*(T14(ECX) + 20).A.I =   T15(EAX).I
; Line 463:	    } 

	BLOCK END
	BLOCK 8

L_491:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_493:
	DBG BLOCK END
	GOTO	L_492:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_494:
	BLOCK END
	BLOCK 12

L_487:
; Line 464:	    else 

; Line 465:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_495:
; Line 466:	        switch (ap->offset->sizeFromType) 

	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_497:
	DBG BLOCK END
	T16(EAX).A =   _ap:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + C).A.A
	T18(EAX).I =   *(T17(EAX) + 34).A.I
	COSWITCH(T18(EAX).I,#9.UI,#9.UI,L_517:PC)
	SWBRANCH(#12.UI,L_499:PC)
	SWBRANCH(#13.UI,L_501:PC)
	SWBRANCH(#14.UI,L_503:PC)
	SWBRANCH(#15.UI,L_505:PC)
	SWBRANCH(#16.UI,L_507:PC)
	SWBRANCH(#17.UI,L_509:PC)
	SWBRANCH(#18.UI,L_511:PC)
	SWBRANCH(#19.UI,L_513:PC)
	SWBRANCH(#1A.UI,L_515:PC)
; Line 467:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_498:
	BLOCK END
	BLOCK 16

L_499:
	BLOCK END
	BLOCK 17

L_501:
	BLOCK END
	BLOCK 18

L_503:
	DBG BLOCK START
; Line 469:	            case ISZ_DOUBLE: 
; Line 470:	            case ISZ_LDOUBLE: 

; Line 470:	            case ISZ_LDOUBLE: 

	T19(EAX).A =   #0.C
	PARM	T19(EAX).A
	T20(EAX).A =   #0.C
	PARM	T20(EAX).A
	PARM	#6.I
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T21(ECX).A =   RV.T2(EAX).A
	PARMADJ	#C.N
	T22(EAX).A =   _api:LINK(8).A
	*(T22(EAX) + C).A.A =   T21(ECX).A
; Line 471:	                api->offset = Optimizer::simpleExpressionNode(Optimizer::se_f, 0, 0);   
; Line 472:	                api->offset->sizeFromType = ap->offset->sizeFromType; 

; Line 472:	                api->offset->sizeFromType = ap->offset->sizeFromType; 

	T23(EAX).A =   _ap:LINK(4).A
	T24(EAX).A =   *(T23(EAX) + C).A.A
	T25(ECX).I =   *(T24(EAX) + 34).A.I
	T26(EAX).A =   _api:LINK(8).A
	T27(EAX).A =   *(T26(EAX) + C).A.A
	*(T27(EAX) + 34).A.I =   T25(ECX).I
; Line 473:	                break; 

	GOTO	L_496:PC
	BLOCK END
	BLOCK 19
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_505:
	BLOCK END
	BLOCK 21

L_507:
	BLOCK END
	BLOCK 22

L_509:
	DBG BLOCK START
; Line 474:	            case ISZ_IFLOAT: 
; Line 475:	            case ISZ_IDOUBLE: 

; Line 475:	            case ISZ_IDOUBLE: 

	T28(EAX).A =   #0.C
	PARM	T28(EAX).A
	T29(EAX).A =   #0.C
	PARM	T29(EAX).A
	T30(EAX).UI =   #7.C
	PARM	T30(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T31(ECX).A =   RV.T3(EAX).A
	PARMADJ	#C.N
	T32(EAX).A =   _api:LINK(8).A
	*(T32(EAX) + C).A.A =   T31(ECX).A
; Line 476:	            case ISZ_ILDOUBLE: 
; Line 477:	                api->offset = Optimizer::simpleExpressionNode(Optimizer::se_fi, 0, 0);   

; Line 477:	                api->offset = Optimizer::simpleExpressionNode(Optimizer::se_fi, 0, 0);   

	T33(EAX).A =   _ap:LINK(4).A
	T34(EAX).A =   *(T33(EAX) + C).A.A
	T35(ECX).I =   *(T34(EAX) + 34).A.I
	T36(EAX).A =   _api:LINK(8).A
	T37(EAX).A =   *(T36(EAX) + C).A.A
	*(T37(EAX) + 34).A.I =   T35(ECX).I
; Line 478:	                api->offset->sizeFromType = ap->offset->sizeFromType; 
; Line 479:	                apt = api; 

; Line 479:	                apt = api; 

	T38(EAX).A =   _api:LINK(8).A
	_apt:LINK(-4).A =   T38(EAX).A
; Line 480:	                api = ap; 

	T39(EAX).A =   _ap:LINK(4).A
	_api:LINK(8).A =   T39(EAX).A
; Line 481:	                ap = apt; 

	T40(EAX).A =   _apt:LINK(-4).A
	_ap:LINK(4).A =   T40(EAX).A
; Line 482:	                break; 

	GOTO	L_496:PC
	BLOCK END
	BLOCK 23
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_511:
	BLOCK END
	BLOCK 25

L_513:
	BLOCK END
	BLOCK 26

L_515:
	DBG BLOCK START
; Line 483:	            case ISZ_CFLOAT: 
; Line 484:	            case ISZ_CDOUBLE: 

; Line 484:	            case ISZ_CDOUBLE: 

	T41(EAX).A =   #0.C
	PARM	T41(EAX).A
	T42(EAX).A =   #0.C
	PARM	T42(EAX).A
	T43(EAX).UI =   #7.C
	PARM	T43(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T44(ECX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	T45(EAX).A =   _api:LINK(8).A
	*(T45(EAX) + C).A.A =   T44(ECX).A
; Line 485:	            case ISZ_CLDOUBLE: 
; Line 486:	                api->offset = Optimizer::simpleExpressionNode(Optimizer::se_fi, 0, 0);   

; Line 486:	                api->offset = Optimizer::simpleExpressionNode(Optimizer::se_fi, 0, 0);   

	T46(EAX).A =   _ap:LINK(4).A
	T47(EAX).A =   *(T46(EAX) + C).A.A
	T48(EAX).A = T47(EAX).A + #8.A
	T49(EAX).A = T48(EAX).A + #10.A
	PARM	T49(EAX).A
	T50(EAX).A =   _api:LINK(8).A
	T51(EAX).A =   *(T50(EAX) + C).A.A
	T52(EAX).A = T51(EAX).A + #8.A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@FPF@$basn$qrx3FPF:PC.UI
	PARMADJ	#8.N
; Line 487:	                api->offset->f = ap->offset->c.i; 
; Line 488:	                api->offset->sizeFromType = ap->offset->sizeFromType; 

; Line 488:	                api->offset->sizeFromType = ap->offset->sizeFromType; 

	T53(EAX).A =   _ap:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + C).A.A
	T55(ECX).I =   *(T54(EAX) + 34).A.I
	T56(EAX).A =   _api:LINK(8).A
	T57(EAX).A =   *(T56(EAX) + C).A.A
	*(T57(EAX) + 34).A.I =   T55(ECX).I
; Line 489:	                ap->offset->type = Optimizer::se_f; 

	T58(EAX).A =   _ap:LINK(4).A
	T59(EAX).A =   *(T58(EAX) + C).A.A
	*(T59(EAX) + 0).A.I =   #6.I
; Line 490:	                ap->offset->f = ap->offset->c.r; 

	T60(EAX).A =   _ap:LINK(4).A
	T61(EAX).A =   *(T60(EAX) + C).A.A
	T62(EAX).A = T61(EAX).A + #8.A
	T63(EAX).A = T62(EAX).A + #0.A
	PARM	T63(EAX).A
	T64(EAX).A =   _ap:LINK(4).A
	T65(EAX).A =   *(T64(EAX) + C).A.A
	T66(EAX).A = T65(EAX).A + #8.A
	PARM	T66(EAX).A
	TAG
	GOSUB	#@FPF@$basn$qrx3FPF:PC.UI
	PARMADJ	#8.N
; Line 491:	                break; 

	GOTO	L_496:PC
	BLOCK END
	BLOCK 27
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_517:
	DBG BLOCK START
; Line 492:	            default: 
; Line 493:	                break; 

; Line 493:	                break; 

	BLOCK END
	BLOCK 29

L_518:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_496:
	BLOCK END
	BLOCK 31

L_519:
	DBG BLOCK END
; Line 495:	    } 

	BLOCK END
	BLOCK 32

L_520:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_521:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_492:
	BLOCK END
	BLOCK 35

L_522:
	DBG BLOCK END
; Line 496:	    make_floatconst(ap); 

	T67(EAX).A =   _ap:LINK(4).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@occx86@make_floatconst$qp5amode:PC.UI
	PARMADJ	#4.N
; Line 497:	    make_floatconst(api); 

	T68(EAX).A =   _api:LINK(8).A
	PARM	T68(EAX).A
	TAG
	GOSUB	#@occx86@make_floatconst$qp5amode:PC.UI
	PARMADJ	#4.N
; Line 498:	} 

	BLOCK END
	BLOCK 36

L_523:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_485:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@floatchs$qp5amodei


global @occx86@floatchs$qp5amodei
@occx86@floatchs$qp5amodei:
; Line 500:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_530:
	VAR START	ap
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_532:
; Line 501:	    AMODE* lbl; 

	VAR START	lbl
	VAR START	op
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_534:
; Line 502:	    e_opcode op; 
; Line 503:	    if (sz == ISZ_FLOAT || sz == ISZ_IFLOAT || sz == ISZ_CFLOAT) 

; Line 503:	    if (sz == ISZ_FLOAT || sz == ISZ_IFLOAT || sz == ISZ_CFLOAT) 

	T7(EAX).I =   _sz:LINK(8).I
	CONDGO	L_612:PC ; T7(EAX).I == #12.C
	BLOCK END
	BLOCK 5
	T8(EAX).I =   _sz:LINK(8).I
	CONDGO	L_612:PC ; T8(EAX).I == #15.C
	BLOCK END
	BLOCK 6
	T9(EAX).I =   _sz:LINK(8).I
	CONDGO	L_533:PC ; T9(EAX).I != #18.C
	BLOCK END
	BLOCK 7

L_612:
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_535:
; Line 504:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_536:
; Line 505:	        if (!singleLabel) 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_538:
	T14(EAX).A =   @occx86@singleLabel:RAM.A
	CONDGO	L_537:PC ; T14(EAX).A != #0.A
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_539:
; Line 506:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_540:
; Line 507:	            singleLabel = setSymbol("__fschsmask"); 

	PARM	#L_528:PC.A
	TAG
	GOSUB	#@occx86@setSymbol$qpxc:PC.UI
	T15(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	@occx86@singleLabel:RAM.A =   T15(EAX).A
; Line 508:	            singleLabel->mode = am_direct; 

	T16(EAX).A =   @occx86@singleLabel:RAM.A
	*(T16(EAX) + 0).A.I =   #F.I
; Line 509:	        } 

	BLOCK END
	BLOCK 14

L_541:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_542:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_537:
	BLOCK END
	BLOCK 17

L_543:
	DBG BLOCK END
; Line 510:	        lbl = singleLabel; 

	T17(EAX).A =   @occx86@singleLabel:RAM.A
	_lbl:LINK(-4).A =   T17(EAX).A
; Line 511:	        op = op_xorps; 

	_op:LINK(-8).I =   #260.I
; Line 512:	    } 

	BLOCK END
	BLOCK 18

L_544:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_546:
	DBG BLOCK END
	GOTO	L_545:PC
	BLOCK END
	BLOCK 20
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_547:
	BLOCK END
	BLOCK 22

L_533:
; Line 513:	    else 

; Line 514:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_548:
; Line 515:	        if (!doubleLabel) 

	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_550:
	T10(EAX).A =   @occx86@doubleLabel:RAM.A
	CONDGO	L_549:PC ; T10(EAX).A != #0.A
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_551:
; Line 516:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_552:
; Line 517:	            doubleLabel = setSymbol("__fdchsmask"); 

	PARM	#L_529:PC.A
	TAG
	GOSUB	#@occx86@setSymbol$qpxc:PC.UI
	T11(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	@occx86@doubleLabel:RAM.A =   T11(EAX).A
; Line 518:	            doubleLabel->mode = am_direct; 

	T12(EAX).A =   @occx86@doubleLabel:RAM.A
	*(T12(EAX) + 0).A.I =   #F.I
; Line 519:	        } 

	BLOCK END
	BLOCK 28

L_553:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_554:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_549:
	BLOCK END
	BLOCK 31

L_555:
	DBG BLOCK END
; Line 520:	        lbl = doubleLabel; 

	T13(EAX).A =   @occx86@doubleLabel:RAM.A
	_lbl:LINK(-4).A =   T13(EAX).A
; Line 521:	        op = op_xorpd; 

	_op:LINK(-8).I =   #25F.I
; Line 522:	    } 

	BLOCK END
	BLOCK 32

L_556:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_557:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_545:
	BLOCK END
	BLOCK 35

L_558:
	DBG BLOCK END
	VAR START	reg
; Line 523:	    int reg = -1; 

	_reg:LINK(-12).I =   #FFFFFFFFFFFFFFFF.I
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_560:
; Line 524:	    if (Optimizer::cparams.prm_lscrtdll) 

	T18(AL).BOOL =   @Optimizer@cparams:RAM+43.BOOL
	CONDGO	L_559:PC ; T18(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_561:
; Line 525:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_562:
; Line 526:	        bool pushed = false; 

	VAR START	pushed
	_pushed:LINK(-13).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_564:
; Line 527:	        if (!(ap->liveRegs & (1 << EAX))) 

	T19(EAX).A =   _ap:LINK(4).A
	T20(EAX).I =   *(T19(EAX) + 10).A.I
	T21(EAX).I = T20(EAX).I & #1.C
	CONDGO	L_563:PC ; T21(EAX).I != #0.C
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_565:
; Line 528:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_566:
; Line 529:	            reg = EAX; 

	T22(EAX).I =   #0.C
	_reg:LINK(-12).I =   T22(EAX).I
; Line 530:	        } 

	BLOCK END
	BLOCK 44

L_567:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_569:
	DBG BLOCK END
	GOTO	L_568:PC
	BLOCK END
	BLOCK 46
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_570:
	BLOCK END
	BLOCK 48

L_563:
; Line 531:	        else if (!(ap->liveRegs & (1 << ECX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_572:
	T23(EAX).A =   _ap:LINK(4).A
	T24(EAX).I =   *(T23(EAX) + 10).A.I
	T25(EAX).I = T24(EAX).I & #2.C
	CONDGO	L_571:PC ; T25(EAX).I != #0.C
	BLOCK END
	BLOCK 50
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_573:
; Line 532:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_574:
; Line 533:	            reg = ECX; 

	T26(EAX).I =   #1.C
	_reg:LINK(-12).I =   T26(EAX).I
; Line 534:	        } 

	BLOCK END
	BLOCK 53

L_575:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_577:
	DBG BLOCK END
	GOTO	L_576:PC
	BLOCK END
	BLOCK 55
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_578:
	BLOCK END
	BLOCK 57

L_571:
; Line 535:	        else if (!(ap->liveRegs & (1 << EDX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_580:
	T27(EAX).A =   _ap:LINK(4).A
	T28(EAX).I =   *(T27(EAX) + 10).A.I
	T29(EAX).I = T28(EAX).I & #4.I
	CONDGO	L_579:PC ; T29(EAX).I != #0.C
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_581:
; Line 536:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_582:
; Line 537:	            reg = EDX; 

	T30(EAX).I =   #2.C
	_reg:LINK(-12).I =   T30(EAX).I
; Line 538:	        } 

	BLOCK END
	BLOCK 62

L_583:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_585:
	DBG BLOCK END
	GOTO	L_584:PC
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_586:
	BLOCK END
	BLOCK 66

L_579:
; Line 539:	        else 

; Line 540:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_587:
; Line 541:	            gen_codes(op_push, ISZ_UINT, makedreg(EAX), NULL); 

	T31(EAX).A =   #0.C
	PARM	T31(EAX).A
	T32(EAX).UI =   #0.C
	PARM	T32(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T33(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T33(EAX).A
	T34(EAX).UI =   #7.C
	PARM	T34(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 542:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 543:	            pushed = true; 

	_pushed:LINK(-13).BOOL =   #1.BOOL
; Line 544:	            reg = EAX; 

	T35(EAX).I =   #0.C
	_reg:LINK(-12).I =   T35(EAX).I
; Line 545:	        } 

	BLOCK END
	BLOCK 68

L_588:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_589:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_584:
	BLOCK END
	BLOCK 71

L_590:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_591:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_576:
	BLOCK END
	BLOCK 74

L_592:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_593:
	DBG BLOCK END
	BLOCK END
	BLOCK 76

L_568:
	BLOCK END
	BLOCK 77

L_594:
	DBG BLOCK END
	VAR START	ap1
; Line 546:	        AMODE* ap1 = Allocate<AMODE>(); 

	T36(EAX).UI =   #1.C
	PARM	T36(EAX).UI
	TAG
	GOSUB	#@#Allocate$5amode~$qi:PC.UI
	T37(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-20).A =   T37(EAX).A
; Line 547:	        *ap1 = *lbl; 

	T38(EAX).A =   _lbl:LINK(-4).A
	PARM	T38(EAX).A
	T39(EAX).A =   _ap1:LINK(-20).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@amode@$basn$qrx5amode:PC.UI
	PARMADJ	#8.N
; Line 548:	        ap1->mode = am_direct; 

	T40(EAX).A =   _ap1:LINK(-20).A
	*(T40(EAX) + 0).A.I =   #F.I
; Line 549:	        lbl = makedreg(reg); 

	T41(EAX).I =   _reg:LINK(-12).I
	PARM	T41(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T42(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	_lbl:LINK(-4).A =   T42(EAX).A
; Line 550:	        gen_code(op_mov, lbl, ap1); 

	T43(EAX).A =   _ap1:LINK(-20).A
	PARM	T43(EAX).A
	T44(EAX).A =   _lbl:LINK(-4).A
	PARM	T44(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 551:	        lbl->mode = am_indisp; 

	T45(ECX).A =   _lbl:LINK(-4).A
	T46(EAX).I =   #C.C
	*(T45(ECX) + 0).A.I =   T46(EAX).I
; Line 552:	        lbl->offset = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T47(EDX:EAX).ULL =   #0.C
	PARM	T47(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T48(ECX).A =   RV.T5(EAX).A
	PARMADJ	#C.N
	T49(EAX).A =   _lbl:LINK(-4).A
	*(T49(EAX) + C).A.A =   T48(ECX).A
; Line 553:	        lbl->length = 0; 

	T50(EAX).A =   _lbl:LINK(-4).A
	*(T50(EAX) + 8).A.C =   #0.C
	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_596:
; Line 554:	        if (!pushed) 

	T51(AL).BOOL =   _pushed:LINK(-13).BOOL
	CONDGO	L_595:PC ; T51(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_597:
; Line 555:	            reg = -1; 

	_reg:LINK(-12).I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 81

L_598:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_595:
	BLOCK END
	BLOCK 83

L_599:
	DBG BLOCK END
; Line 556:	    } 

	BLOCK END
	BLOCK 84

L_600:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_601:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_559:
	BLOCK END
	BLOCK 87

L_602:
	DBG BLOCK END
; Line 557:	    gen_code(op, ap, lbl); 

	T52(EAX).A =   _lbl:LINK(-4).A
	PARM	T52(EAX).A
	T53(EAX).A =   _ap:LINK(4).A
	PARM	T53(EAX).A
	T54(EAX).I =   _op:LINK(-8).I
	PARM	T54(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_604:
; Line 558:	    if (reg != -1) 

	T55(EAX).I =   _reg:LINK(-12).I
	CONDGO	L_603:PC ; T55(EAX).I == #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_605:
; Line 559:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_606:
; Line 560:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 561:	        gen_codes(op_pop, ISZ_UINT, makedreg(reg), NULL); 

	T56(EAX).A =   #0.C
	PARM	T56(EAX).A
	T57(EAX).I =   _reg:LINK(-12).I
	PARM	T57(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T58(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T58(EAX).A
	T59(EAX).UI =   #7.C
	PARM	T59(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 562:	    } 

	BLOCK END
	BLOCK 92

L_607:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_608:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_603:
	BLOCK END
	BLOCK 95

L_609:
	DBG BLOCK END
; Line 563:	} 

	BLOCK END
	BLOCK 96

L_610:
	DBG BLOCK END
	BLOCK END
	BLOCK 97

L_531:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@zerocleanup$qv


global @occx86@zerocleanup$qv
@occx86@zerocleanup$qv:
; Line 566:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_616:
	VAR START	Unnamed++Identifier 83985
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_618:
; Line 567:	    if (fconstcleanup >= 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_620:
	T1(EAX).I =   @occx86@fconstcleanup:RAM.I
	CONDGO	L_619:PC ; T1(EAX).I S< #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_621:
; Line 568:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_622:
; Line 569:	        gen_codes(op_pop, ISZ_UINT, makedreg(fconstcleanup), NULL); 

	T2(EAX).A =   #0.C
	PARM	T2(EAX).A
	T3(EAX).I =   @occx86@fconstcleanup:RAM.I
	PARM	T3(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T4(EAX).A
	T5(EAX).UI =   #7.C
	PARM	T5(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 570:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 571:	    } 

	BLOCK END
	BLOCK 8

L_623:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_624:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_619:
	BLOCK END
	BLOCK 11

L_625:
	DBG BLOCK END
; Line 572:	    fconstcleanup = -1; 

	@occx86@fconstcleanup:RAM.I =   #FFFFFFFFFFFFFFFF.I
; Line 573:	} 

	BLOCK END
	BLOCK 12

L_626:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_617:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@floatzero$qp5amode


global @occx86@floatzero$qp5amode
@occx86@floatzero$qp5amode:
; Line 575:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_632:
	VAR START	ap
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_634:
; Line 576:	    if (!zerolabel) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_636:
	T6(EAX).A =   @occx86@zerolabel:RAM.A
	CONDGO	L_635:PC ; T6(EAX).A != #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_637:
; Line 577:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_638:
; Line 578:	        zerolabel = setSymbol("__fzero"); 

	PARM	#L_631:PC.A
	TAG
	GOSUB	#@occx86@setSymbol$qpxc:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	@occx86@zerolabel:RAM.A =   T7(EAX).A
; Line 579:	        zerolabel->mode = am_direct; 

	T8(EAX).A =   @occx86@zerolabel:RAM.A
	*(T8(EAX) + 0).A.I =   #F.I
; Line 580:	    } 

	BLOCK END
	BLOCK 8

L_639:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_640:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_635:
	BLOCK END
	BLOCK 11

L_641:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_643:
; Line 581:	    if (Optimizer::cparams.prm_lscrtdll) 

	T9(AL).BOOL =   @Optimizer@cparams:RAM+43.BOOL
	CONDGO	L_642:PC ; T9(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_644:
; Line 582:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_645:
; Line 583:	        int reg; 

	VAR START	reg
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_647:
; Line 584:	        if (!(ap->liveRegs & (1 << EAX))) 

	T10(EAX).A =   _ap:LINK(4).A
	T11(EAX).I =   *(T10(EAX) + 10).A.I
	T12(EAX).I = T11(EAX).I & #1.C
	CONDGO	L_646:PC ; T12(EAX).I != #0.C
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_648:
; Line 585:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_649:
; Line 586:	            reg = EAX; 

	T13(EAX).I =   #0.C
	_reg:LINK(-4).I =   T13(EAX).I
; Line 587:	        } 

	BLOCK END
	BLOCK 20

L_650:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_652:
	DBG BLOCK END
	GOTO	L_651:PC
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_653:
	BLOCK END
	BLOCK 24

L_646:
; Line 588:	        else if (!(ap->liveRegs & (1 << ECX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_655:
	T14(EAX).A =   _ap:LINK(4).A
	T15(EAX).I =   *(T14(EAX) + 10).A.I
	T16(EAX).I = T15(EAX).I & #2.C
	CONDGO	L_654:PC ; T16(EAX).I != #0.C
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_656:
; Line 589:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_657:
; Line 590:	            reg = ECX; 

	T17(EAX).I =   #1.C
	_reg:LINK(-4).I =   T17(EAX).I
; Line 591:	        } 

	BLOCK END
	BLOCK 29

L_658:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_660:
	DBG BLOCK END
	GOTO	L_659:PC
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_661:
	BLOCK END
	BLOCK 33

L_654:
; Line 592:	        else if (!(ap->liveRegs & (1 << EDX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_663:
	T18(EAX).A =   _ap:LINK(4).A
	T19(EAX).I =   *(T18(EAX) + 10).A.I
	T20(EAX).I = T19(EAX).I & #4.I
	CONDGO	L_662:PC ; T20(EAX).I != #0.C
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_664:
; Line 593:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_665:
; Line 594:	            reg = EDX; 

	T21(EAX).I =   #2.C
	_reg:LINK(-4).I =   T21(EAX).I
; Line 595:	        } 

	BLOCK END
	BLOCK 38

L_666:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_668:
	DBG BLOCK END
	GOTO	L_667:PC
	BLOCK END
	BLOCK 40
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_669:
	BLOCK END
	BLOCK 42

L_662:
; Line 596:	        else 

; Line 597:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_670:
; Line 598:	            gen_codes(op_push, ISZ_UINT, makedreg(EAX), NULL); 

	T22(EAX).A =   #0.C
	PARM	T22(EAX).A
	T23(EAX).UI =   #0.C
	PARM	T23(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T24(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T24(EAX).A
	T25(EAX).UI =   #7.C
	PARM	T25(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 599:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 600:	            reg = EAX; 

	T26(EAX).I =   #0.C
	_reg:LINK(-4).I =   T26(EAX).I
; Line 601:	        } 

	BLOCK END
	BLOCK 44

L_671:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_672:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_667:
	BLOCK END
	BLOCK 47

L_673:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_674:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_659:
	BLOCK END
	BLOCK 50

L_675:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_676:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_651:
	BLOCK END
	BLOCK 53

L_677:
	DBG BLOCK END
	VAR START	ap1
; Line 602:	        AMODE* ap1 = Allocate<AMODE>(); 

	T27(EAX).UI =   #1.C
	PARM	T27(EAX).UI
	TAG
	GOSUB	#@#Allocate$5amode~$qi:PC.UI
	T28(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-8).A =   T28(EAX).A
; Line 603:	        *ap1 = *zerolabel; 

	T29(EAX).A =   @occx86@zerolabel:RAM.A
	PARM	T29(EAX).A
	T30(EAX).A =   _ap1:LINK(-8).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@amode@$basn$qrx5amode:PC.UI
	PARMADJ	#8.N
; Line 604:	        ap1->mode = am_direct; 

	T31(EAX).A =   _ap1:LINK(-8).A
	*(T31(EAX) + 0).A.I =   #F.I
; Line 605:	        zerolabel = makedreg(reg); 

	T32(EAX).I =   _reg:LINK(-4).I
	PARM	T32(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T33(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	@occx86@zerolabel:RAM.A =   T33(EAX).A
; Line 606:	        gen_code(op_mov, zerolabel, ap1); 

	T34(EAX).A =   _ap1:LINK(-8).A
	PARM	T34(EAX).A
	T35(EAX).A =   @occx86@zerolabel:RAM.A
	PARM	T35(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 607:	        zerolabel->mode = am_indisp; 

	T36(ECX).A =   @occx86@zerolabel:RAM.A
	T37(EAX).I =   #C.C
	*(T36(ECX) + 0).A.I =   T37(EAX).I
; Line 608:	        zerolabel->offset = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T38(EDX:EAX).ULL =   #0.C
	PARM	T38(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T39(ECX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	T40(EAX).A =   @occx86@zerolabel:RAM.A
	*(T40(EAX) + C).A.A =   T39(ECX).A
; Line 609:	    } 

	BLOCK END
	BLOCK 54

L_678:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_679:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_642:
	BLOCK END
	BLOCK 57

L_680:
	DBG BLOCK END
; Line 610:	    return zerolabel; 

	T41(EAX).A =   @occx86@zerolabel:RAM.A
	RV.T5(EAX).A =   T41(EAX).A
; Line 611:	} 

	BLOCK END
	BLOCK 58

L_681:
	DBG BLOCK END
	BLOCK END
	BLOCK 59

L_633:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@beRegFromTempInd$qp15@Optimizer@quadp18@Optimizer@_imode_i


global @occx86@beRegFromTempInd$qp15@Optimizer@quadp18@Optimizer@_imode_i
@occx86@beRegFromTempInd$qp15@Optimizer@quadp18@Optimizer@_imode_i:
; Line 613:	bool sameTemp(Optimizer::QUAD* head); 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_686:
	VAR START	q
	VAR START	im
	VAR START	which
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_688:
; Line 615:	{ 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_690:
; Line 616:	    if (which) 

	T4(EAX).I =   _which:LINK(12).I
	CONDGO	L_689:PC ; T4(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_691:
; Line 617:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_692:
; Line 618:	        return (q->scaleColor < 0) ? 0 : q->scaleColor; 

	T5(EAX).A =   _q:LINK(4).A
	T6(EAX).I =   *(T5(EAX) + 9C).A.I
	CONDGO	L_720:PC ; T6(EAX).I S>= #0.C
	BLOCK END
	BLOCK 8
	T7(EAX).I =   #0.C
	GOTO	L_721:PC
	BLOCK END
	BLOCK 9

L_720:
	T8(EAX).A =   _q:LINK(4).A
	T9(EAX).I =   *(T8(EAX) + 9C).A.I
	T7(EAX).I =   T9(EAX).I
	BLOCK END
	BLOCK 10

L_721:
	RV.T0(EAX).I =   T7(EAX).I
	GOTO	L_687:PC
; Line 619:	    } 

	BLOCK END
	BLOCK 11

L_693:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_694:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_689:
	BLOCK END
	BLOCK 14

L_695:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_697:
; Line 620:	    if (im == q->ans) 

	T10(EAX).A =   _q:LINK(4).A
	T11(ECX).A =   *(T10(EAX) + 40).A.A
	T12(EAX).A =   _im:LINK(8).A
	CONDGO	L_696:PC ; T12(EAX).A != T11(ECX).A
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_698:
; Line 621:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_699:
; Line 622:	        return (q->ansColor < 0) ? 0 : q->ansColor; 

	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).I =   *(T13(EAX) + 90).A.I
	CONDGO	L_722:PC ; T14(EAX).I S>= #0.C
	BLOCK END
	BLOCK 19
	T15(EAX).I =   #0.C
	GOTO	L_723:PC
	BLOCK END
	BLOCK 20

L_722:
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).I =   *(T16(EAX) + 90).A.I
	T15(EAX).I =   T17(EAX).I
	BLOCK END
	BLOCK 21

L_723:
	RV.T1(EAX).I =   T15(EAX).I
	GOTO	L_687:PC
; Line 623:	    } 

	BLOCK END
	BLOCK 22

L_700:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_702:
	DBG BLOCK END
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_703:
	BLOCK END
	BLOCK 26

L_696:
; Line 624:	    else if (im == q->dc.left) 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_705:
	T18(EAX).A =   _q:LINK(4).A
	T19(ECX).A =   *(T18(EAX) + 4+0).A.A
	T20(EAX).A =   _im:LINK(8).A
	CONDGO	L_704:PC ; T20(EAX).A != T19(ECX).A
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_706:
; Line 625:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_707:
; Line 626:	        return (q->leftColor < 0) ? 0 : q->leftColor; 

	T21(EAX).A =   _q:LINK(4).A
	T22(EAX).I =   *(T21(EAX) + 94).A.I
	CONDGO	L_724:PC ; T22(EAX).I S>= #0.C
	BLOCK END
	BLOCK 31
	T23(EAX).I =   #0.C
	GOTO	L_725:PC
	BLOCK END
	BLOCK 32

L_724:
	T24(EAX).A =   _q:LINK(4).A
	T25(EAX).I =   *(T24(EAX) + 94).A.I
	T23(EAX).I =   T25(EAX).I
	BLOCK END
	BLOCK 33

L_725:
	RV.T2(EAX).I =   T23(EAX).I
	GOTO	L_687:PC
; Line 627:	    } 

	BLOCK END
	BLOCK 34

L_708:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_710:
	DBG BLOCK END
	BLOCK END
	BLOCK 36
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_711:
	BLOCK END
	BLOCK 38

L_704:
; Line 628:	    else 

; Line 629:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_712:
; Line 630:	        return (q->rightColor < 0) ? 0 : q->rightColor; 

	T26(EAX).A =   _q:LINK(4).A
	T27(EAX).I =   *(T26(EAX) + 98).A.I
	CONDGO	L_726:PC ; T27(EAX).I S>= #0.C
	BLOCK END
	BLOCK 40
	T28(EAX).I =   #0.C
	GOTO	L_727:PC
	BLOCK END
	BLOCK 41

L_726:
	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).I =   *(T29(EAX) + 98).A.I
	T28(EAX).I =   T30(EAX).I
	BLOCK END
	BLOCK 42

L_727:
	RV.T3(EAX).I =   T28(EAX).I
; Line 631:	    } 

	BLOCK END
	BLOCK 43

L_713:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_714:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_709:
	BLOCK END
	BLOCK 46

L_715:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_716:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_701:
	BLOCK END
	BLOCK 49

L_717:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_718:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_687:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_


global @occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_
@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:
; Line 633:	int beRegFromTemp(Optimizer::QUAD* q, Optimizer::IMODE* im) { return beRegFromTempInd(q, im, 0); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_731:
	VAR START	q
	VAR START	im
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_733:
	T2(EAX).UI =   #0.C
	PARM	T2(EAX).UI
	T3(EAX).A =   _im:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   _q:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTempInd$qp15@Optimizer@quadp18@Optimizer@_imode_i:PC.UI
	T5(EAX).I =   RV.T0(EAX).I
	PARMADJ	#C.N
	RV.T1(EAX).I =   T5(EAX).I
	BLOCK END
	BLOCK 4

L_734:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_732:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@sameTemp$qp15@Optimizer@quad


global @occx86@sameTemp$qp15@Optimizer@quad
@occx86@sameTemp$qp15@Optimizer@quad:
; Line 635:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_739:
	VAR START	head
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_741:
; Line 636:	    if ((head->temps & (TEMP_LEFT | TEMP_RIGHT)) == (TEMP_LEFT | TEMP_RIGHT)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_743:
	T2(EAX).A =   _head:LINK(4).A
	T3(EAX).I =   *(T2(EAX) + BF).A.C
	T4(EAX).I = T3(EAX).I & #6.I
	CONDGO	L_742:PC ; T4(EAX).I != #6.I
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_744:
; Line 637:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_745:
; Line 638:	        if (head->dc.left->mode == Optimizer::i_direct && head->dc.right->mode == Optimizer::i_direct) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_747:
	T5(EAX).A =   _head:LINK(4).A
	T6(EAX).A =   *(T5(EAX) + 4+0).A.A
	T7(EAX).I =   *(T6(EAX) + 0).A.I
	CONDGO	L_746:PC ; T7(EAX).I != #2.C
	BLOCK END
	BLOCK 9
	T8(EAX).A =   _head:LINK(4).A
	T9(EAX).A =   *(T8(EAX) + 8+0).A.A
	T10(EAX).I =   *(T9(EAX) + 0).A.I
	CONDGO	L_746:PC ; T10(EAX).I != #2.C
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_748:
; Line 639:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_749:
; Line 640:	            if (head->dc.left->offset->sp->i == head->dc.right->offset->sp->i) 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_751:
	T11(EAX).A =   _head:LINK(4).A
	T12(EAX).A =   *(T11(EAX) + 8+0).A.A
	T13(EAX).A =   *(T12(EAX) + 4).A.A
	T14(EAX).A =   *(T13(EAX) + 8).A.A
	T15(ECX).I =   *(T14(EAX) + 18).A.I
	T16(EAX).A =   _head:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 4+0).A.A
	T18(EAX).A =   *(T17(EAX) + 4).A.A
	T19(EAX).A =   *(T18(EAX) + 8).A.A
	T20(EAX).I =   *(T19(EAX) + 18).A.I
	CONDGO	L_750:PC ; T20(EAX).I != T15(ECX).I
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_752:
; Line 641:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_753:
; Line 642:	                return true; 

	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_740:PC
; Line 643:	            } 

	BLOCK END
	BLOCK 17

L_754:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_755:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_750:
	BLOCK END
	BLOCK 20

L_756:
	DBG BLOCK END
; Line 644:	        } 

	BLOCK END
	BLOCK 21

L_757:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_758:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_746:
	BLOCK END
	BLOCK 24

L_759:
	DBG BLOCK END
; Line 645:	    } 

	BLOCK END
	BLOCK 25

L_760:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_761:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_742:
	BLOCK END
	BLOCK 28

L_762:
	DBG BLOCK END
; Line 646:	    return false; 

	RV.T1(AL).BOOL =   #0.BOOL
; Line 647:	} 

	BLOCK END
	BLOCK 29

L_763:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_740:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@imaginary_offset$qi


global @occx86@imaginary_offset$qi
@occx86@imaginary_offset$qi:
; Line 649:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_768:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_770:
; Line 650:	    int size; 

	VAR START	size
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_772:
	DBG BLOCK END
; Line 651:	    switch (sz) 

	T1(EAX).I =   _sz:LINK(4).I
	COSWITCH(T1(EAX).I,#3.UI,#3.UI,L_780:PC)
	SWBRANCH(#18.UI,L_774:PC)
	SWBRANCH(#19.UI,L_776:PC)
	SWBRANCH(#1A.UI,L_778:PC)
; Line 652:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_773:
	BLOCK END
	BLOCK 6

L_774:
	DBG BLOCK START
; Line 654:	            size = 4; 

	_size:LINK(-4).I =   #4.I
; Line 655:	            break; 

	GOTO	L_771:PC
	BLOCK END
	BLOCK 7
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_776:
	BLOCK END
	BLOCK 9

L_778:
	DBG BLOCK START
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_780:
	DBG BLOCK START
; Line 656:	        case ISZ_CDOUBLE: 
; Line 657:	        case ISZ_CLDOUBLE: 

; Line 657:	        case ISZ_CLDOUBLE: 

	_size:LINK(-4).I =   #8.I
; Line 658:	        default: 
; Line 659:	            size = 8; 

; Line 659:	            size = 8; 

	BLOCK END
	BLOCK 11

L_781:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_771:
	BLOCK END
	BLOCK 13

L_782:
	DBG BLOCK END
; Line 661:	    } 
; Line 662:	    return size; 

; Line 662:	    return size; 

	T2(EAX).I =   _size:LINK(-4).I
	RV.T0(EAX).I =   T2(EAX).I
; Line 663:	} 

	BLOCK END
	BLOCK 14

L_783:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_769:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@samereg$qp5amodepn0


global @occx86@samereg$qp5amodepn0
@occx86@samereg$qp5amodepn0:
; Line 666:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_788:
	VAR START	ap1
	VAR START	ap2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_790:
; Line 667:	    switch (ap1->mode) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_792:
	DBG BLOCK END
	T5(EAX).A =   _ap1:LINK(4).A
	T6(EAX).I =   *(T5(EAX) + 0).A.I
	COSWITCH(T6(EAX).I,#3.UI,#C.UI,L_829:PC)
	SWBRANCH(#2.UI,L_796:PC)
	SWBRANCH(#C.UI,L_794:PC)
	SWBRANCH(#D.UI,L_810:PC)
; Line 668:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_793:
	BLOCK END
	BLOCK 6

L_794:
	BLOCK END
	BLOCK 7

L_796:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_799:
	DBG BLOCK END
; Line 670:	        case am_dreg: 
; Line 671:	            switch (ap2->mode) 

; Line 671:	            switch (ap2->mode) 

	T7(EAX).A =   _ap2:LINK(8).A
	T8(EAX).I =   *(T7(EAX) + 0).A.I
	COSWITCH(T8(EAX).I,#3.UI,#C.UI,L_807:PC)
	SWBRANCH(#2.UI,L_803:PC)
	SWBRANCH(#C.UI,L_801:PC)
	SWBRANCH(#D.UI,L_805:PC)
; Line 672:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_800:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_801:
	BLOCK END
	BLOCK 11

L_803:
	DBG BLOCK START
; Line 674:	                case am_dreg: 
; Line 675:	                    return ap1->preg == ap2->preg; 

; Line 675:	                    return ap1->preg == ap2->preg; 

	T9(EAX).A =   _ap1:LINK(4).A
	T10(ECX).I =   *(T9(EAX) + 4).A.C
	T11(EAX).A =   _ap2:LINK(8).A
	T12(EAX).I =   *(T11(EAX) + 4).A.C
	T14(EAX).UI = T10(ECX).I == T12(EAX).I
	RV.T0(EAX).I =   T14(EAX).I
	GOTO	L_789:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_805:
	DBG BLOCK START
; Line 676:	                case am_indispscale: 
; Line 677:	                    return ap1->preg == ap2->preg || ap1->preg == ap2->sreg; 

; Line 677:	                    return ap1->preg == ap2->preg || ap1->preg == ap2->sreg; 

	T15(EAX).A =   _ap2:LINK(8).A
	T16(ECX).I =   *(T15(EAX) + 4).A.C
	T17(EAX).A =   _ap1:LINK(4).A
	T18(EAX).I =   *(T17(EAX) + 4).A.C
	CONDGO	L_834:PC ; T18(EAX).I == T16(ECX).I
	BLOCK END
	BLOCK 13
	T19(EAX).A =   _ap2:LINK(8).A
	T20(ECX).I =   *(T19(EAX) + 5).A.C
	T21(EAX).A =   _ap1:LINK(4).A
	T22(EAX).I =   *(T21(EAX) + 4).A.C
	CONDGO	L_834:PC ; T22(EAX).I == T20(ECX).I
	BLOCK END
	BLOCK 14
	T24(EAX).UI =   #0.UI
	GOTO	L_835:PC
	BLOCK END
	BLOCK 15

L_834:
	T24(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 16

L_835:
	RV.T1(EAX).I =   T24(EAX).I
	GOTO	L_789:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_807:
	DBG BLOCK START
; Line 678:	                default: 
; Line 679:	                    break; 

; Line 679:	                    break; 

	BLOCK END
	BLOCK 18

L_808:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_798:
	BLOCK END
	BLOCK 20

L_809:
	DBG BLOCK END
; Line 681:	            break; 

	GOTO	L_791:PC
	BLOCK END
	BLOCK 21

L_810:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_813:
	DBG BLOCK END
; Line 682:	        case am_indispscale: 
; Line 683:	            switch (ap2->mode) 

; Line 683:	            switch (ap2->mode) 

	T25(EAX).A =   _ap2:LINK(8).A
	T26(EAX).I =   *(T25(EAX) + 0).A.I
	COSWITCH(T26(EAX).I,#3.UI,#C.UI,L_826:PC)
	SWBRANCH(#2.UI,L_824:PC)
	SWBRANCH(#C.UI,L_822:PC)
	SWBRANCH(#D.UI,L_815:PC)
; Line 684:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_814:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_815:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_818:
; Line 686:	                    if (ap2->preg == ap1->preg || ap2->preg == ap1->sreg) 

	T27(EAX).A =   _ap1:LINK(4).A
	T28(ECX).I =   *(T27(EAX) + 4).A.C
	T29(EAX).A =   _ap2:LINK(8).A
	T30(EAX).I =   *(T29(EAX) + 4).A.C
	CONDGO	L_836:PC ; T30(EAX).I == T28(ECX).I
	BLOCK END
	BLOCK 26
	T31(EAX).A =   _ap1:LINK(4).A
	T32(ECX).I =   *(T31(EAX) + 5).A.C
	T33(EAX).A =   _ap2:LINK(8).A
	T34(EAX).I =   *(T33(EAX) + 4).A.C
	CONDGO	L_817:PC ; T34(EAX).I != T32(ECX).I
	BLOCK END
	BLOCK 27

L_836:
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_819:
; Line 687:	                        return true; 

	T35(EAX).I =   #1.BOOL
	RV.T2(EAX).I =   T35(EAX).I
	GOTO	L_789:PC
	BLOCK END
	BLOCK 29

L_820:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_817:
	BLOCK END
	BLOCK 31

L_821:
	DBG BLOCK END
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_822:
	BLOCK END
	BLOCK 33

L_824:
	DBG BLOCK START
; Line 689:	                case am_indisp: 
; Line 692:	                default: 
; Line 693:	                    break; 

	T36(EAX).A =   _ap2:LINK(8).A
	T37(ECX).I =   *(T36(EAX) + 4).A.C
	T38(EAX).A =   _ap1:LINK(4).A
	T39(EAX).I =   *(T38(EAX) + 4).A.C
	CONDGO	L_837:PC ; T39(EAX).I == T37(ECX).I
	BLOCK END
	BLOCK 34
	T40(EAX).A =   _ap2:LINK(8).A
	T41(ECX).I =   *(T40(EAX) + 5).A.C
	T42(EAX).A =   _ap1:LINK(4).A
	T43(EAX).I =   *(T42(EAX) + 4).A.C
	CONDGO	L_837:PC ; T43(EAX).I == T41(ECX).I
	BLOCK END
	BLOCK 35
	T45(EAX).UI =   #0.UI
	GOTO	L_838:PC
	BLOCK END
	BLOCK 36

L_837:
	T45(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 37

L_838:
	RV.T3(EAX).I =   T45(EAX).I
	GOTO	L_789:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_826:
	DBG BLOCK START
; Line 691:	                    return ap1->preg == ap2->preg || ap1->preg == ap2->sreg; 

	BLOCK END
	BLOCK 39

L_827:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_812:
	BLOCK END
	BLOCK 41

L_828:
	DBG BLOCK END
; Line 695:	            break; 

	GOTO	L_791:PC
	BLOCK END
	BLOCK 42

L_829:
	DBG BLOCK START
; Line 696:	        default: 
; Line 697:	            break; 

; Line 697:	            break; 

	BLOCK END
	BLOCK 43

L_830:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_791:
	BLOCK END
	BLOCK 45

L_831:
	DBG BLOCK END
; Line 699:	    return false; 

	T46(EAX).I =   #0.BOOL
	RV.T4(EAX).I =   T46(EAX).I
; Line 700:	} 

	BLOCK END
	BLOCK 46

L_832:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_789:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3


global @occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3
@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:
; Line 702:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#4C.UI
	BLOCK END
	BLOCK 2

L_845:
	VAR START	q
	VAR START	op
	VAR START	im
	VAR START	apl
	VAR START	aph
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_847:
; Line 703:	    *op = op_mov; 

	T54(EAX).A =   _op:LINK(8).A
	*(T54(EAX)).A.I =   #11D.I
; Line 704:	    *aph = 0; 

	T55(EAX).A =   _aph:LINK(20).A
	*(T55(EAX)).A.A =   #0.A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_849:
; Line 705:	    if (im->offset && im->offset->type == Optimizer::se_threadlocal) 

	T56(EAX).A =   _im:LINK(12).A
	T57(EAX).A =   *(T56(EAX) + 4).A.A
	CONDGO	L_848:PC ; T57(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	T58(EAX).A =   _im:LINK(12).A
	T59(EAX).A =   *(T58(EAX) + 4).A.A
	T60(EAX).I =   *(T59(EAX) + 0).A.I
	CONDGO	L_848:PC ; T60(EAX).I != #D.I
	BLOCK END
	BLOCK 6
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_850:
; Line 706:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_851:
; Line 707:	        AMODE* temp = setSymbol("__TLSINITSTART"); 

	VAR START	temp
	PARM	#L_842:PC.A
	TAG
	GOSUB	#@occx86@setSymbol$qpxc:PC.UI
	T61(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_temp:LINK(-76).A =   T61(EAX).A
; Line 708:	        temp->mode = am_immed; 

	T62(EAX).A =   _temp:LINK(-76).A
	*(T62(EAX) + 0).A.I =   #10.I
; Line 709:	        temp->offset = Optimizer::simpleExpressionNode(Optimizer::se_sub, im->offset, temp->offset); 

	T63(EAX).A =   _temp:LINK(-76).A
	T64(EAX).A =   *(T63(EAX) + C).A.A
	PARM	T64(EAX).A
	T65(EAX).A =   _im:LINK(12).A
	T66(EAX).A =   *(T65(EAX) + 4).A.A
	PARM	T66(EAX).A
	T67(EAX).UI =   #2.C
	PARM	T67(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T68(ECX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	T69(EAX).A =   _temp:LINK(-76).A
	*(T69(EAX) + C).A.A =   T68(ECX).A
; Line 710:	        gen_codes(op_push, ISZ_UINT, temp, 0); 

	T70(EAX).A =   #0.C
	PARM	T70(EAX).A
	T71(EAX).A =   _temp:LINK(-76).A
	PARM	T71(EAX).A
	T72(EAX).UI =   #7.C
	PARM	T72(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 711:	        callLibrary("___tlsaddr", 0); 

	T73(EAX).UI =   #0.C
	PARM	T73(EAX).UI
	PARM	#L_843:PC.A
	TAG
	GOSUB	#@occx86@callLibrary$qpxci:PC.UI
	PARMADJ	#8.N
; Line 712:	        *apl = beLocalAllocate<AMODE>(); 

	T74(EAX).UI =   #1.C
	PARM	T74(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T75(ECX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T76(EAX).A =   _apl:LINK(16).A
	*(T76(EAX)).A.A =   T75(ECX).A
; Line 713:	        (*apl)->preg = Optimizer::chosenAssembler->arch->regMap[beRegFromTemp(q, q->ans)][0]; 

	T77(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T78(EAX).A =   *(T77(EAX) + 44).A.A
	T79(EBX).A =   *(T78(EAX) + 58).A.A
	T80(EAX).A =   _q:LINK(4).A
	T81(EAX).A =   *(T80(EAX) + 40).A.A
	PARM	T81(EAX).A
	T82(EAX).A =   _q:LINK(4).A
	PARM	T82(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T83(EAX).I =   RV.T3(EAX).I
	PARMADJ	#8.N
	T84(CL).C =   *(T79(EBX) + T83(EAX) * 8).A.I
	T85(EAX).A =   _apl:LINK(16).A
	T86(EAX).A =   *(T85(EAX)).A.A
	*(T86(EAX) + 4).A.C =   T84(CL).C
; Line 714:	        (*apl)->mode = am_dreg; 

	T87(EAX).A =   _apl:LINK(16).A
	T88(ECX).A =   *(T87(EAX)).A.A
	T89(EAX).I =   #2.C
	*(T88(ECX) + 0).A.I =   T89(EAX).I
; Line 715:	        gen_codes(op_pop, ISZ_ADDR, (*apl), 0); 

	T90(EAX).A =   #0.C
	PARM	T90(EAX).A
	T91(EAX).A =   _apl:LINK(16).A
	T92(EAX).A =   *(T91(EAX)).A.A
	PARM	T92(EAX).A
	T93(EAX).UI =   #C.C
	PARM	T93(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 716:	    } 

	BLOCK END
	BLOCK 9

L_852:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_854:
	DBG BLOCK END
	GOTO	L_853:PC
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_855:
	BLOCK END
	BLOCK 13

L_848:
; Line 717:	    else if (im->mode == Optimizer::i_ind) 

	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_857:
	T94(EAX).A =   _im:LINK(12).A
	T95(EAX).I =   *(T94(EAX) + 0).A.I
	CONDGO	L_856:PC ; T95(EAX).I != #3.C
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_858:
; Line 718:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_859:
; Line 719:	        enum e_am mode; 

	VAR START	mode
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_861:
; Line 720:	        if ((im->offset && im->offset2) || (im->offset2 && im->scale)) 

	T96(EAX).A =   _im:LINK(12).A
	T97(EAX).A =   *(T96(EAX) + 4).A.A
	CONDGO	L_1248:PC ; T97(EAX).A == #0.A
	BLOCK END
	BLOCK 19
	T98(EAX).A =   _im:LINK(12).A
	T99(EAX).A =   *(T98(EAX) + 8).A.A
	CONDGO	L_1247:PC ; T99(EAX).A != #0.A
	BLOCK END
	BLOCK 20

L_1248:
	T100(EAX).A =   _im:LINK(12).A
	T101(EAX).A =   *(T100(EAX) + 8).A.A
	CONDGO	L_860:PC ; T101(EAX).A == #0.A
	BLOCK END
	BLOCK 21
	T102(EAX).A =   _im:LINK(12).A
	T103(EAX).I =   *(T102(EAX) + 14).A.I
	CONDGO	L_860:PC ; T103(EAX).I == #0.C
	BLOCK END
	BLOCK 22

L_1247:
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_862:
; Line 721:	            mode = am_indispscale; 

	_mode:LINK(-52).I =   #D.I
	BLOCK END
	BLOCK 24

L_864:
	DBG BLOCK END
	GOTO	L_863:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_865:
	BLOCK END
	BLOCK 27

L_860:
; Line 722:	        else if (im->offset || im->offset2) 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_867:
	T104(EAX).A =   _im:LINK(12).A
	T105(EAX).A =   *(T104(EAX) + 4).A.A
	CONDGO	L_1249:PC ; T105(EAX).A != #0.A
	BLOCK END
	BLOCK 29
	T106(EAX).A =   _im:LINK(12).A
	T107(EAX).A =   *(T106(EAX) + 8).A.A
	CONDGO	L_866:PC ; T107(EAX).A == #0.A
	BLOCK END
	BLOCK 30

L_1249:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_868:
; Line 723:	            mode = am_indisp; 

	T108(EAX).I =   #C.C
	_mode:LINK(-52).I =   T108(EAX).I
	BLOCK END
	BLOCK 32

L_870:
	DBG BLOCK END
	GOTO	L_869:PC
	BLOCK END
	BLOCK 33
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_871:
	BLOCK END
	BLOCK 35

L_866:
; Line 724:	        else 

; Line 725:	            mode = am_direct; 

	_mode:LINK(-52).I =   #F.I
	BLOCK END
	BLOCK 36

L_872:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_869:
	BLOCK END
	BLOCK 38

L_873:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_874:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_863:
	BLOCK END
	BLOCK 41

L_875:
	DBG BLOCK END
; Line 726:	        *apl = beLocalAllocate<AMODE>(); 

	T109(EAX).UI =   #1.C
	PARM	T109(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T110(ECX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T111(EAX).A =   _apl:LINK(16).A
	*(T111(EAX)).A.A =   T110(ECX).A
; Line 727:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_876:
; Line 728:	            int reg = Optimizer::chosenAssembler->arch->regMap[beRegFromTempInd(q, im, 1)][0]; 

	VAR START	reg
	T112(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T113(EAX).A =   *(T112(EAX) + 44).A.A
	T114(EBX).A =   *(T113(EAX) + 58).A.A
	T115(EAX).UI =   #1.C
	PARM	T115(EAX).UI
	T116(EAX).A =   _im:LINK(12).A
	PARM	T116(EAX).A
	T117(EAX).A =   _q:LINK(4).A
	PARM	T117(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTempInd$qp15@Optimizer@quadp18@Optimizer@_imode_i:PC.UI
	T118(EAX).I =   RV.T5(EAX).I
	PARMADJ	#C.N
	T119(EAX).I =   *(T114(EBX) + T118(EAX) * 8).A.I
	_reg:LINK(-72).I =   T119(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_878:
; Line 729:	            if (im->offset) 

	T120(EAX).A =   _im:LINK(12).A
	T121(EAX).A =   *(T120(EAX) + 4).A.A
	CONDGO	L_877:PC ; T121(EAX).A == #0.A
	BLOCK END
	BLOCK 44
	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_879:
; Line 730:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_880:
; Line 731:	                (*apl)->preg = Optimizer::chosenAssembler->arch->regMap[beRegFromTemp(q, im)][0]; 

	T122(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T123(EAX).A =   *(T122(EAX) + 44).A.A
	T124(EBX).A =   *(T123(EAX) + 58).A.A
	T125(EAX).A =   _im:LINK(12).A
	PARM	T125(EAX).A
	T126(EAX).A =   _q:LINK(4).A
	PARM	T126(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T127(EAX).I =   RV.T6(EAX).I
	PARMADJ	#8.N
	T128(CL).C =   *(T124(EBX) + T127(EAX) * 8).A.I
	T129(EAX).A =   _apl:LINK(16).A
	T130(EAX).A =   *(T129(EAX)).A.A
	*(T130(EAX) + 4).A.C =   T128(CL).C
; Line 732:	                (*apl)->sreg = im->offset2 ? reg : -1; 

	T131(EAX).A =   _im:LINK(12).A
	T132(EAX).A =   *(T131(EAX) + 8).A.A
	CONDGO	L_1250:PC ; T132(EAX).A == #0.A
	BLOCK END
	BLOCK 47
	T134(EAX).I =   _reg:LINK(-72).I
	GOTO	L_1251:PC
	BLOCK END
	BLOCK 48

L_1250:
	T134(EAX).I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 49

L_1251:
	T135(CL).C =   T134(EAX).I
	T136(EAX).A =   _apl:LINK(16).A
	T137(EAX).A =   *(T136(EAX)).A.A
	*(T137(EAX) + 5).A.C =   T135(CL).C
; Line 733:	            } 

	BLOCK END
	BLOCK 50

L_881:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_883:
	DBG BLOCK END
	GOTO	L_882:PC
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_884:
	BLOCK END
	BLOCK 54

L_877:
; Line 734:	            else if (mode == am_indisp && im->offset2) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_886:
	T138(EAX).I =   _mode:LINK(-52).I
	CONDGO	L_885:PC ; T138(EAX).I != #C.C
	BLOCK END
	BLOCK 56
	T139(EAX).A =   _im:LINK(12).A
	T140(EAX).A =   *(T139(EAX) + 8).A.A
	CONDGO	L_885:PC ; T140(EAX).A == #0.A
	BLOCK END
	BLOCK 57
	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_887:
; Line 735:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_888:
; Line 736:	                (*apl)->preg = reg; 

	T141(CL).C =   _reg:LINK(-72).I
	T142(EAX).A =   _apl:LINK(16).A
	T143(EAX).A =   *(T142(EAX)).A.A
	*(T143(EAX) + 4).A.C =   T141(CL).C
; Line 737:	                (*apl)->sreg = -1; 

	T144(EAX).A =   _apl:LINK(16).A
	T145(EAX).A =   *(T144(EAX)).A.A
	*(T145(EAX) + 5).A.C =   #FFFFFFFFFFFFFFFF.C
; Line 738:	            } 

	BLOCK END
	BLOCK 60

L_889:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_891:
	DBG BLOCK END
	GOTO	L_890:PC
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_892:
	BLOCK END
	BLOCK 64

L_885:
; Line 739:	            else 

; Line 740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_893:
; Line 741:	                (*apl)->preg = -1; 

	T146(EAX).A =   _apl:LINK(16).A
	T147(EAX).A =   *(T146(EAX)).A.A
	*(T147(EAX) + 4).A.C =   #FFFFFFFFFFFFFFFF.C
; Line 742:	                (*apl)->sreg = im->offset2 ? reg : -1; 

	T148(EAX).A =   _im:LINK(12).A
	T149(EAX).A =   *(T148(EAX) + 8).A.A
	CONDGO	L_1252:PC ; T149(EAX).A == #0.A
	BLOCK END
	BLOCK 66
	T151(EAX).I =   _reg:LINK(-72).I
	GOTO	L_1253:PC
	BLOCK END
	BLOCK 67

L_1252:
	T151(EAX).I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 68

L_1253:
	T152(CL).C =   T151(EAX).I
	T153(EAX).A =   _apl:LINK(16).A
	T154(EAX).A =   *(T153(EAX)).A.A
	*(T154(EAX) + 5).A.C =   T152(CL).C
; Line 743:	            } 

	BLOCK END
	BLOCK 69

L_894:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_895:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_890:
	BLOCK END
	BLOCK 72

L_896:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_897:
	DBG BLOCK END
	BLOCK END
	BLOCK 74

L_882:
	BLOCK END
	BLOCK 75

L_898:
	DBG BLOCK END
; Line 744:	        } 

	BLOCK END
	BLOCK 76

L_899:
	DBG BLOCK END
; Line 745:	        (*apl)->scale = im->scale; 

	T155(EAX).A =   _im:LINK(12).A
	T156(CL).C =   *(T155(EAX) + 14).A.I
	T157(EAX).A =   _apl:LINK(16).A
	T158(EAX).A =   *(T157(EAX)).A.A
	*(T158(EAX) + 7).A.C =   T156(CL).C
; Line 746:	        (*apl)->offset = im->offset3 ? im->offset3 : Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T159(EAX).A =   _im:LINK(12).A
	T160(EAX).A =   *(T159(EAX) + C).A.A
	CONDGO	L_1254:PC ; T160(EAX).A == #0.A
	BLOCK END
	BLOCK 77
	T161(EAX).A =   _im:LINK(12).A
	T163(EAX).A =   *(T161(EAX) + C).A.A
	GOTO	L_1255:PC
	BLOCK END
	BLOCK 78

L_1254:
	T164(EDX:EAX).ULL =   #0.C
	PARM	T164(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T165(EAX).A =   RV.T7(EAX).A
	PARMADJ	#C.N
	T163(EAX).A =   T165(EAX).A
	BLOCK END
	BLOCK 79

L_1255:
	T166(ECX).A =   _apl:LINK(16).A
	T167(ECX).A =   *(T166(ECX)).A.A
	*(T167(ECX) + C).A.A =   T163(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_901:
; Line 747:	        if (im->size < ISZ_FLOAT) 

	T168(EAX).A =   _im:LINK(12).A
	T169(EAX).I =   *(T168(EAX) + 19).A.C
	CONDGO	L_900:PC ; T169(EAX).I S>= #12.C
	BLOCK END
	BLOCK 81
	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_902:
; Line 748:	            (*apl)->length = im->size; 

	T170(EAX).A =   _im:LINK(12).A
	T171(CL).C =   *(T170(EAX) + 19).A.C
	T172(EAX).A =   _apl:LINK(16).A
	T173(EAX).A =   *(T172(EAX)).A.A
	*(T173(EAX) + 8).A.C =   T171(CL).C
	BLOCK END
	BLOCK 83

L_903:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_900:
	BLOCK END
	BLOCK 85

L_904:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 86

L_906:
; Line 749:	        if (im->offset3) 

	T174(EAX).A =   _im:LINK(12).A
	T175(EAX).A =   *(T174(EAX) + C).A.A
	CONDGO	L_905:PC ; T175(EAX).A == #0.A
	BLOCK END
	BLOCK 87
	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_907:
; Line 750:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 89

L_908:
; Line 751:	            if (isauto(im->offset3)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_910:
	T176(EAX).A =   _im:LINK(12).A
	T177(EAX).A =   *(T176(EAX) + C).A.A
	PARM	T177(EAX).A
	TAG
	GOSUB	#@occx86@isauto$qp27@Optimizer@SimpleExpression:PC.UI
	T178(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_909:PC ; T178(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 91
	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_911:
; Line 752:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 93

L_912:
; Line 753:	                if ((*apl)->preg == -1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_914:
	T179(EAX).A =   _apl:LINK(16).A
	T180(EAX).A =   *(T179(EAX)).A.A
	T181(EAX).I =   *(T180(EAX) + 4).A.C
	CONDGO	L_913:PC ; T181(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_915:
; Line 754:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 97

L_916:
; Line 755:	                    if ((*apl)->sreg == -1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_918:
	T182(EAX).A =   _apl:LINK(16).A
	T183(EAX).A =   *(T182(EAX)).A.A
	T184(EAX).I =   *(T183(EAX) + 5).A.C
	CONDGO	L_917:PC ; T184(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 99
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_919:
; Line 756:	                        mode = am_indisp; 

	T185(EAX).I =   #C.C
	_mode:LINK(-52).I =   T185(EAX).I
	BLOCK END
	BLOCK 101

L_921:
	DBG BLOCK END
	GOTO	L_920:PC
	BLOCK END
	BLOCK 102
	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_922:
	BLOCK END
	BLOCK 104

L_917:
; Line 757:	                    else 

; Line 758:	                        mode = am_indispscale; 

	_mode:LINK(-52).I =   #D.I
	BLOCK END
	BLOCK 105

L_923:
	DBG BLOCK END
	BLOCK END
	BLOCK 106

L_920:
	BLOCK END
	BLOCK 107

L_924:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 108

L_926:
; Line 759:	                    if (usingEsp) 

	T186(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_925:PC ; T186(EAX).I == #0.C
	BLOCK END
	BLOCK 109
	DBG BLOCK START
	BLOCK END
	BLOCK 110

L_927:
; Line 760:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_928:
; Line 761:	                        (*apl)->preg = ESP; 

	T187(EAX).A =   _apl:LINK(16).A
	T188(EAX).A =   *(T187(EAX)).A.A
	*(T188(EAX) + 4).A.C =   #4.C
; Line 762:	                    } 

	BLOCK END
	BLOCK 112

L_929:
	DBG BLOCK END
	BLOCK END
	BLOCK 113

L_931:
	DBG BLOCK END
	GOTO	L_930:PC
	BLOCK END
	BLOCK 114
	DBG BLOCK START
	BLOCK END
	BLOCK 115

L_932:
	BLOCK END
	BLOCK 116

L_925:
; Line 763:	                    else 

; Line 764:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_933:
; Line 765:	                        (*apl)->preg = EBP; 

	T189(EAX).A =   _apl:LINK(16).A
	T190(EAX).A =   *(T189(EAX)).A.A
	*(T190(EAX) + 4).A.C =   #5.C
; Line 766:	                    } 

	BLOCK END
	BLOCK 118

L_934:
	DBG BLOCK END
	BLOCK END
	BLOCK 119

L_935:
	DBG BLOCK END
	BLOCK END
	BLOCK 120

L_930:
	BLOCK END
	BLOCK 121

L_936:
	DBG BLOCK END
; Line 767:	                } 

	BLOCK END
	BLOCK 122

L_937:
	DBG BLOCK END
	BLOCK END
	BLOCK 123

L_939:
	DBG BLOCK END
	GOTO	L_938:PC
	BLOCK END
	BLOCK 124
	DBG BLOCK START
	BLOCK END
	BLOCK 125

L_940:
	BLOCK END
	BLOCK 126

L_913:
; Line 768:	                else if ((*apl)->sreg == -1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_942:
	T191(EAX).A =   _apl:LINK(16).A
	T192(EAX).A =   *(T191(EAX)).A.A
	T193(EAX).I =   *(T192(EAX) + 5).A.C
	CONDGO	L_941:PC ; T193(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 128
	DBG BLOCK START
	BLOCK END
	BLOCK 129

L_943:
; Line 769:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 130

L_944:
; Line 770:	                    mode = am_indispscale; 

	_mode:LINK(-52).I =   #D.I
	DBG BLOCK START
	BLOCK END
	BLOCK 131

L_946:
; Line 771:	                    if (usingEsp) 

	T194(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_945:PC ; T194(EAX).I == #0.C
	BLOCK END
	BLOCK 132
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_947:
; Line 772:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 134

L_948:
; Line 773:	                        (*apl)->sreg = (*apl)->preg; 

	T195(EAX).A =   _apl:LINK(16).A
	T196(EAX).A =   *(T195(EAX)).A.A
	T197(CL).C =   *(T196(EAX) + 4).A.C
	T198(EAX).A =   _apl:LINK(16).A
	T199(EAX).A =   *(T198(EAX)).A.A
	*(T199(EAX) + 5).A.C =   T197(CL).C
; Line 774:	                        (*apl)->preg = ESP; 

	T200(EAX).A =   _apl:LINK(16).A
	T201(EAX).A =   *(T200(EAX)).A.A
	*(T201(EAX) + 4).A.C =   #4.C
; Line 775:	                    } 

	BLOCK END
	BLOCK 135

L_949:
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_951:
	DBG BLOCK END
	GOTO	L_950:PC
	BLOCK END
	BLOCK 137
	DBG BLOCK START
	BLOCK END
	BLOCK 138

L_952:
	BLOCK END
	BLOCK 139

L_945:
; Line 776:	                    else 

; Line 777:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_953:
; Line 778:	                        (*apl)->sreg = EBP; 

	T202(EAX).A =   _apl:LINK(16).A
	T203(EAX).A =   *(T202(EAX)).A.A
	*(T203(EAX) + 5).A.C =   #5.C
; Line 779:	                    } 

	BLOCK END
	BLOCK 141

L_954:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_955:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_950:
	BLOCK END
	BLOCK 144

L_956:
	DBG BLOCK END
; Line 780:	                } 

	BLOCK END
	BLOCK 145

L_957:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_959:
	DBG BLOCK END
	GOTO	L_958:PC
	BLOCK END
	BLOCK 147
	DBG BLOCK START
	BLOCK END
	BLOCK 148

L_960:
	BLOCK END
	BLOCK 149

L_941:
; Line 781:	                else 

; Line 782:	                    diag("getAmodes: no room for EBP in ind processing"); 

	PARM	#L_844:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 150

L_961:
	DBG BLOCK END
	BLOCK END
	BLOCK 151

L_958:
	BLOCK END
	BLOCK 152

L_962:
	DBG BLOCK END
	BLOCK END
	BLOCK 153

L_963:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_938:
	BLOCK END
	BLOCK 155

L_964:
	DBG BLOCK END
; Line 783:	            } 

	BLOCK END
	BLOCK 156

L_965:
	DBG BLOCK END
	BLOCK END
	BLOCK 157

L_966:
	DBG BLOCK END
	BLOCK END
	BLOCK 158

L_909:
	BLOCK END
	BLOCK 159

L_967:
	DBG BLOCK END
; Line 784:	        } 

	BLOCK END
	BLOCK 160

L_968:
	DBG BLOCK END
	BLOCK END
	BLOCK 161

L_969:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_905:
	BLOCK END
	BLOCK 163

L_970:
	DBG BLOCK END
; Line 785:	        (*apl)->mode = mode; 

	T204(ECX).I =   _mode:LINK(-52).I
	T205(EAX).A =   _apl:LINK(16).A
	T206(EAX).A =   *(T205(EAX)).A.A
	*(T206(EAX) + 0).A.I =   T204(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 164

L_972:
; Line 786:	        if (im->size >= ISZ_CFLOAT) 

	T207(EAX).A =   _im:LINK(12).A
	T208(EAX).I =   *(T207(EAX) + 19).A.C
	CONDGO	L_971:PC ; T208(EAX).I S< #18.C
	BLOCK END
	BLOCK 165
	DBG BLOCK START
	BLOCK END
	BLOCK 166

L_973:
; Line 787:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_974:
; Line 788:	            *aph = beLocalAllocate<AMODE>(); 

	T209(EAX).UI =   #1.C
	PARM	T209(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T210(ECX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	T211(EAX).A =   _aph:LINK(20).A
	*(T211(EAX)).A.A =   T210(ECX).A
; Line 789:	            **aph = **apl; 

	T212(EAX).A =   _apl:LINK(16).A
	T213(EAX).A =   *(T212(EAX)).A.A
	PARM	T213(EAX).A
	T214(EAX).A =   _aph:LINK(20).A
	T215(EAX).A =   *(T214(EAX)).A.A
	PARM	T215(EAX).A
	TAG
	GOSUB	#@amode@$basn$qrx5amode:PC.UI
	PARMADJ	#8.N
; Line 790:	            (*aph)->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, (*apl)->offset, 

	T216(EAX).A =   _im:LINK(12).A
	T217(EAX).I =   *(T216(EAX) + 19).A.C
	PARM	T217(EAX).I
	TAG
	GOSUB	#@occx86@imaginary_offset$qi:PC.UI
	T218(EAX).I =   RV.T10(EAX).I
	PARMADJ	#4.N
	T219(EDX:EAX).ULL =   T218(EAX).I
	PARM	T219(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T220(EAX).A =   RV.T11(EAX).A
	PARMADJ	#C.N
	PARM	T220(EAX).A
	T221(EAX).A =   _apl:LINK(16).A
	T222(EAX).A =   *(T221(EAX)).A.A
	T223(EAX).A =   *(T222(EAX) + C).A.A
	PARM	T223(EAX).A
	T224(EAX).UI =   #1.C
	PARM	T224(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T225(ECX).A =   RV.T12(EAX).A
	PARMADJ	#C.N
	T226(EAX).A =   _aph:LINK(20).A
	T227(EAX).A =   *(T226(EAX)).A.A
	*(T227(EAX) + C).A.A =   T225(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 168

L_976:
; Line 792:	            if ((*apl)->preg >= 0) 

	T228(EAX).A =   _apl:LINK(16).A
	T229(EAX).A =   *(T228(EAX)).A.A
	T230(EAX).I =   *(T229(EAX) + 4).A.C
	CONDGO	L_975:PC ; T230(EAX).I S< #0.C
	BLOCK END
	BLOCK 169
	DBG BLOCK START
	BLOCK END
	BLOCK 170

L_977:
; Line 793:	                (*apl)->liveRegs |= 1 << (*apl)->preg; 

	T231(EAX).A =   _apl:LINK(16).A
	T232(EAX).A =   *(T231(EAX)).A.A
	T233(EAX).A = T232(EAX).A + #10.A
	_$anontemp337:LINK(-68).A =   T233(EAX).A
	T234(EDX).A =   _$anontemp337:LINK(-68).A
	T235(EAX).A =   _apl:LINK(16).A
	T236(EAX).A =   *(T235(EAX)).A.A
	T238(CL).C =   *(T236(EAX) + 4).A.C
	T637(AL).C =   T238(CL).C^
	T643(CL).C =   T637(AL).C^
	T239(EAX).I = #1.C << T643(CL).C
	T240(ECX).I = *(T234(EDX)).A.I | T239(EAX).I
	T241(EAX).A =   _$anontemp337:LINK(-68).A
	*(T241(EAX)).A.I =   T240(ECX).I
	BLOCK END
	BLOCK 171

L_978:
	DBG BLOCK END
	BLOCK END
	BLOCK 172

L_975:
	BLOCK END
	BLOCK 173

L_979:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_981:
; Line 794:	            if ((*apl)->sreg >= 0) 

	T242(EAX).A =   _apl:LINK(16).A
	T243(EAX).A =   *(T242(EAX)).A.A
	T244(EAX).I =   *(T243(EAX) + 5).A.C
	CONDGO	L_980:PC ; T244(EAX).I S< #0.C
	BLOCK END
	BLOCK 175
	DBG BLOCK START
	BLOCK END
	BLOCK 176

L_982:
; Line 795:	                (*apl)->liveRegs |= 1 << (*apl)->sreg; 

	T245(EAX).A =   _apl:LINK(16).A
	T246(EAX).A =   *(T245(EAX)).A.A
	T247(EAX).A = T246(EAX).A + #10.A
	_$anontemp338:LINK(-64).A =   T247(EAX).A
	T248(EDX).A =   _$anontemp338:LINK(-64).A
	T249(EAX).A =   _apl:LINK(16).A
	T250(EAX).A =   *(T249(EAX)).A.A
	T252(CL).C =   *(T250(EAX) + 5).A.C
	T638(AL).C =   T252(CL).C^
	T644(CL).C =   T638(AL).C^
	T253(EAX).I = #1.C << T644(CL).C
	T254(ECX).I = *(T248(EDX)).A.I | T253(EAX).I
	T255(EAX).A =   _$anontemp338:LINK(-64).A
	*(T255(EAX)).A.I =   T254(ECX).I
	BLOCK END
	BLOCK 177

L_983:
	DBG BLOCK END
	BLOCK END
	BLOCK 178

L_980:
	BLOCK END
	BLOCK 179

L_984:
	DBG BLOCK END
; Line 796:	        } 

	BLOCK END
	BLOCK 180

L_985:
	DBG BLOCK END
	BLOCK END
	BLOCK 181

L_987:
	DBG BLOCK END
	GOTO	L_986:PC
	BLOCK END
	BLOCK 182
	DBG BLOCK START
	BLOCK END
	BLOCK 183

L_988:
	BLOCK END
	BLOCK 184

L_971:
; Line 797:	        else if (im->size == ISZ_ULONGLONG || im->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 185

L_990:
	T256(EAX).A =   _im:LINK(12).A
	T257(AL).C =   *(T256(EAX) + 19).A.C
	CONDGO	L_1256:PC ; T257(AL).C == #B.C
	BLOCK END
	BLOCK 186
	T258(EAX).A =   _im:LINK(12).A
	T259(EAX).I =   *(T258(EAX) + 19).A.C
	CONDGO	L_989:PC ; T259(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 187

L_1256:
	DBG BLOCK START
	BLOCK END
	BLOCK 188

L_991:
; Line 798:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 189

L_992:
; Line 799:	            *aph = beLocalAllocate<AMODE>(); 

	T260(EAX).UI =   #1.C
	PARM	T260(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T261(ECX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	T262(EAX).A =   _aph:LINK(20).A
	*(T262(EAX)).A.A =   T261(ECX).A
; Line 800:	            **aph = **apl; 

	T263(EAX).A =   _apl:LINK(16).A
	T264(EAX).A =   *(T263(EAX)).A.A
	PARM	T264(EAX).A
	T265(EAX).A =   _aph:LINK(20).A
	T266(EAX).A =   *(T265(EAX)).A.A
	PARM	T266(EAX).A
	TAG
	GOSUB	#@amode@$basn$qrx5amode:PC.UI
	PARMADJ	#8.N
; Line 801:	            (*aph)->offset = 

	T267(EDX:EAX).ULL =   #4.I
	PARM	T267(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T268(EAX).A =   RV.T14(EAX).A
	PARMADJ	#C.N
	PARM	T268(EAX).A
	T269(EAX).A =   _apl:LINK(16).A
	T270(EAX).A =   *(T269(EAX)).A.A
	T271(EAX).A =   *(T270(EAX) + C).A.A
	PARM	T271(EAX).A
	T272(EAX).UI =   #1.C
	PARM	T272(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T273(ECX).A =   RV.T15(EAX).A
	PARMADJ	#C.N
	T274(EAX).A =   _aph:LINK(20).A
	T275(EAX).A =   *(T274(EAX)).A.A
	*(T275(EAX) + C).A.A =   T273(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 190

L_994:
; Line 803:	            if ((*apl)->preg >= 0) 

	T276(EAX).A =   _apl:LINK(16).A
	T277(EAX).A =   *(T276(EAX)).A.A
	T278(EAX).I =   *(T277(EAX) + 4).A.C
	CONDGO	L_993:PC ; T278(EAX).I S< #0.C
	BLOCK END
	BLOCK 191
	DBG BLOCK START
	BLOCK END
	BLOCK 192

L_995:
; Line 804:	                (*apl)->liveRegs |= 1 << (*apl)->preg; 

	T279(EAX).A =   _apl:LINK(16).A
	T280(EAX).A =   *(T279(EAX)).A.A
	T281(EAX).A = T280(EAX).A + #10.A
	_$anontemp340:LINK(-60).A =   T281(EAX).A
	T282(EDX).A =   _$anontemp340:LINK(-60).A
	T283(EAX).A =   _apl:LINK(16).A
	T284(EAX).A =   *(T283(EAX)).A.A
	T286(CL).C =   *(T284(EAX) + 4).A.C
	T639(AL).C =   T286(CL).C^
	T645(CL).C =   T639(AL).C^
	T287(EAX).I = #1.C << T645(CL).C
	T288(ECX).I = *(T282(EDX)).A.I | T287(EAX).I
	T289(EAX).A =   _$anontemp340:LINK(-60).A
	*(T289(EAX)).A.I =   T288(ECX).I
	BLOCK END
	BLOCK 193

L_996:
	DBG BLOCK END
	BLOCK END
	BLOCK 194

L_993:
	BLOCK END
	BLOCK 195

L_997:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_999:
; Line 805:	            if ((*apl)->sreg >= 0) 

	T290(EAX).A =   _apl:LINK(16).A
	T291(EAX).A =   *(T290(EAX)).A.A
	T292(EAX).I =   *(T291(EAX) + 5).A.C
	CONDGO	L_998:PC ; T292(EAX).I S< #0.C
	BLOCK END
	BLOCK 197
	DBG BLOCK START
	BLOCK END
	BLOCK 198

L_1000:
; Line 806:	                (*apl)->liveRegs |= 1 << (*apl)->sreg; 

	T293(EAX).A =   _apl:LINK(16).A
	T294(EAX).A =   *(T293(EAX)).A.A
	T295(EAX).A = T294(EAX).A + #10.A
	_$anontemp341:LINK(-56).A =   T295(EAX).A
	T296(EDX).A =   _$anontemp341:LINK(-56).A
	T297(EAX).A =   _apl:LINK(16).A
	T298(EAX).A =   *(T297(EAX)).A.A
	T300(CL).C =   *(T298(EAX) + 5).A.C
	T640(AL).C =   T300(CL).C^
	T646(CL).C =   T640(AL).C^
	T301(EAX).I = #1.C << T646(CL).C
	T302(ECX).I = *(T296(EDX)).A.I | T301(EAX).I
	T303(EAX).A =   _$anontemp341:LINK(-56).A
	*(T303(EAX)).A.I =   T302(ECX).I
	BLOCK END
	BLOCK 199

L_1001:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_998:
	BLOCK END
	BLOCK 201

L_1002:
	DBG BLOCK END
; Line 807:	        } 

	BLOCK END
	BLOCK 202

L_1003:
	DBG BLOCK END
	BLOCK END
	BLOCK 203

L_1004:
	DBG BLOCK END
	BLOCK END
	BLOCK 204

L_989:
	BLOCK END
	BLOCK 205

L_1005:
	DBG BLOCK END
	BLOCK END
	BLOCK 206

L_1006:
	DBG BLOCK END
	BLOCK END
	BLOCK 207

L_986:
	BLOCK END
	BLOCK 208

L_1007:
	DBG BLOCK END
; Line 808:	    } 

	BLOCK END
	BLOCK 209

L_1008:
	DBG BLOCK END
	BLOCK END
	BLOCK 210

L_1010:
	DBG BLOCK END
	GOTO	L_1009:PC
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_1011:
	BLOCK END
	BLOCK 213

L_856:
; Line 809:	    else if (im->mode == Optimizer::i_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 214

L_1013:
	T304(EAX).A =   _im:LINK(12).A
	T305(EAX).I =   *(T304(EAX) + 0).A.I
	CONDGO	L_1012:PC ; T305(EAX).I != #1.C
	BLOCK END
	BLOCK 215
	DBG BLOCK START
	BLOCK END
	BLOCK 216

L_1014:
; Line 810:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 217

L_1015:
; Line 811:	        if (im->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 218

L_1017:
	T306(EAX).A =   _im:LINK(12).A
	T307(EAX).I =   *(T306(EAX) + 19).A.C
	CONDGO	L_1016:PC ; T307(EAX).I S< #18.C
	BLOCK END
	BLOCK 219
	DBG BLOCK START
	BLOCK END
	BLOCK 220

L_1018:
; Line 812:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_1019:
; Line 813:	            *apl = beLocalAllocate<AMODE>(); 

	T308(EAX).UI =   #1.C
	PARM	T308(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T309(ECX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	T310(EAX).A =   _apl:LINK(16).A
	*(T310(EAX)).A.A =   T309(ECX).A
; Line 814:	            *aph = beLocalAllocate<AMODE>(); 

	T311(EAX).UI =   #1.C
	PARM	T311(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T312(ECX).A =   RV.T17(EAX).A
	PARMADJ	#4.N
	T313(EAX).A =   _aph:LINK(20).A
	*(T313(EAX)).A.A =   T312(ECX).A
; Line 815:	            (*apl)->offset = im->offset; 

	T314(EAX).A =   _im:LINK(12).A
	T315(ECX).A =   *(T314(EAX) + 4).A.A
	T316(EAX).A =   _apl:LINK(16).A
	T317(EAX).A =   *(T316(EAX)).A.A
	*(T317(EAX) + C).A.A =   T315(ECX).A
; Line 816:	            make_complexconst(*apl, *aph); 

	T318(EAX).A =   _aph:LINK(20).A
	T319(EAX).A =   *(T318(EAX)).A.A
	PARM	T319(EAX).A
	T320(EAX).A =   _apl:LINK(16).A
	T321(EAX).A =   *(T320(EAX)).A.A
	PARM	T321(EAX).A
	TAG
	GOSUB	#@occx86@make_complexconst$qp5amodepn0:PC.UI
	PARMADJ	#8.N
; Line 817:	        } 

	BLOCK END
	BLOCK 222

L_1020:
	DBG BLOCK END
	BLOCK END
	BLOCK 223

L_1022:
	DBG BLOCK END
	GOTO	L_1021:PC
	BLOCK END
	BLOCK 224
	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_1023:
	BLOCK END
	BLOCK 226

L_1016:
; Line 818:	        else if (im->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 227

L_1025:
	T322(EAX).A =   _im:LINK(12).A
	T323(EAX).I =   *(T322(EAX) + 19).A.C
	CONDGO	L_1024:PC ; T323(EAX).I S< #12.C
	BLOCK END
	BLOCK 228
	DBG BLOCK START
	BLOCK END
	BLOCK 229

L_1026:
; Line 819:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 230

L_1027:
; Line 820:	            *apl = beLocalAllocate<AMODE>(); 

	T324(EAX).UI =   #1.C
	PARM	T324(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T325(ECX).A =   RV.T18(EAX).A
	PARMADJ	#4.N
	T326(EAX).A =   _apl:LINK(16).A
	*(T326(EAX)).A.A =   T325(ECX).A
; Line 821:	            (*apl)->offset = im->offset; 

	T327(EAX).A =   _im:LINK(12).A
	T328(ECX).A =   *(T327(EAX) + 4).A.A
	T329(EAX).A =   _apl:LINK(16).A
	T330(EAX).A =   *(T329(EAX)).A.A
	*(T330(EAX) + C).A.A =   T328(ECX).A
; Line 822:	            make_floatconst(*apl); 

	T331(EAX).A =   _apl:LINK(16).A
	T332(EAX).A =   *(T331(EAX)).A.A
	PARM	T332(EAX).A
	TAG
	GOSUB	#@occx86@make_floatconst$qp5amode:PC.UI
	PARMADJ	#4.N
; Line 823:	        } 

	BLOCK END
	BLOCK 231

L_1028:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_1030:
	DBG BLOCK END
	GOTO	L_1029:PC
	BLOCK END
	BLOCK 233
	DBG BLOCK START
	BLOCK END
	BLOCK 234

L_1031:
	BLOCK END
	BLOCK 235

L_1024:
; Line 824:	        else if (im->size == ISZ_ULONGLONG || im->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 236

L_1033:
	T333(EAX).A =   _im:LINK(12).A
	T334(AL).C =   *(T333(EAX) + 19).A.C
	CONDGO	L_1257:PC ; T334(AL).C == #B.C
	BLOCK END
	BLOCK 237
	T335(EAX).A =   _im:LINK(12).A
	T336(EAX).I =   *(T335(EAX) + 19).A.C
	CONDGO	L_1032:PC ; T336(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 238

L_1257:
	DBG BLOCK START
	BLOCK END
	BLOCK 239

L_1034:
; Line 825:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_1035:
; Line 826:	            *apl = aimmed(im->offset->i); 

	T431(EAX).A =   _im:LINK(12).A
	T432(EAX).A =   *(T431(EAX) + 4).A.A
	T433(EDX:EAX).ULL =   *(T432(EAX) + 8).A.LL
	PARM	T433(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T434(ECX).A =   RV.T19(EAX).A
	PARMADJ	#8.N
	T435(EAX).A =   _apl:LINK(16).A
	*(T435(EAX)).A.A =   T434(ECX).A
; Line 828:	            *aph = aimmed((im->offset->i >> 32)); 

	T436(EAX).A =   _im:LINK(12).A
	T437(EAX).A =   *(T436(EAX) + 4).A.A
	T438(EDX:EAX).LL =   *(T437(EAX) + 8).A.LL
	T440(EDX:EAX).LL = T438(EDX:EAX).LL S>> #20.I
	PARM	T440(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T441(ECX).A =   RV.T20(EAX).A
	PARMADJ	#8.N
	T442(EAX).A =   _aph:LINK(20).A
	*(T442(EAX)).A.A =   T441(ECX).A
; Line 830:	            if (im->size < 0 && im->offset->i < 0) 

	BLOCK END
	BLOCK 241

L_1036:
	DBG BLOCK END
	BLOCK END
	BLOCK 242

L_1038:
	DBG BLOCK END
	GOTO	L_1037:PC
	BLOCK END
	BLOCK 243
	DBG BLOCK START
	BLOCK END
	BLOCK 244

L_1039:
	BLOCK END
	BLOCK 245

L_1032:
; Line 831:	                *aph = aimmed(-1); 
; Line 832:	            else 

; Line 832:	            else 

; Line 833:	                *aph = aimmed(0); 

	DBG BLOCK START
	BLOCK END
	BLOCK 246

L_1040:
; Line 835:	        } 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_1042:
; Line 836:	        else 
; Line 839:	            { 

; Line 837:	        { 

	T337(EAX).A =   _im:LINK(12).A
	T338(EAX).A =   *(T337(EAX) + 4).A.A
	PARM	T338(EAX).A
	TAG
	GOSUB	#@Optimizer@iscomplexconst$qp27@Optimizer@SimpleExpression:PC.UI
	T339(AL).BOOL =   RV.T21(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1041:PC ; T339(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 248
	DBG BLOCK START
	BLOCK END
	BLOCK 249

L_1043:
; Line 838:	            if (iscomplexconst(im->offset)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 250

L_1044:
; Line 840:	                *apl = beLocalAllocate<AMODE>(); 

	T340(EAX).UI =   #1.C
	PARM	T340(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T341(ECX).A =   RV.T22(EAX).A
	PARMADJ	#4.N
	T342(EAX).A =   _apl:LINK(16).A
	*(T342(EAX)).A.A =   T341(ECX).A
; Line 841:	                (*apl)->offset = im->offset; 

	T343(EAX).A =   _im:LINK(12).A
	T344(ECX).A =   *(T343(EAX) + 4).A.A
	T345(EAX).A =   _apl:LINK(16).A
	T346(EAX).A =   *(T345(EAX)).A.A
	*(T346(EAX) + C).A.A =   T344(ECX).A
; Line 842:	                *aph = beLocalAllocate<AMODE>(); 

	T347(EAX).UI =   #1.C
	PARM	T347(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T348(ECX).A =   RV.T23(EAX).A
	PARMADJ	#4.N
	T349(EAX).A =   _aph:LINK(20).A
	*(T349(EAX)).A.A =   T348(ECX).A
; Line 843:	                make_complexconst(*apl, *aph); 

	T350(EAX).A =   _aph:LINK(20).A
	T351(EAX).A =   *(T350(EAX)).A.A
	PARM	T351(EAX).A
	T352(EAX).A =   _apl:LINK(16).A
	T353(EAX).A =   *(T352(EAX)).A.A
	PARM	T353(EAX).A
	TAG
	GOSUB	#@occx86@make_complexconst$qp5amodepn0:PC.UI
	PARMADJ	#8.N
; Line 844:	            } 

	BLOCK END
	BLOCK 251

L_1045:
	DBG BLOCK END
	BLOCK END
	BLOCK 252

L_1047:
	DBG BLOCK END
	GOTO	L_1046:PC
	BLOCK END
	BLOCK 253
	DBG BLOCK START
	BLOCK END
	BLOCK 254

L_1048:
	BLOCK END
	BLOCK 255

L_1041:
; Line 845:	            else if (isfloatconst(im->offset) || isimaginaryconst(im->offset)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 256

L_1050:
	T354(EAX).A =   _im:LINK(12).A
	T355(EAX).A =   *(T354(EAX) + 4).A.A
	PARM	T355(EAX).A
	TAG
	GOSUB	#@Optimizer@isfloatconst$qp27@Optimizer@SimpleExpression:PC.UI
	T356(AL).BOOL =   RV.T24(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1258:PC ; T356(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 257
	T357(EAX).A =   _im:LINK(12).A
	T358(EAX).A =   *(T357(EAX) + 4).A.A
	PARM	T358(EAX).A
	TAG
	GOSUB	#@Optimizer@isimaginaryconst$qp27@Optimizer@SimpleExpression:PC.UI
	T359(AL).BOOL =   RV.T25(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1049:PC ; T359(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 258

L_1258:
	DBG BLOCK START
	BLOCK END
	BLOCK 259

L_1051:
; Line 846:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 260

L_1052:
; Line 847:	                *apl = beLocalAllocate<AMODE>(); 

	T422(EAX).UI =   #1.C
	PARM	T422(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T423(ECX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	T424(EAX).A =   _apl:LINK(16).A
	*(T424(EAX)).A.A =   T423(ECX).A
; Line 848:	                (*apl)->offset = im->offset; 

	T425(EAX).A =   _im:LINK(12).A
	T426(ECX).A =   *(T425(EAX) + 4).A.A
	T427(EAX).A =   _apl:LINK(16).A
	T428(EAX).A =   *(T427(EAX)).A.A
	*(T428(EAX) + C).A.A =   T426(ECX).A
; Line 849:	                make_floatconst(*apl); 

	T429(EAX).A =   _apl:LINK(16).A
	T430(EAX).A =   *(T429(EAX)).A.A
	PARM	T430(EAX).A
	TAG
	GOSUB	#@occx86@make_floatconst$qp5amode:PC.UI
	PARMADJ	#4.N
; Line 850:	            } 

	BLOCK END
	BLOCK 261

L_1053:
	DBG BLOCK END
	BLOCK END
	BLOCK 262

L_1055:
	DBG BLOCK END
	GOTO	L_1054:PC
	BLOCK END
	BLOCK 263
	DBG BLOCK START
	BLOCK END
	BLOCK 264

L_1056:
	BLOCK END
	BLOCK 265

L_1049:
; Line 851:	            else 

; Line 852:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 266

L_1057:
; Line 853:	                if (!isintconst(im->offset)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 267

L_1059:
	T360(EAX).A =   _im:LINK(12).A
	T361(EAX).A =   *(T360(EAX) + 4).A.A
	PARM	T361(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T362(AL).BOOL =   RV.T27(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1058:PC ; T362(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 268
	DBG BLOCK START
	BLOCK END
	BLOCK 269

L_1060:
; Line 854:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 270

L_1061:
; Line 855:	                    *apl = make_offset(im->offset); 

	T363(EAX).A =   _im:LINK(12).A
	T364(EAX).A =   *(T363(EAX) + 4).A.A
	PARM	T364(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T365(ECX).A =   RV.T28(EAX).A
	PARMADJ	#4.N
	T366(EAX).A =   _apl:LINK(16).A
	*(T366(EAX)).A.A =   T365(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 271

L_1063:
; Line 856:	                    if ((*apl)->mode == am_indisp) 

	T367(EAX).A =   _apl:LINK(16).A
	T368(EAX).A =   *(T367(EAX)).A.A
	T369(EAX).I =   *(T368(EAX) + 0).A.I
	CONDGO	L_1062:PC ; T369(EAX).I != #C.C
	BLOCK END
	BLOCK 272
	DBG BLOCK START
	BLOCK END
	BLOCK 273

L_1064:
; Line 857:	                        *op = op_lea; 

	T370(EAX).A =   _op:LINK(8).A
	*(T370(EAX)).A.I =   #106.I
	BLOCK END
	BLOCK 274

L_1066:
	DBG BLOCK END
	GOTO	L_1065:PC
	BLOCK END
	BLOCK 275
	DBG BLOCK START
	BLOCK END
	BLOCK 276

L_1067:
	BLOCK END
	BLOCK 277

L_1062:
; Line 858:	                    else 

; Line 859:	                        (*apl)->mode = am_immed; 

	T371(EAX).A =   _apl:LINK(16).A
	T372(EAX).A =   *(T371(EAX)).A.A
	*(T372(EAX) + 0).A.I =   #10.I
	BLOCK END
	BLOCK 278

L_1068:
	DBG BLOCK END
	BLOCK END
	BLOCK 279

L_1065:
	BLOCK END
	BLOCK 280

L_1069:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 281

L_1071:
; Line 860:	                    if (im->size < ISZ_FLOAT) 

	T373(EAX).A =   _im:LINK(12).A
	T374(EAX).I =   *(T373(EAX) + 19).A.C
	CONDGO	L_1070:PC ; T374(EAX).I S>= #12.C
	BLOCK END
	BLOCK 282
	DBG BLOCK START
	BLOCK END
	BLOCK 283

L_1072:
; Line 861:	                        (*apl)->length = im->size; 

	T375(EAX).A =   _im:LINK(12).A
	T376(CL).C =   *(T375(EAX) + 19).A.C
	T377(EAX).A =   _apl:LINK(16).A
	T378(EAX).A =   *(T377(EAX)).A.A
	*(T378(EAX) + 8).A.C =   T376(CL).C
	BLOCK END
	BLOCK 284

L_1073:
	DBG BLOCK END
	BLOCK END
	BLOCK 285

L_1070:
	BLOCK END
	BLOCK 286

L_1074:
	DBG BLOCK END
; Line 862:	                } 

	BLOCK END
	BLOCK 287

L_1075:
	DBG BLOCK END
	BLOCK END
	BLOCK 288

L_1077:
	DBG BLOCK END
	GOTO	L_1076:PC
	BLOCK END
	BLOCK 289
	DBG BLOCK START
	BLOCK END
	BLOCK 290

L_1078:
	BLOCK END
	BLOCK 291

L_1058:
; Line 863:	                else if (im->offset->sizeFromType == ISZ_ULONGLONG || im->offset->sizeFromType == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 292

L_1080:
	T379(EAX).A =   _im:LINK(12).A
	T380(EAX).A =   *(T379(EAX) + 4).A.A
	T381(EAX).I =   *(T380(EAX) + 34).A.I
	CONDGO	L_1259:PC ; T381(EAX).I == #B.C
	BLOCK END
	BLOCK 293
	T382(EAX).A =   _im:LINK(12).A
	T383(EAX).A =   *(T382(EAX) + 4).A.A
	T384(EAX).I =   *(T383(EAX) + 34).A.I
	CONDGO	L_1079:PC ; T384(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 294

L_1259:
	DBG BLOCK START
	BLOCK END
	BLOCK 295

L_1081:
; Line 864:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 296

L_1082:
; Line 865:	                    *apl = aimmed(im->offset->i); 

	T410(EAX).A =   _im:LINK(12).A
	T411(EAX).A =   *(T410(EAX) + 4).A.A
	T412(EDX:EAX).ULL =   *(T411(EAX) + 8).A.LL
	PARM	T412(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T413(ECX).A =   RV.T29(EAX).A
	PARMADJ	#8.N
	T414(EAX).A =   _apl:LINK(16).A
	*(T414(EAX)).A.A =   T413(ECX).A
; Line 867:	                    *aph = aimmed((im->offset->i >> 32)); 

	T415(EAX).A =   _im:LINK(12).A
	T416(EAX).A =   *(T415(EAX) + 4).A.A
	T417(EDX:EAX).LL =   *(T416(EAX) + 8).A.LL
	T419(EDX:EAX).LL = T417(EDX:EAX).LL S>> #20.I
	PARM	T419(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T420(ECX).A =   RV.T30(EAX).A
	PARMADJ	#8.N
	T421(EAX).A =   _aph:LINK(20).A
	*(T421(EAX)).A.A =   T420(ECX).A
; Line 869:	                    if (im->size < 0 && im->offset->i < 0) 

	BLOCK END
	BLOCK 297

L_1083:
	DBG BLOCK END
	BLOCK END
	BLOCK 298

L_1085:
	DBG BLOCK END
	GOTO	L_1084:PC
	BLOCK END
	BLOCK 299
	DBG BLOCK START
	BLOCK END
	BLOCK 300

L_1086:
	BLOCK END
	BLOCK 301

L_1079:
; Line 870:	                        *aph = aimmed(-1); 
; Line 871:	                    else 

; Line 871:	                    else 

; Line 872:	                        *aph = aimmed(0); 

	DBG BLOCK START
	BLOCK END
	BLOCK 302

L_1087:
; Line 874:	                } 

; Line 875:	                else 

	T385(EAX).A =   _im:LINK(12).A
	T386(EAX).A =   *(T385(EAX) + 4).A.A
	PARM	T386(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T387(ECX).A =   RV.T31(EAX).A
	PARMADJ	#4.N
	T388(EAX).A =   _apl:LINK(16).A
	*(T388(EAX)).A.A =   T387(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 303

L_1089:
; Line 876:	                { 
; Line 879:	                        *op = op_lea; 

; Line 877:	                    *apl = make_offset(im->offset); 

	T389(EAX).A =   _apl:LINK(16).A
	T390(EAX).A =   *(T389(EAX)).A.A
	T391(EAX).I =   *(T390(EAX) + 0).A.I
	CONDGO	L_1088:PC ; T391(EAX).I != #C.C
	BLOCK END
	BLOCK 304
	DBG BLOCK START
	BLOCK END
	BLOCK 305

L_1090:
; Line 878:	                    if ((*apl)->mode == am_indisp) 

	T392(EAX).A =   _op:LINK(8).A
	*(T392(EAX)).A.I =   #106.I
	BLOCK END
	BLOCK 306

L_1092:
	DBG BLOCK END
	GOTO	L_1091:PC
	BLOCK END
	BLOCK 307
	DBG BLOCK START
	BLOCK END
	BLOCK 308

L_1093:
	BLOCK END
	BLOCK 309

L_1088:
; Line 880:	                    else 

; Line 881:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 310

L_1094:
; Line 882:	                        (*apl)->offset->i &= 0xffffffffU; 

	T393(EAX).A =   _apl:LINK(16).A
	T394(EAX).A =   *(T393(EAX)).A.A
	T395(EAX).A =   *(T394(EAX) + C).A.A
	T396(EAX).A = T395(EAX).A + #8.A
	_$anontemp348:LINK(-48).A =   T396(EAX).A
	T397(EAX).A =   _$anontemp348:LINK(-48).A
	T398(EDX:EAX).LL =   *(T397(EAX)).A.LL
	T399(EDX:ECX).LL = T398(EDX:EAX).LL & #FFFFFFFF.LL
	T400(EAX).A =   _$anontemp348:LINK(-48).A
	*(T400(EAX)).A.LL =   T399(EDX:ECX).LL
; Line 883:	                        (*apl)->mode = am_immed; 

	T401(EAX).A =   _apl:LINK(16).A
	T402(EAX).A =   *(T401(EAX)).A.A
	*(T402(EAX) + 0).A.I =   #10.I
; Line 884:	                    } 

	BLOCK END
	BLOCK 311

L_1095:
	DBG BLOCK END
	BLOCK END
	BLOCK 312

L_1096:
	DBG BLOCK END
	BLOCK END
	BLOCK 313

L_1091:
	BLOCK END
	BLOCK 314

L_1097:
	DBG BLOCK END
; Line 887:	                    *aph = aimmed((im->offset->i >> 32)); 

	T403(EAX).A =   _im:LINK(12).A
	T404(EAX).A =   *(T403(EAX) + 4).A.A
	T405(EDX:EAX).LL =   *(T404(EAX) + 8).A.LL
	T407(EDX:EAX).LL = T405(EDX:EAX).LL S>> #20.I
	PARM	T407(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T408(ECX).A =   RV.T32(EAX).A
	PARMADJ	#8.N
	T409(EAX).A =   _aph:LINK(20).A
	*(T409(EAX)).A.A =   T408(ECX).A
; Line 889:	                    if (im->size < 0 && im->offset->i < 0) 

	BLOCK END
	BLOCK 315

L_1098:
	DBG BLOCK END
	BLOCK END
	BLOCK 316

L_1099:
	DBG BLOCK END
	BLOCK END
	BLOCK 317

L_1084:
	BLOCK END
	BLOCK 318

L_1100:
	DBG BLOCK END
	BLOCK END
	BLOCK 319

L_1101:
	DBG BLOCK END
	BLOCK END
	BLOCK 320

L_1076:
	BLOCK END
	BLOCK 321

L_1102:
	DBG BLOCK END
; Line 890:	                        *aph = aimmed(-1); 

	BLOCK END
	BLOCK 322

L_1103:
	DBG BLOCK END
	BLOCK END
	BLOCK 323

L_1104:
	DBG BLOCK END
	BLOCK END
	BLOCK 324

L_1054:
	BLOCK END
	BLOCK 325

L_1105:
	DBG BLOCK END
	BLOCK END
	BLOCK 326

L_1106:
	DBG BLOCK END
	BLOCK END
	BLOCK 327

L_1046:
	BLOCK END
	BLOCK 328

L_1107:
	DBG BLOCK END
; Line 891:	                    else 

	BLOCK END
	BLOCK 329

L_1108:
	DBG BLOCK END
	BLOCK END
	BLOCK 330

L_1109:
	DBG BLOCK END
	BLOCK END
	BLOCK 331

L_1037:
	BLOCK END
	BLOCK 332

L_1110:
	DBG BLOCK END
	BLOCK END
	BLOCK 333

L_1111:
	DBG BLOCK END
	BLOCK END
	BLOCK 334

L_1029:
	BLOCK END
	BLOCK 335

L_1112:
	DBG BLOCK END
	BLOCK END
	BLOCK 336

L_1113:
	DBG BLOCK END
	BLOCK END
	BLOCK 337

L_1021:
	BLOCK END
	BLOCK 338

L_1114:
	DBG BLOCK END
; Line 892:	                        *aph = aimmed(0); 

	BLOCK END
	BLOCK 339

L_1115:
	DBG BLOCK END
	BLOCK END
	BLOCK 340

L_1117:
	DBG BLOCK END
	GOTO	L_1116:PC
	BLOCK END
	BLOCK 341
	DBG BLOCK START
	BLOCK END
	BLOCK 342

L_1118:
	BLOCK END
	BLOCK 343

L_1012:
; Line 894:	                } 
; Line 895:	            } 

; Line 895:	            } 

	DBG BLOCK START
	BLOCK END
	BLOCK 344

L_1120:
; Line 896:	        } 
; Line 899:	    { 

; Line 897:	    } 

	T443(EAX).A =   _im:LINK(12).A
	T444(EAX).I =   *(T443(EAX) + 0).A.I
	CONDGO	L_1119:PC ; T444(EAX).I != #2.C
	BLOCK END
	BLOCK 345
	DBG BLOCK START
	BLOCK END
	BLOCK 346

L_1121:
; Line 898:	    else if (im->mode == Optimizer::i_direct) 

	DBG BLOCK START
	BLOCK END
	BLOCK 347

L_1122:
; Line 907:	        if (im->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 348

L_1124:
	T445(EAX).A =   _im:LINK(12).A
	T446(EAX).I =   *(T445(EAX) + 19).A.C
	CONDGO	L_1123:PC ; T446(EAX).I S< #12.C
	BLOCK END
	BLOCK 349
	DBG BLOCK START
	BLOCK END
	BLOCK 350

L_1125:
; Line 908:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 351

L_1126:
; Line 909:	            if (im->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 352

L_1128:
	T447(EAX).A =   _im:LINK(12).A
	T448(EAX).I =   *(T447(EAX) + 19).A.C
	CONDGO	L_1127:PC ; T448(EAX).I S< #18.C
	BLOCK END
	BLOCK 353
	DBG BLOCK START
	BLOCK END
	BLOCK 354

L_1129:
; Line 910:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 355

L_1130:
; Line 911:	                if (im->offset->type == Optimizer::se_tempref && !im->offset->right) 

	DBG BLOCK START
	BLOCK END
	BLOCK 356

L_1132:
	T449(EAX).A =   _im:LINK(12).A
	T450(EAX).A =   *(T449(EAX) + 4).A.A
	T451(EAX).I =   *(T450(EAX) + 0).A.I
	CONDGO	L_1131:PC ; T451(EAX).I != #12.C
	BLOCK END
	BLOCK 357
	T452(EAX).A =   _im:LINK(12).A
	T453(EAX).A =   *(T452(EAX) + 4).A.A
	T454(EAX).A =   *(T453(EAX) + 3C).A.A
	CONDGO	L_1131:PC ; T454(EAX).A != #0.A
	BLOCK END
	BLOCK 358
	DBG BLOCK START
	BLOCK END
	BLOCK 359

L_1133:
; Line 912:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 360

L_1134:
; Line 913:	                    int clr = beRegFromTemp(q, im); 

	VAR START	clr
	T455(EAX).A =   _im:LINK(12).A
	PARM	T455(EAX).A
	T456(EAX).A =   _q:LINK(4).A
	PARM	T456(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T457(EAX).I =   RV.T33(EAX).I
	PARMADJ	#8.N
	_clr:LINK(-36).I =   T457(EAX).I
	VAR START	reg1
	VAR START	reg2
	DBG BLOCK START
	BLOCK END
	BLOCK 361

L_1136:
; Line 914:	                    int reg1, reg2; 
; Line 915:	                    if (clr == 0) 

; Line 915:	                    if (clr == 0) 

	T458(EAX).I =   _clr:LINK(-36).I
	CONDGO	L_1135:PC ; T458(EAX).I != #0.C
	BLOCK END
	BLOCK 362
	DBG BLOCK START
	BLOCK END
	BLOCK 363

L_1137:
; Line 916:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 364

L_1138:
; Line 917:	                        reg1 = 1; 

	T459(EAX).I =   #1.C
	_reg1:LINK(-40).I =   T459(EAX).I
; Line 918:	                        reg2 = 0; 

	T460(EAX).I =   #0.C
	_reg2:LINK(-44).I =   T460(EAX).I
; Line 919:	                    } 

	BLOCK END
	BLOCK 365

L_1139:
	DBG BLOCK END
	BLOCK END
	BLOCK 366

L_1141:
	DBG BLOCK END
	GOTO	L_1140:PC
	BLOCK END
	BLOCK 367
	DBG BLOCK START
	BLOCK END
	BLOCK 368

L_1142:
	BLOCK END
	BLOCK 369

L_1135:
; Line 920:	                    else 

; Line 921:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 370

L_1143:
; Line 922:	                        reg1 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][1]; 

	T461(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T462(EAX).A =   *(T461(EAX) + 44).A.A
	T463(ECX).A =   *(T462(EAX) + 58).A.A
	T464(EAX).I =   _clr:LINK(-36).I
	T465(EAX).I = T464(EAX).I & #FF.I
	T466(EAX).I =   *(T463(ECX) + T465(EAX) * 8 + 4).A.I
	_reg1:LINK(-40).I =   T466(EAX).I
; Line 923:	                        reg2 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][0]; 

	T467(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T468(EAX).A =   *(T467(EAX) + 44).A.A
	T469(ECX).A =   *(T468(EAX) + 58).A.A
	T470(EAX).I =   _clr:LINK(-36).I
	T471(EAX).I = T470(EAX).I & #FF.I
	T472(EAX).I =   *(T469(ECX) + T471(EAX) * 8).A.I
	_reg2:LINK(-44).I =   T472(EAX).I
; Line 924:	                    } 

	BLOCK END
	BLOCK 371

L_1144:
	DBG BLOCK END
	BLOCK END
	BLOCK 372

L_1145:
	DBG BLOCK END
	BLOCK END
	BLOCK 373

L_1140:
	BLOCK END
	BLOCK 374

L_1146:
	DBG BLOCK END
; Line 925:	                    *apl = makeSSE(reg2); 

	T473(EAX).I =   _reg2:LINK(-44).I
	PARM	T473(EAX).I
	TAG
	GOSUB	#@occx86@makeSSE$qi:PC.UI
	T474(ECX).A =   RV.T34(EAX).A
	PARMADJ	#4.N
	T475(EAX).A =   _apl:LINK(16).A
	*(T475(EAX)).A.A =   T474(ECX).A
; Line 926:	                    *aph = makeSSE(reg1); 

	T476(EAX).I =   _reg1:LINK(-40).I
	PARM	T476(EAX).I
	TAG
	GOSUB	#@occx86@makeSSE$qi:PC.UI
	T477(ECX).A =   RV.T35(EAX).A
	PARMADJ	#4.N
	T478(EAX).A =   _aph:LINK(20).A
	*(T478(EAX)).A.A =   T477(ECX).A
; Line 928:	                } 

	BLOCK END
	BLOCK 375

L_1147:
	DBG BLOCK END
	BLOCK END
	BLOCK 376

L_1149:
	DBG BLOCK END
	GOTO	L_1148:PC
	BLOCK END
	BLOCK 377
	DBG BLOCK START
	BLOCK END
	BLOCK 378

L_1150:
	BLOCK END
	BLOCK 379

L_1131:
; Line 929:	                else 

; Line 930:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 380

L_1151:
; Line 931:	                    *apl = make_offset(im->offset); 

	T479(EAX).A =   _im:LINK(12).A
	T480(EAX).A =   *(T479(EAX) + 4).A.A
	PARM	T480(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T481(ECX).A =   RV.T36(EAX).A
	PARMADJ	#4.N
	T482(EAX).A =   _apl:LINK(16).A
	*(T482(EAX)).A.A =   T481(ECX).A
; Line 932:	                    *aph = make_offset(im->offset); 

	T483(EAX).A =   _im:LINK(12).A
	T484(EAX).A =   *(T483(EAX) + 4).A.A
	PARM	T484(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T485(ECX).A =   RV.T37(EAX).A
	PARMADJ	#4.N
	T486(EAX).A =   _aph:LINK(20).A
	*(T486(EAX)).A.A =   T485(ECX).A
; Line 933:	                    (*aph)->offset = Optimizer::simpleExpressionNode( 

	T487(EAX).A =   _im:LINK(12).A
	T488(EAX).I =   *(T487(EAX) + 19).A.C
	PARM	T488(EAX).I
	TAG
	GOSUB	#@occx86@imaginary_offset$qi:PC.UI
	T489(EAX).I =   RV.T38(EAX).I
	PARMADJ	#4.N
	T490(EDX:EAX).ULL =   T489(EAX).I
	PARM	T490(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T491(EAX).A =   RV.T39(EAX).A
	PARMADJ	#C.N
	PARM	T491(EAX).A
	T492(EAX).A =   _aph:LINK(20).A
	T493(EAX).A =   *(T492(EAX)).A.A
	T494(EAX).A =   *(T493(EAX) + C).A.A
	PARM	T494(EAX).A
	T495(EAX).UI =   #1.C
	PARM	T495(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T496(ECX).A =   RV.T40(EAX).A
	PARMADJ	#C.N
	T497(EAX).A =   _aph:LINK(20).A
	T498(EAX).A =   *(T497(EAX)).A.A
	*(T498(EAX) + C).A.A =   T496(ECX).A
; Line 935:	                } 

	BLOCK END
	BLOCK 381

L_1152:
	DBG BLOCK END
	BLOCK END
	BLOCK 382

L_1153:
	DBG BLOCK END
	BLOCK END
	BLOCK 383

L_1148:
	BLOCK END
	BLOCK 384

L_1154:
	DBG BLOCK END
; Line 936:	            } 

	BLOCK END
	BLOCK 385

L_1155:
	DBG BLOCK END
	BLOCK END
	BLOCK 386

L_1157:
	DBG BLOCK END
	GOTO	L_1156:PC
	BLOCK END
	BLOCK 387
	DBG BLOCK START
	BLOCK END
	BLOCK 388

L_1158:
	BLOCK END
	BLOCK 389

L_1127:
; Line 937:	            else if (im->offset->type == Optimizer::se_tempref && !im->offset->right) 

	DBG BLOCK START
	BLOCK END
	BLOCK 390

L_1160:
	T499(EAX).A =   _im:LINK(12).A
	T500(EAX).A =   *(T499(EAX) + 4).A.A
	T501(EAX).I =   *(T500(EAX) + 0).A.I
	CONDGO	L_1159:PC ; T501(EAX).I != #12.C
	BLOCK END
	BLOCK 391
	T502(EAX).A =   _im:LINK(12).A
	T503(EAX).A =   *(T502(EAX) + 4).A.A
	T504(EAX).A =   *(T503(EAX) + 3C).A.A
	CONDGO	L_1159:PC ; T504(EAX).A != #0.A
	BLOCK END
	BLOCK 392
	DBG BLOCK START
	BLOCK END
	BLOCK 393

L_1161:
; Line 938:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 394

L_1162:
; Line 939:	                int clr = beRegFromTemp(q, im); 

	VAR START	clr
	T505(EAX).A =   _im:LINK(12).A
	PARM	T505(EAX).A
	T506(EAX).A =   _q:LINK(4).A
	PARM	T506(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T507(EAX).I =   RV.T41(EAX).I
	PARMADJ	#8.N
	_clr:LINK(-28).I =   T507(EAX).I
	VAR START	reg
; Line 940:	                int reg; 
; Line 941:	                reg = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][0]; 

; Line 941:	                reg = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][0]; 

	T508(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T509(EAX).A =   *(T508(EAX) + 44).A.A
	T510(ECX).A =   *(T509(EAX) + 58).A.A
	T511(EAX).I =   _clr:LINK(-28).I
	T512(EAX).I = T511(EAX).I & #FF.I
	T513(EAX).I =   *(T510(ECX) + T512(EAX) * 8).A.I
	_reg:LINK(-32).I =   T513(EAX).I
; Line 942:	                *apl = makeSSE(reg); 

	T514(EAX).I =   _reg:LINK(-32).I
	PARM	T514(EAX).I
	TAG
	GOSUB	#@occx86@makeSSE$qi:PC.UI
	T515(ECX).A =   RV.T42(EAX).A
	PARMADJ	#4.N
	T516(EAX).A =   _apl:LINK(16).A
	*(T516(EAX)).A.A =   T515(ECX).A
; Line 943:	            } 

	BLOCK END
	BLOCK 395

L_1163:
	DBG BLOCK END
	BLOCK END
	BLOCK 396

L_1165:
	DBG BLOCK END
	GOTO	L_1164:PC
	BLOCK END
	BLOCK 397
	DBG BLOCK START
	BLOCK END
	BLOCK 398

L_1166:
	BLOCK END
	BLOCK 399

L_1159:
; Line 944:	            else 

; Line 945:	                *apl = make_offset(im->offset); 

	T517(EAX).A =   _im:LINK(12).A
	T518(EAX).A =   *(T517(EAX) + 4).A.A
	PARM	T518(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T519(ECX).A =   RV.T43(EAX).A
	PARMADJ	#4.N
	T520(EAX).A =   _apl:LINK(16).A
	*(T520(EAX)).A.A =   T519(ECX).A
	BLOCK END
	BLOCK 400

L_1167:
	DBG BLOCK END
	BLOCK END
	BLOCK 401

L_1164:
	BLOCK END
	BLOCK 402

L_1168:
	DBG BLOCK END
	BLOCK END
	BLOCK 403

L_1169:
	DBG BLOCK END
	BLOCK END
	BLOCK 404

L_1156:
	BLOCK END
	BLOCK 405

L_1170:
	DBG BLOCK END
; Line 946:	        } 

	BLOCK END
	BLOCK 406

L_1171:
	DBG BLOCK END
	BLOCK END
	BLOCK 407

L_1173:
	DBG BLOCK END
	GOTO	L_1172:PC
	BLOCK END
	BLOCK 408
	DBG BLOCK START
	BLOCK END
	BLOCK 409

L_1174:
	BLOCK END
	BLOCK 410

L_1123:
; Line 947:	        else if (im->size == ISZ_ULONGLONG || im->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 411

L_1176:
	T521(EAX).A =   _im:LINK(12).A
	T522(AL).C =   *(T521(EAX) + 19).A.C
	CONDGO	L_1260:PC ; T522(AL).C == #B.C
	BLOCK END
	BLOCK 412
	T523(EAX).A =   _im:LINK(12).A
	T524(EAX).I =   *(T523(EAX) + 19).A.C
	CONDGO	L_1175:PC ; T524(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 413

L_1260:
	DBG BLOCK START
	BLOCK END
	BLOCK 414

L_1177:
; Line 948:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 415

L_1178:
; Line 949:	            if (im->offset->type == Optimizer::se_tempref) 

	DBG BLOCK START
	BLOCK END
	BLOCK 416

L_1180:
	T554(EAX).A =   _im:LINK(12).A
	T555(EAX).A =   *(T554(EAX) + 4).A.A
	T556(EAX).I =   *(T555(EAX) + 0).A.I
	CONDGO	L_1179:PC ; T556(EAX).I != #12.C
	BLOCK END
	BLOCK 417
	DBG BLOCK START
	BLOCK END
	BLOCK 418

L_1181:
; Line 950:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 419

L_1182:
; Line 951:	                int clr = beRegFromTemp(q, im); 

	VAR START	clr
	T557(EAX).A =   _im:LINK(12).A
	PARM	T557(EAX).A
	T558(EAX).A =   _q:LINK(4).A
	PARM	T558(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T559(EAX).I =   RV.T44(EAX).I
	PARMADJ	#8.N
	_clr:LINK(-16).I =   T559(EAX).I
	VAR START	reg1
	VAR START	reg2
; Line 952:	                int reg1, reg2; 
; Line 953:	                reg1 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][1]; 

; Line 953:	                reg1 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][1]; 

	T560(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T561(EAX).A =   *(T560(EAX) + 44).A.A
	T562(ECX).A =   *(T561(EAX) + 58).A.A
	T563(EAX).I =   _clr:LINK(-16).I
	T564(EAX).I = T563(EAX).I & #FF.I
	T565(EAX).I =   *(T562(ECX) + T564(EAX) * 8 + 4).A.I
	_reg1:LINK(-20).I =   T565(EAX).I
; Line 954:	                reg2 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][0]; 

	T566(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T567(EAX).A =   *(T566(EAX) + 44).A.A
	T568(ECX).A =   *(T567(EAX) + 58).A.A
	T569(EAX).I =   _clr:LINK(-16).I
	T570(EAX).I = T569(EAX).I & #FF.I
	T571(EAX).I =   *(T568(ECX) + T570(EAX) * 8).A.I
	_reg2:LINK(-24).I =   T571(EAX).I
; Line 955:	                *apl = makedreg(reg2); 

	T572(EAX).I =   _reg2:LINK(-24).I
	PARM	T572(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T573(ECX).A =   RV.T45(EAX).A
	PARMADJ	#4.N
	T574(EAX).A =   _apl:LINK(16).A
	*(T574(EAX)).A.A =   T573(ECX).A
; Line 956:	                *aph = makedreg(reg1); 

	T575(EAX).I =   _reg1:LINK(-20).I
	PARM	T575(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T576(ECX).A =   RV.T46(EAX).A
	PARMADJ	#4.N
	T577(EAX).A =   _aph:LINK(20).A
	*(T577(EAX)).A.A =   T576(ECX).A
; Line 957:	                (*apl)->liveRegs = (*aph)->liveRegs = (1 << reg1) | (1 << reg2); 

	T579(ECX).I =   _reg1:LINK(-20).I
	T642(EAX).I =   T579(ECX).I^
	T648(ECX).I =   T642(EAX).I^
	T580(EDX).I = #1.C << T648(ECX).I
	T582(ECX).I =   _reg2:LINK(-24).I
	T641(EAX).I =   T582(ECX).I^
	T647(ECX).I =   T641(EAX).I^
	T583(EAX).I = #1.C << T647(ECX).I
	T584(ECX).I = T580(EDX).I | T583(EAX).I
	T585(EAX).A =   _aph:LINK(20).A
	T586(EAX).A =   *(T585(EAX)).A.A
	*(T586(EAX) + 10).A.I =   T584(ECX).I
	T587(ECX).I =   *(T586(EAX) + 10).A.I
	T588(EAX).A =   _apl:LINK(16).A
	T589(EAX).A =   *(T588(EAX)).A.A
	*(T589(EAX) + 10).A.I =   T587(ECX).I
; Line 958:	            } 

	BLOCK END
	BLOCK 420

L_1183:
	DBG BLOCK END
	BLOCK END
	BLOCK 421

L_1185:
	DBG BLOCK END
	GOTO	L_1184:PC
	BLOCK END
	BLOCK 422
	DBG BLOCK START
	BLOCK END
	BLOCK 423

L_1186:
	BLOCK END
	BLOCK 424

L_1179:
; Line 959:	            else 

; Line 960:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 425

L_1187:
; Line 961:	                *apl = make_offset(im->offset); 

	T590(EAX).A =   _im:LINK(12).A
	T591(EAX).A =   *(T590(EAX) + 4).A.A
	PARM	T591(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T592(ECX).A =   RV.T47(EAX).A
	PARMADJ	#4.N
	T593(EAX).A =   _apl:LINK(16).A
	*(T593(EAX)).A.A =   T592(ECX).A
; Line 962:	                *aph = copy_addr(*apl); 

	T594(EAX).A =   _apl:LINK(16).A
	T595(EAX).A =   *(T594(EAX)).A.A
	PARM	T595(EAX).A
	TAG
	GOSUB	#@occx86@copy_addr$qp5amode:PC.UI
	T596(ECX).A =   RV.T48(EAX).A
	PARMADJ	#4.N
	T597(EAX).A =   _aph:LINK(20).A
	*(T597(EAX)).A.A =   T596(ECX).A
; Line 963:	                (*aph)->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, (*aph)->offset, 

	T598(EDX:EAX).ULL =   #4.I
	PARM	T598(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T599(EAX).A =   RV.T49(EAX).A
	PARMADJ	#C.N
	PARM	T599(EAX).A
	T600(EAX).A =   _aph:LINK(20).A
	T601(EAX).A =   *(T600(EAX)).A.A
	T602(EAX).A =   *(T601(EAX) + C).A.A
	PARM	T602(EAX).A
	T603(EAX).UI =   #1.C
	PARM	T603(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T604(ECX).A =   RV.T50(EAX).A
	PARMADJ	#C.N
	T605(EAX).A =   _aph:LINK(20).A
	T606(EAX).A =   *(T605(EAX)).A.A
	*(T606(EAX) + C).A.A =   T604(ECX).A
; Line 965:	            } 

	BLOCK END
	BLOCK 426

L_1188:
	DBG BLOCK END
	BLOCK END
	BLOCK 427

L_1189:
	DBG BLOCK END
	BLOCK END
	BLOCK 428

L_1184:
	BLOCK END
	BLOCK 429

L_1190:
	DBG BLOCK END
; Line 966:	        } 

	BLOCK END
	BLOCK 430

L_1191:
	DBG BLOCK END
	BLOCK END
	BLOCK 431

L_1193:
	DBG BLOCK END
	GOTO	L_1192:PC
	BLOCK END
	BLOCK 432
	DBG BLOCK START
	BLOCK END
	BLOCK 433

L_1194:
	BLOCK END
	BLOCK 434

L_1175:
; Line 967:	        else if (im->offset->type == Optimizer::se_tempref) 

	DBG BLOCK START
	BLOCK END
	BLOCK 435

L_1196:
	T525(EAX).A =   _im:LINK(12).A
	T526(EAX).A =   *(T525(EAX) + 4).A.A
	T527(EAX).I =   *(T526(EAX) + 0).A.I
	CONDGO	L_1195:PC ; T527(EAX).I != #12.C
	BLOCK END
	BLOCK 436
	DBG BLOCK START
	BLOCK END
	BLOCK 437

L_1197:
; Line 968:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 438

L_1198:
; Line 969:	            int l = Optimizer::chosenAssembler->arch->regMap[beRegFromTemp(q, im)][0]; 

	VAR START	l
	T528(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T529(EAX).A =   *(T528(EAX) + 44).A.A
	T530(EBX).A =   *(T529(EAX) + 58).A.A
	T531(EAX).A =   _im:LINK(12).A
	PARM	T531(EAX).A
	T532(EAX).A =   _q:LINK(4).A
	PARM	T532(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T533(EAX).I =   RV.T51(EAX).I
	PARMADJ	#8.N
	T534(EAX).I =   *(T530(EBX) + T533(EAX) * 8).A.I
	_l:LINK(-12).I =   T534(EAX).I
; Line 970:	            *apl = makedreg(l); 

	T535(EAX).I =   _l:LINK(-12).I
	PARM	T535(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T536(ECX).A =   RV.T52(EAX).A
	PARMADJ	#4.N
	T537(EAX).A =   _apl:LINK(16).A
	*(T537(EAX)).A.A =   T536(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 439

L_1200:
; Line 971:	            if (im->size < ISZ_FLOAT) 

	T538(EAX).A =   _im:LINK(12).A
	T539(EAX).I =   *(T538(EAX) + 19).A.C
	CONDGO	L_1199:PC ; T539(EAX).I S>= #12.C
	BLOCK END
	BLOCK 440
	DBG BLOCK START
	BLOCK END
	BLOCK 441

L_1201:
; Line 972:	                (*apl)->length = im->size; 

	T540(EAX).A =   _im:LINK(12).A
	T541(CL).C =   *(T540(EAX) + 19).A.C
	T542(EAX).A =   _apl:LINK(16).A
	T543(EAX).A =   *(T542(EAX)).A.A
	*(T543(EAX) + 8).A.C =   T541(CL).C
	BLOCK END
	BLOCK 442

L_1202:
	DBG BLOCK END
	BLOCK END
	BLOCK 443

L_1199:
	BLOCK END
	BLOCK 444

L_1203:
	DBG BLOCK END
; Line 973:	        } 

	BLOCK END
	BLOCK 445

L_1204:
	DBG BLOCK END
	BLOCK END
	BLOCK 446

L_1206:
	DBG BLOCK END
	GOTO	L_1205:PC
	BLOCK END
	BLOCK 447
	DBG BLOCK START
	BLOCK END
	BLOCK 448

L_1207:
	BLOCK END
	BLOCK 449

L_1195:
; Line 974:	        else 

; Line 975:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 450

L_1208:
; Line 976:	            *apl = make_offset(im->offset); 

	T544(EAX).A =   _im:LINK(12).A
	T545(EAX).A =   *(T544(EAX) + 4).A.A
	PARM	T545(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T546(ECX).A =   RV.T53(EAX).A
	PARMADJ	#4.N
	T547(EAX).A =   _apl:LINK(16).A
	*(T547(EAX)).A.A =   T546(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 451

L_1210:
; Line 977:	            if (im->size < ISZ_FLOAT) 

	T548(EAX).A =   _im:LINK(12).A
	T549(EAX).I =   *(T548(EAX) + 19).A.C
	CONDGO	L_1209:PC ; T549(EAX).I S>= #12.C
	BLOCK END
	BLOCK 452
	DBG BLOCK START
	BLOCK END
	BLOCK 453

L_1211:
; Line 978:	                (*apl)->length = im->size; 

	T550(EAX).A =   _im:LINK(12).A
	T551(CL).C =   *(T550(EAX) + 19).A.C
	T552(EAX).A =   _apl:LINK(16).A
	T553(EAX).A =   *(T552(EAX)).A.A
	*(T553(EAX) + 8).A.C =   T551(CL).C
	BLOCK END
	BLOCK 454

L_1212:
	DBG BLOCK END
	BLOCK END
	BLOCK 455

L_1209:
	BLOCK END
	BLOCK 456

L_1213:
	DBG BLOCK END
; Line 979:	        } 

	BLOCK END
	BLOCK 457

L_1214:
	DBG BLOCK END
	BLOCK END
	BLOCK 458

L_1215:
	DBG BLOCK END
	BLOCK END
	BLOCK 459

L_1205:
	BLOCK END
	BLOCK 460

L_1216:
	DBG BLOCK END
	BLOCK END
	BLOCK 461

L_1217:
	DBG BLOCK END
	BLOCK END
	BLOCK 462

L_1192:
	BLOCK END
	BLOCK 463

L_1218:
	DBG BLOCK END
	BLOCK END
	BLOCK 464

L_1219:
	DBG BLOCK END
	BLOCK END
	BLOCK 465

L_1172:
	BLOCK END
	BLOCK 466

L_1220:
	DBG BLOCK END
; Line 980:	    } 

	BLOCK END
	BLOCK 467

L_1221:
	DBG BLOCK END
	BLOCK END
	BLOCK 468

L_1222:
	DBG BLOCK END
	BLOCK END
	BLOCK 469

L_1119:
	BLOCK END
	BLOCK 470

L_1223:
	DBG BLOCK END
	BLOCK END
	BLOCK 471

L_1224:
	DBG BLOCK END
	BLOCK END
	BLOCK 472

L_1116:
	BLOCK END
	BLOCK 473

L_1225:
	DBG BLOCK END
	BLOCK END
	BLOCK 474

L_1226:
	DBG BLOCK END
	BLOCK END
	BLOCK 475

L_1009:
	BLOCK END
	BLOCK 476

L_1227:
	DBG BLOCK END
	BLOCK END
	BLOCK 477

L_1228:
	DBG BLOCK END
	BLOCK END
	BLOCK 478

L_853:
	BLOCK END
	BLOCK 479

L_1229:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 480

L_1231:
; Line 981:	    if (!(*aph)) 

	T607(EAX).A =   _aph:LINK(20).A
	T608(EAX).A =   *(T607(EAX)).A.A
	CONDGO	L_1230:PC ; T608(EAX).A != #0.A
	BLOCK END
	BLOCK 481
	DBG BLOCK START
	BLOCK END
	BLOCK 482

L_1232:
	DBG BLOCK START
	BLOCK END
	BLOCK 483

L_1234:
; Line 982:	        if ((*apl)->liveRegs == -1) 

	T609(EAX).A =   _apl:LINK(16).A
	T610(EAX).A =   *(T609(EAX)).A.A
	T611(EAX).I =   *(T610(EAX) + 10).A.I
	CONDGO	L_1233:PC ; T611(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 484
	DBG BLOCK START
	BLOCK END
	BLOCK 485

L_1235:
; Line 983:	            (*apl)->liveRegs = 0; 

	T612(EAX).A =   _apl:LINK(16).A
	T613(ECX).A =   *(T612(EAX)).A.A
	T614(EAX).I =   #0.C
	*(T613(ECX) + 10).A.I =   T614(EAX).I
	BLOCK END
	BLOCK 486

L_1236:
	DBG BLOCK END
	BLOCK END
	BLOCK 487

L_1233:
	BLOCK END
	BLOCK 488

L_1237:
	DBG BLOCK END
	BLOCK END
	BLOCK 489

L_1238:
	DBG BLOCK END
	BLOCK END
	BLOCK 490

L_1230:
	BLOCK END
	BLOCK 491

L_1239:
	DBG BLOCK END
; Line 984:	    (*apl)->liveRegs |= q->liveRegs; 

	T615(EAX).A =   _apl:LINK(16).A
	T616(EAX).A =   *(T615(EAX)).A.A
	T617(EAX).A = T616(EAX).A + #10.A
	_$anontemp349:LINK(-4).A =   T617(EAX).A
	T618(EAX).A =   _$anontemp349:LINK(-4).A
	T619(EBX:ESI).ULL =   *(T618(EAX)).A.I
	T620(EAX).A =   _q:LINK(4).A
	T621(EDX:EAX).ULL =   *(T620(EAX) + 48).A.ULL
	T622(EDX:EAX).ULL = T619(EBX:ESI).ULL | T621(EDX:EAX).ULL
	T623(ECX).I =   T622(EDX:EAX).ULL
	T624(EAX).A =   _$anontemp349:LINK(-4).A
	*(T624(EAX)).A.I =   T623(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 492

L_1241:
; Line 985:	    if (*aph) 

	T625(EAX).A =   _aph:LINK(20).A
	T626(EAX).A =   *(T625(EAX)).A.A
	CONDGO	L_1240:PC ; T626(EAX).A == #0.A
	BLOCK END
	BLOCK 493
	DBG BLOCK START
	BLOCK END
	BLOCK 494

L_1242:
; Line 986:	        (*aph)->liveRegs |= q->liveRegs; 

	T627(EAX).A =   _aph:LINK(20).A
	T628(EAX).A =   *(T627(EAX)).A.A
	T629(EAX).A = T628(EAX).A + #10.A
	_$anontemp350:LINK(-8).A =   T629(EAX).A
	T630(EAX).A =   _$anontemp350:LINK(-8).A
	T631(EBX:ESI).ULL =   *(T630(EAX)).A.I
	T632(EAX).A =   _q:LINK(4).A
	T633(EDX:EAX).ULL =   *(T632(EAX) + 48).A.ULL
	T634(EDX:EAX).ULL = T631(EBX:ESI).ULL | T633(EDX:EAX).ULL
	T635(ECX).I =   T634(EDX:EAX).ULL
	T636(EAX).A =   _$anontemp350:LINK(-8).A
	*(T636(EAX)).A.I =   T635(ECX).I
	BLOCK END
	BLOCK 495

L_1243:
	DBG BLOCK END
	BLOCK END
	BLOCK 496

L_1240:
	BLOCK END
	BLOCK 497

L_1244:
	DBG BLOCK END
; Line 987:	} 

	BLOCK END
	BLOCK 498

L_1245:
	DBG BLOCK END
	BLOCK END
	BLOCK 499

L_846:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@bit_store$qp5amodepn0iii


global @occx86@bit_store$qp5amodepn0iii
@occx86@bit_store$qp5amodepn0iii:
; Line 989:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#8.UI
	BLOCK END
	BLOCK 2

L_1264:
	VAR START	dest
	VAR START	src
	VAR START	size
	VAR START	bits
	VAR START	startbit
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1266:
; Line 990:	    if (src->mode == am_immed && isintconst(src->offset)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1268:
	T9(EAX).A =   _src:LINK(8).A
	T10(EAX).I =   *(T9(EAX) + 0).A.I
	CONDGO	L_1267:PC ; T10(EAX).I != #10.I
	BLOCK END
	BLOCK 5
	T11(EAX).A =   _src:LINK(8).A
	T12(EAX).A =   *(T11(EAX) + C).A.A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1267:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 6
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1269:
; Line 991:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1270:
; Line 992:	        if (bits == 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_1272:
	T14(EAX).I =   _bits:LINK(16).I
	CONDGO	L_1271:PC ; T14(EAX).I != #1.C
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_1273:
; Line 993:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_1274:
; Line 994:	            if (src->offset->i & 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_1276:
	T15(EAX).A =   _src:LINK(8).A
	T16(EAX).A =   *(T15(EAX) + C).A.A
	T17(EDX:EAX).LL =   *(T16(EAX) + 8).A.LL
	T18(EDX:EAX).LL = T17(EDX:EAX).LL & #1.LL
	CONDGO	L_1275:PC ; T18(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_1277:
; Line 995:	                gen_codes(op_bts, ISZ_UINT, dest, aimmed(startbit)); 

	T19(EDX:EAX).ULL =   _startbit:LINK(20).I
	PARM	T19(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T20(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T20(EAX).A
	T21(EAX).A =   _dest:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).UI =   #7.C
	PARM	T22(EAX).UI
	PARM	#2F.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 16

L_1279:
	DBG BLOCK END
	GOTO	L_1278:PC
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_1280:
	BLOCK END
	BLOCK 19

L_1275:
; Line 996:	            else 

; Line 997:	                gen_codes(op_btr, ISZ_UINT, dest, aimmed(startbit)); 

	T23(EDX:EAX).ULL =   _startbit:LINK(20).I
	PARM	T23(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T24(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T24(EAX).A
	T25(EAX).A =   _dest:LINK(4).A
	PARM	T25(EAX).A
	T26(EAX).UI =   #7.C
	PARM	T26(EAX).UI
	PARM	#2E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 20

L_1281:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_1278:
	BLOCK END
	BLOCK 22

L_1282:
	DBG BLOCK END
; Line 998:	        } 

	BLOCK END
	BLOCK 23

L_1283:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_1285:
	DBG BLOCK END
	GOTO	L_1284:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_1286:
	BLOCK END
	BLOCK 27

L_1271:
; Line 999:	        else 

; Line 1000:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_1287:
; Line 1001:	            int l = dest->liveRegs; 

	VAR START	l
	T27(EAX).A =   _dest:LINK(4).A
	T28(EAX).I =   *(T27(EAX) + 10).A.I
	_l:LINK(-4).I =   T28(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_1289:
; Line 1002:	            if (dest->mode == am_indisp && dest->preg != EBP) 

	T29(EAX).A =   _dest:LINK(4).A
	T30(EAX).I =   *(T29(EAX) + 0).A.I
	CONDGO	L_1288:PC ; T30(EAX).I != #C.C
	BLOCK END
	BLOCK 30
	T31(EAX).A =   _dest:LINK(4).A
	T32(AL).C =   *(T31(EAX) + 4).A.C
	CONDGO	L_1288:PC ; T32(AL).C == #5.C
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_1290:
; Line 1003:	                dest->liveRegs |= 1 << dest->preg; 

	T33(EAX).A =   _dest:LINK(4).A
	T34(EAX).A = T33(EAX).A + #10.A
	_$anontemp351:LINK(-8).A =   T34(EAX).A
	T35(EDX).A =   _$anontemp351:LINK(-8).A
	T36(EAX).A =   _dest:LINK(4).A
	T38(CL).C =   *(T36(EAX) + 4).A.C
	T105(AL).C =   T38(CL).C^
	T112(CL).C =   T105(AL).C^
	T39(EAX).I = #1.C << T112(CL).C
	T40(ECX).I = *(T35(EDX)).A.I | T39(EAX).I
	T41(EAX).A =   _$anontemp351:LINK(-8).A
	*(T41(EAX)).A.I =   T40(ECX).I
	BLOCK END
	BLOCK 33

L_1291:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_1288:
	BLOCK END
	BLOCK 35

L_1292:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_1294:
; Line 1004:	            if (bits != 32) 

	T42(EAX).I =   _bits:LINK(16).I
	CONDGO	L_1293:PC ; T42(EAX).I == #20.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_1295:
; Line 1005:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_1296:
; Line 1006:	                gen_codes(op_and, size, dest, aimmed(~(((1 << bits) - 1) << startbit))); 

	T44(ECX).I =   _bits:LINK(16).I
	T107(EAX).I =   T44(ECX).I^
	T114(ECX).I =   T107(EAX).I^
	T45(EAX).I = #1.C << T114(ECX).I
	T46(EDX).I = T45(EAX).I - #1.C
	T48(ECX).I =   _startbit:LINK(20).I
	T106(EAX).I =   T48(ECX).I^
	T113(ECX).I =   T106(EAX).I^
	T49(EAX).I = T46(EDX).I << T113(ECX).I
	T50(EAX).I =  ~ T49(EAX).I
	T51(EDX:EAX).ULL =   T50(EAX).I
	PARM	T51(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T52(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T52(EAX).A
	T53(EAX).A =   _dest:LINK(4).A
	PARM	T53(EAX).A
	T54(EAX).I =   _size:LINK(12).I
	PARM	T54(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1007:	            } 

	BLOCK END
	BLOCK 40

L_1297:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_1298:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_1293:
	BLOCK END
	BLOCK 43

L_1299:
	DBG BLOCK END
; Line 1008:	            dest->liveRegs = l; 

	T55(ECX).I =   _l:LINK(-4).I
	T56(EAX).A =   _dest:LINK(4).A
	*(T56(EAX) + 10).A.I =   T55(ECX).I
; Line 1009:	            gen_codes(op_or, size, dest, aimmed((src->offset->i & ((1 << bits) - 1)) << startbit)); 

	T57(EAX).A =   _src:LINK(8).A
	T58(EAX).A =   *(T57(EAX) + C).A.A
	T59(EDX:EAX).LL =   *(T58(EAX) + 8).A.LL
	T61(ECX).I =   _bits:LINK(16).I
	T108(EBX).I =   T61(ECX).I^
	T115(ECX).I =   T108(EBX).I^
	T62(EBX).I = #1.C << T115(ECX).I
	T63(ECX).I = T62(EBX).I - #1.C
	T64(EBX:ESI).LL =   T63(ECX).I
	T65(EDX:ECX).LL = T59(EDX:EAX).LL & T64(EBX:ESI).LL
	T67(EAX).I =   _startbit:LINK(20).I
	PARM	T67(EAX).I
	PARM	T65(EDX:ECX).LL
	GOSUB	#__LXSHL:PC.N
	PARMADJ	#0.N
	T69(EDX:EAX).LL =   RV.T8(EDX:EAX).ULL
	PARM	T69(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T70(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T70(EAX).A
	T71(EAX).A =   _dest:LINK(4).A
	PARM	T71(EAX).A
	T72(EAX).I =   _size:LINK(12).I
	PARM	T72(EAX).I
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1010:	        } 

	BLOCK END
	BLOCK 44

L_1300:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_1301:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_1284:
	BLOCK END
	BLOCK 47

L_1302:
	DBG BLOCK END
; Line 1011:	    } 

	BLOCK END
	BLOCK 48

L_1303:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_1305:
	DBG BLOCK END
	GOTO	L_1304:PC
	BLOCK END
	BLOCK 50
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_1306:
	BLOCK END
	BLOCK 52

L_1267:
; Line 1012:	    else 

; Line 1013:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_1307:
; Line 1014:	        if (bits != 32) 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_1309:
	T73(EAX).I =   _bits:LINK(16).I
	CONDGO	L_1308:PC ; T73(EAX).I == #20.I
	BLOCK END
	BLOCK 55
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_1310:
; Line 1015:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_1311:
; Line 1016:	            gen_codes(op_and, size, src, aimmed((1 << bits) - 1)); 

	T75(ECX).I =   _bits:LINK(16).I
	T111(EAX).I =   T75(ECX).I^
	T118(ECX).I =   T111(EAX).I^
	T76(EAX).I = #1.C << T118(ECX).I
	T77(EAX).I = T76(EAX).I - #1.C
	T78(EDX:EAX).ULL =   T77(EAX).I
	PARM	T78(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T79(EAX).A =   RV.T5(EAX).A
	PARMADJ	#8.N
	PARM	T79(EAX).A
	T80(EAX).A =   _src:LINK(8).A
	PARM	T80(EAX).A
	T81(EAX).I =   _size:LINK(12).I
	PARM	T81(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1017:	            gen_codes(op_and, size, dest, aimmed(~(((1 << bits) - 1) << startbit))); 

	T83(ECX).I =   _bits:LINK(16).I
	T110(EAX).I =   T83(ECX).I^
	T117(ECX).I =   T110(EAX).I^
	T84(EAX).I = #1.C << T117(ECX).I
	T85(EDX).I = T84(EAX).I - #1.C
	T87(ECX).I =   _startbit:LINK(20).I
	T109(EAX).I =   T87(ECX).I^
	T116(ECX).I =   T109(EAX).I^
	T88(EAX).I = T85(EDX).I << T116(ECX).I
	T89(EAX).I =  ~ T88(EAX).I
	T90(EDX:EAX).ULL =   T89(EAX).I
	PARM	T90(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T91(EAX).A =   RV.T6(EAX).A
	PARMADJ	#8.N
	PARM	T91(EAX).A
	T92(EAX).A =   _dest:LINK(4).A
	PARM	T92(EAX).A
	T93(EAX).I =   _size:LINK(12).I
	PARM	T93(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_1313:
; Line 1018:	            if (startbit) 

	T94(EAX).I =   _startbit:LINK(20).I
	CONDGO	L_1312:PC ; T94(EAX).I == #0.C
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_1314:
; Line 1019:	                gen_codes(op_shl, size, src, aimmed(startbit)); 

	T95(EDX:EAX).ULL =   _startbit:LINK(20).I
	PARM	T95(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T96(EAX).A =   RV.T7(EAX).A
	PARMADJ	#8.N
	PARM	T96(EAX).A
	T97(EAX).A =   _src:LINK(8).A
	PARM	T97(EAX).A
	T98(EAX).I =   _size:LINK(12).I
	PARM	T98(EAX).I
	PARM	#179.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 61

L_1315:
	DBG BLOCK END
	BLOCK END
	BLOCK 62

L_1312:
	BLOCK END
	BLOCK 63

L_1316:
	DBG BLOCK END
; Line 1020:	            gen_codes(op_or, size, dest, src); 

	T99(EAX).A =   _src:LINK(8).A
	PARM	T99(EAX).A
	T100(EAX).A =   _dest:LINK(4).A
	PARM	T100(EAX).A
	T101(EAX).I =   _size:LINK(12).I
	PARM	T101(EAX).I
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1021:	        } 

	BLOCK END
	BLOCK 64

L_1317:
	DBG BLOCK END
	BLOCK END
	BLOCK 65

L_1319:
	DBG BLOCK END
	GOTO	L_1318:PC
	BLOCK END
	BLOCK 66
	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_1320:
	BLOCK END
	BLOCK 68

L_1308:
; Line 1022:	        else 

; Line 1023:	            gen_codes(op_mov, size, dest, src); 

	T102(EAX).A =   _src:LINK(8).A
	PARM	T102(EAX).A
	T103(EAX).A =   _dest:LINK(4).A
	PARM	T103(EAX).A
	T104(EAX).I =   _size:LINK(12).I
	PARM	T104(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 69

L_1321:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_1318:
	BLOCK END
	BLOCK 71

L_1322:
	DBG BLOCK END
; Line 1024:	    } 

	BLOCK END
	BLOCK 72

L_1323:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_1324:
	DBG BLOCK END
	BLOCK END
	BLOCK 74

L_1304:
	BLOCK END
	BLOCK 75

L_1325:
	DBG BLOCK END
; Line 1025:	} 

	BLOCK END
	BLOCK 76

L_1326:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_1265:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@liveQualify$qp5amodepn0pn0


global @occx86@liveQualify$qp5amodepn0pn0
@occx86@liveQualify$qp5amodepn0pn0:
; Line 1027:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#18.UI
	BLOCK END
	BLOCK 2

L_1331:
	VAR START	reg
	VAR START	left
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1333:
; Line 1028:	    if (left) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1335:
	T0(EAX).A =   _left:LINK(8).A
	CONDGO	L_1334:PC ; T0(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_1336:
; Line 1029:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1337:
; Line 1030:	        if (left->mode == am_indisp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1339:
	T1(EAX).A =   _left:LINK(8).A
	T2(EAX).I =   *(T1(EAX) + 0).A.I
	CONDGO	L_1338:PC ; T2(EAX).I != #C.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_1340:
; Line 1031:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_1341:
; Line 1032:	            reg->liveRegs |= 1 << left->preg; 

	T3(EAX).A =   _reg:LINK(4).A
	T4(EAX).A = T3(EAX).A + #10.A
	_$anontemp352:LINK(-24).A =   T4(EAX).A
	T5(EDX).A =   _$anontemp352:LINK(-24).A
	T6(EAX).A =   _left:LINK(8).A
	T8(CL).C =   *(T6(EAX) + 4).A.C
	T64(AL).C =   T8(CL).C^
	T70(CL).C =   T64(AL).C^
	T9(EAX).I = #1.C << T70(CL).C
	T10(ECX).I = *(T5(EDX)).A.I | T9(EAX).I
	T11(EAX).A =   _$anontemp352:LINK(-24).A
	*(T11(EAX)).A.I =   T10(ECX).I
; Line 1033:	        } 

	BLOCK END
	BLOCK 12

L_1342:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_1344:
	DBG BLOCK END
	GOTO	L_1343:PC
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_1345:
	BLOCK END
	BLOCK 16

L_1338:
; Line 1034:	        else if (left->mode == am_indispscale) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_1347:
	T12(EAX).A =   _left:LINK(8).A
	T13(EAX).I =   *(T12(EAX) + 0).A.I
	CONDGO	L_1346:PC ; T13(EAX).I != #D.I
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_1348:
; Line 1035:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_1349:
; Line 1036:	            reg->liveRegs |= 1 << left->preg; 

	T14(EAX).A =   _reg:LINK(4).A
	T15(EAX).A = T14(EAX).A + #10.A
	_$anontemp353:LINK(-16).A =   T15(EAX).A
	T16(EDX).A =   _$anontemp353:LINK(-16).A
	T17(EAX).A =   _left:LINK(8).A
	T19(CL).C =   *(T17(EAX) + 4).A.C
	T66(AL).C =   T19(CL).C^
	T72(CL).C =   T66(AL).C^
	T20(EAX).I = #1.C << T72(CL).C
	T21(ECX).I = *(T16(EDX)).A.I | T20(EAX).I
	T22(EAX).A =   _$anontemp353:LINK(-16).A
	*(T22(EAX)).A.I =   T21(ECX).I
; Line 1037:	            reg->liveRegs |= 1 << left->sreg; 

	T23(EAX).A =   _reg:LINK(4).A
	T24(EAX).A = T23(EAX).A + #10.A
	_$anontemp354:LINK(-20).A =   T24(EAX).A
	T25(EDX).A =   _$anontemp354:LINK(-20).A
	T26(EAX).A =   _left:LINK(8).A
	T28(CL).C =   *(T26(EAX) + 5).A.C
	T65(AL).C =   T28(CL).C^
	T71(CL).C =   T65(AL).C^
	T29(EAX).I = #1.C << T71(CL).C
	T30(ECX).I = *(T25(EDX)).A.I | T29(EAX).I
	T31(EAX).A =   _$anontemp354:LINK(-20).A
	*(T31(EAX)).A.I =   T30(ECX).I
; Line 1038:	        } 

	BLOCK END
	BLOCK 21

L_1350:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_1351:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_1346:
	BLOCK END
	BLOCK 24

L_1352:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_1353:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_1343:
	BLOCK END
	BLOCK 27

L_1354:
	DBG BLOCK END
; Line 1039:	    } 

	BLOCK END
	BLOCK 28

L_1355:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_1356:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_1334:
	BLOCK END
	BLOCK 31

L_1357:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_1359:
; Line 1040:	    if (right) 

	T32(EAX).A =   _right:LINK(12).A
	CONDGO	L_1358:PC ; T32(EAX).A == #0.A
	BLOCK END
	BLOCK 33
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_1360:
; Line 1041:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_1361:
; Line 1042:	        if (right->mode == am_indisp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_1363:
	T33(EAX).A =   _right:LINK(12).A
	T34(EAX).I =   *(T33(EAX) + 0).A.I
	CONDGO	L_1362:PC ; T34(EAX).I != #C.C
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_1364:
; Line 1043:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_1365:
; Line 1044:	            reg->liveRegs |= 1 << right->preg; 

	T35(EAX).A =   _reg:LINK(4).A
	T36(EAX).A = T35(EAX).A + #10.A
	_$anontemp355:LINK(-12).A =   T36(EAX).A
	T37(EDX).A =   _$anontemp355:LINK(-12).A
	T38(EAX).A =   _right:LINK(12).A
	T40(CL).C =   *(T38(EAX) + 4).A.C
	T67(AL).C =   T40(CL).C^
	T73(CL).C =   T67(AL).C^
	T41(EAX).I = #1.C << T73(CL).C
	T42(ECX).I = *(T37(EDX)).A.I | T41(EAX).I
	T43(EAX).A =   _$anontemp355:LINK(-12).A
	*(T43(EAX)).A.I =   T42(ECX).I
; Line 1045:	        } 

	BLOCK END
	BLOCK 40

L_1366:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_1368:
	DBG BLOCK END
	GOTO	L_1367:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_1369:
	BLOCK END
	BLOCK 44

L_1362:
; Line 1046:	        else if (right->mode == am_indispscale) 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_1371:
	T44(EAX).A =   _right:LINK(12).A
	T45(EAX).I =   *(T44(EAX) + 0).A.I
	CONDGO	L_1370:PC ; T45(EAX).I != #D.I
	BLOCK END
	BLOCK 46
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_1372:
; Line 1047:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_1373:
; Line 1048:	            reg->liveRegs |= 1 << right->preg; 

	T46(EAX).A =   _reg:LINK(4).A
	T47(EAX).A = T46(EAX).A + #10.A
	_$anontemp356:LINK(-4).A =   T47(EAX).A
	T48(EDX).A =   _$anontemp356:LINK(-4).A
	T49(EAX).A =   _right:LINK(12).A
	T51(CL).C =   *(T49(EAX) + 4).A.C
	T69(AL).C =   T51(CL).C^
	T75(CL).C =   T69(AL).C^
	T52(EAX).I = #1.C << T75(CL).C
	T53(ECX).I = *(T48(EDX)).A.I | T52(EAX).I
	T54(EAX).A =   _$anontemp356:LINK(-4).A
	*(T54(EAX)).A.I =   T53(ECX).I
; Line 1049:	            reg->liveRegs |= 1 << right->sreg; 

	T55(EAX).A =   _reg:LINK(4).A
	T56(EAX).A = T55(EAX).A + #10.A
	_$anontemp357:LINK(-8).A =   T56(EAX).A
	T57(EDX).A =   _$anontemp357:LINK(-8).A
	T58(EAX).A =   _right:LINK(12).A
	T60(CL).C =   *(T58(EAX) + 5).A.C
	T68(AL).C =   T60(CL).C^
	T74(CL).C =   T68(AL).C^
	T61(EAX).I = #1.C << T74(CL).C
	T62(ECX).I = *(T57(EDX)).A.I | T61(EAX).I
	T63(EAX).A =   _$anontemp357:LINK(-8).A
	*(T63(EAX)).A.I =   T62(ECX).I
; Line 1050:	        } 

	BLOCK END
	BLOCK 49

L_1374:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_1375:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_1370:
	BLOCK END
	BLOCK 52

L_1376:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_1377:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_1367:
	BLOCK END
	BLOCK 55

L_1378:
	DBG BLOCK END
; Line 1051:	    } 

	BLOCK END
	BLOCK 56

L_1379:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_1380:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_1358:
	BLOCK END
	BLOCK 59

L_1381:
	DBG BLOCK END
; Line 1052:	} 

	BLOCK END
	BLOCK 60

L_1382:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_1332:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@overlaps$qp5amodepn0pn0pn0


global @occx86@overlaps$qp5amodepn0pn0pn0
@occx86@overlaps$qp5amodepn0pn0pn0:
; Line 1054:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_1387:
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1389:
; Line 1055:	    bool overlap = false; 

	VAR START	overlap
	_overlap:LINK(-1).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1391:
; Line 1056:	    if (apll->mode == am_dreg || apll->mode == am_indisp || apll->mode == am_indispscale) 

	T1(EAX).A =   _apll:LINK(12).A
	T2(EAX).I =   *(T1(EAX) + 0).A.I
	CONDGO	L_1407:PC ; T2(EAX).I == #2.C
	BLOCK END
	BLOCK 5
	T3(EAX).A =   _apll:LINK(12).A
	T4(EAX).I =   *(T3(EAX) + 0).A.I
	CONDGO	L_1407:PC ; T4(EAX).I == #C.C
	BLOCK END
	BLOCK 6
	T5(EAX).A =   _apll:LINK(12).A
	T6(EAX).I =   *(T5(EAX) + 0).A.I
	CONDGO	L_1390:PC ; T6(EAX).I != #D.I
	BLOCK END
	BLOCK 7

L_1407:
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1392:
; Line 1057:	        overlap = overlap || apll->preg == apal->preg || apll->preg == apah->preg; 

	T7(AL).BOOL =   _overlap:LINK(-1).BOOL
	CONDGO	L_1408:PC ; T7(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	T8(EAX).A =   _apal:LINK(4).A
	T9(ECX).I =   *(T8(EAX) + 4).A.C
	T10(EAX).A =   _apll:LINK(12).A
	T11(EAX).I =   *(T10(EAX) + 4).A.C
	CONDGO	L_1408:PC ; T11(EAX).I == T9(ECX).I
	BLOCK END
	BLOCK 10
	T12(EAX).A =   _apah:LINK(8).A
	T13(ECX).I =   *(T12(EAX) + 4).A.C
	T14(EAX).A =   _apll:LINK(12).A
	T15(EAX).I =   *(T14(EAX) + 4).A.C
	CONDGO	L_1408:PC ; T15(EAX).I == T13(ECX).I
	BLOCK END
	BLOCK 11
	T16(EAX).UI =   #0.UI
	GOTO	L_1409:PC
	BLOCK END
	BLOCK 12

L_1408:
	T16(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 13

L_1409:
	T17(AL).BOOL =   T16(EAX).UI
	_overlap:LINK(-1).BOOL =   T17(AL).BOOL
	BLOCK END
	BLOCK 14

L_1393:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_1390:
	BLOCK END
	BLOCK 16

L_1394:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_1396:
; Line 1058:	    if (apll->mode == am_dreg) 

	T18(EAX).A =   _apll:LINK(12).A
	T19(EAX).I =   *(T18(EAX) + 0).A.I
	CONDGO	L_1395:PC ; T19(EAX).I != #2.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_1397:
; Line 1059:	        overlap = overlap || aplh->preg == apal->preg || aplh->preg == apah->preg; 

	T20(AL).BOOL =   _overlap:LINK(-1).BOOL
	CONDGO	L_1410:PC ; T20(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20
	T21(EAX).A =   _apal:LINK(4).A
	T22(ECX).I =   *(T21(EAX) + 4).A.C
	T23(EAX).A =   _aplh:LINK(16).A
	T24(EAX).I =   *(T23(EAX) + 4).A.C
	CONDGO	L_1410:PC ; T24(EAX).I == T22(ECX).I
	BLOCK END
	BLOCK 21
	T25(EAX).A =   _apah:LINK(8).A
	T26(ECX).I =   *(T25(EAX) + 4).A.C
	T27(EAX).A =   _aplh:LINK(16).A
	T28(EAX).I =   *(T27(EAX) + 4).A.C
	CONDGO	L_1410:PC ; T28(EAX).I == T26(ECX).I
	BLOCK END
	BLOCK 22
	T29(EAX).UI =   #0.UI
	GOTO	L_1411:PC
	BLOCK END
	BLOCK 23

L_1410:
	T29(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 24

L_1411:
	T30(AL).BOOL =   T29(EAX).UI
	_overlap:LINK(-1).BOOL =   T30(AL).BOOL
	BLOCK END
	BLOCK 25

L_1398:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_1395:
	BLOCK END
	BLOCK 27

L_1399:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_1401:
; Line 1060:	    if (apll->mode == am_indispscale) 

	T31(EAX).A =   _apll:LINK(12).A
	T32(EAX).I =   *(T31(EAX) + 0).A.I
	CONDGO	L_1400:PC ; T32(EAX).I != #D.I
	BLOCK END
	BLOCK 29
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_1402:
; Line 1061:	        overlap = overlap || apll->sreg == apal->preg || apll->sreg == apah->preg; 

	T33(AL).BOOL =   _overlap:LINK(-1).BOOL
	CONDGO	L_1412:PC ; T33(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 31
	T34(EAX).A =   _apal:LINK(4).A
	T35(ECX).I =   *(T34(EAX) + 4).A.C
	T36(EAX).A =   _apll:LINK(12).A
	T37(EAX).I =   *(T36(EAX) + 5).A.C
	CONDGO	L_1412:PC ; T37(EAX).I == T35(ECX).I
	BLOCK END
	BLOCK 32
	T38(EAX).A =   _apah:LINK(8).A
	T39(ECX).I =   *(T38(EAX) + 4).A.C
	T40(EAX).A =   _apll:LINK(12).A
	T41(EAX).I =   *(T40(EAX) + 5).A.C
	CONDGO	L_1412:PC ; T41(EAX).I == T39(ECX).I
	BLOCK END
	BLOCK 33
	T42(EAX).UI =   #0.UI
	GOTO	L_1413:PC
	BLOCK END
	BLOCK 34

L_1412:
	T42(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 35

L_1413:
	T43(AL).BOOL =   T42(EAX).UI
	_overlap:LINK(-1).BOOL =   T43(AL).BOOL
	BLOCK END
	BLOCK 36

L_1403:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_1400:
	BLOCK END
	BLOCK 38

L_1404:
	DBG BLOCK END
; Line 1062:	    return overlap; 

	T44(AL).BOOL =   _overlap:LINK(-1).BOOL
	RV.T0(AL).BOOL =   T44(AL).BOOL
; Line 1063:	} 

	BLOCK END
	BLOCK 39

L_1405:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_1388:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1


global @occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1
@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:
; Line 1065:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#C.UI
	BLOCK END
	BLOCK 2

L_1417:
	VAR START	func
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1419:
; Line 1066:	    enum e_opcode func1 = func; 

	VAR START	func1
	T6(EAX).I =   _func:LINK(4).I
	_func1:LINK(-4).I =   T6(EAX).I
; Line 1067:	    liveQualify(apal, apal, apah); 

	T7(EAX).A =   _apah:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   _apal:LINK(8).A
	PARM	T8(EAX).A
	T9(EAX).A =   _apal:LINK(8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 1068:	    liveQualify(apah, apal, apah); 

	T10(EAX).A =   _apah:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   _apal:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   _apah:LINK(12).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1421:
; Line 1069:	    if (apll->mode == am_immed && !aplh) 

	T13(EAX).A =   _apll:LINK(16).A
	T14(EAX).I =   *(T13(EAX) + 0).A.I
	CONDGO	L_1420:PC ; T14(EAX).I != #10.I
	BLOCK END
	BLOCK 5
	T15(EAX).A =   _aplh:LINK(20).A
	CONDGO	L_1420:PC ; T15(EAX).A != #0.A
	BLOCK END
	BLOCK 6
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1422:
; Line 1070:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1423:
; Line 1071:	        if (isintconst(apll->offset)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_1425:
	T16(EAX).A =   _apll:LINK(16).A
	T17(EAX).A =   *(T16(EAX) + C).A.A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T18(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1424:PC ; T18(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_1426:
; Line 1072:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_1427:
; Line 1073:	            aplh = aimmedt(apll->offset->i >> 32, ISZ_UINT); 

	T19(EAX).UI =   #7.C
	PARM	T19(EAX).UI
	T20(EAX).A =   _apll:LINK(16).A
	T21(EAX).A =   *(T20(EAX) + C).A.A
	T22(EDX:EAX).LL =   *(T21(EAX) + 8).A.LL
	T23(EDX:EAX).LL = T22(EDX:EAX).LL S>> #20.I
	T24(EAX).L =   T23(EDX:EAX).LL
	PARM	T24(EAX).L
	TAG
	GOSUB	#@occx86@aimmedt$qli:PC.UI
	T25(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	_aplh:LINK(20).A =   T25(EAX).A
; Line 1074:	            apll->offset->i &= 0xffffffff; 

	T26(EAX).A =   _apll:LINK(16).A
	T27(EAX).A =   *(T26(EAX) + C).A.A
	T28(EAX).A = T27(EAX).A + #8.A
	_$anontemp358:LINK(-12).A =   T28(EAX).A
	T29(EAX).A =   _$anontemp358:LINK(-12).A
	T30(EDX:EAX).LL =   *(T29(EAX)).A.LL
	T31(EDX:ECX).LL = T30(EDX:EAX).LL & #FFFFFFFF.LL
	T32(EAX).A =   _$anontemp358:LINK(-12).A
	*(T32(EAX)).A.LL =   T31(EDX:ECX).LL
; Line 1075:	        } 

	BLOCK END
	BLOCK 13

L_1428:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_1430:
	DBG BLOCK END
	GOTO	L_1429:PC
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_1431:
	BLOCK END
	BLOCK 17

L_1424:
; Line 1076:	        else 

; Line 1077:	            aplh = aimmedt(0, ISZ_UINT); 

	T33(EAX).UI =   #7.C
	PARM	T33(EAX).UI
	T34(EAX).L =   #0.C
	PARM	T34(EAX).L
	TAG
	GOSUB	#@occx86@aimmedt$qli:PC.UI
	T35(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	_aplh:LINK(20).A =   T35(EAX).A
	BLOCK END
	BLOCK 18

L_1432:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_1429:
	BLOCK END
	BLOCK 20

L_1433:
	DBG BLOCK END
; Line 1078:	    } 

	BLOCK END
	BLOCK 21

L_1434:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_1435:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_1420:
	BLOCK END
	BLOCK 24

L_1436:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_1438:
; Line 1079:	    if (func == op_add || func == op_sub) 

	T36(EAX).I =   _func:LINK(4).I
	CONDGO	L_1508:PC ; T36(EAX).I == #25.I
	BLOCK END
	BLOCK 26
	T37(EAX).I =   _func:LINK(4).I
	CONDGO	L_1437:PC ; T37(EAX).I != #189.I
	BLOCK END
	BLOCK 27

L_1508:
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_1439:
; Line 1080:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_1440:
; Line 1081:	        func1 = func == op_add ? op_adc : op_sbb; 

	T38(EAX).I =   _func:LINK(4).I
	CONDGO	L_1509:PC ; T38(EAX).I != #25.I
	BLOCK END
	BLOCK 30
	T39(EAX).I =   #24.I
	GOTO	L_1510:PC
	BLOCK END
	BLOCK 31

L_1509:
	T39(EAX).I =   #153.I
	BLOCK END
	BLOCK 32

L_1510:
	_func1:LINK(-4).I =   T39(EAX).I
; Line 1082:	    } 

	BLOCK END
	BLOCK 33

L_1441:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_1442:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_1437:
	BLOCK END
	BLOCK 36

L_1443:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_1445:
; Line 1083:	    if (apal->mode == am_dreg) 

	T40(EAX).A =   _apal:LINK(8).A
	T41(EAX).I =   *(T40(EAX) + 0).A.I
	CONDGO	L_1444:PC ; T41(EAX).I != #2.C
	BLOCK END
	BLOCK 38
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_1446:
; Line 1084:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_1447:
; Line 1085:	        bool overlap = (apll->mode == am_indisp && apll->preg == apal->preg) || 

	VAR START	overlap
	T42(EAX).A =   _apll:LINK(16).A
	T43(EAX).I =   *(T42(EAX) + 0).A.I
	CONDGO	L_1513:PC ; T43(EAX).I != #C.C
	BLOCK END
	BLOCK 41
	T44(EAX).A =   _apal:LINK(8).A
	T45(ECX).I =   *(T44(EAX) + 4).A.C
	T46(EAX).A =   _apll:LINK(16).A
	T47(EAX).I =   *(T46(EAX) + 4).A.C
	CONDGO	L_1511:PC ; T47(EAX).I == T45(ECX).I
	BLOCK END
	BLOCK 42

L_1513:
	T48(EAX).A =   _apll:LINK(16).A
	T49(EAX).I =   *(T48(EAX) + 0).A.I
	CONDGO	L_1514:PC ; T49(EAX).I != #D.I
	BLOCK END
	BLOCK 43
	T50(EAX).A =   _apal:LINK(8).A
	T51(ECX).I =   *(T50(EAX) + 4).A.C
	T52(EAX).A =   _apll:LINK(16).A
	T53(EAX).I =   *(T52(EAX) + 4).A.C
	CONDGO	L_1511:PC ; T53(EAX).I == T51(ECX).I
	BLOCK END
	BLOCK 44
	T54(EAX).A =   _apal:LINK(8).A
	T55(ECX).I =   *(T54(EAX) + 4).A.C
	T56(EAX).A =   _apll:LINK(16).A
	T57(EAX).I =   *(T56(EAX) + 5).A.C
	CONDGO	L_1511:PC ; T57(EAX).I == T55(ECX).I
	BLOCK END
	BLOCK 45

L_1514:
	T58(EAX).UI =   #0.UI
	GOTO	L_1512:PC
	BLOCK END
	BLOCK 46

L_1511:
	T58(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 47

L_1512:
	T59(AL).BOOL =   T58(EAX).UI
	_overlap:LINK(-5).BOOL =   T59(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_1449:
; Line 1086:	                       (apll->mode == am_indispscale && (apll->preg == apal->preg || apll->sreg == apal->preg)); 
; Line 1087:	        if (overlap) 

; Line 1087:	        if (overlap) 

	T60(AL).BOOL =   _overlap:LINK(-5).BOOL
	CONDGO	L_1448:PC ; T60(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 49
	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_1450:
; Line 1088:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_1451:
; Line 1089:	            if (func == op_add || func == op_sub) 

	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_1453:
	T61(EAX).I =   _func:LINK(4).I
	CONDGO	L_1515:PC ; T61(EAX).I == #25.I
	BLOCK END
	BLOCK 53
	T62(EAX).I =   _func:LINK(4).I
	CONDGO	L_1452:PC ; T62(EAX).I != #189.I
	BLOCK END
	BLOCK 54

L_1515:
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_1454:
; Line 1090:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_1455:
; Line 1091:	                gen_codes(func, ISZ_UINT, apah, aplh); 

	T71(EAX).A =   _aplh:LINK(20).A
	PARM	T71(EAX).A
	T72(EAX).A =   _apah:LINK(12).A
	PARM	T72(EAX).A
	T73(EAX).UI =   #7.C
	PARM	T73(EAX).UI
	T74(EAX).I =   _func:LINK(4).I
	PARM	T74(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1092:	                gen_codes(func, ISZ_UINT, apal, apll); 

	T75(EAX).A =   _apll:LINK(16).A
	PARM	T75(EAX).A
	T76(EAX).A =   _apal:LINK(8).A
	PARM	T76(EAX).A
	T77(EAX).UI =   #7.C
	PARM	T77(EAX).UI
	T78(EAX).I =   _func:LINK(4).I
	PARM	T78(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1093:	                gen_codes(func1, ISZ_UINT, apah, aimmed(0)); 

	T79(EDX:EAX).ULL =   #0.C
	PARM	T79(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T80(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T80(EAX).A
	T81(EAX).A =   _apah:LINK(12).A
	PARM	T81(EAX).A
	T82(EAX).UI =   #7.C
	PARM	T82(EAX).UI
	T83(EAX).I =   _func1:LINK(-4).I
	PARM	T83(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1094:	            } 

	BLOCK END
	BLOCK 57

L_1456:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_1458:
	DBG BLOCK END
	GOTO	L_1457:PC
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_1459:
	BLOCK END
	BLOCK 61

L_1452:
; Line 1095:	            else 

; Line 1096:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_1460:
; Line 1097:	                gen_codes(func1, ISZ_UINT, apah, aplh); 

	T63(EAX).A =   _aplh:LINK(20).A
	PARM	T63(EAX).A
	T64(EAX).A =   _apah:LINK(12).A
	PARM	T64(EAX).A
	T65(EAX).UI =   #7.C
	PARM	T65(EAX).UI
	T66(EAX).I =   _func1:LINK(-4).I
	PARM	T66(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1098:	                gen_codes(func, ISZ_UINT, apal, apll); 

	T67(EAX).A =   _apll:LINK(16).A
	PARM	T67(EAX).A
	T68(EAX).A =   _apal:LINK(8).A
	PARM	T68(EAX).A
	T69(EAX).UI =   #7.C
	PARM	T69(EAX).UI
	T70(EAX).I =   _func:LINK(4).I
	PARM	T70(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1099:	            } 

	BLOCK END
	BLOCK 63

L_1461:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_1462:
	DBG BLOCK END
	BLOCK END
	BLOCK 65

L_1457:
	BLOCK END
	BLOCK 66

L_1463:
	DBG BLOCK END
; Line 1100:	            return; 

	GOTO	L_1418:PC
; Line 1101:	        } 

	BLOCK END
	BLOCK 67

L_1464:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_1465:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_1448:
	BLOCK END
	BLOCK 70

L_1466:
	DBG BLOCK END
; Line 1102:	    } 

	BLOCK END
	BLOCK 71

L_1467:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_1468:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_1444:
	BLOCK END
	BLOCK 74

L_1469:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_1471:
; Line 1103:	    if (func == op_mov) 

	T84(EAX).I =   _func:LINK(4).I
	CONDGO	L_1470:PC ; T84(EAX).I != #11D.I
	BLOCK END
	BLOCK 76
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_1472:
; Line 1104:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_1473:
; Line 1105:	        if (equal_address(apal, aplh)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_1475:
	T85(EAX).A =   _aplh:LINK(20).A
	PARM	T85(EAX).A
	T86(EAX).A =   _apal:LINK(8).A
	PARM	T86(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T87(EAX).I =   RV.T4(EAX).I
	PARMADJ	#8.N
	CONDGO	L_1474:PC ; T87(EAX).I == #0.C
	BLOCK END
	BLOCK 80
	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_1476:
; Line 1106:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_1477:
; Line 1107:	            if (equal_address(apll, apah)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_1479:
	T88(EAX).A =   _apah:LINK(12).A
	PARM	T88(EAX).A
	T89(EAX).A =   _apll:LINK(16).A
	PARM	T89(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T90(EAX).I =   RV.T5(EAX).I
	PARMADJ	#8.N
	CONDGO	L_1478:PC ; T90(EAX).I == #0.C
	BLOCK END
	BLOCK 84
	DBG BLOCK START
	BLOCK END
	BLOCK 85

L_1480:
; Line 1108:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 86

L_1481:
; Line 1110:	                gen_codes(op_xchg, ISZ_UINT, apal, apah); 

	T91(EAX).A =   _apah:LINK(12).A
	PARM	T91(EAX).A
	T92(EAX).A =   _apal:LINK(8).A
	PARM	T92(EAX).A
	T93(EAX).UI =   #7.C
	PARM	T93(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1111:	            } 

	BLOCK END
	BLOCK 87

L_1482:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_1484:
	DBG BLOCK END
	GOTO	L_1483:PC
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_1485:
	BLOCK END
	BLOCK 91

L_1478:
; Line 1112:	            else 

; Line 1113:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_1486:
; Line 1114:	                gen_codes(func1, ISZ_UINT, apah, aplh); 

	T94(EAX).A =   _aplh:LINK(20).A
	PARM	T94(EAX).A
	T95(EAX).A =   _apah:LINK(12).A
	PARM	T95(EAX).A
	T96(EAX).UI =   #7.C
	PARM	T96(EAX).UI
	T97(EAX).I =   _func1:LINK(-4).I
	PARM	T97(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1115:	                gen_codes(func, ISZ_UINT, apal, apll); 

	T98(EAX).A =   _apll:LINK(16).A
	PARM	T98(EAX).A
	T99(EAX).A =   _apal:LINK(8).A
	PARM	T99(EAX).A
	T100(EAX).UI =   #7.C
	PARM	T100(EAX).UI
	T101(EAX).I =   _func:LINK(4).I
	PARM	T101(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1116:	            } 

	BLOCK END
	BLOCK 93

L_1487:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_1488:
	DBG BLOCK END
	BLOCK END
	BLOCK 95

L_1483:
	BLOCK END
	BLOCK 96

L_1489:
	DBG BLOCK END
; Line 1117:	        } 

	BLOCK END
	BLOCK 97

L_1490:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_1492:
	DBG BLOCK END
	GOTO	L_1491:PC
	BLOCK END
	BLOCK 99
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_1493:
	BLOCK END
	BLOCK 101

L_1474:
; Line 1118:	        else 

; Line 1119:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_1494:
; Line 1120:	            gen_codes(func, ISZ_UINT, apal, apll); 

	T102(EAX).A =   _apll:LINK(16).A
	PARM	T102(EAX).A
	T103(EAX).A =   _apal:LINK(8).A
	PARM	T103(EAX).A
	T104(EAX).UI =   #7.C
	PARM	T104(EAX).UI
	T105(EAX).I =   _func:LINK(4).I
	PARM	T105(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1121:	            gen_codes(func1, ISZ_UINT, apah, aplh); 

	T106(EAX).A =   _aplh:LINK(20).A
	PARM	T106(EAX).A
	T107(EAX).A =   _apah:LINK(12).A
	PARM	T107(EAX).A
	T108(EAX).UI =   #7.C
	PARM	T108(EAX).UI
	T109(EAX).I =   _func1:LINK(-4).I
	PARM	T109(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1122:	        } 

	BLOCK END
	BLOCK 103

L_1495:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_1496:
	DBG BLOCK END
	BLOCK END
	BLOCK 105

L_1491:
	BLOCK END
	BLOCK 106

L_1497:
	DBG BLOCK END
; Line 1123:	    } 

	BLOCK END
	BLOCK 107

L_1498:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_1500:
	DBG BLOCK END
	GOTO	L_1499:PC
	BLOCK END
	BLOCK 109
	DBG BLOCK START
	BLOCK END
	BLOCK 110

L_1501:
	BLOCK END
	BLOCK 111

L_1470:
; Line 1124:	    else 

; Line 1125:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_1502:
; Line 1126:	        gen_codes(func, ISZ_UINT, apal, apll); 

	T110(EAX).A =   _apll:LINK(16).A
	PARM	T110(EAX).A
	T111(EAX).A =   _apal:LINK(8).A
	PARM	T111(EAX).A
	T112(EAX).UI =   #7.C
	PARM	T112(EAX).UI
	T113(EAX).I =   _func:LINK(4).I
	PARM	T113(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1127:	        gen_codes(func1, ISZ_UINT, apah, aplh); 

	T114(EAX).A =   _aplh:LINK(20).A
	PARM	T114(EAX).A
	T115(EAX).A =   _apah:LINK(12).A
	PARM	T115(EAX).A
	T116(EAX).UI =   #7.C
	PARM	T116(EAX).UI
	T117(EAX).I =   _func1:LINK(-4).I
	PARM	T117(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1128:	    } 

	BLOCK END
	BLOCK 113

L_1503:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_1504:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_1499:
	BLOCK END
	BLOCK 116

L_1505:
	DBG BLOCK END
; Line 1129:	} 

	BLOCK END
	BLOCK 117

L_1506:
	DBG BLOCK END
	BLOCK END
	BLOCK 118

L_1418:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1


global @occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1
@occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1:
; Line 1131:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_1519:
	VAR START	op
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1521:
; Line 1132:	    if (overlaps(apal, apah, aprl, aprh)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1523:
	T2(EAX).A =   _aprh:LINK(28).A
	PARM	T2(EAX).A
	T3(EAX).A =   _aprl:LINK(24).A
	PARM	T3(EAX).A
	T4(EAX).A =   _apah:LINK(12).A
	PARM	T4(EAX).A
	T5(EAX).A =   _apal:LINK(8).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@occx86@overlaps$qp5amodepn0pn0pn0:PC.UI
	T6(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#10.N
	CONDGO	L_1522:PC ; T6(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_1524:
; Line 1133:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1525:
; Line 1134:	        func_axdx(op_mov, apal, apah, aprl, aprh); 

	T7(EAX).A =   _aprh:LINK(28).A
	PARM	T7(EAX).A
	T8(EAX).A =   _aprl:LINK(24).A
	PARM	T8(EAX).A
	T9(EAX).A =   _apah:LINK(12).A
	PARM	T9(EAX).A
	T10(EAX).A =   _apal:LINK(8).A
	PARM	T10(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 1135:	        func_axdx(op, apal, apah, apll, aplh); 

	T11(EAX).A =   _aplh:LINK(20).A
	PARM	T11(EAX).A
	T12(EAX).A =   _apll:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   _apah:LINK(12).A
	PARM	T13(EAX).A
	T14(EAX).A =   _apal:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).I =   _op:LINK(4).I
	PARM	T15(EAX).I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1527:
; Line 1136:	        if (op == op_sub) 

	T16(EAX).I =   _op:LINK(4).I
	CONDGO	L_1526:PC ; T16(EAX).I != #189.I
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_1528:
; Line 1137:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_1529:
; Line 1138:	            gen_codes(op_neg, ISZ_UINT, apah, 0); 

	T17(EAX).A =   #0.C
	PARM	T17(EAX).A
	T18(EAX).A =   _apah:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).UI =   #7.C
	PARM	T19(EAX).UI
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1139:	            gen_codes(op_neg, ISZ_UINT, apal, 0); 

	T20(EAX).A =   #0.C
	PARM	T20(EAX).A
	T21(EAX).A =   _apal:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).UI =   #7.C
	PARM	T22(EAX).UI
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1140:	            gen_codes(op_sbb, ISZ_UINT, apah, aimmed(0)); 

	T23(EDX:EAX).ULL =   #0.C
	PARM	T23(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T24(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T24(EAX).A
	T25(EAX).A =   _apah:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).UI =   #7.C
	PARM	T26(EAX).UI
	PARM	#153.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1141:	        } 

	BLOCK END
	BLOCK 12

L_1530:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_1531:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_1526:
	BLOCK END
	BLOCK 15

L_1532:
	DBG BLOCK END
; Line 1142:	    } 

	BLOCK END
	BLOCK 16

L_1533:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_1535:
	DBG BLOCK END
	GOTO	L_1534:PC
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_1536:
	BLOCK END
	BLOCK 20

L_1522:
; Line 1143:	    else 

; Line 1144:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_1537:
; Line 1145:	        func_axdx(op_mov, apal, apah, apll, aplh); 

	T27(EAX).A =   _aplh:LINK(20).A
	PARM	T27(EAX).A
	T28(EAX).A =   _apll:LINK(16).A
	PARM	T28(EAX).A
	T29(EAX).A =   _apah:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   _apal:LINK(8).A
	PARM	T30(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 1146:	        func_axdx(op, apal, apah, aprl, aprh); 

	T31(EAX).A =   _aprh:LINK(28).A
	PARM	T31(EAX).A
	T32(EAX).A =   _aprl:LINK(24).A
	PARM	T32(EAX).A
	T33(EAX).A =   _apah:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   _apal:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).I =   _op:LINK(4).I
	PARM	T35(EAX).I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 1147:	    } 

	BLOCK END
	BLOCK 22

L_1538:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_1539:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_1534:
	BLOCK END
	BLOCK 25

L_1540:
	DBG BLOCK END
; Line 1148:	} 

	BLOCK END
	BLOCK 26

L_1541:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_1520:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@gen_lshift$q8e_opcodep5amodepn1pn1


global @occx86@gen_lshift$q8e_opcodep5amodepn1pn1
@occx86@gen_lshift$q8e_opcodep5amodepn1pn1:
; Line 1150:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#8.UI
	BLOCK END
	BLOCK 2

L_1546:
	VAR START	op
	VAR START	aph
	VAR START	apl
	VAR START	n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1548:
; Line 1151:	    if (apl->mode != am_dreg || aph->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1550:
	T12(EAX).A =   _apl:LINK(12).A
	T13(EAX).I =   *(T12(EAX) + 0).A.I
	CONDGO	L_1614:PC ; T13(EAX).I != #2.C
	BLOCK END
	BLOCK 5
	T14(EAX).A =   _aph:LINK(8).A
	T15(EAX).I =   *(T14(EAX) + 0).A.I
	CONDGO	L_1549:PC ; T15(EAX).I == #2.C
	BLOCK END
	BLOCK 6

L_1614:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1551:
; Line 1152:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1552:
; Line 1153:	        int reg = -1; 

	VAR START	reg
	_reg:LINK(-4).I =   #FFFFFFFFFFFFFFFF.I
	VAR START	pushed
; Line 1154:	        bool pushed = false; 

	_pushed:LINK(-5).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_1554:
; Line 1155:	        if (!(apl->liveRegs & (1 << EAX))) 

	T20(EAX).A =   _apl:LINK(12).A
	T21(EAX).I =   *(T20(EAX) + 10).A.I
	T22(EAX).I = T21(EAX).I & #1.C
	CONDGO	L_1553:PC ; T22(EAX).I != #0.C
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_1555:
; Line 1156:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_1556:
; Line 1157:	            reg = EAX; 

	T23(EAX).I =   #0.C
	_reg:LINK(-4).I =   T23(EAX).I
; Line 1158:	        } 

	BLOCK END
	BLOCK 13

L_1557:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_1559:
	DBG BLOCK END
	GOTO	L_1558:PC
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_1560:
	BLOCK END
	BLOCK 17

L_1553:
; Line 1159:	        else if (!(apl->liveRegs & (1 << ECX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_1562:
	T24(EAX).A =   _apl:LINK(12).A
	T25(EAX).I =   *(T24(EAX) + 10).A.I
	T26(EAX).I = T25(EAX).I & #2.C
	CONDGO	L_1561:PC ; T26(EAX).I != #0.C
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_1563:
; Line 1160:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_1564:
; Line 1161:	            reg = ECX; 

	T27(EAX).I =   #1.C
	_reg:LINK(-4).I =   T27(EAX).I
; Line 1162:	        } 

	BLOCK END
	BLOCK 22

L_1565:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_1567:
	DBG BLOCK END
	GOTO	L_1566:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_1568:
	BLOCK END
	BLOCK 26

L_1561:
; Line 1163:	        else if (!(apl->liveRegs & (1 << EDX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_1570:
	T28(EAX).A =   _apl:LINK(12).A
	T29(EAX).I =   *(T28(EAX) + 10).A.I
	T30(EAX).I = T29(EAX).I & #4.I
	CONDGO	L_1569:PC ; T30(EAX).I != #0.C
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_1571:
; Line 1164:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_1572:
; Line 1165:	            reg = EDX; 

	T31(EAX).I =   #2.C
	_reg:LINK(-4).I =   T31(EAX).I
; Line 1166:	        } 

	BLOCK END
	BLOCK 31

L_1573:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_1575:
	DBG BLOCK END
	GOTO	L_1574:PC
	BLOCK END
	BLOCK 33
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_1576:
	BLOCK END
	BLOCK 35

L_1569:
; Line 1167:	        else 

; Line 1168:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_1577:
; Line 1169:	            gen_codes(op_push, ISZ_UINT, makedreg(EAX), NULL); 

	T32(EAX).A =   #0.C
	PARM	T32(EAX).A
	T33(EAX).UI =   #0.C
	PARM	T33(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T34(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T34(EAX).A
	T35(EAX).UI =   #7.C
	PARM	T35(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1170:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1171:	            pushed = true; 

	_pushed:LINK(-5).BOOL =   #1.BOOL
; Line 1172:	            reg = EAX; 

	T36(EAX).I =   #0.C
	_reg:LINK(-4).I =   T36(EAX).I
; Line 1173:	        } 

	BLOCK END
	BLOCK 37

L_1578:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_1579:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_1574:
	BLOCK END
	BLOCK 40

L_1580:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_1581:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_1566:
	BLOCK END
	BLOCK 43

L_1582:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_1583:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_1558:
	BLOCK END
	BLOCK 46

L_1584:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_1586:
; Line 1174:	        if (op == op_shrd) 

	T37(EAX).I =   _op:LINK(4).I
	CONDGO	L_1585:PC ; T37(EAX).I != #17C.I
	BLOCK END
	BLOCK 48
	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_1587:
; Line 1175:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_1588:
; Line 1176:	            gen_code(op_shr, apl, n); 

	T38(EAX).A =   _n:LINK(16).A
	PARM	T38(EAX).A
	T39(EAX).A =   _apl:LINK(12).A
	PARM	T39(EAX).A
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1177:	            gen_code(op_mov, makedreg(reg), aph); 

	T40(EAX).A =   _aph:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).I =   _reg:LINK(-4).I
	PARM	T41(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T42(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T42(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1178:	            gen_code(op_ror, makedreg(reg), n); 

	T43(EAX).A =   _n:LINK(16).A
	PARM	T43(EAX).A
	T44(EAX).I =   _reg:LINK(-4).I
	PARM	T44(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T45(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T45(EAX).A
	PARM	#14E.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1179:	            gen_code(op_and, makedreg(reg), aimmed(-1 >> (n->offset->i))); 

	T46(EAX).A =   _n:LINK(16).A
	T47(EAX).A =   *(T46(EAX) + C).A.A
	T49(EDX:EAX).LL =   *(T47(EAX) + 8).A.LL
	T84(EBX:ESI).LL =   T49(EDX:EAX).LL^
	T86(EDX:ECX).LL =   T84(EBX:ESI).LL^
	T50(EAX).I = #FFFFFFFFFFFFFFFF.I S>> T86(EDX:ECX).LL
	T51(EDX:EAX).ULL =   T50(EAX).I
	PARM	T51(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T52(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T52(EAX).A
	T53(EAX).I =   _reg:LINK(-4).I
	PARM	T53(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T54(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T54(EAX).A
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1180:	            gen_code(op_or, apl, makedreg(reg)); 

	T55(EAX).I =   _reg:LINK(-4).I
	PARM	T55(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T56(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T56(EAX).A
	T57(EAX).A =   _apl:LINK(12).A
	PARM	T57(EAX).A
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1181:	        } 

	BLOCK END
	BLOCK 51

L_1589:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_1591:
	DBG BLOCK END
	GOTO	L_1590:PC
	BLOCK END
	BLOCK 53
	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_1592:
	BLOCK END
	BLOCK 55

L_1585:
; Line 1182:	        else 

; Line 1183:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_1593:
; Line 1184:	            gen_code(op_shl, aph, n); 

	T58(EAX).A =   _n:LINK(16).A
	PARM	T58(EAX).A
	T59(EAX).A =   _aph:LINK(8).A
	PARM	T59(EAX).A
	PARM	#179.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1185:	            gen_code(op_mov, makedreg(reg), apl); 

	T60(EAX).A =   _apl:LINK(12).A
	PARM	T60(EAX).A
	T61(EAX).I =   _reg:LINK(-4).I
	PARM	T61(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T62(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T62(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1186:	            gen_code(op_rol, makedreg(reg), n); 

	T63(EAX).A =   _n:LINK(16).A
	PARM	T63(EAX).A
	T64(EAX).I =   _reg:LINK(-4).I
	PARM	T64(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T65(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T65(EAX).A
	PARM	#14D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1187:	            gen_code(op_and, makedreg(reg), aimmed((1 << (n->offset->i)) - 1)); 

	T66(EAX).A =   _n:LINK(16).A
	T67(EAX).A =   *(T66(EAX) + C).A.A
	T69(EDX:EAX).LL =   *(T67(EAX) + 8).A.LL
	T85(EBX:ESI).LL =   T69(EDX:EAX).LL^
	T87(EDX:ECX).LL =   T85(EBX:ESI).LL^
	T70(EAX).I = #1.C << T87(EDX:ECX).LL
	T71(EAX).I = T70(EAX).I - #1.C
	T72(EDX:EAX).ULL =   T71(EAX).I
	PARM	T72(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T73(EAX).A =   RV.T8(EAX).A
	PARMADJ	#8.N
	PARM	T73(EAX).A
	T74(EAX).I =   _reg:LINK(-4).I
	PARM	T74(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T75(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	PARM	T75(EAX).A
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1188:	            gen_code(op_or, aph, makedreg(reg)); 

	T76(EAX).I =   _reg:LINK(-4).I
	PARM	T76(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T77(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	PARM	T77(EAX).A
	T78(EAX).A =   _aph:LINK(8).A
	PARM	T78(EAX).A
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1189:	        } 

	BLOCK END
	BLOCK 57

L_1594:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_1595:
	DBG BLOCK END
	BLOCK END
	BLOCK 59

L_1590:
	BLOCK END
	BLOCK 60

L_1596:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_1598:
; Line 1190:	        if (pushed) 

	T79(AL).BOOL =   _pushed:LINK(-5).BOOL
	CONDGO	L_1597:PC ; T79(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_1599:
; Line 1191:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_1600:
; Line 1192:	            gen_codes(op_pop, ISZ_UINT, makedreg(EAX), NULL); 

	T80(EAX).A =   #0.C
	PARM	T80(EAX).A
	T81(EAX).UI =   #0.C
	PARM	T81(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T82(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	PARM	T82(EAX).A
	T83(EAX).UI =   #7.C
	PARM	T83(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1193:	            pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 1194:	        } 

	BLOCK END
	BLOCK 65

L_1601:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_1602:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_1597:
	BLOCK END
	BLOCK 68

L_1603:
	DBG BLOCK END
; Line 1195:	    } 

	BLOCK END
	BLOCK 69

L_1604:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_1606:
	DBG BLOCK END
	GOTO	L_1605:PC
	BLOCK END
	BLOCK 71
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_1607:
	BLOCK END
	BLOCK 73

L_1549:
; Line 1196:	    else 

; Line 1197:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_1608:
; Line 1198:	        gen_code3(op, aph, apl, n); 

	T16(EAX).A =   _n:LINK(16).A
	PARM	T16(EAX).A
	T17(EAX).A =   _apl:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   _aph:LINK(8).A
	PARM	T18(EAX).A
	T19(EAX).I =   _op:LINK(4).I
	PARM	T19(EAX).I
	TAG
	GOSUB	#@occx86@gen_code3$qip5amodepn0pn0:PC.UI
	PARMADJ	#10.N
; Line 1199:	    } 

	BLOCK END
	BLOCK 75

L_1609:
	DBG BLOCK END
	BLOCK END
	BLOCK 76

L_1610:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_1605:
	BLOCK END
	BLOCK 78

L_1611:
	DBG BLOCK END
; Line 1200:	} 

	BLOCK END
	BLOCK 79

L_1612:
	DBG BLOCK END
	BLOCK END
	BLOCK 80

L_1547:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1


global @occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1
@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:
; Line 1202:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#44.UI
	BLOCK END
	BLOCK 2

L_1620:
	VAR START	q
	VAR START	pos
	VAR START	neg
	VAR START	flt
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1622:
; Line 1203:	    enum e_opcode op = pos, opa; 

	VAR START	op
	T23(EAX).I =   _pos:LINK(8).I
	_op:LINK(-4).I =   T23(EAX).I
	VAR START	opa
	VAR START	left
; Line 1204:	    Optimizer::IMODE* left = q->dc.left; 

	T24(EAX).A =   _q:LINK(4).A
	T25(EAX).A =   *(T24(EAX) + 4+0).A.A
	_left:LINK(-12).A =   T25(EAX).A
	VAR START	right
; Line 1205:	    Optimizer::IMODE* right = q->dc.right; 

	T26(EAX).A =   _q:LINK(4).A
	T27(EAX).A =   *(T26(EAX) + 8+0).A.A
	_right:LINK(-16).A =   T27(EAX).A
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
	VAR START	apal
	VAR START	apah
	VAR START	assign
; Line 1206:	    AMODE *apll, *aplh, *aprl, *aprh, *apal, *apah; 
; Line 1207:	    bool assign = false; 

; Line 1207:	    bool assign = false; 

	_assign:LINK(-41).BOOL =   #0.BOOL
	VAR START	stacked
; Line 1208:	    bool stacked = false; 

	_stacked:LINK(-42).BOOL =   #0.BOOL
	VAR START	altreg
; Line 1209:	    AMODE* altreg = nullptr; 

	T28(EAX).A =   #0.UI
	_altreg:LINK(-48).A =   T28(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1624:
; Line 1210:	    if (left->mode == Optimizer::i_immed && left->size < ISZ_FLOAT) 

	T29(EAX).A =   _left:LINK(-12).A
	T30(EAX).I =   *(T29(EAX) + 0).A.I
	CONDGO	L_1623:PC ; T30(EAX).I != #1.C
	BLOCK END
	BLOCK 5
	T31(EAX).A =   _left:LINK(-12).A
	T32(EAX).I =   *(T31(EAX) + 19).A.C
	CONDGO	L_1623:PC ; T32(EAX).I S>= #12.C
	BLOCK END
	BLOCK 6
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1625:
; Line 1211:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1626:
; Line 1212:	        Optimizer::IMODE* t = right; 

	VAR START	t
	T33(EAX).A =   _right:LINK(-16).A
	_t:LINK(-68).A =   T33(EAX).A
; Line 1213:	        right = left; 

	T34(EAX).A =   _left:LINK(-12).A
	_right:LINK(-16).A =   T34(EAX).A
; Line 1214:	        left = t; 

	T35(EAX).A =   _t:LINK(-68).A
	_left:LINK(-12).A =   T35(EAX).A
; Line 1215:	        op = neg; 

	T36(EAX).I =   _neg:LINK(12).I
	_op:LINK(-4).I =   T36(EAX).I
; Line 1216:	    } 

	BLOCK END
	BLOCK 9

L_1627:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_1628:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_1623:
	BLOCK END
	BLOCK 12

L_1629:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_1631:
; Line 1217:	    if (left->bits && right->mode == Optimizer::i_immed && isintconst(right->offset)) 

	T37(EAX).A =   _left:LINK(-12).A
	T38(AL).C =   *(T37(EAX) + 1C).A.C
	CONDGO	L_1630:PC ; T38(AL).C == #0.C
	BLOCK END
	BLOCK 14
	T39(EAX).A =   _right:LINK(-16).A
	T40(EAX).I =   *(T39(EAX) + 0).A.I
	CONDGO	L_1630:PC ; T40(EAX).I != #1.C
	BLOCK END
	BLOCK 15
	T41(EAX).A =   _right:LINK(-16).A
	T42(EAX).A =   *(T41(EAX) + 4).A.A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T43(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1630:PC ; T43(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_1632:
; Line 1218:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_1633:
; Line 1219:	        if (left->bits != 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_1635:
	T44(EAX).A =   _left:LINK(-12).A
	T45(AL).C =   *(T44(EAX) + 1C).A.C
	CONDGO	L_1634:PC ; T45(AL).C == #1.C
	BLOCK END
	BLOCK 20
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_1636:
; Line 1220:	            diag("gen_xset: too many bits"); 

	PARM	#L_1618:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 22

L_1637:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_1634:
	BLOCK END
	BLOCK 24

L_1638:
	DBG BLOCK END
; Line 1221:	        getAmodes(q, &opa, left, &apll, &aplh); 

	T46(EAX).A =   #_aplh:LINK(-24).A
	PARM	T46(EAX).A
	T47(EAX).A =   #_apll:LINK(-20).A
	PARM	T47(EAX).A
	T48(EAX).A =   _left:LINK(-12).A
	PARM	T48(EAX).A
	T49(EAX).A =   #_opa:LINK(-8).A
	PARM	T49(EAX).A
	T50(EAX).A =   _q:LINK(4).A
	PARM	T50(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1222:	        getAmodes(q, &opa, q->ans, &apal, &apah); 

	T51(EAX).A =   #_apah:LINK(-40).A
	PARM	T51(EAX).A
	T52(EAX).A =   #_apal:LINK(-36).A
	PARM	T52(EAX).A
	T53(EAX).A =   _q:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + 40).A.A
	PARM	T54(EAX).A
	T55(EAX).A =   #_opa:LINK(-8).A
	PARM	T55(EAX).A
	T56(EAX).A =   _q:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1223:	        gen_codes(op_bt, ISZ_UINT, apll, aimmed(q->dc.left->startbit)); 

	T57(EAX).A =   _q:LINK(4).A
	T58(EAX).A =   *(T57(EAX) + 4+0).A.A
	T59(EDX:EAX).ULL =   *(T58(EAX) + 1B).A.C
	PARM	T59(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T60(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T60(EAX).A
	T61(EAX).A =   _apll:LINK(-20).A
	PARM	T61(EAX).A
	T62(EAX).UI =   #7.C
	PARM	T62(EAX).UI
	PARM	#2C.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_1640:
; Line 1224:	        if (op == op_sete) 

	T63(EAX).I =   _op:LINK(-4).I
	CONDGO	L_1639:PC ; T63(EAX).I != #15E.I
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_1641:
; Line 1225:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_1642:
; Line 1226:	            if (right->offset->i & 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_1644:
	T64(EAX).A =   _right:LINK(-16).A
	T65(EAX).A =   *(T64(EAX) + 4).A.A
	T66(EDX:EAX).LL =   *(T65(EAX) + 8).A.LL
	T67(EDX:EAX).LL = T66(EDX:EAX).LL & #1.LL
	CONDGO	L_1643:PC ; T67(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_1645:
; Line 1227:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_1646:
; Line 1228:	                op = op_setc; 

	_op:LINK(-4).I =   #15D.I
; Line 1229:	            } 

	BLOCK END
	BLOCK 33

L_1647:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_1649:
	DBG BLOCK END
	GOTO	L_1648:PC
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_1650:
	BLOCK END
	BLOCK 37

L_1643:
; Line 1230:	            else 

; Line 1231:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_1651:
; Line 1232:	                op = op_setnc; 

	_op:LINK(-4).I =   #167.I
; Line 1233:	            } 

	BLOCK END
	BLOCK 39

L_1652:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_1653:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_1648:
	BLOCK END
	BLOCK 42

L_1654:
	DBG BLOCK END
; Line 1234:	        } 

	BLOCK END
	BLOCK 43

L_1655:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_1657:
	DBG BLOCK END
	GOTO	L_1656:PC
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_1658:
	BLOCK END
	BLOCK 47

L_1639:
; Line 1235:	        else if (op == op_setne) 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_1660:
	T68(EAX).I =   _op:LINK(-4).I
	CONDGO	L_1659:PC ; T68(EAX).I != #168.I
	BLOCK END
	BLOCK 49
	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_1661:
; Line 1236:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_1662:
; Line 1237:	            if (right->offset->i & 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_1664:
	T69(EAX).A =   _right:LINK(-16).A
	T70(EAX).A =   *(T69(EAX) + 4).A.A
	T71(EDX:EAX).LL =   *(T70(EAX) + 8).A.LL
	T72(EDX:EAX).LL = T71(EDX:EAX).LL & #1.LL
	CONDGO	L_1663:PC ; T72(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 53
	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_1665:
; Line 1238:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_1666:
; Line 1239:	                op = op_setnc; 

	_op:LINK(-4).I =   #167.I
; Line 1240:	            } 

	BLOCK END
	BLOCK 56

L_1667:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_1669:
	DBG BLOCK END
	GOTO	L_1668:PC
	BLOCK END
	BLOCK 58
	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_1670:
	BLOCK END
	BLOCK 60

L_1663:
; Line 1241:	            else 

; Line 1242:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_1671:
; Line 1243:	                op = op_setc; 

	_op:LINK(-4).I =   #15D.I
; Line 1244:	            } 

	BLOCK END
	BLOCK 62

L_1672:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_1673:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_1668:
	BLOCK END
	BLOCK 65

L_1674:
	DBG BLOCK END
; Line 1245:	        } 

	BLOCK END
	BLOCK 66

L_1675:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_1677:
	DBG BLOCK END
	GOTO	L_1676:PC
	BLOCK END
	BLOCK 68
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_1678:
	BLOCK END
	BLOCK 70

L_1659:
; Line 1246:	        else 

; Line 1247:	            diag("gen_xset: Unknown bit type"); 

	PARM	#L_1619:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 71

L_1679:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_1676:
	BLOCK END
	BLOCK 73

L_1680:
	DBG BLOCK END
	BLOCK END
	BLOCK 74

L_1681:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_1656:
	BLOCK END
	BLOCK 76

L_1682:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_1684:
; Line 1248:	        if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T73(EAX).A =   _apal:LINK(-36).A
	T74(AL).C =   *(T73(EAX) + 8).A.C
	CONDGO	L_1683:PC ; T74(AL).C == #3.C
	BLOCK END
	BLOCK 78
	T75(EAX).A =   _apal:LINK(-36).A
	T76(EAX).I =   *(T75(EAX) + 8).A.C
	CONDGO	L_1683:PC ; T76(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_1685:
; Line 1249:	            gen_codes(op_mov, ISZ_UINT, apal, aimmed(0)); 

	T77(EDX:EAX).ULL =   #0.C
	PARM	T77(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T78(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T78(EAX).A
	T79(EAX).A =   _apal:LINK(-36).A
	PARM	T79(EAX).A
	T80(EAX).UI =   #7.C
	PARM	T80(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 81

L_1686:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_1683:
	BLOCK END
	BLOCK 83

L_1687:
	DBG BLOCK END
; Line 1250:	        gen_codes(op, ISZ_UCHAR, apal, 0); 

	T81(EAX).A =   #0.C
	PARM	T81(EAX).A
	T82(EAX).A =   _apal:LINK(-36).A
	PARM	T82(EAX).A
	T83(EAX).UI =   #3.C
	PARM	T83(EAX).UI
	T84(EAX).I =   _op:LINK(-4).I
	PARM	T84(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1251:	        return; 

	GOTO	L_1621:PC
; Line 1252:	    } 

	BLOCK END
	BLOCK 84

L_1688:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_1689:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_1630:
	BLOCK END
	BLOCK 87

L_1690:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_1692:
; Line 1253:	    if (left->size >= ISZ_FLOAT) 

	T85(EAX).A =   _left:LINK(-12).A
	T86(EAX).I =   *(T85(EAX) + 19).A.C
	CONDGO	L_1691:PC ; T86(EAX).I S< #12.C
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_1693:
; Line 1254:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_1694:
; Line 1255:	        getAmodes(q, &opa, right, &aprl, &aprh); 

	T87(EAX).A =   #_aprh:LINK(-32).A
	PARM	T87(EAX).A
	T88(EAX).A =   #_aprl:LINK(-28).A
	PARM	T88(EAX).A
	T89(EAX).A =   _right:LINK(-16).A
	PARM	T89(EAX).A
	T90(EAX).A =   #_opa:LINK(-8).A
	PARM	T90(EAX).A
	T91(EAX).A =   _q:LINK(4).A
	PARM	T91(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1256:	        getAmodes(q, &opa, left, &apll, &aplh); 

	T92(EAX).A =   #_aplh:LINK(-24).A
	PARM	T92(EAX).A
	T93(EAX).A =   #_apll:LINK(-20).A
	PARM	T93(EAX).A
	T94(EAX).A =   _left:LINK(-12).A
	PARM	T94(EAX).A
	T95(EAX).A =   #_opa:LINK(-8).A
	PARM	T95(EAX).A
	T96(EAX).A =   _q:LINK(4).A
	PARM	T96(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_1696:
; Line 1257:	        if (flt == op_sete || flt == op_setne) 

	T97(EAX).I =   _flt:LINK(16).I
	CONDGO	L_1917:PC ; T97(EAX).I == #15E.I
	BLOCK END
	BLOCK 93
	T98(EAX).I =   _flt:LINK(16).I
	CONDGO	L_1695:PC ; T98(EAX).I != #168.I
	BLOCK END
	BLOCK 94

L_1917:
	DBG BLOCK START
	BLOCK END
	BLOCK 95

L_1697:
; Line 1258:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_1698:
; Line 1259:	            gen_code_sse(op_ucomiss, op_ucomisd, left->size, apll, aprl); 

	T117(EAX).A =   _aprl:LINK(-28).A
	PARM	T117(EAX).A
	T118(EAX).A =   _apll:LINK(-20).A
	PARM	T118(EAX).A
	T119(EAX).A =   _left:LINK(-12).A
	T120(EAX).I =   *(T119(EAX) + 19).A.C
	PARM	T120(EAX).I
	PARM	#259.I
	PARM	#25A.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1260:	            getAmodes(q, &opa, q->ans, &apal, &apah); 

	T121(EAX).A =   #_apah:LINK(-40).A
	PARM	T121(EAX).A
	T122(EAX).A =   #_apal:LINK(-36).A
	PARM	T122(EAX).A
	T123(EAX).A =   _q:LINK(4).A
	T124(EAX).A =   *(T123(EAX) + 40).A.A
	PARM	T124(EAX).A
	T125(EAX).A =   #_opa:LINK(-8).A
	PARM	T125(EAX).A
	T126(EAX).A =   _q:LINK(4).A
	PARM	T126(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 97

L_1700:
; Line 1261:	            if (flt == op_sete) 

	T127(EAX).I =   _flt:LINK(16).I
	CONDGO	L_1699:PC ; T127(EAX).I != #15E.I
	BLOCK END
	BLOCK 98
	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_1701:
; Line 1262:	                flt = op_setnp; 

	_flt:LINK(16).I =   #16E.I
	BLOCK END
	BLOCK 100

L_1703:
	DBG BLOCK END
	GOTO	L_1702:PC
	BLOCK END
	BLOCK 101
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_1704:
	BLOCK END
	BLOCK 103

L_1699:
; Line 1263:	            else 

; Line 1264:	                flt = op_setp; 

	_flt:LINK(16).I =   #172.I
	BLOCK END
	BLOCK 104

L_1705:
	DBG BLOCK END
	BLOCK END
	BLOCK 105

L_1702:
	BLOCK END
	BLOCK 106

L_1706:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 107

L_1708:
; Line 1265:	            if ((apal->mode != am_dreg || apal->preg != EAX) && live(apll->liveRegs, EAX)) 

	T128(EAX).A =   _apal:LINK(-36).A
	T129(EAX).I =   *(T128(EAX) + 0).A.I
	CONDGO	L_1918:PC ; T129(EAX).I != #2.C
	BLOCK END
	BLOCK 108
	T130(EAX).A =   _apal:LINK(-36).A
	T131(AL).C =   *(T130(EAX) + 4).A.C
	CONDGO	L_1707:PC ; T131(AL).C == #0.C
	BLOCK END
	BLOCK 109

L_1918:
	T132(EAX).A =   _apll:LINK(-20).A
	T133(EAX).I =   *(T132(EAX) + 10).A.I
	T134(EAX).I = T133(EAX).I & #1.C
	CONDGO	L_1707:PC ; T134(EAX).I == #0.C
	BLOCK END
	BLOCK 110
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_1709:
; Line 1266:	                gen_codes(op_push, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T135(EAX).UI =   #0.C
	PARM	T135(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T136(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T136(EAX).A
	T137(EAX).UI =   #7.C
	PARM	T137(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 112

L_1710:
	DBG BLOCK END
	BLOCK END
	BLOCK 113

L_1707:
	BLOCK END
	BLOCK 114

L_1711:
	DBG BLOCK END
; Line 1267:	            gen_code(op_lahf, nullptr, nullptr); 

	PARM	#0.UI
	PARM	#0.UI
	PARM	#103.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1270:	            gen_codes(op_test, ISZ_UCHAR, makedreg(AH), aimmed(0x44)); 

	T138(EDX:EAX).ULL =   #44.I
	PARM	T138(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T139(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T139(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T140(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T140(EAX).A
	T141(EAX).UI =   #3.C
	PARM	T141(EAX).UI
	PARM	#18E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 115

L_1713:
; Line 1271:	            if ((apal->mode != am_dreg || apal->preg != EAX) && live(apll->liveRegs, EAX)) 

	T142(EAX).A =   _apal:LINK(-36).A
	T143(EAX).I =   *(T142(EAX) + 0).A.I
	CONDGO	L_1919:PC ; T143(EAX).I != #2.C
	BLOCK END
	BLOCK 116
	T144(EAX).A =   _apal:LINK(-36).A
	T145(AL).C =   *(T144(EAX) + 4).A.C
	CONDGO	L_1712:PC ; T145(AL).C == #0.C
	BLOCK END
	BLOCK 117

L_1919:
	T146(EAX).A =   _apll:LINK(-20).A
	T147(EAX).I =   *(T146(EAX) + 10).A.I
	T148(EAX).I = T147(EAX).I & #1.C
	CONDGO	L_1712:PC ; T148(EAX).I == #0.C
	BLOCK END
	BLOCK 118
	DBG BLOCK START
	BLOCK END
	BLOCK 119

L_1714:
; Line 1272:	                gen_codes(op_pop, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T149(EAX).UI =   #0.C
	PARM	T149(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T150(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T150(EAX).A
	T151(EAX).UI =   #7.C
	PARM	T151(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 120

L_1715:
	DBG BLOCK END
	BLOCK END
	BLOCK 121

L_1712:
	BLOCK END
	BLOCK 122

L_1716:
	DBG BLOCK END
; Line 1273:	            gen_codes(flt, ISZ_UCHAR, apal, 0); 

	T152(EAX).A =   #0.C
	PARM	T152(EAX).A
	T153(EAX).A =   _apal:LINK(-36).A
	PARM	T153(EAX).A
	T154(EAX).UI =   #3.C
	PARM	T154(EAX).UI
	T155(EAX).I =   _flt:LINK(16).I
	PARM	T155(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1274:	            gen_codes(op_and, ISZ_UINT, apal, aimmed(1)); 

	T156(EDX:EAX).ULL =   #1.C
	PARM	T156(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T157(EAX).A =   RV.T7(EAX).A
	PARMADJ	#8.N
	PARM	T157(EAX).A
	T158(EAX).A =   _apal:LINK(-36).A
	PARM	T158(EAX).A
	T159(EAX).UI =   #7.C
	PARM	T159(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1275:	            return; 

	GOTO	L_1621:PC
; Line 1276:	        } 

	BLOCK END
	BLOCK 123

L_1717:
	DBG BLOCK END
	BLOCK END
	BLOCK 124

L_1719:
	DBG BLOCK END
	BLOCK END
	BLOCK 125
	DBG BLOCK START
	BLOCK END
	BLOCK 126

L_1720:
	BLOCK END
	BLOCK 127

L_1695:
; Line 1277:	        else 

; Line 1278:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 128

L_1721:
; Line 1283:	            gen_code_sse(op_comiss, op_comisd, left->size, apll, aprl); 

	T99(EAX).A =   _aprl:LINK(-28).A
	PARM	T99(EAX).A
	T100(EAX).A =   _apll:LINK(-20).A
	PARM	T100(EAX).A
	T101(EAX).A =   _left:LINK(-12).A
	T102(EAX).I =   *(T101(EAX) + 19).A.C
	PARM	T102(EAX).I
	PARM	#1AD.I
	PARM	#1AE.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1284:	            getAmodes(q, &opa, q->ans, &apal, &apah); 

	T103(EAX).A =   #_apah:LINK(-40).A
	PARM	T103(EAX).A
	T104(EAX).A =   #_apal:LINK(-36).A
	PARM	T104(EAX).A
	T105(EAX).A =   _q:LINK(4).A
	T106(EAX).A =   *(T105(EAX) + 40).A.A
	PARM	T106(EAX).A
	T107(EAX).A =   #_opa:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   _q:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1285:	            gen_codes(flt, ISZ_UCHAR, apal, 0); 

	T109(EAX).A =   #0.C
	PARM	T109(EAX).A
	T110(EAX).A =   _apal:LINK(-36).A
	PARM	T110(EAX).A
	T111(EAX).UI =   #3.C
	PARM	T111(EAX).UI
	T112(EAX).I =   _flt:LINK(16).I
	PARM	T112(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1286:	            gen_codes(op_and, ISZ_UINT, apal, aimmed(1)); 

	T113(EDX:EAX).ULL =   #1.C
	PARM	T113(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T114(EAX).A =   RV.T8(EAX).A
	PARMADJ	#8.N
	PARM	T114(EAX).A
	T115(EAX).A =   _apal:LINK(-36).A
	PARM	T115(EAX).A
	T116(EAX).UI =   #7.C
	PARM	T116(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1287:	            return; 

	GOTO	L_1621:PC
; Line 1288:	        } 

	BLOCK END
	BLOCK 129

L_1722:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_1723:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_1718:
	BLOCK END
	BLOCK 132

L_1724:
	DBG BLOCK END
	BLOCK END
	BLOCK 133

L_1725:
	DBG BLOCK END
	BLOCK END
	BLOCK 134

L_1726:
	DBG BLOCK END
	BLOCK END
	BLOCK 135

L_1691:
	BLOCK END
	BLOCK 136

L_1727:
	DBG BLOCK END
; Line 1290:	    getAmodes(q, &opa, left, &apll, &aplh); 

	T160(EAX).A =   #_aplh:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   #_apll:LINK(-20).A
	PARM	T161(EAX).A
	T162(EAX).A =   _left:LINK(-12).A
	PARM	T162(EAX).A
	T163(EAX).A =   #_opa:LINK(-8).A
	PARM	T163(EAX).A
	T164(EAX).A =   _q:LINK(4).A
	PARM	T164(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1291:	    getAmodes(q, &opa, right, &aprl, &aprh); 

	T165(EAX).A =   #_aprh:LINK(-32).A
	PARM	T165(EAX).A
	T166(EAX).A =   #_aprl:LINK(-28).A
	PARM	T166(EAX).A
	T167(EAX).A =   _right:LINK(-16).A
	PARM	T167(EAX).A
	T168(EAX).A =   #_opa:LINK(-8).A
	PARM	T168(EAX).A
	T169(EAX).A =   _q:LINK(4).A
	PARM	T169(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1292:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T170(EAX).A =   #_apah:LINK(-40).A
	PARM	T170(EAX).A
	T171(EAX).A =   #_apal:LINK(-36).A
	PARM	T171(EAX).A
	T172(EAX).A =   _q:LINK(4).A
	T173(EAX).A =   *(T172(EAX) + 40).A.A
	PARM	T173(EAX).A
	T174(EAX).A =   #_opa:LINK(-8).A
	PARM	T174(EAX).A
	T175(EAX).A =   _q:LINK(4).A
	PARM	T175(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 137

L_1729:
; Line 1293:	    if (apal->preg > EBX) 

	T176(EAX).A =   _apal:LINK(-36).A
	T177(EAX).I =   *(T176(EAX) + 4).A.C
	CONDGO	L_1728:PC ; T177(EAX).I S<= #3.C
	BLOCK END
	BLOCK 138
	DBG BLOCK START
	BLOCK END
	BLOCK 139

L_1730:
; Line 1294:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_1731:
; Line 1295:	        int i; 

	VAR START	i
	DBG BLOCK START
	BLOCK END
	BLOCK 141

L_1736:
; Line 1296:	        for (i = 0; i < 4; i++) 

	T178(EAX).I =   #0.C
	_i:LINK(-64).I =   T178(EAX).I
	GOTO	L_1733:PC
	BLOCK END
	BLOCK 142

L_1732:
	DBG BLOCK START
	BLOCK END
	BLOCK 143

L_1737:
; Line 1297:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 144

L_1738:
; Line 1298:	            if (!live(apal->liveRegs, i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 145

L_1740:
	T180(EDX).A =   _apal:LINK(-36).A
	T182(ECX).I =   _i:LINK(-64).I
	T386(EAX).I =   T182(ECX).I^
	T387(ECX).I =   T386(EAX).I^
	T183(EAX).I = #1.C << T387(ECX).I
	T184(EAX).I = *(T180(EDX) + 10).A.I & T183(EAX).I
	CONDGO	L_1739:PC ; T184(EAX).I != #0.C
	BLOCK END
	BLOCK 146
	DBG BLOCK START
	BLOCK END
	BLOCK 147

L_1741:
; Line 1299:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 148

L_1742:
; Line 1300:	                altreg = makedreg(i); 

	T185(EAX).I =   _i:LINK(-64).I
	PARM	T185(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T186(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	_altreg:LINK(-48).A =   T186(EAX).A
; Line 1301:	                assign = true; 

	_assign:LINK(-41).BOOL =   #1.BOOL
; Line 1302:	                break; 

	GOTO	L_1734:PC
	BLOCK END
	BLOCK 149

L_1743:
	DBG BLOCK END
	BLOCK END
	BLOCK 150

L_1744:
	DBG BLOCK END
	BLOCK END
	BLOCK 151

L_1739:
	BLOCK END
	BLOCK 152

L_1745:
	DBG BLOCK END
; Line 1304:	        } 

	BLOCK END
	BLOCK 153

L_1746:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_1747:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_1735:
	_i:LINK(-64).I = _i:LINK(-64).I + #1.C
	BLOCK END
	BLOCK 156

L_1733:
	T179(EAX).I =   _i:LINK(-64).I
	CONDGO	L_1732:PC ; T179(EAX).I S< #4.I
	BLOCK END
	BLOCK 157

L_1734:
	BLOCK END
	BLOCK 158

L_1748:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 159

L_1750:
; Line 1305:	        if (!assign) 

	T187(AL).BOOL =   _assign:LINK(-41).BOOL
	CONDGO	L_1749:PC ; T187(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 160
	DBG BLOCK START
	BLOCK END
	BLOCK 161

L_1751:
; Line 1306:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 162

L_1752:
; Line 1307:	            altreg = make_stack(0); 

	T188(EAX).UI =   #0.C
	PARM	T188(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T189(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	_altreg:LINK(-48).A =   T189(EAX).A
; Line 1308:	            stacked = true; 

	_stacked:LINK(-42).BOOL =   #1.BOOL
; Line 1309:	        } 

	BLOCK END
	BLOCK 163

L_1753:
	DBG BLOCK END
	BLOCK END
	BLOCK 164

L_1754:
	DBG BLOCK END
	BLOCK END
	BLOCK 165

L_1749:
	BLOCK END
	BLOCK 166

L_1755:
	DBG BLOCK END
; Line 1310:	    } 

	BLOCK END
	BLOCK 167

L_1756:
	DBG BLOCK END
	BLOCK END
	BLOCK 168

L_1757:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_1728:
	BLOCK END
	BLOCK 170

L_1758:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 171

L_1760:
; Line 1311:	    if (left->size == ISZ_ULONGLONG || left->size == -ISZ_ULONGLONG) 

	T190(EAX).A =   _left:LINK(-12).A
	T191(AL).C =   *(T190(EAX) + 19).A.C
	CONDGO	L_1920:PC ; T191(AL).C == #B.C
	BLOCK END
	BLOCK 172
	T192(EAX).A =   _left:LINK(-12).A
	T193(EAX).I =   *(T192(EAX) + 19).A.C
	CONDGO	L_1759:PC ; T193(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 173

L_1920:
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_1761:
; Line 1312:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_1762:
; Line 1313:	        int lab = beGetLabel; 

	VAR START	lab
	T242(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-52).I =   T242(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	VAR START	sop
; Line 1314:	        int sop = op; 

	T243(EAX).I =   _op:LINK(-4).I
	_sop:LINK(-56).I =   T243(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 176

L_1764:
	DBG BLOCK END
; Line 1315:	        switch (op) 

	T244(EAX).I =   _op:LINK(-4).I
	COSWITCH(T244(EAX).I,#4.UI,#4.UI,L_1774:PC)
	SWBRANCH(#15F.UI,L_1766:PC)
	SWBRANCH(#160.UI,L_1768:PC)
	SWBRANCH(#161.UI,L_1770:PC)
	SWBRANCH(#162.UI,L_1772:PC)
; Line 1316:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 177

L_1765:
	BLOCK END
	BLOCK 178

L_1766:
	DBG BLOCK START
; Line 1318:	                sop = op_seta; 

	_sop:LINK(-56).I =   #159.I
; Line 1319:	                break; 

	GOTO	L_1763:PC
	BLOCK END
	BLOCK 179
	DBG BLOCK END
	BLOCK END
	BLOCK 180

L_1768:
	DBG BLOCK START
; Line 1320:	            case op_setge: 
; Line 1321:	                sop = op_setnc; 

; Line 1321:	                sop = op_setnc; 

	_sop:LINK(-56).I =   #167.I
; Line 1322:	                break; 

	GOTO	L_1763:PC
	BLOCK END
	BLOCK 181
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_1770:
	DBG BLOCK START
; Line 1323:	            case op_setl: 
; Line 1324:	                sop = op_setc; 

; Line 1324:	                sop = op_setc; 

	_sop:LINK(-56).I =   #15D.I
; Line 1325:	                break; 

	GOTO	L_1763:PC
	BLOCK END
	BLOCK 183
	DBG BLOCK END
	BLOCK END
	BLOCK 184

L_1772:
	DBG BLOCK START
; Line 1326:	            case op_setle: 
; Line 1327:	                sop = op_setbe; 

; Line 1327:	                sop = op_setbe; 

	_sop:LINK(-56).I =   #15C.I
; Line 1328:	                break; 

	GOTO	L_1763:PC
	BLOCK END
	BLOCK 185
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_1774:
	DBG BLOCK START
; Line 1329:	            default: 
; Line 1330:	                break; 

; Line 1330:	                break; 

	BLOCK END
	BLOCK 187

L_1775:
	DBG BLOCK END
	BLOCK END
	BLOCK 188

L_1763:
	BLOCK END
	BLOCK 189

L_1776:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 190

L_1778:
; Line 1332:	        if (op == sop) 

	T245(ECX).I =   _sop:LINK(-56).I
	T246(EAX).I =   _op:LINK(-4).I
	CONDGO	L_1777:PC ; T246(EAX).I != T245(ECX).I
	BLOCK END
	BLOCK 191
	DBG BLOCK START
	BLOCK END
	BLOCK 192

L_1779:
; Line 1334:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_1780:
; Line 1335:	            gen_codes(op_cmp, ISZ_UINT, aplh, aprh); 

	T247(EAX).A =   _aprh:LINK(-32).A
	PARM	T247(EAX).A
	T248(EAX).A =   _aplh:LINK(-24).A
	PARM	T248(EAX).A
	T249(EAX).UI =   #7.C
	PARM	T249(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1336:	            peep_tail->oper1->liveRegs = -1; 

	T250(EAX).A =   @occx86@peep_tail:RAM.A
	T251(EAX).A =   *(T250(EAX) + C).A.A
	*(T251(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
; Line 1337:	            gen_branch(op_jne, lab); 

	T252(EAX).I =   _lab:LINK(-52).I
	PARM	T252(EAX).I
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1338:	            gen_codes(op_cmp, ISZ_UINT, apll, aprl); 

	T253(EAX).A =   _aprl:LINK(-28).A
	PARM	T253(EAX).A
	T254(EAX).A =   _apll:LINK(-20).A
	PARM	T254(EAX).A
	T255(EAX).UI =   #7.C
	PARM	T255(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1339:	            peep_tail->oper1->liveRegs = -1; 

	T256(EAX).A =   @occx86@peep_tail:RAM.A
	T257(EAX).A =   *(T256(EAX) + C).A.A
	*(T257(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
; Line 1340:	            oa_gen_label(lab); 

	T258(EAX).I =   _lab:LINK(-52).I
	PARM	T258(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
	DBG BLOCK START
	BLOCK END
	BLOCK 194

L_1782:
; Line 1341:	            if (assign) 

	T259(AL).BOOL =   _assign:LINK(-41).BOOL
	CONDGO	L_1781:PC ; T259(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_1783:
; Line 1342:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_1784:
; Line 1343:	                gen_codes(op, ISZ_UCHAR, altreg, 0); 

	T260(EAX).A =   #0.C
	PARM	T260(EAX).A
	T261(EAX).A =   _altreg:LINK(-48).A
	PARM	T261(EAX).A
	T262(EAX).UI =   #3.C
	PARM	T262(EAX).UI
	T263(EAX).I =   _op:LINK(-4).I
	PARM	T263(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1344:	                gen_codes(op_and, ISZ_UINT, altreg, aimmed(1)); 

	T264(EDX:EAX).ULL =   #1.C
	PARM	T264(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T265(EAX).A =   RV.T11(EAX).A
	PARMADJ	#8.N
	PARM	T265(EAX).A
	T266(EAX).A =   _altreg:LINK(-48).A
	PARM	T266(EAX).A
	T267(EAX).UI =   #7.C
	PARM	T267(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1345:	                gen_codes(op_mov, ISZ_UINT, apal, altreg); 

	T268(EAX).A =   _altreg:LINK(-48).A
	PARM	T268(EAX).A
	T269(EAX).A =   _apal:LINK(-36).A
	PARM	T269(EAX).A
	T270(EAX).UI =   #7.C
	PARM	T270(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1346:	            } 

	BLOCK END
	BLOCK 198

L_1785:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_1787:
	DBG BLOCK END
	GOTO	L_1786:PC
	BLOCK END
	BLOCK 200
	DBG BLOCK START
	BLOCK END
	BLOCK 201

L_1788:
	BLOCK END
	BLOCK 202

L_1781:
; Line 1347:	            else if (stacked) 

	DBG BLOCK START
	BLOCK END
	BLOCK 203

L_1790:
	T271(AL).BOOL =   _stacked:LINK(-42).BOOL
	CONDGO	L_1789:PC ; T271(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 204
	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_1791:
; Line 1348:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_1792:
; Line 1349:	                gen_codes(op_push, ISZ_UINT, aimmed(0), NULL); 

	T272(EAX).A =   #0.C
	PARM	T272(EAX).A
	T273(EDX:EAX).ULL =   #0.C
	PARM	T273(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T274(EAX).A =   RV.T12(EAX).A
	PARMADJ	#8.N
	PARM	T274(EAX).A
	T275(EAX).UI =   #7.C
	PARM	T275(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1350:	                gen_codes(op, ISZ_UCHAR, altreg, 0); 

	T276(EAX).A =   #0.C
	PARM	T276(EAX).A
	T277(EAX).A =   _altreg:LINK(-48).A
	PARM	T277(EAX).A
	T278(EAX).UI =   #3.C
	PARM	T278(EAX).UI
	T279(EAX).I =   _op:LINK(-4).I
	PARM	T279(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1351:	                gen_codes(op_pop, ISZ_UINT, apal, NULL); 

	T280(EAX).A =   #0.C
	PARM	T280(EAX).A
	T281(EAX).A =   _apal:LINK(-36).A
	PARM	T281(EAX).A
	T282(EAX).UI =   #7.C
	PARM	T282(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1352:	            } 

	BLOCK END
	BLOCK 207

L_1793:
	DBG BLOCK END
	BLOCK END
	BLOCK 208

L_1795:
	DBG BLOCK END
	GOTO	L_1794:PC
	BLOCK END
	BLOCK 209
	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_1796:
	BLOCK END
	BLOCK 211

L_1789:
; Line 1353:	            else 

; Line 1354:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_1797:
; Line 1355:	                gen_codes(op, ISZ_UCHAR, apal, 0); 

	T283(EAX).A =   #0.C
	PARM	T283(EAX).A
	T284(EAX).A =   _apal:LINK(-36).A
	PARM	T284(EAX).A
	T285(EAX).UI =   #3.C
	PARM	T285(EAX).UI
	T286(EAX).I =   _op:LINK(-4).I
	PARM	T286(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1356:	                gen_codes(op_and, ISZ_UINT, apal, aimmed(1)); 

	T287(EDX:EAX).ULL =   #1.C
	PARM	T287(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T288(EAX).A =   RV.T13(EAX).A
	PARMADJ	#8.N
	PARM	T288(EAX).A
	T289(EAX).A =   _apal:LINK(-36).A
	PARM	T289(EAX).A
	T290(EAX).UI =   #7.C
	PARM	T290(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1357:	            } 

	BLOCK END
	BLOCK 213

L_1798:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_1799:
	DBG BLOCK END
	BLOCK END
	BLOCK 215

L_1794:
	BLOCK END
	BLOCK 216

L_1800:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_1801:
	DBG BLOCK END
	BLOCK END
	BLOCK 218

L_1786:
	BLOCK END
	BLOCK 219

L_1802:
	DBG BLOCK END
; Line 1358:	        } 

	BLOCK END
	BLOCK 220

L_1803:
	DBG BLOCK END
	BLOCK END
	BLOCK 221

L_1805:
	DBG BLOCK END
	GOTO	L_1804:PC
	BLOCK END
	BLOCK 222
	DBG BLOCK START
	BLOCK END
	BLOCK 223

L_1806:
	BLOCK END
	BLOCK 224

L_1777:
; Line 1359:	        else 

; Line 1360:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_1807:
; Line 1361:	            int lab2 = beGetLabel; 

	VAR START	lab2
	T291(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab2:LINK(-60).I =   T291(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 1362:	            gen_codes(op_cmp, ISZ_UINT, aplh, aprh); 

	T292(EAX).A =   _aprh:LINK(-32).A
	PARM	T292(EAX).A
	T293(EAX).A =   _aplh:LINK(-24).A
	PARM	T293(EAX).A
	T294(EAX).UI =   #7.C
	PARM	T294(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1363:	            peep_tail->oper1->liveRegs = -1; 

	T295(EAX).A =   @occx86@peep_tail:RAM.A
	T296(EAX).A =   *(T295(EAX) + C).A.A
	*(T296(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
; Line 1364:	            gen_branch(op_jne, lab); 

	T297(EAX).I =   _lab:LINK(-52).I
	PARM	T297(EAX).I
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1365:	            gen_codes(op_cmp, ISZ_UINT, apll, aprl); 

	T298(EAX).A =   _aprl:LINK(-28).A
	PARM	T298(EAX).A
	T299(EAX).A =   _apll:LINK(-20).A
	PARM	T299(EAX).A
	T300(EAX).UI =   #7.C
	PARM	T300(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1366:	            peep_tail->oper1->liveRegs = -1; 

	T301(EAX).A =   @occx86@peep_tail:RAM.A
	T302(EAX).A =   *(T301(EAX) + C).A.A
	*(T302(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	DBG BLOCK START
	BLOCK END
	BLOCK 226

L_1809:
; Line 1367:	            if (assign) 

	T303(AL).BOOL =   _assign:LINK(-41).BOOL
	CONDGO	L_1808:PC ; T303(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 227
	DBG BLOCK START
	BLOCK END
	BLOCK 228

L_1810:
; Line 1368:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 229

L_1811:
; Line 1369:	                gen_codes(sop, ISZ_UCHAR, altreg, 0); 

	T304(EAX).A =   #0.C
	PARM	T304(EAX).A
	T305(EAX).A =   _altreg:LINK(-48).A
	PARM	T305(EAX).A
	T306(EAX).UI =   #3.C
	PARM	T306(EAX).UI
	T307(EAX).I =   _sop:LINK(-56).I
	PARM	T307(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 230

L_1813:
; Line 1370:	                if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T308(EAX).A =   _apal:LINK(-36).A
	T309(AL).C =   *(T308(EAX) + 8).A.C
	CONDGO	L_1812:PC ; T309(AL).C == #3.C
	BLOCK END
	BLOCK 231
	T310(EAX).A =   _apal:LINK(-36).A
	T311(EAX).I =   *(T310(EAX) + 8).A.C
	CONDGO	L_1812:PC ; T311(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 232
	DBG BLOCK START
	BLOCK END
	BLOCK 233

L_1814:
; Line 1371:	                    gen_codes(op_and, ISZ_UINT, altreg, aimmed(1)); 

	T312(EDX:EAX).ULL =   #1.C
	PARM	T312(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T313(EAX).A =   RV.T14(EAX).A
	PARMADJ	#8.N
	PARM	T313(EAX).A
	T314(EAX).A =   _altreg:LINK(-48).A
	PARM	T314(EAX).A
	T315(EAX).UI =   #7.C
	PARM	T315(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 234

L_1815:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_1812:
	BLOCK END
	BLOCK 236

L_1816:
	DBG BLOCK END
; Line 1372:	                gen_codes(op_mov, ISZ_UINT, apal, altreg); 

	T316(EAX).A =   _altreg:LINK(-48).A
	PARM	T316(EAX).A
	T317(EAX).A =   _apal:LINK(-36).A
	PARM	T317(EAX).A
	T318(EAX).UI =   #7.C
	PARM	T318(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1373:	            } 

	BLOCK END
	BLOCK 237

L_1817:
	DBG BLOCK END
	BLOCK END
	BLOCK 238

L_1819:
	DBG BLOCK END
	GOTO	L_1818:PC
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_1820:
	BLOCK END
	BLOCK 241

L_1808:
; Line 1374:	            else if (stacked) 

	DBG BLOCK START
	BLOCK END
	BLOCK 242

L_1822:
	T319(AL).BOOL =   _stacked:LINK(-42).BOOL
	CONDGO	L_1821:PC ; T319(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 243
	DBG BLOCK START
	BLOCK END
	BLOCK 244

L_1823:
; Line 1375:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_1824:
; Line 1376:	                gen_codes(op_push, ISZ_UINT, aimmed(0), NULL); 

	T320(EAX).A =   #0.C
	PARM	T320(EAX).A
	T321(EDX:EAX).ULL =   #0.C
	PARM	T321(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T322(EAX).A =   RV.T15(EAX).A
	PARMADJ	#8.N
	PARM	T322(EAX).A
	T323(EAX).UI =   #7.C
	PARM	T323(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1377:	                gen_codes(sop, ISZ_UCHAR, altreg, 0); 

	T324(EAX).A =   #0.C
	PARM	T324(EAX).A
	T325(EAX).A =   _altreg:LINK(-48).A
	PARM	T325(EAX).A
	T326(EAX).UI =   #3.C
	PARM	T326(EAX).UI
	T327(EAX).I =   _sop:LINK(-56).I
	PARM	T327(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1378:	                gen_codes(op_pop, ISZ_UINT, apal, NULL); 

	T328(EAX).A =   #0.C
	PARM	T328(EAX).A
	T329(EAX).A =   _apal:LINK(-36).A
	PARM	T329(EAX).A
	T330(EAX).UI =   #7.C
	PARM	T330(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1379:	            } 

	BLOCK END
	BLOCK 246

L_1825:
	DBG BLOCK END
	BLOCK END
	BLOCK 247

L_1827:
	DBG BLOCK END
	GOTO	L_1826:PC
	BLOCK END
	BLOCK 248
	DBG BLOCK START
	BLOCK END
	BLOCK 249

L_1828:
	BLOCK END
	BLOCK 250

L_1821:
; Line 1380:	            else 

; Line 1381:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 251

L_1829:
; Line 1382:	                gen_codes(sop, ISZ_UCHAR, apal, 0); 

	T331(EAX).A =   #0.C
	PARM	T331(EAX).A
	T332(EAX).A =   _apal:LINK(-36).A
	PARM	T332(EAX).A
	T333(EAX).UI =   #3.C
	PARM	T333(EAX).UI
	T334(EAX).I =   _sop:LINK(-56).I
	PARM	T334(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 252

L_1831:
; Line 1383:	                if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T335(EAX).A =   _apal:LINK(-36).A
	T336(AL).C =   *(T335(EAX) + 8).A.C
	CONDGO	L_1830:PC ; T336(AL).C == #3.C
	BLOCK END
	BLOCK 253
	T337(EAX).A =   _apal:LINK(-36).A
	T338(EAX).I =   *(T337(EAX) + 8).A.C
	CONDGO	L_1830:PC ; T338(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 254
	DBG BLOCK START
	BLOCK END
	BLOCK 255

L_1832:
; Line 1384:	                    gen_codes(op_and, ISZ_UINT, apal, aimmed(1)); 

	T339(EDX:EAX).ULL =   #1.C
	PARM	T339(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T340(EAX).A =   RV.T16(EAX).A
	PARMADJ	#8.N
	PARM	T340(EAX).A
	T341(EAX).A =   _apal:LINK(-36).A
	PARM	T341(EAX).A
	T342(EAX).UI =   #7.C
	PARM	T342(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 256

L_1833:
	DBG BLOCK END
	BLOCK END
	BLOCK 257

L_1830:
	BLOCK END
	BLOCK 258

L_1834:
	DBG BLOCK END
; Line 1385:	            } 

	BLOCK END
	BLOCK 259

L_1835:
	DBG BLOCK END
	BLOCK END
	BLOCK 260

L_1836:
	DBG BLOCK END
	BLOCK END
	BLOCK 261

L_1826:
	BLOCK END
	BLOCK 262

L_1837:
	DBG BLOCK END
	BLOCK END
	BLOCK 263

L_1838:
	DBG BLOCK END
	BLOCK END
	BLOCK 264

L_1818:
	BLOCK END
	BLOCK 265

L_1839:
	DBG BLOCK END
; Line 1386:	            gen_branch(op_jmp, lab2); 

	T343(EAX).I =   _lab2:LINK(-60).I
	PARM	T343(EAX).I
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1387:	            oa_gen_label(lab); 

	T344(EAX).I =   _lab:LINK(-52).I
	PARM	T344(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
	DBG BLOCK START
	BLOCK END
	BLOCK 266

L_1841:
; Line 1388:	            if (assign) 

	T345(AL).BOOL =   _assign:LINK(-41).BOOL
	CONDGO	L_1840:PC ; T345(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 267
	DBG BLOCK START
	BLOCK END
	BLOCK 268

L_1842:
; Line 1389:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 269

L_1843:
; Line 1390:	                gen_codes(op, ISZ_UCHAR, altreg, 0); 

	T346(EAX).A =   #0.C
	PARM	T346(EAX).A
	T347(EAX).A =   _altreg:LINK(-48).A
	PARM	T347(EAX).A
	T348(EAX).UI =   #3.C
	PARM	T348(EAX).UI
	T349(EAX).I =   _op:LINK(-4).I
	PARM	T349(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 270

L_1845:
; Line 1391:	                if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T350(EAX).A =   _apal:LINK(-36).A
	T351(AL).C =   *(T350(EAX) + 8).A.C
	CONDGO	L_1844:PC ; T351(AL).C == #3.C
	BLOCK END
	BLOCK 271
	T352(EAX).A =   _apal:LINK(-36).A
	T353(EAX).I =   *(T352(EAX) + 8).A.C
	CONDGO	L_1844:PC ; T353(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 272
	DBG BLOCK START
	BLOCK END
	BLOCK 273

L_1846:
; Line 1392:	                    gen_codes(op_and, ISZ_UINT, altreg, aimmed(1)); 

	T354(EDX:EAX).ULL =   #1.C
	PARM	T354(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T355(EAX).A =   RV.T17(EAX).A
	PARMADJ	#8.N
	PARM	T355(EAX).A
	T356(EAX).A =   _altreg:LINK(-48).A
	PARM	T356(EAX).A
	T357(EAX).UI =   #7.C
	PARM	T357(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 274

L_1847:
	DBG BLOCK END
	BLOCK END
	BLOCK 275

L_1844:
	BLOCK END
	BLOCK 276

L_1848:
	DBG BLOCK END
; Line 1393:	                gen_codes(op_mov, ISZ_UINT, apal, altreg); 

	T358(EAX).A =   _altreg:LINK(-48).A
	PARM	T358(EAX).A
	T359(EAX).A =   _apal:LINK(-36).A
	PARM	T359(EAX).A
	T360(EAX).UI =   #7.C
	PARM	T360(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1394:	            } 

	BLOCK END
	BLOCK 277

L_1849:
	DBG BLOCK END
	BLOCK END
	BLOCK 278

L_1851:
	DBG BLOCK END
	GOTO	L_1850:PC
	BLOCK END
	BLOCK 279
	DBG BLOCK START
	BLOCK END
	BLOCK 280

L_1852:
	BLOCK END
	BLOCK 281

L_1840:
; Line 1395:	            else if (stacked) 

	DBG BLOCK START
	BLOCK END
	BLOCK 282

L_1854:
	T361(AL).BOOL =   _stacked:LINK(-42).BOOL
	CONDGO	L_1853:PC ; T361(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 283
	DBG BLOCK START
	BLOCK END
	BLOCK 284

L_1855:
; Line 1396:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 285

L_1856:
; Line 1397:	                gen_codes(op_push, ISZ_UINT, aimmed(0), NULL); 

	T362(EAX).A =   #0.C
	PARM	T362(EAX).A
	T363(EDX:EAX).ULL =   #0.C
	PARM	T363(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T364(EAX).A =   RV.T18(EAX).A
	PARMADJ	#8.N
	PARM	T364(EAX).A
	T365(EAX).UI =   #7.C
	PARM	T365(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1398:	                gen_codes(op, ISZ_UCHAR, altreg, 0); 

	T366(EAX).A =   #0.C
	PARM	T366(EAX).A
	T367(EAX).A =   _altreg:LINK(-48).A
	PARM	T367(EAX).A
	T368(EAX).UI =   #3.C
	PARM	T368(EAX).UI
	T369(EAX).I =   _op:LINK(-4).I
	PARM	T369(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1399:	                gen_codes(op_pop, ISZ_UINT, apal, NULL); 

	T370(EAX).A =   #0.C
	PARM	T370(EAX).A
	T371(EAX).A =   _apal:LINK(-36).A
	PARM	T371(EAX).A
	T372(EAX).UI =   #7.C
	PARM	T372(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1400:	            } 

	BLOCK END
	BLOCK 286

L_1857:
	DBG BLOCK END
	BLOCK END
	BLOCK 287

L_1859:
	DBG BLOCK END
	GOTO	L_1858:PC
	BLOCK END
	BLOCK 288
	DBG BLOCK START
	BLOCK END
	BLOCK 289

L_1860:
	BLOCK END
	BLOCK 290

L_1853:
; Line 1401:	            else 

; Line 1402:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 291

L_1861:
; Line 1403:	                gen_codes(op, ISZ_UCHAR, apal, 0); 

	T373(EAX).A =   #0.C
	PARM	T373(EAX).A
	T374(EAX).A =   _apal:LINK(-36).A
	PARM	T374(EAX).A
	T375(EAX).UI =   #3.C
	PARM	T375(EAX).UI
	T376(EAX).I =   _op:LINK(-4).I
	PARM	T376(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 292

L_1863:
; Line 1404:	                if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T377(EAX).A =   _apal:LINK(-36).A
	T378(AL).C =   *(T377(EAX) + 8).A.C
	CONDGO	L_1862:PC ; T378(AL).C == #3.C
	BLOCK END
	BLOCK 293
	T379(EAX).A =   _apal:LINK(-36).A
	T380(EAX).I =   *(T379(EAX) + 8).A.C
	CONDGO	L_1862:PC ; T380(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 294
	DBG BLOCK START
	BLOCK END
	BLOCK 295

L_1864:
; Line 1405:	                    gen_codes(op_and, ISZ_UINT, apal, aimmed(1)); 

	T381(EDX:EAX).ULL =   #1.C
	PARM	T381(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T382(EAX).A =   RV.T19(EAX).A
	PARMADJ	#8.N
	PARM	T382(EAX).A
	T383(EAX).A =   _apal:LINK(-36).A
	PARM	T383(EAX).A
	T384(EAX).UI =   #7.C
	PARM	T384(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 296

L_1865:
	DBG BLOCK END
	BLOCK END
	BLOCK 297

L_1862:
	BLOCK END
	BLOCK 298

L_1866:
	DBG BLOCK END
; Line 1406:	            } 

	BLOCK END
	BLOCK 299

L_1867:
	DBG BLOCK END
	BLOCK END
	BLOCK 300

L_1868:
	DBG BLOCK END
	BLOCK END
	BLOCK 301

L_1858:
	BLOCK END
	BLOCK 302

L_1869:
	DBG BLOCK END
	BLOCK END
	BLOCK 303

L_1870:
	DBG BLOCK END
	BLOCK END
	BLOCK 304

L_1850:
	BLOCK END
	BLOCK 305

L_1871:
	DBG BLOCK END
; Line 1407:	            oa_gen_label(lab2); 

	T385(EAX).I =   _lab2:LINK(-60).I
	PARM	T385(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 1408:	        } 

	BLOCK END
	BLOCK 306

L_1872:
	DBG BLOCK END
	BLOCK END
	BLOCK 307

L_1873:
	DBG BLOCK END
	BLOCK END
	BLOCK 308

L_1804:
	BLOCK END
	BLOCK 309

L_1874:
	DBG BLOCK END
; Line 1409:	        return; 

	GOTO	L_1621:PC
; Line 1410:	    } 

	BLOCK END
	BLOCK 310

L_1875:
	DBG BLOCK END
	BLOCK END
	BLOCK 311

L_1877:
	DBG BLOCK END
	BLOCK END
	BLOCK 312
	DBG BLOCK START
	BLOCK END
	BLOCK 313

L_1878:
	BLOCK END
	BLOCK 314

L_1759:
; Line 1411:	    else 

; Line 1412:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 315

L_1879:
; Line 1413:	        gen_codes(op_cmp, left->size, apll, aprl); 

	T194(EAX).A =   _aprl:LINK(-28).A
	PARM	T194(EAX).A
	T195(EAX).A =   _apll:LINK(-20).A
	PARM	T195(EAX).A
	T196(EAX).A =   _left:LINK(-12).A
	T197(EAX).I =   *(T196(EAX) + 19).A.C
	PARM	T197(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1414:	        peep_tail->oper1->liveRegs = q->liveRegs; 

	T198(EAX).A =   _q:LINK(4).A
	T199(ECX).I =   *(T198(EAX) + 48).A.ULL
	T200(EAX).A =   @occx86@peep_tail:RAM.A
	T201(EAX).A =   *(T200(EAX) + C).A.A
	*(T201(EAX) + 10).A.I =   T199(ECX).I
; Line 1415:	    } 

	BLOCK END
	BLOCK 316

L_1880:
	DBG BLOCK END
	BLOCK END
	BLOCK 317

L_1881:
	DBG BLOCK END
	BLOCK END
	BLOCK 318

L_1876:
	BLOCK END
	BLOCK 319

L_1882:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 320

L_1884:
; Line 1416:	    if (assign) 

	T202(AL).BOOL =   _assign:LINK(-41).BOOL
	CONDGO	L_1883:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 321
	DBG BLOCK START
	BLOCK END
	BLOCK 322

L_1885:
; Line 1417:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 323

L_1886:
; Line 1418:	        gen_codes(op, ISZ_UCHAR, altreg, 0); 

	T203(EAX).A =   #0.C
	PARM	T203(EAX).A
	T204(EAX).A =   _altreg:LINK(-48).A
	PARM	T204(EAX).A
	T205(EAX).UI =   #3.C
	PARM	T205(EAX).UI
	T206(EAX).I =   _op:LINK(-4).I
	PARM	T206(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 324

L_1888:
; Line 1419:	        if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T207(EAX).A =   _apal:LINK(-36).A
	T208(AL).C =   *(T207(EAX) + 8).A.C
	CONDGO	L_1887:PC ; T208(AL).C == #3.C
	BLOCK END
	BLOCK 325
	T209(EAX).A =   _apal:LINK(-36).A
	T210(EAX).I =   *(T209(EAX) + 8).A.C
	CONDGO	L_1887:PC ; T210(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 326
	DBG BLOCK START
	BLOCK END
	BLOCK 327

L_1889:
; Line 1420:	            gen_codes(op_and, ISZ_UINT, altreg, aimmed(1)); 

	T211(EDX:EAX).ULL =   #1.C
	PARM	T211(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T212(EAX).A =   RV.T20(EAX).A
	PARMADJ	#8.N
	PARM	T212(EAX).A
	T213(EAX).A =   _altreg:LINK(-48).A
	PARM	T213(EAX).A
	T214(EAX).UI =   #7.C
	PARM	T214(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 328

L_1890:
	DBG BLOCK END
	BLOCK END
	BLOCK 329

L_1887:
	BLOCK END
	BLOCK 330

L_1891:
	DBG BLOCK END
; Line 1421:	        gen_codes(op_mov, ISZ_UINT, apal, altreg); 

	T215(EAX).A =   _altreg:LINK(-48).A
	PARM	T215(EAX).A
	T216(EAX).A =   _apal:LINK(-36).A
	PARM	T216(EAX).A
	T217(EAX).UI =   #7.C
	PARM	T217(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1422:	    } 

	BLOCK END
	BLOCK 331

L_1892:
	DBG BLOCK END
	BLOCK END
	BLOCK 332

L_1894:
	DBG BLOCK END
	GOTO	L_1893:PC
	BLOCK END
	BLOCK 333
	DBG BLOCK START
	BLOCK END
	BLOCK 334

L_1895:
	BLOCK END
	BLOCK 335

L_1883:
; Line 1423:	    else if (stacked) 

	DBG BLOCK START
	BLOCK END
	BLOCK 336

L_1897:
	T218(AL).BOOL =   _stacked:LINK(-42).BOOL
	CONDGO	L_1896:PC ; T218(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 337
	DBG BLOCK START
	BLOCK END
	BLOCK 338

L_1898:
; Line 1424:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 339

L_1899:
; Line 1425:	        gen_codes(op_push, ISZ_UINT, aimmed(0), NULL); 

	T219(EAX).A =   #0.C
	PARM	T219(EAX).A
	T220(EDX:EAX).ULL =   #0.C
	PARM	T220(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T221(EAX).A =   RV.T21(EAX).A
	PARMADJ	#8.N
	PARM	T221(EAX).A
	T222(EAX).UI =   #7.C
	PARM	T222(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1426:	        gen_codes(op, ISZ_UCHAR, altreg, 0); 

	T223(EAX).A =   #0.C
	PARM	T223(EAX).A
	T224(EAX).A =   _altreg:LINK(-48).A
	PARM	T224(EAX).A
	T225(EAX).UI =   #3.C
	PARM	T225(EAX).UI
	T226(EAX).I =   _op:LINK(-4).I
	PARM	T226(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1427:	        gen_codes(op_pop, ISZ_UINT, apal, NULL); 

	T227(EAX).A =   #0.C
	PARM	T227(EAX).A
	T228(EAX).A =   _apal:LINK(-36).A
	PARM	T228(EAX).A
	T229(EAX).UI =   #7.C
	PARM	T229(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1428:	    } 

	BLOCK END
	BLOCK 340

L_1900:
	DBG BLOCK END
	BLOCK END
	BLOCK 341

L_1902:
	DBG BLOCK END
	GOTO	L_1901:PC
	BLOCK END
	BLOCK 342
	DBG BLOCK START
	BLOCK END
	BLOCK 343

L_1903:
	BLOCK END
	BLOCK 344

L_1896:
; Line 1429:	    else 

; Line 1430:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 345

L_1904:
; Line 1431:	        gen_codes(op, ISZ_UCHAR, apal, 0); 

	T230(EAX).A =   #0.C
	PARM	T230(EAX).A
	T231(EAX).A =   _apal:LINK(-36).A
	PARM	T231(EAX).A
	T232(EAX).UI =   #3.C
	PARM	T232(EAX).UI
	T233(EAX).I =   _op:LINK(-4).I
	PARM	T233(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 346

L_1906:
; Line 1432:	        if (apal->length != ISZ_UCHAR && apal->length != -ISZ_UCHAR) 

	T234(EAX).A =   _apal:LINK(-36).A
	T235(AL).C =   *(T234(EAX) + 8).A.C
	CONDGO	L_1905:PC ; T235(AL).C == #3.C
	BLOCK END
	BLOCK 347
	T236(EAX).A =   _apal:LINK(-36).A
	T237(EAX).I =   *(T236(EAX) + 8).A.C
	CONDGO	L_1905:PC ; T237(EAX).I == #FFFFFFFFFFFFFFFD.I
	BLOCK END
	BLOCK 348
	DBG BLOCK START
	BLOCK END
	BLOCK 349

L_1907:
; Line 1433:	            gen_codes(op_and, ISZ_UINT, apal, aimmed(1)); 

	T238(EDX:EAX).ULL =   #1.C
	PARM	T238(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T239(EAX).A =   RV.T22(EAX).A
	PARMADJ	#8.N
	PARM	T239(EAX).A
	T240(EAX).A =   _apal:LINK(-36).A
	PARM	T240(EAX).A
	T241(EAX).UI =   #7.C
	PARM	T241(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 350

L_1908:
	DBG BLOCK END
	BLOCK END
	BLOCK 351

L_1905:
	BLOCK END
	BLOCK 352

L_1909:
	DBG BLOCK END
; Line 1434:	    } 

	BLOCK END
	BLOCK 353

L_1910:
	DBG BLOCK END
	BLOCK END
	BLOCK 354

L_1911:
	DBG BLOCK END
	BLOCK END
	BLOCK 355

L_1901:
	BLOCK END
	BLOCK 356

L_1912:
	DBG BLOCK END
	BLOCK END
	BLOCK 357

L_1913:
	DBG BLOCK END
	BLOCK END
	BLOCK 358

L_1893:
	BLOCK END
	BLOCK 359

L_1914:
	DBG BLOCK END
; Line 1435:	} 

	BLOCK END
	BLOCK 360

L_1915:
	DBG BLOCK END
	BLOCK END
	BLOCK 361

L_1621:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1


global @occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1
@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:
; Line 1436:	void gen_goto(Optimizer::QUAD* q, enum e_opcode pos, enum e_opcode neg, enum e_opcode llpos, enum e_opcode llneg, 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#38.UI
	BLOCK END
	BLOCK 2

L_1926:
	VAR START	q
	VAR START	pos
	VAR START	neg
	VAR START	llpos
	VAR START	llneg
	VAR START	llintermpos
	VAR START	llintermneg
	VAR START	flt
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_1928:
; Line 1438:	{ 

	VAR START	sop
; Line 1439:	    enum e_opcode sop = pos, sop1 = llpos, top = llneg, top1 = llintermpos, opa; 

	T6(EAX).I =   _pos:LINK(8).I
	_sop:LINK(-4).I =   T6(EAX).I
	VAR START	sop1
	T7(EAX).I =   _llpos:LINK(16).I
	_sop1:LINK(-8).I =   T7(EAX).I
	VAR START	top
	T8(EAX).I =   _llneg:LINK(20).I
	_top:LINK(-12).I =   T8(EAX).I
	VAR START	top1
	T9(EAX).I =   _llintermpos:LINK(24).I
	_top1:LINK(-16).I =   T9(EAX).I
	VAR START	opa
	VAR START	left
; Line 1440:	    Optimizer::IMODE* left = q->dc.left; 

	T10(EAX).A =   _q:LINK(4).A
	T11(EAX).A =   *(T10(EAX) + 4+0).A.A
	_left:LINK(-24).A =   T11(EAX).A
	VAR START	right
; Line 1441:	    Optimizer::IMODE* right = q->dc.right; 

	T12(EAX).A =   _q:LINK(4).A
	T13(EAX).A =   *(T12(EAX) + 8+0).A.A
	_right:LINK(-28).A =   T13(EAX).A
	VAR START	apll
; Line 1442:	    AMODE *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T14(EAX).A =   #0.UI
	_apll:LINK(-32).A =   T14(EAX).A
	VAR START	aplh
	T15(EAX).A =   #0.UI
	_aplh:LINK(-36).A =   T15(EAX).A
	VAR START	aprl
	T16(EAX).A =   #0.UI
	_aprl:LINK(-40).A =   T16(EAX).A
	VAR START	aprh
	T17(EAX).A =   #0.UI
	_aprh:LINK(-44).A =   T17(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_1930:
; Line 1443:	    if (left->mode == Optimizer::i_immed && left->size < ISZ_FLOAT) 

	T18(EAX).A =   _left:LINK(-24).A
	T19(EAX).I =   *(T18(EAX) + 0).A.I
	CONDGO	L_1929:PC ; T19(EAX).I != #1.C
	BLOCK END
	BLOCK 5
	T20(EAX).A =   _left:LINK(-24).A
	T21(EAX).I =   *(T20(EAX) + 19).A.C
	CONDGO	L_1929:PC ; T21(EAX).I S>= #12.C
	BLOCK END
	BLOCK 6
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_1931:
; Line 1444:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_1932:
; Line 1445:	        Optimizer::IMODE* t = right; 

	VAR START	t
	T22(EAX).A =   _right:LINK(-28).A
	_t:LINK(-56).A =   T22(EAX).A
; Line 1446:	        right = left; 

	T23(EAX).A =   _left:LINK(-24).A
	_right:LINK(-28).A =   T23(EAX).A
; Line 1447:	        left = t; 

	T24(EAX).A =   _t:LINK(-56).A
	_left:LINK(-24).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_1934:
; Line 1448:	        if (pos != op_je && pos != op_jne) 

	T25(EAX).I =   _pos:LINK(8).I
	CONDGO	L_1933:PC ; T25(EAX).I == #E9.I
	BLOCK END
	BLOCK 10
	T26(EAX).I =   _pos:LINK(8).I
	CONDGO	L_1933:PC ; T26(EAX).I == #F4.I
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_1935:
; Line 1449:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_1936:
; Line 1450:	            sop = neg; 

	T27(EAX).I =   _neg:LINK(12).I
	_sop:LINK(-4).I =   T27(EAX).I
; Line 1451:	            sop1 = llneg; 

	T28(EAX).I =   _llneg:LINK(20).I
	_sop1:LINK(-8).I =   T28(EAX).I
; Line 1452:	            top = llpos; 

	T29(EAX).I =   _llpos:LINK(16).I
	_top:LINK(-12).I =   T29(EAX).I
; Line 1453:	            top1 = llintermneg; 

	T30(EAX).I =   _llintermneg:LINK(28).I
	_top1:LINK(-16).I =   T30(EAX).I
; Line 1454:	        } 

	BLOCK END
	BLOCK 14

L_1937:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_1938:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_1933:
	BLOCK END
	BLOCK 17

L_1939:
	DBG BLOCK END
; Line 1455:	    } 

	BLOCK END
	BLOCK 18

L_1940:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_1941:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_1929:
	BLOCK END
	BLOCK 21

L_1942:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_1944:
; Line 1456:	    if (left->bits && right->mode == Optimizer::i_immed && isintconst(right->offset)) 

	T31(EAX).A =   _left:LINK(-24).A
	T32(AL).C =   *(T31(EAX) + 1C).A.C
	CONDGO	L_1943:PC ; T32(AL).C == #0.C
	BLOCK END
	BLOCK 23
	T33(EAX).A =   _right:LINK(-28).A
	T34(EAX).I =   *(T33(EAX) + 0).A.I
	CONDGO	L_1943:PC ; T34(EAX).I != #1.C
	BLOCK END
	BLOCK 24
	T35(EAX).A =   _right:LINK(-28).A
	T36(EAX).A =   *(T35(EAX) + 4).A.A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T37(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_1943:PC ; T37(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_1945:
; Line 1457:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_1946:
; Line 1458:	        if (left->bits != 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_1948:
	T38(EAX).A =   _left:LINK(-24).A
	T39(AL).C =   *(T38(EAX) + 1C).A.C
	CONDGO	L_1947:PC ; T39(AL).C == #1.C
	BLOCK END
	BLOCK 29
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_1949:
; Line 1459:	            diag("gen_goto: too many bits"); 

	PARM	#L_1924:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 31

L_1950:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_1947:
	BLOCK END
	BLOCK 33

L_1951:
	DBG BLOCK END
; Line 1460:	        getAmodes(q, &opa, left, &apll, &aplh); 

	T40(EAX).A =   #_aplh:LINK(-36).A
	PARM	T40(EAX).A
	T41(EAX).A =   #_apll:LINK(-32).A
	PARM	T41(EAX).A
	T42(EAX).A =   _left:LINK(-24).A
	PARM	T42(EAX).A
	T43(EAX).A =   #_opa:LINK(-20).A
	PARM	T43(EAX).A
	T44(EAX).A =   _q:LINK(4).A
	PARM	T44(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1461:	        gen_codes(op_bt, ISZ_UINT, apll, aimmed(q->dc.left->startbit)); 

	T45(EAX).A =   _q:LINK(4).A
	T46(EAX).A =   *(T45(EAX) + 4+0).A.A
	T47(EDX:EAX).ULL =   *(T46(EAX) + 1B).A.C
	PARM	T47(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T48(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T48(EAX).A
	T49(EAX).A =   _apll:LINK(-32).A
	PARM	T49(EAX).A
	T50(EAX).UI =   #7.C
	PARM	T50(EAX).UI
	PARM	#2C.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_1953:
; Line 1462:	        if (sop == op_je) 

	T51(EAX).I =   _sop:LINK(-4).I
	CONDGO	L_1952:PC ; T51(EAX).I != #E9.I
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_1954:
; Line 1463:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_1955:
; Line 1464:	            if (right->offset->i & 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_1957:
	T52(EAX).A =   _right:LINK(-28).A
	T53(EAX).A =   *(T52(EAX) + 4).A.A
	T54(EDX:EAX).LL =   *(T53(EAX) + 8).A.LL
	T55(EDX:EAX).LL = T54(EDX:EAX).LL & #1.LL
	CONDGO	L_1956:PC ; T55(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 39
	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_1958:
; Line 1465:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_1959:
; Line 1466:	                sop = op_jc; 

	_sop:LINK(-4).I =   #E6.I
; Line 1467:	            } 

	BLOCK END
	BLOCK 42

L_1960:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_1962:
	DBG BLOCK END
	GOTO	L_1961:PC
	BLOCK END
	BLOCK 44
	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_1963:
	BLOCK END
	BLOCK 46

L_1956:
; Line 1468:	            else 

; Line 1469:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_1964:
; Line 1470:	                sop = op_jnc; 

	_sop:LINK(-4).I =   #F3.I
; Line 1471:	            } 

	BLOCK END
	BLOCK 48

L_1965:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_1966:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_1961:
	BLOCK END
	BLOCK 51

L_1967:
	DBG BLOCK END
; Line 1472:	        } 

	BLOCK END
	BLOCK 52

L_1968:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_1970:
	DBG BLOCK END
	GOTO	L_1969:PC
	BLOCK END
	BLOCK 54
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_1971:
	BLOCK END
	BLOCK 56

L_1952:
; Line 1473:	        else if (sop == op_jne) 

	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_1973:
	T56(EAX).I =   _sop:LINK(-4).I
	CONDGO	L_1972:PC ; T56(EAX).I != #F4.I
	BLOCK END
	BLOCK 58
	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_1974:
; Line 1474:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_1975:
; Line 1475:	            if (right->offset->i & 1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_1977:
	T57(EAX).A =   _right:LINK(-28).A
	T58(EAX).A =   *(T57(EAX) + 4).A.A
	T59(EDX:EAX).LL =   *(T58(EAX) + 8).A.LL
	T60(EDX:EAX).LL = T59(EDX:EAX).LL & #1.LL
	CONDGO	L_1976:PC ; T60(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_1978:
; Line 1476:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_1979:
; Line 1477:	                sop = op_jnc; 

	_sop:LINK(-4).I =   #F3.I
; Line 1478:	            } 

	BLOCK END
	BLOCK 65

L_1980:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_1982:
	DBG BLOCK END
	GOTO	L_1981:PC
	BLOCK END
	BLOCK 67
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_1983:
	BLOCK END
	BLOCK 69

L_1976:
; Line 1479:	            else 

; Line 1480:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_1984:
; Line 1481:	                sop = op_jc; 

	_sop:LINK(-4).I =   #E6.I
; Line 1482:	            } 

	BLOCK END
	BLOCK 71

L_1985:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_1986:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_1981:
	BLOCK END
	BLOCK 74

L_1987:
	DBG BLOCK END
; Line 1483:	        } 

	BLOCK END
	BLOCK 75

L_1988:
	DBG BLOCK END
	BLOCK END
	BLOCK 76

L_1990:
	DBG BLOCK END
	GOTO	L_1989:PC
	BLOCK END
	BLOCK 77
	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_1991:
	BLOCK END
	BLOCK 79

L_1972:
; Line 1484:	        else 

; Line 1485:	            diag("gen_goto: Unknown bit type"); 

	PARM	#L_1925:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 80

L_1992:
	DBG BLOCK END
	BLOCK END
	BLOCK 81

L_1989:
	BLOCK END
	BLOCK 82

L_1993:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_1994:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_1969:
	BLOCK END
	BLOCK 85

L_1995:
	DBG BLOCK END
; Line 1486:	        gen_branch(sop, q->dc.v.label); 

	T61(EAX).A =   _q:LINK(4).A
	T62(EAX).I =   *(T61(EAX) + 0+C+0).A.L
	PARM	T62(EAX).I
	T63(EAX).I =   _sop:LINK(-4).I
	PARM	T63(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1487:	        return; 

	GOTO	L_1927:PC
; Line 1488:	    } 

	BLOCK END
	BLOCK 86

L_1996:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_1997:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_1943:
	BLOCK END
	BLOCK 89

L_1998:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_2000:
; Line 1489:	    if (left->size >= ISZ_FLOAT) 

	T64(EAX).A =   _left:LINK(-24).A
	T65(EAX).I =   *(T64(EAX) + 19).A.C
	CONDGO	L_1999:PC ; T65(EAX).I S< #12.C
	BLOCK END
	BLOCK 91
	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_2001:
; Line 1490:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 93

L_2002:
; Line 1492:	        getAmodes(q, &opa, right, &aprl, &aprh); 

	T66(EAX).A =   #_aprh:LINK(-44).A
	PARM	T66(EAX).A
	T67(EAX).A =   #_aprl:LINK(-40).A
	PARM	T67(EAX).A
	T68(EAX).A =   _right:LINK(-28).A
	PARM	T68(EAX).A
	T69(EAX).A =   #_opa:LINK(-20).A
	PARM	T69(EAX).A
	T70(EAX).A =   _q:LINK(4).A
	PARM	T70(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1493:	        getAmodes(q, &opa, left, &apll, &aplh); 

	T71(EAX).A =   #_aplh:LINK(-36).A
	PARM	T71(EAX).A
	T72(EAX).A =   #_apll:LINK(-32).A
	PARM	T72(EAX).A
	T73(EAX).A =   _left:LINK(-24).A
	PARM	T73(EAX).A
	T74(EAX).A =   #_opa:LINK(-20).A
	PARM	T74(EAX).A
	T75(EAX).A =   _q:LINK(4).A
	PARM	T75(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_2004:
; Line 1494:	        if (flt == op_je || flt == op_jne) 

	T76(EAX).I =   _flt:LINK(32).I
	CONDGO	L_2065:PC ; T76(EAX).I == #E9.I
	BLOCK END
	BLOCK 95
	T77(EAX).I =   _flt:LINK(32).I
	CONDGO	L_2003:PC ; T77(EAX).I != #F4.I
	BLOCK END
	BLOCK 96

L_2065:
	DBG BLOCK START
	BLOCK END
	BLOCK 97

L_2005:
; Line 1495:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_2006:
; Line 1496:	            gen_code_sse(op_ucomiss, op_ucomisd, left->size, apll, aprl); 

	T85(EAX).A =   _aprl:LINK(-40).A
	PARM	T85(EAX).A
	T86(EAX).A =   _apll:LINK(-32).A
	PARM	T86(EAX).A
	T87(EAX).A =   _left:LINK(-24).A
	T88(EAX).I =   *(T87(EAX) + 19).A.C
	PARM	T88(EAX).I
	PARM	#259.I
	PARM	#25A.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_2008:
; Line 1497:	            if (flt == op_je) 

	T89(EAX).I =   _flt:LINK(32).I
	CONDGO	L_2007:PC ; T89(EAX).I != #E9.I
	BLOCK END
	BLOCK 100
	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_2009:
; Line 1498:	                flt = op_jnp; 

	_flt:LINK(32).I =   #FA.I
	BLOCK END
	BLOCK 102

L_2011:
	DBG BLOCK END
	GOTO	L_2010:PC
	BLOCK END
	BLOCK 103
	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_2012:
	BLOCK END
	BLOCK 105

L_2007:
; Line 1499:	            else 

; Line 1500:	                flt = op_jp; 

	_flt:LINK(32).I =   #FE.I
	BLOCK END
	BLOCK 106

L_2013:
	DBG BLOCK END
	BLOCK END
	BLOCK 107

L_2010:
	BLOCK END
	BLOCK 108

L_2014:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 109

L_2016:
; Line 1501:	            if (live(apll->liveRegs, EAX)) 

	T90(EAX).A =   _apll:LINK(-32).A
	T91(EAX).I =   *(T90(EAX) + 10).A.I
	T92(EAX).I = T91(EAX).I & #1.C
	CONDGO	L_2015:PC ; T92(EAX).I == #0.C
	BLOCK END
	BLOCK 110
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_2017:
; Line 1502:	                gen_codes(op_push, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T93(EAX).UI =   #0.C
	PARM	T93(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T94(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T94(EAX).A
	T95(EAX).UI =   #7.C
	PARM	T95(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 112

L_2018:
	DBG BLOCK END
	BLOCK END
	BLOCK 113

L_2015:
	BLOCK END
	BLOCK 114

L_2019:
	DBG BLOCK END
; Line 1503:	            gen_code(op_lahf, nullptr, nullptr); 

	PARM	#0.UI
	PARM	#0.UI
	PARM	#103.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1506:	            gen_codes(op_test, ISZ_UCHAR, makedreg(AH), aimmed(0x44)); 

	T96(EDX:EAX).ULL =   #44.I
	PARM	T96(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T97(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T97(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T98(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T98(EAX).A
	T99(EAX).UI =   #3.C
	PARM	T99(EAX).UI
	PARM	#18E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 115

L_2021:
; Line 1507:	            if (live(apll->liveRegs, EAX)) 

	T100(EAX).A =   _apll:LINK(-32).A
	T101(EAX).I =   *(T100(EAX) + 10).A.I
	T102(EAX).I = T101(EAX).I & #1.C
	CONDGO	L_2020:PC ; T102(EAX).I == #0.C
	BLOCK END
	BLOCK 116
	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_2022:
; Line 1508:	                gen_codes(op_pop, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T103(EAX).UI =   #0.C
	PARM	T103(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T104(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T104(EAX).A
	T105(EAX).UI =   #7.C
	PARM	T105(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 118

L_2023:
	DBG BLOCK END
	BLOCK END
	BLOCK 119

L_2020:
	BLOCK END
	BLOCK 120

L_2024:
	DBG BLOCK END
; Line 1509:	            gen_branch(flt, q->dc.v.label); 

	T106(EAX).A =   _q:LINK(4).A
	T107(EAX).I =   *(T106(EAX) + 0+C+0).A.L
	PARM	T107(EAX).I
	T108(EAX).I =   _flt:LINK(32).I
	PARM	T108(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1510:	            return; 

	GOTO	L_1927:PC
; Line 1511:	        } 

	BLOCK END
	BLOCK 121

L_2025:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_2027:
	DBG BLOCK END
	BLOCK END
	BLOCK 123
	DBG BLOCK START
	BLOCK END
	BLOCK 124

L_2028:
	BLOCK END
	BLOCK 125

L_2003:
; Line 1512:	        else 

; Line 1513:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 126

L_2029:
; Line 1518:	            gen_code_sse(op_comiss, op_comisd, left->size, apll, aprl); 

	T78(EAX).A =   _aprl:LINK(-40).A
	PARM	T78(EAX).A
	T79(EAX).A =   _apll:LINK(-32).A
	PARM	T79(EAX).A
	T80(EAX).A =   _left:LINK(-24).A
	T81(EAX).I =   *(T80(EAX) + 19).A.C
	PARM	T81(EAX).I
	PARM	#1AD.I
	PARM	#1AE.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1519:	            gen_branch(flt, q->dc.v.label); 

	T82(EAX).A =   _q:LINK(4).A
	T83(EAX).I =   *(T82(EAX) + 0+C+0).A.L
	PARM	T83(EAX).I
	T84(EAX).I =   _flt:LINK(32).I
	PARM	T84(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1520:	        } 

	BLOCK END
	BLOCK 127

L_2030:
	DBG BLOCK END
	BLOCK END
	BLOCK 128

L_2031:
	DBG BLOCK END
	BLOCK END
	BLOCK 129

L_2026:
	BLOCK END
	BLOCK 130

L_2032:
	DBG BLOCK END
; Line 1521:	    } 

	BLOCK END
	BLOCK 131

L_2033:
	DBG BLOCK END
	BLOCK END
	BLOCK 132

L_2035:
	DBG BLOCK END
	GOTO	L_2034:PC
	BLOCK END
	BLOCK 133
	DBG BLOCK START
	BLOCK END
	BLOCK 134

L_2036:
	BLOCK END
	BLOCK 135

L_1999:
; Line 1522:	    else 

; Line 1523:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_2037:
; Line 1524:	        getAmodes(q, &opa, left, &apll, &aplh); 

	T109(EAX).A =   #_aplh:LINK(-36).A
	PARM	T109(EAX).A
	T110(EAX).A =   #_apll:LINK(-32).A
	PARM	T110(EAX).A
	T111(EAX).A =   _left:LINK(-24).A
	PARM	T111(EAX).A
	T112(EAX).A =   #_opa:LINK(-20).A
	PARM	T112(EAX).A
	T113(EAX).A =   _q:LINK(4).A
	PARM	T113(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1525:	        getAmodes(q, &opa, right, &aprl, &aprh); 

	T114(EAX).A =   #_aprh:LINK(-44).A
	PARM	T114(EAX).A
	T115(EAX).A =   #_aprl:LINK(-40).A
	PARM	T115(EAX).A
	T116(EAX).A =   _right:LINK(-28).A
	PARM	T116(EAX).A
	T117(EAX).A =   #_opa:LINK(-20).A
	PARM	T117(EAX).A
	T118(EAX).A =   _q:LINK(4).A
	PARM	T118(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 137

L_2039:
; Line 1526:	        if (left->size == ISZ_ULONGLONG || left->size == -ISZ_ULONGLONG) 

	T119(EAX).A =   _left:LINK(-24).A
	T120(AL).C =   *(T119(EAX) + 19).A.C
	CONDGO	L_2066:PC ; T120(AL).C == #B.C
	BLOCK END
	BLOCK 138
	T121(EAX).A =   _left:LINK(-24).A
	T122(EAX).I =   *(T121(EAX) + 19).A.C
	CONDGO	L_2038:PC ; T122(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 139

L_2066:
	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_2040:
; Line 1527:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 141

L_2041:
; Line 1528:	            int lab = beGetLabel; 

	VAR START	lab
	T135(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-52).I =   T135(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 1529:	            gen_codes(op_cmp, ISZ_UINT, aplh, aprh); 

	T136(EAX).A =   _aprh:LINK(-44).A
	PARM	T136(EAX).A
	T137(EAX).A =   _aplh:LINK(-36).A
	PARM	T137(EAX).A
	T138(EAX).UI =   #7.C
	PARM	T138(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1530:	            peep_tail->oper1->liveRegs = -1; 

	T139(EAX).A =   @occx86@peep_tail:RAM.A
	T140(EAX).A =   *(T139(EAX) + C).A.A
	*(T140(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	DBG BLOCK START
	BLOCK END
	BLOCK 142

L_2043:
; Line 1531:	            if (top != op_jne) 

	T141(EAX).I =   _top:LINK(-12).I
	CONDGO	L_2042:PC ; T141(EAX).I == #F4.I
	BLOCK END
	BLOCK 143
	DBG BLOCK START
	BLOCK END
	BLOCK 144

L_2044:
; Line 1532:	                gen_branch(sop1, q->dc.v.label); 

	T142(EAX).A =   _q:LINK(4).A
	T143(EAX).I =   *(T142(EAX) + 0+C+0).A.L
	PARM	T143(EAX).I
	T144(EAX).I =   _sop1:LINK(-8).I
	PARM	T144(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 145

L_2045:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_2042:
	BLOCK END
	BLOCK 147

L_2046:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 148

L_2048:
; Line 1533:	            if (top != op_je) 

	T145(EAX).I =   _top:LINK(-12).I
	CONDGO	L_2047:PC ; T145(EAX).I == #E9.I
	BLOCK END
	BLOCK 149
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_2049:
; Line 1534:	                gen_branch(top, lab); 

	T146(EAX).I =   _lab:LINK(-52).I
	PARM	T146(EAX).I
	T147(EAX).I =   _top:LINK(-12).I
	PARM	T147(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 151

L_2050:
	DBG BLOCK END
	BLOCK END
	BLOCK 152

L_2047:
	BLOCK END
	BLOCK 153

L_2051:
	DBG BLOCK END
; Line 1535:	            gen_codes(op_cmp, ISZ_UINT, apll, aprl); 

	T148(EAX).A =   _aprl:LINK(-40).A
	PARM	T148(EAX).A
	T149(EAX).A =   _apll:LINK(-32).A
	PARM	T149(EAX).A
	T150(EAX).UI =   #7.C
	PARM	T150(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1536:	            peep_tail->oper1->liveRegs = -1; 

	T151(EAX).A =   @occx86@peep_tail:RAM.A
	T152(EAX).A =   *(T151(EAX) + C).A.A
	*(T152(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
; Line 1537:	            gen_branch(top1, q->dc.v.label); 

	T153(EAX).A =   _q:LINK(4).A
	T154(EAX).I =   *(T153(EAX) + 0+C+0).A.L
	PARM	T154(EAX).I
	T155(EAX).I =   _top1:LINK(-16).I
	PARM	T155(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1538:	            oa_gen_label(lab); 

	T156(EAX).I =   _lab:LINK(-52).I
	PARM	T156(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 1539:	        } 

	BLOCK END
	BLOCK 154

L_2052:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_2054:
	DBG BLOCK END
	GOTO	L_2053:PC
	BLOCK END
	BLOCK 156
	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_2055:
	BLOCK END
	BLOCK 158

L_2038:
; Line 1540:	        else 

; Line 1541:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 159

L_2056:
; Line 1542:	            int size; 

	VAR START	size
; Line 1546:	            size = left->size; 

	T123(EAX).A =   _left:LINK(-24).A
	T124(EAX).I =   *(T123(EAX) + 19).A.C
	_size:LINK(-48).I =   T124(EAX).I
; Line 1547:	            gen_codes(op_cmp, size, apll, aprl); 

	T125(EAX).A =   _aprl:LINK(-40).A
	PARM	T125(EAX).A
	T126(EAX).A =   _apll:LINK(-32).A
	PARM	T126(EAX).A
	T127(EAX).I =   _size:LINK(-48).I
	PARM	T127(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1548:	            peep_tail->oper1->liveRegs = q->liveRegs; 

	T128(EAX).A =   _q:LINK(4).A
	T129(ECX).I =   *(T128(EAX) + 48).A.ULL
	T130(EAX).A =   @occx86@peep_tail:RAM.A
	T131(EAX).A =   *(T130(EAX) + C).A.A
	*(T131(EAX) + 10).A.I =   T129(ECX).I
; Line 1549:	            gen_branch(sop, q->dc.v.label); 

	T132(EAX).A =   _q:LINK(4).A
	T133(EAX).I =   *(T132(EAX) + 0+C+0).A.L
	PARM	T133(EAX).I
	T134(EAX).I =   _sop:LINK(-4).I
	PARM	T134(EAX).I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1550:	        } 

	BLOCK END
	BLOCK 160

L_2057:
	DBG BLOCK END
	BLOCK END
	BLOCK 161

L_2058:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_2053:
	BLOCK END
	BLOCK 163

L_2059:
	DBG BLOCK END
; Line 1551:	    } 

	BLOCK END
	BLOCK 164

L_2060:
	DBG BLOCK END
	BLOCK END
	BLOCK 165

L_2061:
	DBG BLOCK END
	BLOCK END
	BLOCK 166

L_2034:
	BLOCK END
	BLOCK 167

L_2062:
	DBG BLOCK END
; Line 1552:	} 

	BLOCK END
	BLOCK 168

L_2063:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_1927:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@gen_div$qp15@Optimizer@quad8e_opcode:
; Line 1554:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#2C.UI
	BLOCK END
	BLOCK 2

L_2073:
	VAR START	q
	VAR START	op
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2075:
; Line 1555:	    enum e_opcode opa, opl, opr; 

	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
	VAR START	mod
; Line 1556:	    AMODE *apal, *apah, *apll, *aplh, *aprl, *aprh; 
; Line 1557:	    int mod = q->dc.opcode == Optimizer::i_umod || q->dc.opcode == Optimizer::i_smod; 

; Line 1557:	    int mod = q->dc.opcode == Optimizer::i_umod || q->dc.opcode == Optimizer::i_smod; 

	T4(EAX).A =   _q:LINK(4).A
	T5(EAX).I =   *(T4(EAX) + 0+0).A.I
	CONDGO	L_2143:PC ; T5(EAX).I == #14.I
	BLOCK END
	BLOCK 4
	T6(EAX).A =   _q:LINK(4).A
	T7(EAX).I =   *(T6(EAX) + 0+0).A.I
	CONDGO	L_2143:PC ; T7(EAX).I == #16.I
	BLOCK END
	BLOCK 5
	T9(EAX).UI =   #0.UI
	GOTO	L_2144:PC
	BLOCK END
	BLOCK 6

L_2143:
	T9(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 7

L_2144:
	_mod:LINK(-40).I =   T9(EAX).I
; Line 1558:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T10(EAX).A =   #_aplh:LINK(-28).A
	PARM	T10(EAX).A
	T11(EAX).A =   #_apll:LINK(-24).A
	PARM	T11(EAX).A
	T12(EAX).A =   _q:LINK(4).A
	T13(EAX).A =   *(T12(EAX) + 4+0).A.A
	PARM	T13(EAX).A
	T14(EAX).A =   #_opl:LINK(-8).A
	PARM	T14(EAX).A
	T15(EAX).A =   _q:LINK(4).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1559:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T16(EAX).A =   #_aprh:LINK(-36).A
	PARM	T16(EAX).A
	T17(EAX).A =   #_aprl:LINK(-32).A
	PARM	T17(EAX).A
	T18(EAX).A =   _q:LINK(4).A
	T19(EAX).A =   *(T18(EAX) + 8+0).A.A
	PARM	T19(EAX).A
	T20(EAX).A =   #_opr:LINK(-12).A
	PARM	T20(EAX).A
	T21(EAX).A =   _q:LINK(4).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1560:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T22(EAX).A =   #_apah:LINK(-20).A
	PARM	T22(EAX).A
	T23(EAX).A =   #_apal:LINK(-16).A
	PARM	T23(EAX).A
	T24(EAX).A =   _q:LINK(4).A
	T25(EAX).A =   *(T24(EAX) + 40).A.A
	PARM	T25(EAX).A
	T26(EAX).A =   #_opa:LINK(-4).A
	PARM	T26(EAX).A
	T27(EAX).A =   _q:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_2077:
; Line 1561:	    if (q->ans->size >= ISZ_FLOAT) 

	T28(EAX).A =   _q:LINK(4).A
	T29(EAX).A =   *(T28(EAX) + 40).A.A
	T30(EAX).I =   *(T29(EAX) + 19).A.C
	CONDGO	L_2076:PC ; T30(EAX).I S< #12.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_2078:
; Line 1562:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_2079:
; Line 1563:	        if (mod) 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_2081:
	T31(EAX).I =   _mod:LINK(-40).I
	CONDGO	L_2080:PC ; T31(EAX).I == #0.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_2082:
; Line 1564:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_2083:
; Line 1565:	            diag("gen_div: floating point in mod operation"); 

	PARM	#L_2070:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 1566:	        } 

	BLOCK END
	BLOCK 16

L_2084:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_2085:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_2080:
	BLOCK END
	BLOCK 19

L_2086:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2088:
; Line 1567:	        if (equal_address(apal, apll)) 

	T32(EAX).A =   _apll:LINK(-24).A
	PARM	T32(EAX).A
	T33(EAX).A =   _apal:LINK(-16).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T34(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2087:PC ; T34(EAX).I == #0.C
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_2089:
; Line 1568:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_2090:
; Line 1569:	            gen_code_sse(op_divss, op_divsd, q->ans->size, apal, aprl); 

	T35(EAX).A =   _aprl:LINK(-32).A
	PARM	T35(EAX).A
	T36(EAX).A =   _apal:LINK(-16).A
	PARM	T36(EAX).A
	T37(EAX).A =   _q:LINK(4).A
	T38(EAX).A =   *(T37(EAX) + 40).A.A
	T39(EAX).I =   *(T38(EAX) + 19).A.C
	PARM	T39(EAX).I
	PARM	#1C7.I
	PARM	#1C8.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1570:	        } 

	BLOCK END
	BLOCK 24

L_2091:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_2093:
	DBG BLOCK END
	GOTO	L_2092:PC
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2094:
	BLOCK END
	BLOCK 28

L_2087:
; Line 1571:	        else 

; Line 1572:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_2095:
; Line 1573:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T40(EAX).A =   _apll:LINK(-24).A
	PARM	T40(EAX).A
	T41(EAX).A =   _apal:LINK(-16).A
	PARM	T41(EAX).A
	T42(EAX).A =   _q:LINK(4).A
	T43(EAX).A =   *(T42(EAX) + 40).A.A
	T44(EAX).I =   *(T43(EAX) + 19).A.C
	PARM	T44(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1574:	            gen_code_sse(op_divss, op_divsd, q->ans->size, apal, aprl); 

	T45(EAX).A =   _aprl:LINK(-32).A
	PARM	T45(EAX).A
	T46(EAX).A =   _apal:LINK(-16).A
	PARM	T46(EAX).A
	T47(EAX).A =   _q:LINK(4).A
	T48(EAX).A =   *(T47(EAX) + 40).A.A
	T49(EAX).I =   *(T48(EAX) + 19).A.C
	PARM	T49(EAX).I
	PARM	#1C7.I
	PARM	#1C8.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1575:	        } 

	BLOCK END
	BLOCK 30

L_2096:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_2097:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_2092:
	BLOCK END
	BLOCK 33

L_2098:
	DBG BLOCK END
; Line 1576:	    } 

	BLOCK END
	BLOCK 34

L_2099:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_2101:
	DBG BLOCK END
	GOTO	L_2100:PC
	BLOCK END
	BLOCK 36
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_2102:
	BLOCK END
	BLOCK 38

L_2076:
; Line 1577:	    else if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_2104:
	T50(EAX).A =   _q:LINK(4).A
	T51(EAX).A =   *(T50(EAX) + 40).A.A
	T52(AL).C =   *(T51(EAX) + 19).A.C
	CONDGO	L_2145:PC ; T52(AL).C == #B.C
	BLOCK END
	BLOCK 40
	T53(EAX).A =   _q:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + 40).A.A
	T55(EAX).I =   *(T54(EAX) + 19).A.C
	CONDGO	L_2103:PC ; T55(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 41

L_2145:
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_2105:
; Line 1578:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_2106:
; Line 1579:	        diag("gen_div: long long"); 

	PARM	#L_2071:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 1580:	    } 

	BLOCK END
	BLOCK 44

L_2107:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_2109:
	DBG BLOCK END
	GOTO	L_2108:PC
	BLOCK END
	BLOCK 46
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_2110:
	BLOCK END
	BLOCK 48

L_2103:
; Line 1581:	    else 

; Line 1582:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_2111:
; Line 1583:	        AMODE* divby = aprl; 

	VAR START	divby
	T56(EAX).A =   _aprl:LINK(-32).A
	_divby:LINK(-44).A =   T56(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_2113:
; Line 1584:	        if (apal->mode != am_dreg) 

	T57(EAX).A =   _apal:LINK(-16).A
	T58(EAX).I =   *(T57(EAX) + 0).A.I
	CONDGO	L_2112:PC ; T58(EAX).I == #2.C
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_2114:
; Line 1585:	            diag("asm_udiv: answer not a dreg"); 

	PARM	#L_2072:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 53

L_2115:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_2112:
	BLOCK END
	BLOCK 55

L_2116:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_2118:
; Line 1586:	        if (aprl->mode == am_immed) 

	T59(EAX).A =   _aprl:LINK(-32).A
	T60(EAX).I =   *(T59(EAX) + 0).A.I
	CONDGO	L_2117:PC ; T60(EAX).I != #10.I
	BLOCK END
	BLOCK 57
	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_2119:
; Line 1587:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_2120:
; Line 1588:	            divby = make_muldivval(aprl); 

	T61(EAX).A =   _aprl:LINK(-32).A
	PARM	T61(EAX).A
	TAG
	GOSUB	#@occx86@make_muldivval$qp5amode:PC.UI
	T62(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_divby:LINK(-44).A =   T62(EAX).A
; Line 1589:	        } 

	BLOCK END
	BLOCK 60

L_2121:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_2122:
	DBG BLOCK END
	BLOCK END
	BLOCK 62

L_2117:
	BLOCK END
	BLOCK 63

L_2123:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_2125:
; Line 1590:	        if (op == op_div) 

	T63(EAX).I =   _op:LINK(8).I
	CONDGO	L_2124:PC ; T63(EAX).I != #67.I
	BLOCK END
	BLOCK 65
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_2126:
; Line 1591:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_2127:
; Line 1592:	            gen_code(op_mov, makedreg(EDX), aimmed(0)); 

	T64(EDX:EAX).ULL =   #0.C
	PARM	T64(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T65(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T65(EAX).A
	T66(EAX).UI =   #2.C
	PARM	T66(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T67(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T67(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1593:	        } 

	BLOCK END
	BLOCK 68

L_2128:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_2130:
	DBG BLOCK END
	GOTO	L_2129:PC
	BLOCK END
	BLOCK 70
	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_2131:
	BLOCK END
	BLOCK 72

L_2124:
; Line 1594:	        else 

; Line 1595:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_2132:
; Line 1596:	            gen_code(op_cdq, 0, 0); 

	T68(EAX).A =   #0.C
	PARM	T68(EAX).A
	T69(EAX).A =   #0.C
	PARM	T69(EAX).A
	PARM	#32.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1597:	        } 

	BLOCK END
	BLOCK 74

L_2133:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_2134:
	DBG BLOCK END
	BLOCK END
	BLOCK 76

L_2129:
	BLOCK END
	BLOCK 77

L_2135:
	DBG BLOCK END
; Line 1598:	        divby->liveRegs = q->liveRegs; 

	T70(EAX).A =   _q:LINK(4).A
	T71(ECX).I =   *(T70(EAX) + 48).A.ULL
	T72(EAX).A =   _divby:LINK(-44).A
	*(T72(EAX) + 10).A.I =   T71(ECX).I
; Line 1599:	        gen_codes(op, q->ans->size, divby, 0); 

	T73(EAX).A =   #0.C
	PARM	T73(EAX).A
	T74(EAX).A =   _divby:LINK(-44).A
	PARM	T74(EAX).A
	T75(EAX).A =   _q:LINK(4).A
	T76(EAX).A =   *(T75(EAX) + 40).A.A
	T77(EAX).I =   *(T76(EAX) + 19).A.C
	PARM	T77(EAX).I
	T78(EAX).I =   _op:LINK(8).I
	PARM	T78(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1600:	    } 

	BLOCK END
	BLOCK 78

L_2136:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_2137:
	DBG BLOCK END
	BLOCK END
	BLOCK 80

L_2108:
	BLOCK END
	BLOCK 81

L_2138:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_2139:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_2100:
	BLOCK END
	BLOCK 84

L_2140:
	DBG BLOCK END
; Line 1601:	} 

	BLOCK END
	BLOCK 85

L_2141:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_2074:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@gen_mulxh$qp15@Optimizer@quad8e_opcode:
; Line 1603:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#2C.UI
	BLOCK END
	BLOCK 2

L_2152:
	VAR START	q
	VAR START	op
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2154:
; Line 1604:	    enum e_opcode opa, opl, opr; 

	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
	VAR START	mod
; Line 1605:	    AMODE *apal, *apah, *apll, *aplh, *aprl, *aprh; 
; Line 1606:	    int mod = q->dc.opcode == Optimizer::i_umod || q->dc.opcode == Optimizer::i_smod; 

; Line 1606:	    int mod = q->dc.opcode == Optimizer::i_umod || q->dc.opcode == Optimizer::i_smod; 

	T2(EAX).A =   _q:LINK(4).A
	T3(EAX).I =   *(T2(EAX) + 0+0).A.I
	CONDGO	L_2198:PC ; T3(EAX).I == #14.I
	BLOCK END
	BLOCK 4
	T4(EAX).A =   _q:LINK(4).A
	T5(EAX).I =   *(T4(EAX) + 0+0).A.I
	CONDGO	L_2198:PC ; T5(EAX).I == #16.I
	BLOCK END
	BLOCK 5
	T7(EAX).UI =   #0.UI
	GOTO	L_2199:PC
	BLOCK END
	BLOCK 6

L_2198:
	T7(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 7

L_2199:
	_mod:LINK(-40).I =   T7(EAX).I
; Line 1607:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T8(EAX).A =   #_aplh:LINK(-28).A
	PARM	T8(EAX).A
	T9(EAX).A =   #_apll:LINK(-24).A
	PARM	T9(EAX).A
	T10(EAX).A =   _q:LINK(4).A
	T11(EAX).A =   *(T10(EAX) + 4+0).A.A
	PARM	T11(EAX).A
	T12(EAX).A =   #_opl:LINK(-8).A
	PARM	T12(EAX).A
	T13(EAX).A =   _q:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1608:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T14(EAX).A =   #_aprh:LINK(-36).A
	PARM	T14(EAX).A
	T15(EAX).A =   #_aprl:LINK(-32).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 8+0).A.A
	PARM	T17(EAX).A
	T18(EAX).A =   #_opr:LINK(-12).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1609:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T20(EAX).A =   #_apah:LINK(-20).A
	PARM	T20(EAX).A
	T21(EAX).A =   #_apal:LINK(-16).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	T23(EAX).A =   *(T22(EAX) + 40).A.A
	PARM	T23(EAX).A
	T24(EAX).A =   #_opa:LINK(-4).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_2156:
; Line 1610:	    if (q->ans->size >= ISZ_FLOAT) 

	T26(EAX).A =   _q:LINK(4).A
	T27(EAX).A =   *(T26(EAX) + 40).A.A
	T28(EAX).I =   *(T27(EAX) + 19).A.C
	CONDGO	L_2155:PC ; T28(EAX).I S< #12.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_2157:
; Line 1611:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_2158:
; Line 1612:	        diag("gen_mulxh: floating point"); 

	PARM	#L_2149:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 1613:	    } 

	BLOCK END
	BLOCK 12

L_2159:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_2161:
	DBG BLOCK END
	GOTO	L_2160:PC
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_2162:
	BLOCK END
	BLOCK 16

L_2155:
; Line 1614:	    else if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_2164:
	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).A =   *(T29(EAX) + 40).A.A
	T31(AL).C =   *(T30(EAX) + 19).A.C
	CONDGO	L_2200:PC ; T31(AL).C == #B.C
	BLOCK END
	BLOCK 18
	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(EAX).I =   *(T33(EAX) + 19).A.C
	CONDGO	L_2163:PC ; T34(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 19

L_2200:
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2165:
; Line 1615:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_2166:
; Line 1616:	        diag("gen_mulxh: long long"); 

	PARM	#L_2150:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 1617:	    } 

	BLOCK END
	BLOCK 22

L_2167:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_2169:
	DBG BLOCK END
	GOTO	L_2168:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_2170:
	BLOCK END
	BLOCK 26

L_2163:
; Line 1618:	    else 

; Line 1619:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2171:
; Line 1620:	        AMODE* mulby = aprl; 

	VAR START	mulby
	T35(EAX).A =   _aprl:LINK(-32).A
	_mulby:LINK(-44).A =   T35(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_2173:
; Line 1621:	        if (apal->mode != am_dreg) 

	T36(EAX).A =   _apal:LINK(-16).A
	T37(EAX).I =   *(T36(EAX) + 0).A.I
	CONDGO	L_2172:PC ; T37(EAX).I == #2.C
	BLOCK END
	BLOCK 29
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_2174:
; Line 1622:	            diag("asm_mulxh: answer not a dreg"); 

	PARM	#L_2151:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 31

L_2175:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_2172:
	BLOCK END
	BLOCK 33

L_2176:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_2178:
; Line 1623:	        if (apll->mode == am_immed) 

	T38(EAX).A =   _apll:LINK(-24).A
	T39(EAX).I =   *(T38(EAX) + 0).A.I
	CONDGO	L_2177:PC ; T39(EAX).I != #10.I
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_2179:
; Line 1624:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_2180:
; Line 1625:	            gen_codes(op_mov, q->ans->size, makedreg(EAX), apll); 

	T40(EAX).A =   _apll:LINK(-24).A
	PARM	T40(EAX).A
	T41(EAX).UI =   #0.C
	PARM	T41(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T42(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T42(EAX).A
	T43(EAX).A =   _q:LINK(4).A
	T44(EAX).A =   *(T43(EAX) + 40).A.A
	T45(EAX).I =   *(T44(EAX) + 19).A.C
	PARM	T45(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1626:	        } 

	BLOCK END
	BLOCK 38

L_2181:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_2182:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_2177:
	BLOCK END
	BLOCK 41

L_2183:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_2185:
; Line 1627:	        if (aprl->mode == am_immed) 

	T46(EAX).A =   _aprl:LINK(-32).A
	T47(EAX).I =   *(T46(EAX) + 0).A.I
	CONDGO	L_2184:PC ; T47(EAX).I != #10.I
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_2186:
; Line 1628:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_2187:
; Line 1629:	            mulby = make_muldivval(aprl); 

	T48(EAX).A =   _aprl:LINK(-32).A
	PARM	T48(EAX).A
	TAG
	GOSUB	#@occx86@make_muldivval$qp5amode:PC.UI
	T49(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_mulby:LINK(-44).A =   T49(EAX).A
; Line 1630:	        } 

	BLOCK END
	BLOCK 46

L_2188:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_2189:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_2184:
	BLOCK END
	BLOCK 49

L_2190:
	DBG BLOCK END
; Line 1631:	        mulby->liveRegs = q->liveRegs; 

	T50(EAX).A =   _q:LINK(4).A
	T51(ECX).I =   *(T50(EAX) + 48).A.ULL
	T52(EAX).A =   _mulby:LINK(-44).A
	*(T52(EAX) + 10).A.I =   T51(ECX).I
; Line 1632:	        gen_codes(op, q->ans->size, mulby, 0); 

	T53(EAX).A =   #0.C
	PARM	T53(EAX).A
	T54(EAX).A =   _mulby:LINK(-44).A
	PARM	T54(EAX).A
	T55(EAX).A =   _q:LINK(4).A
	T56(EAX).A =   *(T55(EAX) + 40).A.A
	T57(EAX).I =   *(T56(EAX) + 19).A.C
	PARM	T57(EAX).I
	T58(EAX).I =   _op:LINK(8).I
	PARM	T58(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1633:	    } 

	BLOCK END
	BLOCK 50

L_2191:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_2192:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_2168:
	BLOCK END
	BLOCK 53

L_2193:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_2194:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_2160:
	BLOCK END
	BLOCK 56

L_2195:
	DBG BLOCK END
; Line 1634:	} 

	BLOCK END
	BLOCK 57

L_2196:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_2153:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@gen_shift$qp15@Optimizer@quad8e_opcodep5amodepn2pn2:
; Line 1636:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_2204:
	VAR START	q
	VAR START	op
	VAR START	apal
	VAR START	apll
	VAR START	aprl
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2206:
; Line 1637:	    AMODE* cx = makedreg(ECX); 

	VAR START	cx
	T5(EAX).UI =   #1.C
	PARM	T5(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T6(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_cx:LINK(-4).A =   T6(EAX).A
; Line 1638:	    cx->liveRegs = q->liveRegs; 

	T7(EAX).A =   _q:LINK(4).A
	T8(ECX).I =   *(T7(EAX) + 48).A.ULL
	T9(EAX).A =   _cx:LINK(-4).A
	*(T9(EAX) + 10).A.I =   T8(ECX).I
; Line 1639:	    cx->length = ISZ_UCHAR; 

	T10(EAX).A =   _cx:LINK(-4).A
	*(T10(EAX) + 8).A.C =   #3.C
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2208:
; Line 1640:	    if (aprl->mode == am_immed) 

	T11(EAX).A =   _aprl:LINK(20).A
	T12(EAX).I =   *(T11(EAX) + 0).A.I
	CONDGO	L_2207:PC ; T12(EAX).I != #10.I
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_2209:
; Line 1641:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_2210:
; Line 1642:	        gen_code(op_mov, apal, apll); 

	T13(EAX).A =   _apll:LINK(16).A
	PARM	T13(EAX).A
	T14(EAX).A =   _apal:LINK(12).A
	PARM	T14(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1643:	        gen_code(op, apal, aprl); 

	T15(EAX).A =   _aprl:LINK(20).A
	PARM	T15(EAX).A
	T16(EAX).A =   _apal:LINK(12).A
	PARM	T16(EAX).A
	T17(EAX).I =   _op:LINK(8).I
	PARM	T17(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1644:	    } 

	BLOCK END
	BLOCK 8

L_2211:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_2213:
	DBG BLOCK END
	GOTO	L_2212:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_2214:
	BLOCK END
	BLOCK 12

L_2207:
; Line 1645:	    else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_2216:
	T18(EAX).A =   _aprl:LINK(20).A
	PARM	T18(EAX).A
	T19(EAX).A =   _apal:LINK(12).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T20(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2215:PC ; T20(EAX).I == #0.C
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_2217:
; Line 1646:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_2218:
; Line 1647:	        if (aprl->mode == am_dreg && aprl->preg == ECX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_2220:
	T21(EAX).A =   _aprl:LINK(20).A
	T22(EAX).I =   *(T21(EAX) + 0).A.I
	CONDGO	L_2219:PC ; T22(EAX).I != #2.C
	BLOCK END
	BLOCK 18
	T23(EAX).A =   _aprl:LINK(20).A
	T24(AL).C =   *(T23(EAX) + 4).A.C
	CONDGO	L_2219:PC ; T24(AL).C != #1.C
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2221:
; Line 1648:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_2222:
; Line 1649:	            if (apll->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_2224:
	T25(EAX).A =   _apll:LINK(16).A
	T26(EAX).I =   *(T25(EAX) + 0).A.I
	CONDGO	L_2223:PC ; T26(EAX).I != #10.I
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_2225:
; Line 1650:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_2226:
; Line 1651:	                gen_codes(op_push, ISZ_UINT, apll, NULL); 

	T27(EAX).A =   #0.C
	PARM	T27(EAX).A
	T28(EAX).A =   _apll:LINK(16).A
	PARM	T28(EAX).A
	T29(EAX).UI =   #7.C
	PARM	T29(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1652:	                gen_code(op, make_stack(0), cx); 

	T30(EAX).A =   _cx:LINK(-4).A
	PARM	T30(EAX).A
	T31(EAX).UI =   #0.C
	PARM	T31(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T32(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T32(EAX).A
	T33(EAX).I =   _op:LINK(8).I
	PARM	T33(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1653:	                gen_codes(op_pop, ISZ_UINT, cx, NULL); 

	T34(EAX).A =   #0.C
	PARM	T34(EAX).A
	T35(EAX).A =   _cx:LINK(-4).A
	PARM	T35(EAX).A
	T36(EAX).UI =   #7.C
	PARM	T36(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1654:	            } 

	BLOCK END
	BLOCK 26

L_2227:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_2229:
	DBG BLOCK END
	GOTO	L_2228:PC
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_2230:
	BLOCK END
	BLOCK 30

L_2223:
; Line 1655:	            else 

; Line 1656:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_2231:
; Line 1657:	                bool pushed = false; 

	VAR START	pushed
	_pushed:LINK(-6).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_2233:
; Line 1658:	                if (apll->mode != am_dreg || live(apal->liveRegs, apll->preg)) 

	T37(EAX).A =   _apll:LINK(16).A
	T38(EAX).I =   *(T37(EAX) + 0).A.I
	CONDGO	L_2351:PC ; T38(EAX).I != #2.C
	BLOCK END
	BLOCK 33
	T39(EDX).A =   _apal:LINK(12).A
	T40(EAX).A =   _apll:LINK(16).A
	T42(CL).C =   *(T40(EAX) + 4).A.C
	T185(AL).C =   T42(CL).C^
	T188(CL).C =   T185(AL).C^
	T43(EAX).I = #1.C << T188(CL).C
	T44(EAX).I = *(T39(EDX) + 10).A.I & T43(EAX).I
	CONDGO	L_2232:PC ; T44(EAX).I == #0.C
	BLOCK END
	BLOCK 34

L_2351:
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_2234:
; Line 1659:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_2235:
; Line 1660:	                    pushed = true; 

	_pushed:LINK(-6).BOOL =   #1.BOOL
; Line 1661:	                    gen_codes(op_push, ISZ_UINT, apll, NULL); 

	T45(EAX).A =   #0.C
	PARM	T45(EAX).A
	T46(EAX).A =   _apll:LINK(16).A
	PARM	T46(EAX).A
	T47(EAX).UI =   #7.C
	PARM	T47(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1662:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1663:	                } 

	BLOCK END
	BLOCK 37

L_2236:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_2237:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_2232:
	BLOCK END
	BLOCK 40

L_2238:
	DBG BLOCK END
; Line 1664:	                gen_code(op, apll, cx); 

	T48(EAX).A =   _cx:LINK(-4).A
	PARM	T48(EAX).A
	T49(EAX).A =   _apll:LINK(16).A
	PARM	T49(EAX).A
	T50(EAX).I =   _op:LINK(8).I
	PARM	T50(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1665:	                gen_codes(op_mov, ISZ_UINT, apal, apll); 

	T51(EAX).A =   _apll:LINK(16).A
	PARM	T51(EAX).A
	T52(EAX).A =   _apal:LINK(12).A
	PARM	T52(EAX).A
	T53(EAX).UI =   #7.C
	PARM	T53(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_2240:
; Line 1666:	                if (pushed) 

	T54(AL).BOOL =   _pushed:LINK(-6).BOOL
	CONDGO	L_2239:PC ; T54(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_2241:
; Line 1667:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_2242:
; Line 1668:	                    gen_codes(op_pop, ISZ_UINT, apll, NULL); 

	T55(EAX).A =   #0.C
	PARM	T55(EAX).A
	T56(EAX).A =   _apll:LINK(16).A
	PARM	T56(EAX).A
	T57(EAX).UI =   #7.C
	PARM	T57(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1669:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 1670:	                } 

	BLOCK END
	BLOCK 45

L_2243:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_2244:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_2239:
	BLOCK END
	BLOCK 48

L_2245:
	DBG BLOCK END
; Line 1671:	            } 

	BLOCK END
	BLOCK 49

L_2246:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_2247:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_2228:
	BLOCK END
	BLOCK 52

L_2248:
	DBG BLOCK END
; Line 1672:	        } 

	BLOCK END
	BLOCK 53

L_2249:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_2251:
	DBG BLOCK END
	GOTO	L_2250:PC
	BLOCK END
	BLOCK 55
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_2252:
	BLOCK END
	BLOCK 57

L_2219:
; Line 1673:	        else if (apll->mode == am_dreg && apll->preg == ECX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_2254:
	T58(EAX).A =   _apll:LINK(16).A
	T59(EAX).I =   *(T58(EAX) + 0).A.I
	CONDGO	L_2253:PC ; T59(EAX).I != #2.C
	BLOCK END
	BLOCK 59
	T60(EAX).A =   _apll:LINK(16).A
	T61(AL).C =   *(T60(EAX) + 4).A.C
	CONDGO	L_2253:PC ; T61(AL).C != #1.C
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_2255:
; Line 1674:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_2256:
; Line 1675:	            gen_codes(op_xchg, ISZ_UINT, apll, aprl); 

	T62(EAX).A =   _aprl:LINK(20).A
	PARM	T62(EAX).A
	T63(EAX).A =   _apll:LINK(16).A
	PARM	T63(EAX).A
	T64(EAX).UI =   #7.C
	PARM	T64(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1676:	            gen_code(op, aprl, cx); 

	T65(EAX).A =   _cx:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   _aprl:LINK(20).A
	PARM	T66(EAX).A
	T67(EAX).I =   _op:LINK(8).I
	PARM	T67(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1677:	            gen_codes(op_xchg, ISZ_UINT, apll, aprl); 

	T68(EAX).A =   _aprl:LINK(20).A
	PARM	T68(EAX).A
	T69(EAX).A =   _apll:LINK(16).A
	PARM	T69(EAX).A
	T70(EAX).UI =   #7.C
	PARM	T70(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1678:	        } 

	BLOCK END
	BLOCK 63

L_2257:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_2259:
	DBG BLOCK END
	GOTO	L_2258:PC
	BLOCK END
	BLOCK 65
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_2260:
	BLOCK END
	BLOCK 67

L_2253:
; Line 1679:	        else 

; Line 1680:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_2261:
; Line 1681:	            if (apll->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_2263:
	T71(EAX).A =   _apll:LINK(16).A
	T72(EAX).I =   *(T71(EAX) + 0).A.I
	CONDGO	L_2262:PC ; T72(EAX).I != #10.I
	BLOCK END
	BLOCK 70
	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_2264:
; Line 1682:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_2265:
; Line 1683:	                gen_codes(op_xchg, ISZ_UINT, aprl, cx); 

	T73(EAX).A =   _cx:LINK(-4).A
	PARM	T73(EAX).A
	T74(EAX).A =   _aprl:LINK(20).A
	PARM	T74(EAX).A
	T75(EAX).UI =   #7.C
	PARM	T75(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1684:	                gen_codes(op_push, ISZ_UINT, apll, NULL); 

	T76(EAX).A =   #0.C
	PARM	T76(EAX).A
	T77(EAX).A =   _apll:LINK(16).A
	PARM	T77(EAX).A
	T78(EAX).UI =   #7.C
	PARM	T78(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1685:	                gen_code(op, make_stack(0), cx); 

	T79(EAX).A =   _cx:LINK(-4).A
	PARM	T79(EAX).A
	T80(EAX).UI =   #0.C
	PARM	T80(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T81(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T81(EAX).A
	T82(EAX).I =   _op:LINK(8).I
	PARM	T82(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1686:	                gen_codes(op_pop, ISZ_UINT, cx, NULL); 

	T83(EAX).A =   #0.C
	PARM	T83(EAX).A
	T84(EAX).A =   _cx:LINK(-4).A
	PARM	T84(EAX).A
	T85(EAX).UI =   #7.C
	PARM	T85(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1687:	                gen_codes(op_xchg, ISZ_UINT, aprl, cx); 

	T86(EAX).A =   _cx:LINK(-4).A
	PARM	T86(EAX).A
	T87(EAX).A =   _aprl:LINK(20).A
	PARM	T87(EAX).A
	T88(EAX).UI =   #7.C
	PARM	T88(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1688:	            } 

	BLOCK END
	BLOCK 73

L_2266:
	DBG BLOCK END
	BLOCK END
	BLOCK 74

L_2268:
	DBG BLOCK END
	GOTO	L_2267:PC
	BLOCK END
	BLOCK 75
	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_2269:
	BLOCK END
	BLOCK 77

L_2262:
; Line 1689:	            else 

; Line 1690:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_2270:
; Line 1691:	                bool pushed = false; 

	VAR START	pushed
	_pushed:LINK(-5).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_2272:
; Line 1692:	                if (apll->mode != am_dreg || live(apal->liveRegs, apll->preg)) 

	T89(EAX).A =   _apll:LINK(16).A
	T90(EAX).I =   *(T89(EAX) + 0).A.I
	CONDGO	L_2352:PC ; T90(EAX).I != #2.C
	BLOCK END
	BLOCK 80
	T91(EDX).A =   _apal:LINK(12).A
	T92(EAX).A =   _apll:LINK(16).A
	T94(CL).C =   *(T92(EAX) + 4).A.C
	T186(AL).C =   T94(CL).C^
	T189(CL).C =   T186(AL).C^
	T95(EAX).I = #1.C << T189(CL).C
	T96(EAX).I = *(T91(EDX) + 10).A.I & T95(EAX).I
	CONDGO	L_2271:PC ; T96(EAX).I == #0.C
	BLOCK END
	BLOCK 81

L_2352:
	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_2273:
; Line 1693:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_2274:
; Line 1694:	                    pushed = true; 

	_pushed:LINK(-5).BOOL =   #1.BOOL
; Line 1695:	                    gen_codes(op_push, ISZ_UINT, apll, NULL); 

	T97(EAX).A =   #0.C
	PARM	T97(EAX).A
	T98(EAX).A =   _apll:LINK(16).A
	PARM	T98(EAX).A
	T99(EAX).UI =   #7.C
	PARM	T99(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1696:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1697:	                } 

	BLOCK END
	BLOCK 84

L_2275:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_2276:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_2271:
	BLOCK END
	BLOCK 87

L_2277:
	DBG BLOCK END
; Line 1698:	                gen_codes(op_xchg, ISZ_UINT, aprl, cx); 

	T100(EAX).A =   _cx:LINK(-4).A
	PARM	T100(EAX).A
	T101(EAX).A =   _aprl:LINK(20).A
	PARM	T101(EAX).A
	T102(EAX).UI =   #7.C
	PARM	T102(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1699:	                gen_code(op, apll, cx); 

	T103(EAX).A =   _cx:LINK(-4).A
	PARM	T103(EAX).A
	T104(EAX).A =   _apll:LINK(16).A
	PARM	T104(EAX).A
	T105(EAX).I =   _op:LINK(8).I
	PARM	T105(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1700:	                gen_codes(op_xchg, ISZ_UINT, aprl, cx); 

	T106(EAX).A =   _cx:LINK(-4).A
	PARM	T106(EAX).A
	T107(EAX).A =   _aprl:LINK(20).A
	PARM	T107(EAX).A
	T108(EAX).UI =   #7.C
	PARM	T108(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1701:	                gen_codes(op_mov, ISZ_UINT, apal, apll); 

	T109(EAX).A =   _apll:LINK(16).A
	PARM	T109(EAX).A
	T110(EAX).A =   _apal:LINK(12).A
	PARM	T110(EAX).A
	T111(EAX).UI =   #7.C
	PARM	T111(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_2279:
; Line 1702:	                if (pushed) 

	T112(AL).BOOL =   _pushed:LINK(-5).BOOL
	CONDGO	L_2278:PC ; T112(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_2280:
; Line 1703:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_2281:
; Line 1704:	                    gen_codes(op_pop, ISZ_UINT, apll, NULL); 

	T113(EAX).A =   #0.C
	PARM	T113(EAX).A
	T114(EAX).A =   _apll:LINK(16).A
	PARM	T114(EAX).A
	T115(EAX).UI =   #7.C
	PARM	T115(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1705:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 1706:	                } 

	BLOCK END
	BLOCK 92

L_2282:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_2283:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_2278:
	BLOCK END
	BLOCK 95

L_2284:
	DBG BLOCK END
; Line 1707:	            } 

	BLOCK END
	BLOCK 96

L_2285:
	DBG BLOCK END
	BLOCK END
	BLOCK 97

L_2286:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_2267:
	BLOCK END
	BLOCK 99

L_2287:
	DBG BLOCK END
; Line 1708:	        } 

	BLOCK END
	BLOCK 100

L_2288:
	DBG BLOCK END
	BLOCK END
	BLOCK 101

L_2289:
	DBG BLOCK END
	BLOCK END
	BLOCK 102

L_2258:
	BLOCK END
	BLOCK 103

L_2290:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_2291:
	DBG BLOCK END
	BLOCK END
	BLOCK 105

L_2250:
	BLOCK END
	BLOCK 106

L_2292:
	DBG BLOCK END
; Line 1709:	    } 

	BLOCK END
	BLOCK 107

L_2293:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_2295:
	DBG BLOCK END
	GOTO	L_2294:PC
	BLOCK END
	BLOCK 109
	DBG BLOCK START
	BLOCK END
	BLOCK 110

L_2296:
	BLOCK END
	BLOCK 111

L_2215:
; Line 1710:	    else 

; Line 1711:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_2297:
; Line 1712:	        if (aprl->mode == am_dreg && aprl->preg == ECX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_2299:
	T116(EAX).A =   _aprl:LINK(20).A
	T117(EAX).I =   *(T116(EAX) + 0).A.I
	CONDGO	L_2298:PC ; T117(EAX).I != #2.C
	BLOCK END
	BLOCK 114
	T118(EAX).A =   _aprl:LINK(20).A
	T119(AL).C =   *(T118(EAX) + 4).A.C
	CONDGO	L_2298:PC ; T119(AL).C != #1.C
	BLOCK END
	BLOCK 115
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_2300:
; Line 1713:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_2301:
; Line 1714:	            if (apal->mode == am_dreg && apal->preg == ECX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_2303:
	T120(EAX).A =   _apal:LINK(12).A
	T121(EAX).I =   *(T120(EAX) + 0).A.I
	CONDGO	L_2302:PC ; T121(EAX).I != #2.C
	BLOCK END
	BLOCK 119
	T122(EAX).A =   _apal:LINK(12).A
	T123(AL).C =   *(T122(EAX) + 4).A.C
	CONDGO	L_2302:PC ; T123(AL).C != #1.C
	BLOCK END
	BLOCK 120
	DBG BLOCK START
	BLOCK END
	BLOCK 121

L_2304:
; Line 1715:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 122

L_2305:
; Line 1716:	                if (apll->mode != am_dreg || (apll->liveRegs & (1 << apll->preg))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 123

L_2307:
	T124(EAX).A =   _apll:LINK(16).A
	T125(EAX).I =   *(T124(EAX) + 0).A.I
	CONDGO	L_2353:PC ; T125(EAX).I != #2.C
	BLOCK END
	BLOCK 124
	T126(EDX).A =   _apll:LINK(16).A
	T127(EAX).A =   _apll:LINK(16).A
	T129(CL).C =   *(T127(EAX) + 4).A.C
	T187(AL).C =   T129(CL).C^
	T190(CL).C =   T187(AL).C^
	T130(EAX).I = #1.C << T190(CL).C
	T131(EAX).I = *(T126(EDX) + 10).A.I & T130(EAX).I
	CONDGO	L_2306:PC ; T131(EAX).I == #0.C
	BLOCK END
	BLOCK 125

L_2353:
	DBG BLOCK START
	BLOCK END
	BLOCK 126

L_2308:
; Line 1717:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_2309:
; Line 1718:	                    gen_codes(op_push, ISZ_UINT, apll, NULL); 

	T138(EAX).A =   #0.C
	PARM	T138(EAX).A
	T139(EAX).A =   _apll:LINK(16).A
	PARM	T139(EAX).A
	T140(EAX).UI =   #7.C
	PARM	T140(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1719:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1720:	                    gen_code(op, apll, cx); 

	T141(EAX).A =   _cx:LINK(-4).A
	PARM	T141(EAX).A
	T142(EAX).A =   _apll:LINK(16).A
	PARM	T142(EAX).A
	T143(EAX).I =   _op:LINK(8).I
	PARM	T143(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1721:	                    gen_codes(op_mov, ISZ_UINT, apal, apll); 

	T144(EAX).A =   _apll:LINK(16).A
	PARM	T144(EAX).A
	T145(EAX).A =   _apal:LINK(12).A
	PARM	T145(EAX).A
	T146(EAX).UI =   #7.C
	PARM	T146(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1722:	                    gen_codes(op_pop, ISZ_UINT, apll, NULL); 

	T147(EAX).A =   #0.C
	PARM	T147(EAX).A
	T148(EAX).A =   _apll:LINK(16).A
	PARM	T148(EAX).A
	T149(EAX).UI =   #7.C
	PARM	T149(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1723:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 1724:	                } 

	BLOCK END
	BLOCK 128

L_2310:
	DBG BLOCK END
	BLOCK END
	BLOCK 129

L_2312:
	DBG BLOCK END
	GOTO	L_2311:PC
	BLOCK END
	BLOCK 130
	DBG BLOCK START
	BLOCK END
	BLOCK 131

L_2313:
	BLOCK END
	BLOCK 132

L_2306:
; Line 1725:	                else 

; Line 1726:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_2314:
; Line 1727:	                    gen_code(op, apll, cx); 

	T132(EAX).A =   _cx:LINK(-4).A
	PARM	T132(EAX).A
	T133(EAX).A =   _apll:LINK(16).A
	PARM	T133(EAX).A
	T134(EAX).I =   _op:LINK(8).I
	PARM	T134(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1728:	                    gen_codes(op_mov, ISZ_UINT, apal, apll); 

	T135(EAX).A =   _apll:LINK(16).A
	PARM	T135(EAX).A
	T136(EAX).A =   _apal:LINK(12).A
	PARM	T136(EAX).A
	T137(EAX).UI =   #7.C
	PARM	T137(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1729:	                } 

	BLOCK END
	BLOCK 134

L_2315:
	DBG BLOCK END
	BLOCK END
	BLOCK 135

L_2316:
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_2311:
	BLOCK END
	BLOCK 137

L_2317:
	DBG BLOCK END
; Line 1730:	            } 

	BLOCK END
	BLOCK 138

L_2318:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_2320:
	DBG BLOCK END
	GOTO	L_2319:PC
	BLOCK END
	BLOCK 140
	DBG BLOCK START
	BLOCK END
	BLOCK 141

L_2321:
	BLOCK END
	BLOCK 142

L_2302:
; Line 1731:	            else 

; Line 1732:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 143

L_2322:
; Line 1733:	                gen_codes(op_mov, ISZ_UINT, apal, apll); 

	T150(EAX).A =   _apll:LINK(16).A
	PARM	T150(EAX).A
	T151(EAX).A =   _apal:LINK(12).A
	PARM	T151(EAX).A
	T152(EAX).UI =   #7.C
	PARM	T152(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1734:	                gen_code(op, apal, cx); 

	T153(EAX).A =   _cx:LINK(-4).A
	PARM	T153(EAX).A
	T154(EAX).A =   _apal:LINK(12).A
	PARM	T154(EAX).A
	T155(EAX).I =   _op:LINK(8).I
	PARM	T155(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1735:	            } 

	BLOCK END
	BLOCK 144

L_2323:
	DBG BLOCK END
	BLOCK END
	BLOCK 145

L_2324:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_2319:
	BLOCK END
	BLOCK 147

L_2325:
	DBG BLOCK END
; Line 1736:	        } 

	BLOCK END
	BLOCK 148

L_2326:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_2328:
	DBG BLOCK END
	GOTO	L_2327:PC
	BLOCK END
	BLOCK 150
	DBG BLOCK START
	BLOCK END
	BLOCK 151

L_2329:
	BLOCK END
	BLOCK 152

L_2298:
; Line 1737:	        else if (apal->mode == am_dreg && apal->preg == ECX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_2331:
	T156(EAX).A =   _apal:LINK(12).A
	T157(EAX).I =   *(T156(EAX) + 0).A.I
	CONDGO	L_2330:PC ; T157(EAX).I != #2.C
	BLOCK END
	BLOCK 154
	T158(EAX).A =   _apal:LINK(12).A
	T159(AL).C =   *(T158(EAX) + 4).A.C
	CONDGO	L_2330:PC ; T159(AL).C != #1.C
	BLOCK END
	BLOCK 155
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_2332:
; Line 1738:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_2333:
; Line 1739:	            gen_codes(op_push, ISZ_UINT, apll, NULL); 

	T160(EAX).A =   #0.C
	PARM	T160(EAX).A
	T161(EAX).A =   _apll:LINK(16).A
	PARM	T161(EAX).A
	T162(EAX).UI =   #7.C
	PARM	T162(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1740:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1741:	            gen_codes(op_mov, ISZ_UINT, cx, aprl); 

	T163(EAX).A =   _aprl:LINK(20).A
	PARM	T163(EAX).A
	T164(EAX).A =   _cx:LINK(-4).A
	PARM	T164(EAX).A
	T165(EAX).UI =   #7.C
	PARM	T165(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1742:	            gen_code(op, make_stack(0), cx); 

	T166(EAX).A =   _cx:LINK(-4).A
	PARM	T166(EAX).A
	T167(EAX).UI =   #0.C
	PARM	T167(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T168(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T168(EAX).A
	T169(EAX).I =   _op:LINK(8).I
	PARM	T169(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1743:	            gen_codes(op_pop, ISZ_UINT, cx, NULL); 

	T170(EAX).A =   #0.C
	PARM	T170(EAX).A
	T171(EAX).A =   _cx:LINK(-4).A
	PARM	T171(EAX).A
	T172(EAX).UI =   #7.C
	PARM	T172(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1744:	            pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 1745:	        } 

	BLOCK END
	BLOCK 158

L_2334:
	DBG BLOCK END
	BLOCK END
	BLOCK 159

L_2336:
	DBG BLOCK END
	GOTO	L_2335:PC
	BLOCK END
	BLOCK 160
	DBG BLOCK START
	BLOCK END
	BLOCK 161

L_2337:
	BLOCK END
	BLOCK 162

L_2330:
; Line 1746:	        else 

; Line 1747:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 163

L_2338:
; Line 1748:	            gen_codes(op_xchg, ISZ_UINT, aprl, cx); 

	T173(EAX).A =   _cx:LINK(-4).A
	PARM	T173(EAX).A
	T174(EAX).A =   _aprl:LINK(20).A
	PARM	T174(EAX).A
	T175(EAX).UI =   #7.C
	PARM	T175(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1749:	            gen_codes(op_mov, ISZ_UINT, apal, apll); 

	T176(EAX).A =   _apll:LINK(16).A
	PARM	T176(EAX).A
	T177(EAX).A =   _apal:LINK(12).A
	PARM	T177(EAX).A
	T178(EAX).UI =   #7.C
	PARM	T178(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1750:	            gen_code(op, apal, cx); 

	T179(EAX).A =   _cx:LINK(-4).A
	PARM	T179(EAX).A
	T180(EAX).A =   _apal:LINK(12).A
	PARM	T180(EAX).A
	T181(EAX).I =   _op:LINK(8).I
	PARM	T181(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1751:	            gen_codes(op_xchg, ISZ_UINT, aprl, cx); 

	T182(EAX).A =   _cx:LINK(-4).A
	PARM	T182(EAX).A
	T183(EAX).A =   _aprl:LINK(20).A
	PARM	T183(EAX).A
	T184(EAX).UI =   #7.C
	PARM	T184(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1752:	        } 

	BLOCK END
	BLOCK 164

L_2339:
	DBG BLOCK END
	BLOCK END
	BLOCK 165

L_2340:
	DBG BLOCK END
	BLOCK END
	BLOCK 166

L_2335:
	BLOCK END
	BLOCK 167

L_2341:
	DBG BLOCK END
	BLOCK END
	BLOCK 168

L_2342:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_2327:
	BLOCK END
	BLOCK 170

L_2343:
	DBG BLOCK END
; Line 1753:	    } 

	BLOCK END
	BLOCK 171

L_2344:
	DBG BLOCK END
	BLOCK END
	BLOCK 172

L_2345:
	DBG BLOCK END
	BLOCK END
	BLOCK 173

L_2294:
	BLOCK END
	BLOCK 174

L_2346:
	DBG BLOCK END
	BLOCK END
	BLOCK 175

L_2347:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_2212:
	BLOCK END
	BLOCK 177

L_2348:
	DBG BLOCK END
; Line 1754:	} 

	BLOCK END
	BLOCK 178

L_2349:
	DBG BLOCK END
	BLOCK END
	BLOCK 179

L_2205:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@do_movzx$qiip5amodepn0:
; Line 1756:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_2357:
	VAR START	dsize
	VAR START	ssize
	VAR START	dest
	VAR START	src
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2359:
; Line 1757:	    gen_code2(op_movzx, dsize, ssize, dest, src); 

	T0(EAX).A =   _src:LINK(16).A
	PARM	T0(EAX).A
	T1(EAX).A =   _dest:LINK(12).A
	PARM	T1(EAX).A
	T2(EAX).I =   _ssize:LINK(8).I
	PARM	T2(EAX).I
	T3(EAX).I =   _dsize:LINK(4).I
	PARM	T3(EAX).I
	PARM	#125.I
	TAG
	GOSUB	#@occx86@gen_code2$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1758:	    return; 

; Line 1759:	} 

	BLOCK END
	BLOCK 4

L_2360:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_2358:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@do_movsx$qiip5amodepn0:
; Line 1761:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_2365:
	VAR START	dsize
	VAR START	ssize
	VAR START	dest
	VAR START	src
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2367:
; Line 1762:	    if (dest->preg == EAX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2369:
	T1(EAX).A =   _dest:LINK(12).A
	T2(AL).C =   *(T1(EAX) + 4).A.C
	CONDGO	L_2368:PC ; T2(AL).C != #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_2370:
; Line 1763:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_2371:
; Line 1764:	        if (!equal_address(dest, src)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_2373:
	T3(EAX).A =   _src:LINK(16).A
	PARM	T3(EAX).A
	T4(EAX).A =   _dest:LINK(12).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T5(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2372:PC ; T5(EAX).I != #0.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_2374:
; Line 1765:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_2375:
; Line 1766:	            gen_codes(op_mov, ssize, dest, src); 

	T6(EAX).A =   _src:LINK(16).A
	PARM	T6(EAX).A
	T7(EAX).A =   _dest:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).I =   _ssize:LINK(8).I
	PARM	T8(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1767:	        } 

	BLOCK END
	BLOCK 12

L_2376:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_2377:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_2372:
	BLOCK END
	BLOCK 15

L_2378:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_2380:
; Line 1768:	        if (ssize == ISZ_UCHAR) 

	T9(EAX).I =   _ssize:LINK(8).I
	CONDGO	L_2379:PC ; T9(EAX).I != #3.C
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_2381:
; Line 1769:	            gen_code(op_cbw, NULL, NULL); 

	T10(EAX).A =   #0.C
	PARM	T10(EAX).A
	T11(EAX).A =   #0.C
	PARM	T11(EAX).A
	PARM	#31.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 19

L_2382:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_2379:
	BLOCK END
	BLOCK 21

L_2383:
	DBG BLOCK END
; Line 1770:	        gen_code(op_cwde, NULL, NULL); 

	T12(EAX).A =   #0.C
	PARM	T12(EAX).A
	T13(EAX).A =   #0.C
	PARM	T13(EAX).A
	PARM	#63.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1771:	    } 

	BLOCK END
	BLOCK 22

L_2384:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_2386:
	DBG BLOCK END
	GOTO	L_2385:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_2387:
	BLOCK END
	BLOCK 26

L_2368:
; Line 1772:	    else 

; Line 1773:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2388:
; Line 1774:	        gen_code2(op_movsx, dsize, ssize, dest, src); 

	T14(EAX).A =   _src:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   _dest:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).I =   _ssize:LINK(8).I
	PARM	T16(EAX).I
	T17(EAX).I =   _dsize:LINK(4).I
	PARM	T17(EAX).I
	PARM	#124.I
	TAG
	GOSUB	#@occx86@gen_code2$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 1775:	    } 

	BLOCK END
	BLOCK 28

L_2389:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_2390:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_2385:
	BLOCK END
	BLOCK 31

L_2391:
	DBG BLOCK END
; Line 1776:	} 

	BLOCK END
	BLOCK 32

L_2392:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_2366:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@compactSwitchHeader$qL:
; Line 1778:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#14.UI
	BLOCK END
	BLOCK 2

L_2397:
	VAR START	bottom
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2399:
; Line 1779:	    int tablab, size; 

	VAR START	tablab
	VAR START	size
	VAR START	ap
	VAR START	lnode
; Line 1781:	    Optimizer::SimpleExpression* lnode; 

	T14(EAX).I =   @Optimizer@nextLabel:RAM.I
	_tablab:LINK(-4).I =   T14(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 1783:	    size = switch_ip->size; 

	T15(EAX).A =   @occx86@switch_ip:RAM.A
	T16(EAX).I =   *(T15(EAX) + 19).A.C
	_size:LINK(-8).I =   T16(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2401:
; Line 1784:	    if (size == ISZ_ULONGLONG || size == -ISZ_ULONGLONG) 

	T17(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2529:PC ; T17(EAX).I == #B.C
	BLOCK END
	BLOCK 5
	T18(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2400:PC ; T18(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_2529:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_2402:
; Line 1785:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_2403:
; Line 1786:	        if (bottom) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_2405:
	T50(EDX:EAX).LL =   _bottom:LINK(4).LL
	CONDGO	L_2404:PC ; T50(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_2406:
; Line 1787:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_2407:
; Line 1788:	            int golab = beGetLabel; 

	VAR START	golab
	T51(EAX).I =   @Optimizer@nextLabel:RAM.I
	_golab:LINK(-20).I =   T51(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 1790:	            gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed(bottom >> 32)); 

	T52(EDX:EAX).LL =   _bottom:LINK(4).LL
	T54(EDX:EAX).LL = T52(EDX:EAX).LL S>> #20.I
	PARM	T54(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T55(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T55(EAX).A
	T56(EAX).A =   @occx86@switch_aph:RAM.A
	PARM	T56(EAX).A
	T57(EAX).UI =   #7.C
	PARM	T57(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_2409:
; Line 1792:	            gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed((switch_ip->size < 9 && bottom < 0) ? -1 : 0)); 
; Line 1795:	            { 

	T58(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2408:PC ; T58(EAX).I S>= #0.C
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_2410:
; Line 1794:	            if (size < 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_2411:
; Line 1796:	                gen_branch(op_jl, switch_deflab); 

	T59(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T59(EAX).I
	PARM	#EC.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1797:	                gen_branch(op_jg, golab); 

	T60(EAX).I =   _golab:LINK(-20).I
	PARM	T60(EAX).I
	PARM	#EA.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1798:	            } 

	BLOCK END
	BLOCK 17

L_2412:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_2414:
	DBG BLOCK END
	GOTO	L_2413:PC
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2415:
	BLOCK END
	BLOCK 21

L_2408:
; Line 1799:	            else 

; Line 1800:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_2416:
; Line 1801:	                peep_tail->noopt = true; 

	T61(EAX).A =   @occx86@peep_tail:RAM.A
	*(T61(EAX) + 25).A.C =   #1.C
; Line 1802:	                gen_branch(op_jb, switch_deflab); 

	T62(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T62(EAX).I
	PARM	#E4.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1803:	                gen_branch(op_ja, golab); 

	T63(EAX).I =   _golab:LINK(-20).I
	PARM	T63(EAX).I
	PARM	#E2.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1804:	            } 

	BLOCK END
	BLOCK 23

L_2417:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_2418:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_2413:
	BLOCK END
	BLOCK 26

L_2419:
	DBG BLOCK END
; Line 1805:	            gen_codes(op_cmp, ISZ_UINT, switch_apl, aimmed(bottom)); 

	T64(EDX:EAX).ULL =   _bottom:LINK(4).LL
	PARM	T64(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T65(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T65(EAX).A
	T66(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T66(EAX).A
	T67(EAX).UI =   #7.C
	PARM	T67(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2421:
; Line 1806:	            if (size < 0) 

	T68(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2420:PC ; T68(EAX).I S>= #0.C
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_2422:
; Line 1807:	                gen_branch(op_jl, switch_deflab); 

	T69(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T69(EAX).I
	PARM	#EC.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 30

L_2424:
	DBG BLOCK END
	GOTO	L_2423:PC
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_2425:
	BLOCK END
	BLOCK 33

L_2420:
; Line 1808:	            else 

; Line 1809:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_2426:
; Line 1810:	                peep_tail->noopt = true; 

	T70(EAX).A =   @occx86@peep_tail:RAM.A
	*(T70(EAX) + 25).A.C =   #1.C
; Line 1811:	                gen_branch(op_jb, switch_deflab); 

	T71(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T71(EAX).I
	PARM	#E4.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1812:	            } 

	BLOCK END
	BLOCK 35

L_2427:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_2428:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_2423:
	BLOCK END
	BLOCK 38

L_2429:
	DBG BLOCK END
; Line 1813:	            oa_gen_label(golab); 

	T72(EAX).I =   _golab:LINK(-20).I
	PARM	T72(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 1814:	        } 

	BLOCK END
	BLOCK 39

L_2430:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_2432:
	DBG BLOCK END
	GOTO	L_2431:PC
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_2433:
	BLOCK END
	BLOCK 43

L_2404:
; Line 1815:	        else if (size < 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_2435:
	T73(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2434:PC ; T73(EAX).I S>= #0.C
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_2436:
; Line 1816:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_2437:
; Line 1817:	            if (switch_aph->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_2439:
	T74(EAX).A =   @occx86@switch_aph:RAM.A
	T75(EAX).I =   *(T74(EAX) + 0).A.I
	CONDGO	L_2438:PC ; T75(EAX).I != #2.C
	BLOCK END
	BLOCK 49
	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_2440:
; Line 1818:	                gen_codes(op_and, ISZ_UINT, switch_aph, switch_aph); 

	T76(EAX).A =   @occx86@switch_aph:RAM.A
	PARM	T76(EAX).A
	T77(EAX).A =   @occx86@switch_aph:RAM.A
	PARM	T77(EAX).A
	T78(EAX).UI =   #7.C
	PARM	T78(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 51

L_2442:
	DBG BLOCK END
	GOTO	L_2441:PC
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_2443:
	BLOCK END
	BLOCK 54

L_2438:
; Line 1819:	            else 

; Line 1820:	                gen_codes(op_test, ISZ_UINT, switch_aph, aimmed(-1)); 

	T79(EDX:EAX).ULL =   #FFFFFFFFFFFFFFFF.I
	PARM	T79(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T80(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T80(EAX).A
	T81(EAX).A =   @occx86@switch_aph:RAM.A
	PARM	T81(EAX).A
	T82(EAX).UI =   #7.C
	PARM	T82(EAX).UI
	PARM	#18E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 55

L_2444:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_2441:
	BLOCK END
	BLOCK 57

L_2445:
	DBG BLOCK END
; Line 1821:	            gen_branch(op_jl, switch_deflab); 

	T83(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T83(EAX).I
	PARM	#EC.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1822:	        } 

	BLOCK END
	BLOCK 58

L_2446:
	DBG BLOCK END
	BLOCK END
	BLOCK 59

L_2447:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_2434:
	BLOCK END
	BLOCK 61

L_2448:
	DBG BLOCK END
	BLOCK END
	BLOCK 62

L_2449:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_2431:
	BLOCK END
	BLOCK 64

L_2450:
	DBG BLOCK END
; Line 1823:	        gen_codes(op_cmp, ISZ_UINT, switch_apl, aimmed(switch_range + bottom)); 

	T84(EBX:ESI).LL =   @occx86@switch_range:RAM.LL
	T85(EDX:EAX).LL =   _bottom:LINK(4).LL
	T87(EDX:EAX).LL = T84(EBX:ESI).LL + T85(EDX:EAX).LL
	PARM	T87(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T88(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T88(EAX).A
	T89(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T89(EAX).A
	T90(EAX).UI =   #7.C
	PARM	T90(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1824:	    } 

	BLOCK END
	BLOCK 65

L_2451:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_2453:
	DBG BLOCK END
	GOTO	L_2452:PC
	BLOCK END
	BLOCK 67
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_2454:
	BLOCK END
	BLOCK 69

L_2400:
; Line 1825:	    else 

; Line 1826:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_2455:
; Line 1827:	        if (bottom) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_2457:
	T19(EDX:EAX).LL =   _bottom:LINK(4).LL
	CONDGO	L_2456:PC ; T19(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_2458:
; Line 1828:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_2459:
; Line 1829:	            gen_codes(op_cmp, switch_ip->size, switch_apl, aimmed(bottom)); 

	T20(EDX:EAX).ULL =   _bottom:LINK(4).LL
	PARM	T20(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T21(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T21(EAX).A
	T22(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T22(EAX).A
	T23(EAX).A =   @occx86@switch_ip:RAM.A
	T24(EAX).I =   *(T23(EAX) + 19).A.C
	PARM	T24(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_2461:
; Line 1830:	            if (size < 0) 

	T25(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2460:PC ; T25(EAX).I S>= #0.C
	BLOCK END
	BLOCK 76
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_2462:
; Line 1831:	                gen_branch(op_jl, switch_deflab); 

	T26(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T26(EAX).I
	PARM	#EC.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 78

L_2464:
	DBG BLOCK END
	GOTO	L_2463:PC
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_2465:
	BLOCK END
	BLOCK 81

L_2460:
; Line 1832:	            else 

; Line 1833:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_2466:
; Line 1834:	                peep_tail->noopt = true; 

	T27(EAX).A =   @occx86@peep_tail:RAM.A
	*(T27(EAX) + 25).A.C =   #1.C
; Line 1835:	                gen_branch(op_jb, switch_deflab); 

	T28(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T28(EAX).I
	PARM	#E4.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1836:	            } 

	BLOCK END
	BLOCK 83

L_2467:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_2468:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_2463:
	BLOCK END
	BLOCK 86

L_2469:
	DBG BLOCK END
; Line 1837:	        } 

	BLOCK END
	BLOCK 87

L_2470:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_2472:
	DBG BLOCK END
	GOTO	L_2471:PC
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_2473:
	BLOCK END
	BLOCK 91

L_2456:
; Line 1838:	        else if (size < 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_2475:
	T29(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2474:PC ; T29(EAX).I S>= #0.C
	BLOCK END
	BLOCK 93
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_2476:
; Line 1839:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 95

L_2477:
; Line 1840:	            if (switch_apl->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_2479:
	T30(EAX).A =   @occx86@switch_apl:RAM.A
	T31(EAX).I =   *(T30(EAX) + 0).A.I
	CONDGO	L_2478:PC ; T31(EAX).I != #2.C
	BLOCK END
	BLOCK 97
	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_2480:
; Line 1841:	                gen_codes(op_and, switch_ip->size, switch_apl, switch_apl); 

	T32(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T32(EAX).A
	T33(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T33(EAX).A
	T34(EAX).A =   @occx86@switch_ip:RAM.A
	T35(EAX).I =   *(T34(EAX) + 19).A.C
	PARM	T35(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 99

L_2482:
	DBG BLOCK END
	GOTO	L_2481:PC
	BLOCK END
	BLOCK 100
	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_2483:
	BLOCK END
	BLOCK 102

L_2478:
; Line 1842:	            else 

; Line 1843:	                gen_codes(op_test, switch_ip->size, switch_apl, aimmed(-1)); 

	T36(EDX:EAX).ULL =   #FFFFFFFFFFFFFFFF.I
	PARM	T36(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T37(EAX).A =   RV.T5(EAX).A
	PARMADJ	#8.N
	PARM	T37(EAX).A
	T38(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T38(EAX).A
	T39(EAX).A =   @occx86@switch_ip:RAM.A
	T40(EAX).I =   *(T39(EAX) + 19).A.C
	PARM	T40(EAX).I
	PARM	#18E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 103

L_2484:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_2481:
	BLOCK END
	BLOCK 105

L_2485:
	DBG BLOCK END
; Line 1844:	            gen_branch(op_jl, switch_deflab); 

	T41(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T41(EAX).I
	PARM	#EC.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1845:	        } 

	BLOCK END
	BLOCK 106

L_2486:
	DBG BLOCK END
	BLOCK END
	BLOCK 107

L_2487:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_2474:
	BLOCK END
	BLOCK 109

L_2488:
	DBG BLOCK END
	BLOCK END
	BLOCK 110

L_2489:
	DBG BLOCK END
	BLOCK END
	BLOCK 111

L_2471:
	BLOCK END
	BLOCK 112

L_2490:
	DBG BLOCK END
; Line 1846:	        gen_codes(op_cmp, switch_ip->size, switch_apl, aimmed(switch_range + bottom)); 

	T42(EBX:ESI).LL =   @occx86@switch_range:RAM.LL
	T43(EDX:EAX).LL =   _bottom:LINK(4).LL
	T45(EDX:EAX).LL = T42(EBX:ESI).LL + T43(EDX:EAX).LL
	PARM	T45(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T46(EAX).A =   RV.T6(EAX).A
	PARMADJ	#8.N
	PARM	T46(EAX).A
	T47(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T47(EAX).A
	T48(EAX).A =   @occx86@switch_ip:RAM.A
	T49(EAX).I =   *(T48(EAX) + 19).A.C
	PARM	T49(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1847:	    } 

	BLOCK END
	BLOCK 113

L_2491:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_2492:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_2452:
	BLOCK END
	BLOCK 116

L_2493:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_2495:
; Line 1848:	    if (size < 0) 

	T91(EAX).I =   _size:LINK(-8).I
	CONDGO	L_2494:PC ; T91(EAX).I S>= #0.C
	BLOCK END
	BLOCK 118
	DBG BLOCK START
	BLOCK END
	BLOCK 119

L_2496:
; Line 1849:	        gen_branch(op_jge, switch_deflab); 

	T92(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T92(EAX).I
	PARM	#EB.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 120

L_2498:
	DBG BLOCK END
	GOTO	L_2497:PC
	BLOCK END
	BLOCK 121
	DBG BLOCK START
	BLOCK END
	BLOCK 122

L_2499:
	BLOCK END
	BLOCK 123

L_2494:
; Line 1850:	    else 

; Line 1851:	        gen_branch(op_jnc, switch_deflab); 

	T93(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T93(EAX).I
	PARM	#F3.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 124

L_2500:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_2497:
	BLOCK END
	BLOCK 126

L_2501:
	DBG BLOCK END
; Line 1852:	    gen_codes(op_push, ISZ_UINT, switch_apl, 0); 

	T94(EAX).A =   #0.C
	PARM	T94(EAX).A
	T95(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T95(EAX).A
	T96(EAX).UI =   #7.C
	PARM	T96(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1853:	    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_2503:
	DBG BLOCK END
; Line 1854:	    switch (switch_ip->size) 

	T97(EAX).A =   @occx86@switch_ip:RAM.A
	T98(AL).C =   *(T97(EAX) + 19).A.C
	COSWITCH(T98(AL).C,#6.UI,#A.UI,L_2517:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFC.UI,L_2509:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFD.UI,L_2515:PC)
	SWBRANCH(#2.UI,L_2513:PC)
	SWBRANCH(#3.UI,L_2511:PC)
	SWBRANCH(#4.UI,L_2505:PC)
	SWBRANCH(#5.UI,L_2507:PC)
; Line 1855:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 128

L_2504:
	BLOCK END
	BLOCK 129

L_2505:
	BLOCK END
	BLOCK 130

L_2507:
	DBG BLOCK START
; Line 1857:	        case ISZ_WCHAR: 
; Line 1858:	            do_movzx(ISZ_UINT, ISZ_USHORT, switch_apl, switch_apl); 

; Line 1858:	            do_movzx(ISZ_UINT, ISZ_USHORT, switch_apl, switch_apl); 

	T99(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T99(EAX).A
	T100(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T100(EAX).A
	PARM	#4.I
	T101(EAX).UI =   #7.C
	PARM	T101(EAX).UI
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1859:	            break; 

	GOTO	L_2502:PC
	BLOCK END
	BLOCK 131
	DBG BLOCK END
	BLOCK END
	BLOCK 132

L_2509:
	DBG BLOCK START
; Line 1860:	        case -ISZ_USHORT: 
; Line 1861:	            do_movsx(ISZ_UINT, ISZ_USHORT, switch_apl, switch_apl); 

; Line 1861:	            do_movsx(ISZ_UINT, ISZ_USHORT, switch_apl, switch_apl); 

	T102(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T102(EAX).A
	T103(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T103(EAX).A
	PARM	#4.I
	T104(EAX).UI =   #7.C
	PARM	T104(EAX).UI
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1862:	            break; 

	GOTO	L_2502:PC
	BLOCK END
	BLOCK 133
	DBG BLOCK END
	BLOCK END
	BLOCK 134

L_2511:
	DBG BLOCK START
; Line 1863:	        case ISZ_UCHAR: 
; Line 1864:	            do_movzx(ISZ_UINT, ISZ_UCHAR, switch_apl, switch_apl); 

; Line 1864:	            do_movzx(ISZ_UINT, ISZ_UCHAR, switch_apl, switch_apl); 

	T105(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T105(EAX).A
	T106(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T106(EAX).A
	T107(EAX).UI =   #3.C
	PARM	T107(EAX).UI
	T108(EAX).UI =   #7.C
	PARM	T108(EAX).UI
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1865:	            break; 

	GOTO	L_2502:PC
	BLOCK END
	BLOCK 135
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_2513:
	DBG BLOCK START
; Line 1866:	        case ISZ_BOOLEAN: 
; Line 1867:	            gen_codes(op_and, ISZ_UINT, switch_apl, aimmed(1)); 

; Line 1867:	            gen_codes(op_and, ISZ_UINT, switch_apl, aimmed(1)); 

	T109(EDX:EAX).ULL =   #1.C
	PARM	T109(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T110(EAX).A =   RV.T7(EAX).A
	PARMADJ	#8.N
	PARM	T110(EAX).A
	T111(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T111(EAX).A
	T112(EAX).UI =   #7.C
	PARM	T112(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1868:	            break; 

	GOTO	L_2502:PC
	BLOCK END
	BLOCK 137
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_2515:
	DBG BLOCK START
; Line 1869:	        case -ISZ_UCHAR: 
; Line 1870:	            do_movsx(ISZ_UINT, ISZ_UCHAR, switch_apl, switch_apl); 

; Line 1870:	            do_movsx(ISZ_UINT, ISZ_UCHAR, switch_apl, switch_apl); 

	T113(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T113(EAX).A
	T114(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T114(EAX).A
	T115(EAX).UI =   #3.C
	PARM	T115(EAX).UI
	T116(EAX).UI =   #7.C
	PARM	T116(EAX).UI
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1871:	            break; 

	GOTO	L_2502:PC
	BLOCK END
	BLOCK 139
	DBG BLOCK END
	BLOCK END
	BLOCK 140

L_2517:
	DBG BLOCK START
; Line 1872:	        default: 
; Line 1873:	            break; 

; Line 1873:	            break; 

	BLOCK END
	BLOCK 141

L_2518:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_2502:
	BLOCK END
	BLOCK 143

L_2519:
	DBG BLOCK END
; Line 1876:	    peep_tail->noopt = true; 

	T117(EAX).A =   @occx86@peep_tail:RAM.A
	*(T117(EAX) + 25).A.C =   #1.C
; Line 1877:	    lnode = beLocalAllocate<Optimizer::SimpleExpression>(); 

	T118(EAX).UI =   #1.C
	PARM	T118(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$27@Optimizer@SimpleExpression~$qi:PC.UI
	T119(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	_lnode:LINK(-16).A =   T119(EAX).A
; Line 1878:	    lnode->type = Optimizer::se_labcon; 

	T120(EAX).A =   _lnode:LINK(-16).A
	*(T120(EAX) + 0).A.I =   #F.I
; Line 1879:	    lnode->i = tablab; 

	T121(EDX:ECX).LL =   _tablab:LINK(-4).I
	T122(EAX).A =   _lnode:LINK(-16).A
	*(T122(EAX) + 8).A.LL =   T121(EDX:ECX).LL
	DBG BLOCK START
	BLOCK END
	BLOCK 144

L_2521:
; Line 1880:	    if (bottom) 

	T123(EDX:EAX).LL =   _bottom:LINK(4).LL
	CONDGO	L_2520:PC ; T123(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 145
	DBG BLOCK START
	BLOCK END
	BLOCK 146

L_2522:
; Line 1881:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 147

L_2523:
; Line 1882:	        lnode = Optimizer::simpleExpressionNode(Optimizer::se_add, lnode, Optimizer::simpleIntNode(Optimizer::se_i, -bottom * 4)); 

	T124(EDX:EAX).LL =   _bottom:LINK(4).LL
	T125(EDX:EAX).LL =  - T124(EDX:EAX).LL
	T127(EDX:EAX).LL = T125(EDX:EAX).LL << #2.C
	PARM	T127(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T128(EAX).A =   RV.T9(EAX).A
	PARMADJ	#C.N
	PARM	T128(EAX).A
	T129(EAX).A =   _lnode:LINK(-16).A
	PARM	T129(EAX).A
	T130(EAX).UI =   #1.C
	PARM	T130(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T131(EAX).A =   RV.T10(EAX).A
	PARMADJ	#C.N
	_lnode:LINK(-16).A =   T131(EAX).A
; Line 1883:	    } 

	BLOCK END
	BLOCK 148

L_2524:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_2525:
	DBG BLOCK END
	BLOCK END
	BLOCK 150

L_2520:
	BLOCK END
	BLOCK 151

L_2526:
	DBG BLOCK END
; Line 1884:	    ap = beLocalAllocate<AMODE>(); 

	T132(EAX).UI =   #1.C
	PARM	T132(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T133(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-12).A =   T133(EAX).A
; Line 1885:	    ap->mode = am_indispscale; 

	T134(EAX).A =   _ap:LINK(-12).A
	*(T134(EAX) + 0).A.I =   #D.I
; Line 1886:	    ap->preg = -1; 

	T135(EAX).A =   _ap:LINK(-12).A
	*(T135(EAX) + 4).A.C =   #FFFFFFFFFFFFFFFF.C
; Line 1887:	    ap->scale = 2; 

	T136(EAX).A =   _ap:LINK(-12).A
	*(T136(EAX) + 7).A.C =   #2.C
; Line 1888:	    ap->sreg = switch_apl->preg; 

	T137(EAX).A =   @occx86@switch_apl:RAM.A
	T138(CL).C =   *(T137(EAX) + 4).A.C
	T139(EAX).A =   _ap:LINK(-12).A
	*(T139(EAX) + 5).A.C =   T138(CL).C
; Line 1889:	    ap->offset = lnode; 

	T140(ECX).A =   _lnode:LINK(-16).A
	T141(EAX).A =   _ap:LINK(-12).A
	*(T141(EAX) + C).A.A =   T140(ECX).A
; Line 1890:	    gen_codes(op_mov, ISZ_UINT, switch_apl, ap); 

	T142(EAX).A =   _ap:LINK(-12).A
	PARM	T142(EAX).A
	T143(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T143(EAX).A
	T144(EAX).UI =   #7.C
	PARM	T144(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1891:	    gen_codes(op_xchg, ISZ_UINT, switch_apl, make_stack(0)); 

	T145(EAX).UI =   #0.C
	PARM	T145(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T146(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T146(EAX).A
	T147(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T147(EAX).A
	T148(EAX).UI =   #7.C
	PARM	T148(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1892:	    gen_codes(op_ret, 0, 0, 0); 

	T149(EAX).A =   #0.C
	PARM	T149(EAX).A
	T150(EAX).A =   #0.C
	PARM	T150(EAX).A
	T151(EAX).UI =   #0.C
	PARM	T151(EAX).UI
	PARM	#14B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1893:	    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 1894:	    gen_code(op_align, aimmed(4), 0); 

	T152(EAX).A =   #0.C
	PARM	T152(EAX).A
	T153(EDX:EAX).ULL =   #4.I
	PARM	T153(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T154(EAX).A =   RV.T13(EAX).A
	PARMADJ	#8.N
	PARM	T154(EAX).A
	PARM	#E.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 1895:	    oa_gen_label(tablab); 

	T155(EAX).I =   _tablab:LINK(-4).I
	PARM	T155(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 1896:	} 

	BLOCK END
	BLOCK 152

L_2527:
	DBG BLOCK END
	BLOCK END
	BLOCK 153

L_2398:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@bingen$qiii


global @occx86@bingen$qiii
@occx86@bingen$qiii:
; Line 1900:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_2533:
	VAR START	lower
	VAR START	avg
	VAR START	higher
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2535:
; Line 1901:	    AMODE* ap2 = aimmed(switchTreeCases[avg]); 

	VAR START	ap2
	T1(EAX).A =   @occx86@switchTreeCases:RAM.A
	T2(ECX).I =   _avg:LINK(8).I
	T3(EDX:EAX).ULL =   *(T1(EAX) + T2(ECX) * 8).A.LL
	PARM	T3(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	_ap2:LINK(-4).A =   T4(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2537:
; Line 1902:	    if (switchTreeBranchLabels[avg] != 0) 

	T5(ECX).A =   @occx86@switchTreeBranchLabels:RAM.A
	T6(EAX).I =   _avg:LINK(8).I
	T7(EAX).I =   *(T5(ECX) + T6(EAX) * 4).A.I
	CONDGO	L_2536:PC ; T7(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_2538:
; Line 1903:	        oa_gen_label(switchTreeBranchLabels[avg]); 

	T8(ECX).A =   @occx86@switchTreeBranchLabels:RAM.A
	T9(EAX).I =   _avg:LINK(8).I
	T10(EAX).I =   *(T8(ECX) + T9(EAX) * 4).A.I
	PARM	T10(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 7

L_2539:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_2536:
	BLOCK END
	BLOCK 9

L_2540:
	DBG BLOCK END
; Line 1904:	    gen_coden(op_cmp, switch_apl->length, switch_apl, ap2); 

	T11(EAX).A =   _ap2:LINK(-4).A
	PARM	T11(EAX).A
	T12(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T12(EAX).A
	T13(EAX).A =   @occx86@switch_apl:RAM.A
	T14(EAX).I =   *(T13(EAX) + 8).A.C
	PARM	T14(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_coden$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1905:	    gen_branch(op_je, switchTreeLabels[avg]); 

	T15(ECX).A =   @occx86@switchTreeLabels:RAM.A
	T16(EAX).I =   _avg:LINK(8).I
	T17(EAX).I =   *(T15(ECX) + T16(EAX) * 4).A.I
	PARM	T17(EAX).I
	PARM	#E9.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1906:	    peep_tail->oper1->liveRegs = switch_live; 

	T18(ECX).I =   @occx86@switch_live:RAM.I
	T19(EAX).A =   @occx86@peep_tail:RAM.A
	T20(EAX).A =   *(T19(EAX) + C).A.A
	*(T20(EAX) + 10).A.I =   T18(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_2542:
; Line 1907:	    if (avg == lower) 

	T21(ECX).I =   _lower:LINK(4).I
	T22(EAX).I =   _avg:LINK(8).I
	CONDGO	L_2541:PC ; T22(EAX).I != T21(ECX).I
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_2543:
; Line 1908:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_2544:
; Line 1909:	        gen_branch(op_jmp, switch_deflab); 

	T23(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T23(EAX).I
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 1910:	        peep_tail->oper1->liveRegs = switch_live; 

	T24(ECX).I =   @occx86@switch_live:RAM.I
	T25(EAX).A =   @occx86@peep_tail:RAM.A
	T26(EAX).A =   *(T25(EAX) + C).A.A
	*(T26(EAX) + 10).A.I =   T24(ECX).I
; Line 1911:	    } 

	BLOCK END
	BLOCK 14

L_2545:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_2547:
	DBG BLOCK END
	GOTO	L_2546:PC
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_2548:
	BLOCK END
	BLOCK 18

L_2541:
; Line 1912:	    else 

; Line 1913:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_2549:
; Line 1914:	        int avg1 = (lower + avg) / 2; 

	VAR START	avg1
	T27(ECX).I =   _lower:LINK(4).I
	T28(EAX).I =   _avg:LINK(8).I
	T30(EAX).I = T27(ECX).I + T28(EAX).I
	T31(ECX).I = T30(EAX).I U>> #1F.UI
	T32(EAX).I = T31(ECX).I + T30(EAX).I
	T34(EAX).I = T32(EAX).I S>> #1.UI
	_avg1:LINK(-8).I =   T34(EAX).I
	VAR START	avg2
; Line 1915:	        int avg2 = (higher + avg + 1) / 2; 

	T35(ECX).I =   _higher:LINK(12).I
	T36(EAX).I =   _avg:LINK(8).I
	T37(EAX).I = T36(EAX).I + #1.C
	T39(EAX).I = T35(ECX).I + T37(EAX).I
	T40(ECX).I = T39(EAX).I U>> #1F.UI
	T41(EAX).I = T40(ECX).I + T39(EAX).I
	T43(EAX).I = T41(EAX).I S>> #1.UI
	_avg2:LINK(-12).I =   T43(EAX).I
	VAR START	lab
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2551:
; Line 1916:	        int lab; 
; Line 1917:	        if (avg + 1 < higher) 

; Line 1917:	        if (avg + 1 < higher) 

	T44(ECX).I =   _higher:LINK(12).I
	T45(EAX).I =   _avg:LINK(8).I
	T46(EAX).I = T45(EAX).I + #1.C
	CONDGO	L_2550:PC ; T46(EAX).I S>= T44(ECX).I
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_2552:
; Line 1918:	            lab = switchTreeBranchLabels[avg2] = switchTreeLabels[avg] + 1; 

	T47(ECX).A =   @occx86@switchTreeLabels:RAM.A
	T48(EAX).I =   _avg:LINK(8).I
	T49(EAX).I =   *(T47(ECX) + T48(EAX) * 4).A.I
	T50(EDX).I = T49(EAX).I + #1.C
	T51(ECX).A =   @occx86@switchTreeBranchLabels:RAM.A
	T52(EAX).I =   _avg2:LINK(-12).I
	*(T51(ECX) + T52(EAX) * 4).A.I =   T50(EDX).I
	T53(EAX).I =   *(T51(ECX) + T52(EAX) * 4).A.I
	_lab:LINK(-16).I =   T53(EAX).I
	BLOCK END
	BLOCK 23

L_2554:
	DBG BLOCK END
	GOTO	L_2553:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_2555:
	BLOCK END
	BLOCK 26

L_2550:
; Line 1919:	        else 

; Line 1920:	            lab = switch_deflab; 

	T54(EAX).I =   @occx86@switch_deflab:RAM.I
	_lab:LINK(-16).I =   T54(EAX).I
	BLOCK END
	BLOCK 27

L_2556:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_2553:
	BLOCK END
	BLOCK 29

L_2557:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_2559:
; Line 1921:	        if (switch_apl->length < 0) 

	T55(EAX).A =   @occx86@switch_apl:RAM.A
	T56(EAX).I =   *(T55(EAX) + 8).A.C
	CONDGO	L_2558:PC ; T56(EAX).I S>= #0.C
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_2560:
; Line 1922:	            gen_branch(op_jg, lab); 

	T57(EAX).I =   _lab:LINK(-16).I
	PARM	T57(EAX).I
	PARM	#EA.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 33

L_2562:
	DBG BLOCK END
	GOTO	L_2561:PC
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_2563:
	BLOCK END
	BLOCK 36

L_2558:
; Line 1923:	        else 

; Line 1924:	            gen_branch(op_ja, lab); 

	T58(EAX).I =   _lab:LINK(-16).I
	PARM	T58(EAX).I
	PARM	#E2.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 37

L_2564:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_2561:
	BLOCK END
	BLOCK 39

L_2565:
	DBG BLOCK END
; Line 1925:	        peep_tail->oper1->liveRegs = switch_live; 

	T59(ECX).I =   @occx86@switch_live:RAM.I
	T60(EAX).A =   @occx86@peep_tail:RAM.A
	T61(EAX).A =   *(T60(EAX) + C).A.A
	*(T61(EAX) + 10).A.I =   T59(ECX).I
; Line 1926:	        bingen(lower, avg1, avg); 

	T62(EAX).I =   _avg:LINK(8).I
	PARM	T62(EAX).I
	T63(EAX).I =   _avg1:LINK(-8).I
	PARM	T63(EAX).I
	T64(EAX).I =   _lower:LINK(4).I
	PARM	T64(EAX).I
	TAG
	GOSUB	#@occx86@bingen$qiii:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_2567:
; Line 1927:	        if (avg + 1 < higher) 

	T65(ECX).I =   _higher:LINK(12).I
	T66(EAX).I =   _avg:LINK(8).I
	T67(EAX).I = T66(EAX).I + #1.C
	CONDGO	L_2566:PC ; T67(EAX).I S>= T65(ECX).I
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_2568:
; Line 1928:	            bingen(avg + 1, avg2, higher); 

	T68(EAX).I =   _higher:LINK(12).I
	PARM	T68(EAX).I
	T69(EAX).I =   _avg2:LINK(-12).I
	PARM	T69(EAX).I
	T70(EAX).I =   _avg:LINK(8).I
	T71(EAX).I = T70(EAX).I + #1.C
	PARM	T71(EAX).I
	TAG
	GOSUB	#@occx86@bingen$qiii:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 43

L_2569:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_2566:
	BLOCK END
	BLOCK 45

L_2570:
	DBG BLOCK END
; Line 1929:	    } 

	BLOCK END
	BLOCK 46

L_2571:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_2572:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_2546:
	BLOCK END
	BLOCK 49

L_2573:
	DBG BLOCK END
; Line 1930:	} 

	BLOCK END
	BLOCK 50

L_2574:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_2534:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@getPushMask$qi


global @occx86@getPushMask$qi
@occx86@getPushMask$qi:
; Line 1932:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_2579:
	VAR START	i
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2581:
; Line 1933:	    if (i & (1 << 8)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2583:
	T1(EAX).I =   _i:LINK(4).I
	T2(EAX).I = T1(EAX).I & #100.I
	CONDGO	L_2582:PC ; T2(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_2584:
; Line 1934:	        i |= 3; 

	_i:LINK(4).I = _i:LINK(4).I | #3.C
	BLOCK END
	BLOCK 7

L_2585:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_2582:
	BLOCK END
	BLOCK 9

L_2586:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_2588:
; Line 1935:	    if (i & (1 << 9)) 

	T3(EAX).I =   _i:LINK(4).I
	T4(EAX).I = T3(EAX).I & #200.I
	CONDGO	L_2587:PC ; T4(EAX).I == #0.C
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_2589:
; Line 1936:	        i |= 8; 

	_i:LINK(4).I = _i:LINK(4).I | #8.I
	BLOCK END
	BLOCK 13

L_2590:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_2587:
	BLOCK END
	BLOCK 15

L_2591:
	DBG BLOCK END
; Line 1937:	    return i & 0x0b; 

	T5(EAX).I =   _i:LINK(4).I
	T6(EAX).I = T5(EAX).I & #B.C
	RV.T0(EAX).I =   T6(EAX).I
; Line 1938:	} 

	BLOCK END
	BLOCK 16

L_2592:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_2580:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@llongatomicmath$q8e_opcoden0p15@Optimizer@quad:
; Line 1940:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#50.UI
	BLOCK END
	BLOCK 2

L_2597:
	VAR START	low
	VAR START	high
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2599:
; Line 1941:	    int lab = 0; 

	VAR START	lab
	T82(EAX).I =   #0.C
	_lab:LINK(-4).I =   T82(EAX).I
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
; Line 1943:	    AMODE *apal, *apah, *apll, *aplh, *aprl, *aprh; 

	T83(EAX).A =   #_aprh:LINK(-40).A
	PARM	T83(EAX).A
	T84(EAX).A =   #_aprl:LINK(-36).A
	PARM	T84(EAX).A
	T85(EAX).A =   _q:LINK(12).A
	T86(EAX).A =   *(T85(EAX) + 8+0).A.A
	PARM	T86(EAX).A
	T87(EAX).A =   #_opr:LINK(-16).A
	PARM	T87(EAX).A
	T88(EAX).A =   _q:LINK(12).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1945:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T89(EAX).A =   #_aplh:LINK(-32).A
	PARM	T89(EAX).A
	T90(EAX).A =   #_apll:LINK(-28).A
	PARM	T90(EAX).A
	T91(EAX).A =   _q:LINK(12).A
	T92(EAX).A =   *(T91(EAX) + 4+0).A.A
	PARM	T92(EAX).A
	T93(EAX).A =   #_opl:LINK(-12).A
	PARM	T93(EAX).A
	T94(EAX).A =   _q:LINK(12).A
	PARM	T94(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 1946:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T95(EAX).A =   #_apah:LINK(-24).A
	PARM	T95(EAX).A
	T96(EAX).A =   #_apal:LINK(-20).A
	PARM	T96(EAX).A
	T97(EAX).A =   _q:LINK(12).A
	T98(EAX).A =   *(T97(EAX) + 40).A.A
	PARM	T98(EAX).A
	T99(EAX).A =   #_opa:LINK(-8).A
	PARM	T99(EAX).A
	T100(EAX).A =   _q:LINK(12).A
	PARM	T100(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	VAR START	regflagsa
; Line 1947:	    int regflagsa = makeregflags(apal); 

	T101(EAX).A =   _apal:LINK(-20).A
	PARM	T101(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T102(EAX).I =   RV.T0(EAX).I
	PARMADJ	#4.N
	_regflagsa:LINK(-44).I =   T102(EAX).I
	VAR START	regflagsl
; Line 1948:	    int regflagsl = makeregflags(apll); 

	T103(EAX).A =   _apll:LINK(-28).A
	PARM	T103(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T104(EAX).I =   RV.T1(EAX).I
	PARMADJ	#4.N
	_regflagsl:LINK(-48).I =   T104(EAX).I
	VAR START	regflagsr
; Line 1949:	    int regflagsr = makeregflags(aprl); 

	T105(EAX).A =   _aprl:LINK(-36).A
	PARM	T105(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T106(EAX).I =   RV.T2(EAX).I
	PARMADJ	#4.N
	_regflagsr:LINK(-52).I =   T106(EAX).I
	VAR START	regflags
; Line 1950:	    int regflags = regflagsa | regflagsl | regflagsr; 

	T107(ECX).I =   _regflagsa:LINK(-44).I
	T108(EAX).I =   _regflagsl:LINK(-48).I
	T109(ECX).I = T107(ECX).I | T108(EAX).I
	T110(EAX).I =   _regflagsr:LINK(-52).I
	T111(EAX).I = T109(ECX).I | T110(EAX).I
	_regflags:LINK(-56).I =   T111(EAX).I
	VAR START	pushreg1
; Line 1951:	    bool pushreg1 = false, pushreg2 = false, pushreg3 = false; 

	_pushreg1:LINK(-57).BOOL =   #0.BOOL
	VAR START	pushreg2
	_pushreg2:LINK(-58).BOOL =   #0.BOOL
	VAR START	pushreg3
	_pushreg3:LINK(-59).BOOL =   #0.BOOL
	VAR START	reg1
; Line 1952:	    int reg1 = 0, reg2 = 0, reg3 = 0; 

	T112(EAX).I =   #0.C
	_reg1:LINK(-64).I =   T112(EAX).I
	VAR START	reg2
	T113(EAX).I =   #0.C
	_reg2:LINK(-68).I =   T113(EAX).I
	VAR START	reg3
	T114(EAX).I =   #0.C
	_reg3:LINK(-72).I =   T114(EAX).I
	VAR START	used_mask
; Line 1953:	    int used_mask = (1 << EAX) | (1 << EBX) | (1 << ECX) | (1 << EDX); 

	_used_mask:LINK(-76).I =   #F.I
	VAR START	pushpair
; Line 1954:	    bool pushpair = false; 

	_pushpair:LINK(-77).BOOL =   #0.BOOL
; Line 1955:	    gen_codes(op_push, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T115(EAX).UI =   #1.C
	PARM	T115(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T116(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T116(EAX).A
	T117(EAX).UI =   #7.C
	PARM	T117(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1956:	    gen_codes(op_push, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T118(EAX).UI =   #3.C
	PARM	T118(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T119(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T119(EAX).A
	T120(EAX).UI =   #7.C
	PARM	T120(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1957:	    pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2601:
; Line 1958:	    if (regflagsa & used_mask) 

	T121(ECX).I =   _regflagsa:LINK(-44).I
	T122(EAX).I =   _used_mask:LINK(-76).I
	T123(EAX).I = T121(ECX).I & T122(EAX).I
	CONDGO	L_2600:PC ; T123(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_2602:
; Line 1959:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_2603:
; Line 1960:	        if (apal->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_2605:
	T124(EAX).A =   _apal:LINK(-20).A
	T125(EAX).I =   *(T124(EAX) + 0).A.I
	CONDGO	L_2604:PC ; T125(EAX).I == #2.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_2606:
; Line 1961:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_2607:
; Line 1962:	            apal = atomic_lea(apll, apal, regflags | used_mask, reg1, pushreg1); 

	T126(EAX).A =   #_pushreg1:LINK(-57).A
	PARM	T126(EAX).A
	T127(EAX).A =   #_reg1:LINK(-64).A
	PARM	T127(EAX).A
	T128(ECX).I =   _regflags:LINK(-56).I
	T129(EAX).I =   _used_mask:LINK(-76).I
	T130(EAX).I = T128(ECX).I | T129(EAX).I
	PARM	T130(EAX).I
	T131(EAX).A =   _apal:LINK(-20).A
	PARM	T131(EAX).A
	T132(EAX).A =   _apll:LINK(-28).A
	PARM	T132(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T133(EAX).A =   RV.T5(EAX).A
	PARMADJ	#14.N
	_apal:LINK(-20).A =   T133(EAX).A
; Line 1963:	            apah = nullptr; 

	_apah:LINK(-24).A =   #0.A
; Line 1964:	            used_mask |= 1 << reg1; 

	T134(EDX).I =   _used_mask:LINK(-76).I
	T136(ECX).I =   _reg1:LINK(-64).I
	T398(EAX).I =   T136(ECX).I^
	T400(ECX).I =   T398(EAX).I^
	T137(EAX).I = #1.C << T400(ECX).I
	T138(EAX).I = T134(EDX).I | T137(EAX).I
	_used_mask:LINK(-76).I =   T138(EAX).I
; Line 1965:	        } 

	BLOCK END
	BLOCK 12

L_2608:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_2609:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_2604:
	BLOCK END
	BLOCK 15

L_2610:
	DBG BLOCK END
; Line 1966:	    } 

	BLOCK END
	BLOCK 16

L_2611:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_2612:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_2600:
	BLOCK END
	BLOCK 19

L_2613:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2615:
; Line 1967:	    if (regflagsl & used_mask) 

	T139(ECX).I =   _regflagsl:LINK(-48).I
	T140(EAX).I =   _used_mask:LINK(-76).I
	T141(EAX).I = T139(ECX).I & T140(EAX).I
	CONDGO	L_2614:PC ; T141(EAX).I == #0.C
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_2616:
; Line 1968:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_2617:
; Line 1969:	        if (apll->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_2619:
	T142(EAX).A =   _apll:LINK(-28).A
	T143(EAX).I =   *(T142(EAX) + 0).A.I
	CONDGO	L_2618:PC ; T143(EAX).I == #2.C
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_2620:
; Line 1970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2621:
; Line 1971:	            apll = atomic_lea(apll, apll, regflags | used_mask, reg2, pushreg2); 

	T144(EAX).A =   #_pushreg2:LINK(-58).A
	PARM	T144(EAX).A
	T145(EAX).A =   #_reg2:LINK(-68).A
	PARM	T145(EAX).A
	T146(ECX).I =   _regflags:LINK(-56).I
	T147(EAX).I =   _used_mask:LINK(-76).I
	T148(EAX).I = T146(ECX).I | T147(EAX).I
	PARM	T148(EAX).I
	T149(EAX).A =   _apll:LINK(-28).A
	PARM	T149(EAX).A
	T150(EAX).A =   _apll:LINK(-28).A
	PARM	T150(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T151(EAX).A =   RV.T6(EAX).A
	PARMADJ	#14.N
	_apll:LINK(-28).A =   T151(EAX).A
; Line 1972:	            aplh = nullptr; 

	_aplh:LINK(-32).A =   #0.A
; Line 1973:	            used_mask |= 1 << reg2; 

	T152(EDX).I =   _used_mask:LINK(-76).I
	T154(ECX).I =   _reg2:LINK(-68).I
	T399(EAX).I =   T154(ECX).I^
	T401(ECX).I =   T399(EAX).I^
	T155(EAX).I = #1.C << T401(ECX).I
	T156(EAX).I = T152(EDX).I | T155(EAX).I
	_used_mask:LINK(-76).I =   T156(EAX).I
; Line 1974:	        } 

	BLOCK END
	BLOCK 28

L_2622:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_2623:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_2618:
	BLOCK END
	BLOCK 31

L_2624:
	DBG BLOCK END
; Line 1975:	    } 

	BLOCK END
	BLOCK 32

L_2625:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_2626:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_2614:
	BLOCK END
	BLOCK 35

L_2627:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_2629:
; Line 1976:	    if (regflagsr & used_mask) 

	T157(ECX).I =   _regflagsr:LINK(-52).I
	T158(EAX).I =   _used_mask:LINK(-76).I
	T159(EAX).I = T157(ECX).I & T158(EAX).I
	CONDGO	L_2628:PC ; T159(EAX).I == #0.C
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_2630:
; Line 1977:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_2631:
; Line 1978:	        if (aprl->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_2633:
	T160(EAX).A =   _aprl:LINK(-36).A
	T161(EAX).I =   *(T160(EAX) + 0).A.I
	CONDGO	L_2632:PC ; T161(EAX).I == #2.C
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_2634:
; Line 1979:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_2635:
; Line 1980:	            aprl = atomic_lea(apll, aprl, regflags | used_mask, reg3, pushreg3); 

	T162(EAX).A =   #_pushreg3:LINK(-59).A
	PARM	T162(EAX).A
	T163(EAX).A =   #_reg3:LINK(-72).A
	PARM	T163(EAX).A
	T164(ECX).I =   _regflags:LINK(-56).I
	T165(EAX).I =   _used_mask:LINK(-76).I
	T166(EAX).I = T164(ECX).I | T165(EAX).I
	PARM	T166(EAX).I
	T167(EAX).A =   _aprl:LINK(-36).A
	PARM	T167(EAX).A
	T168(EAX).A =   _apll:LINK(-28).A
	PARM	T168(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T169(EAX).A =   RV.T7(EAX).A
	PARMADJ	#14.N
	_aprl:LINK(-36).A =   T169(EAX).A
; Line 1981:	            aprh = nullptr; 

	_aprh:LINK(-40).A =   #0.A
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_2637:
; Line 1982:	            if (!pushreg3) 

	T170(AL).BOOL =   _pushreg3:LINK(-59).BOOL
	CONDGO	L_2636:PC ; T170(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_2638:
; Line 1983:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_2639:
; Line 1984:	                pushreg3 = true; 

	_pushreg3:LINK(-59).BOOL =   #1.BOOL
; Line 1985:	                gen_codes(op_push, ISZ_UINT, makedreg(EBP), nullptr); 

	PARM	#0.UI
	T171(EAX).UI =   #5.C
	PARM	T171(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T172(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T172(EAX).A
	T173(EAX).UI =   #7.C
	PARM	T173(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1986:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1987:	            } 

	BLOCK END
	BLOCK 48

L_2640:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_2641:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_2636:
	BLOCK END
	BLOCK 51

L_2642:
	DBG BLOCK END
; Line 1988:	        } 

	BLOCK END
	BLOCK 52

L_2643:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_2644:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_2632:
	BLOCK END
	BLOCK 55

L_2645:
	DBG BLOCK END
; Line 1989:	    } 

	BLOCK END
	BLOCK 56

L_2646:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_2647:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_2628:
	BLOCK END
	BLOCK 59

L_2648:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_2650:
; Line 1991:	    if (q->ans->size == ISZ_DOUBLE) 

	T174(EAX).A =   _q:LINK(12).A
	T175(EAX).A =   *(T174(EAX) + 40).A.A
	T176(AL).C =   *(T175(EAX) + 19).A.C
	CONDGO	L_2649:PC ; T176(AL).C != #13.C
	BLOCK END
	BLOCK 61
	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_2651:
; Line 1992:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_2652:
; Line 1993:	        if (!aplh) 

	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_2654:
	T177(EAX).A =   _aplh:LINK(-32).A
	CONDGO	L_2653:PC ; T177(EAX).A != #0.A
	BLOCK END
	BLOCK 65
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_2655:
; Line 1994:	            aplh = offsetToHigh(apll); 

	T178(EAX).A =   _apll:LINK(-28).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T179(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	_aplh:LINK(-32).A =   T179(EAX).A
	BLOCK END
	BLOCK 67

L_2656:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_2653:
	BLOCK END
	BLOCK 69

L_2657:
	DBG BLOCK END
; Line 1995:	        gen_codes(op_push, ISZ_UINT, aplh, nullptr); 

	PARM	#0.UI
	T180(EAX).A =   _aplh:LINK(-32).A
	PARM	T180(EAX).A
	T181(EAX).UI =   #7.C
	PARM	T181(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1996:	        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1997:	        gen_codes(op_push, ISZ_UINT, apll, nullptr); 

	PARM	#0.UI
	T182(EAX).A =   _apll:LINK(-28).A
	PARM	T182(EAX).A
	T183(EAX).UI =   #7.C
	PARM	T183(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 1998:	        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 1999:	    } 

	BLOCK END
	BLOCK 70

L_2658:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_2659:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_2649:
	BLOCK END
	BLOCK 73

L_2660:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_2662:
; Line 2000:	    if (aprl->mode == am_xmmreg) 

	T184(EAX).A =   _aprl:LINK(-36).A
	T185(EAX).I =   *(T184(EAX) + 0).A.I
	CONDGO	L_2661:PC ; T185(EAX).I != #A.I
	BLOCK END
	BLOCK 75
	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_2663:
; Line 2001:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_2664:
; Line 2002:	        gen_code(op_add, makedreg(ESP), aimmed(-8)); 

	T186(EDX:EAX).ULL =   #FFFFFFFFFFFFFFF8.I
	PARM	T186(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T187(EAX).A =   RV.T10(EAX).A
	PARMADJ	#8.N
	PARM	T187(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T188(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	PARM	T188(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2003:	    } 

	BLOCK END
	BLOCK 78

L_2665:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_2667:
	DBG BLOCK END
	GOTO	L_2666:PC
	BLOCK END
	BLOCK 80
	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_2668:
	BLOCK END
	BLOCK 82

L_2661:
; Line 2004:	    else 

; Line 2005:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_2669:
; Line 2006:	        if (!aprh) 

	DBG BLOCK START
	BLOCK END
	BLOCK 84

L_2671:
	T189(EAX).A =   _aprh:LINK(-40).A
	CONDGO	L_2670:PC ; T189(EAX).A != #0.A
	BLOCK END
	BLOCK 85
	DBG BLOCK START
	BLOCK END
	BLOCK 86

L_2672:
; Line 2007:	            aprh = offsetToHigh(aprl); 

	T190(EAX).A =   _aprl:LINK(-36).A
	PARM	T190(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T191(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	_aprh:LINK(-40).A =   T191(EAX).A
	BLOCK END
	BLOCK 87

L_2673:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_2670:
	BLOCK END
	BLOCK 89

L_2674:
	DBG BLOCK END
; Line 2008:	        gen_codes(op_push, ISZ_UINT, aprh, nullptr); 

	PARM	#0.UI
	T192(EAX).A =   _aprh:LINK(-40).A
	PARM	T192(EAX).A
	T193(EAX).UI =   #7.C
	PARM	T193(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2009:	        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2010:	        gen_codes(op_push, ISZ_UINT, aprl, nullptr); 

	PARM	#0.UI
	T194(EAX).A =   _aprl:LINK(-36).A
	PARM	T194(EAX).A
	T195(EAX).UI =   #7.C
	PARM	T195(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2011:	        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2012:	    } 

	BLOCK END
	BLOCK 90

L_2675:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_2676:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_2666:
	BLOCK END
	BLOCK 93

L_2677:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_2679:
; Line 2013:	    if (!aplh) 

	T196(EAX).A =   _aplh:LINK(-32).A
	CONDGO	L_2678:PC ; T196(EAX).A != #0.A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_2680:
; Line 2014:	        aplh = offsetToHigh(apll); 

	T197(EAX).A =   _apll:LINK(-28).A
	PARM	T197(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T198(EAX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	_aplh:LINK(-32).A =   T198(EAX).A
	BLOCK END
	BLOCK 97

L_2681:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_2678:
	BLOCK END
	BLOCK 99

L_2682:
	DBG BLOCK END
; Line 2015:	    gen_codes(op_push, ISZ_UINT, aplh, nullptr); 

	PARM	#0.UI
	T199(EAX).A =   _aplh:LINK(-32).A
	PARM	T199(EAX).A
	T200(EAX).UI =   #7.C
	PARM	T200(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2016:	    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2017:	    gen_codes(op_push, ISZ_UINT, apll, nullptr); 

	PARM	#0.UI
	T201(EAX).A =   _apll:LINK(-28).A
	PARM	T201(EAX).A
	T202(EAX).UI =   #7.C
	PARM	T202(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2018:	    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_2684:
; Line 2019:	    if (q->ans->size == ISZ_DOUBLE) 

	T203(EAX).A =   _q:LINK(12).A
	T204(EAX).A =   *(T203(EAX) + 40).A.A
	T205(AL).C =   *(T204(EAX) + 19).A.C
	CONDGO	L_2683:PC ; T205(AL).C != #13.C
	BLOCK END
	BLOCK 101
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_2685:
; Line 2020:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_2686:
; Line 2021:	        oa_gen_label(lab = beGetLabel); 

	T206(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-4).I =   T206(EAX).I
	T207(EAX).I =   _lab:LINK(-4).I
	PARM	T207(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 2022:	        gen_code_sse(op_movsd, apal, make_stack(-16)); 

	PARM	#FFFFFFFFFFFFFFF0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T208(EAX).A =   RV.T14(EAX).A
	PARMADJ	#4.N
	PARM	T208(EAX).A
	T209(EAX).A =   _apal:LINK(-20).A
	PARM	T209(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2023:	        gen_code(low == op_add ? op_addsd : op_subsd, apal, aprl); 

	T210(EAX).A =   _aprl:LINK(-36).A
	PARM	T210(EAX).A
	T211(EAX).A =   _apal:LINK(-20).A
	PARM	T211(EAX).A
	T212(EAX).I =   _low:LINK(4).I
	CONDGO	L_2809:PC ; T212(EAX).I != #25.I
	BLOCK END
	BLOCK 104
	T213(EAX).I =   #1A1.I
	GOTO	L_2810:PC
	BLOCK END
	BLOCK 105

L_2809:
	T213(EAX).I =   #257.I
	BLOCK END
	BLOCK 106

L_2810:
	PARM	T213(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2024:	        gen_code_sse(op_movsd, make_stack(-16), apal); 

	T214(EAX).A =   _apal:LINK(-20).A
	PARM	T214(EAX).A
	PARM	#FFFFFFFFFFFFFFF0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T215(EAX).A =   RV.T15(EAX).A
	PARMADJ	#4.N
	PARM	T215(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2025:	        gen_code(op_mov, makedreg(EBX), make_stack(-16)); 

	PARM	#FFFFFFFFFFFFFFF0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T216(EAX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	PARM	T216(EAX).A
	T217(EAX).UI =   #3.C
	PARM	T217(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T218(EAX).A =   RV.T17(EAX).A
	PARMADJ	#4.N
	PARM	T218(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2026:	        gen_code(op_mov, makedreg(ECX), make_stack(-20)); 

	PARM	#FFFFFFFFFFFFFFEC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T219(EAX).A =   RV.T18(EAX).A
	PARMADJ	#4.N
	PARM	T219(EAX).A
	T220(EAX).UI =   #1.C
	PARM	T220(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T221(EAX).A =   RV.T19(EAX).A
	PARMADJ	#4.N
	PARM	T221(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2027:	        gen_codes(op_cmpxchg8b, ISZ_NONE, apll, nullptr); 

	PARM	#0.UI
	T222(EAX).A =   _apll:LINK(-28).A
	PARM	T222(EAX).A
	T223(EAX).UI =   #0.C
	PARM	T223(EAX).UI
	PARM	#5E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2028:	        gen_codes(op_mov, ISZ_UINT, make_stack(-16), makedreg(EAX)); 

	T224(EAX).UI =   #0.C
	PARM	T224(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T225(EAX).A =   RV.T20(EAX).A
	PARMADJ	#4.N
	PARM	T225(EAX).A
	PARM	#FFFFFFFFFFFFFFF0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T226(EAX).A =   RV.T21(EAX).A
	PARMADJ	#4.N
	PARM	T226(EAX).A
	T227(EAX).UI =   #7.C
	PARM	T227(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2029:	        gen_codes(op_mov, ISZ_UINT, make_stack(-20), makedreg(EDX)); 

	T228(EAX).UI =   #2.C
	PARM	T228(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T229(EAX).A =   RV.T22(EAX).A
	PARMADJ	#4.N
	PARM	T229(EAX).A
	PARM	#FFFFFFFFFFFFFFEC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T230(EAX).A =   RV.T23(EAX).A
	PARMADJ	#4.N
	PARM	T230(EAX).A
	T231(EAX).UI =   #7.C
	PARM	T231(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2030:	    } 

	BLOCK END
	BLOCK 107

L_2687:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_2689:
	DBG BLOCK END
	GOTO	L_2688:PC
	BLOCK END
	BLOCK 109
	DBG BLOCK START
	BLOCK END
	BLOCK 110

L_2690:
	BLOCK END
	BLOCK 111

L_2683:
; Line 2031:	    else 

; Line 2032:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_2691:
; Line 2033:	        gen_code(op_mov, makedreg(EAX), make_stack(-0)); 

	T232(EAX).UI =   #0.C
	PARM	T232(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T233(EAX).A =   RV.T24(EAX).A
	PARMADJ	#4.N
	PARM	T233(EAX).A
	T234(EAX).UI =   #0.C
	PARM	T234(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T235(EAX).A =   RV.T25(EAX).A
	PARMADJ	#4.N
	PARM	T235(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2034:	        gen_code(op_mov, makedreg(EDX), make_stack(-4)); 

	PARM	#FFFFFFFFFFFFFFFC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T236(EAX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	PARM	T236(EAX).A
	T237(EAX).UI =   #2.C
	PARM	T237(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T238(EAX).A =   RV.T27(EAX).A
	PARMADJ	#4.N
	PARM	T238(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2035:	        oa_gen_label(lab = beGetLabel); 

	T239(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-4).I =   T239(EAX).I
	T240(EAX).I =   _lab:LINK(-4).I
	PARM	T240(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 2036:	        gen_code(op_mov, makedreg(EBX), makedreg(EAX)); 

	T241(EAX).UI =   #0.C
	PARM	T241(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T242(EAX).A =   RV.T28(EAX).A
	PARMADJ	#4.N
	PARM	T242(EAX).A
	T243(EAX).UI =   #3.C
	PARM	T243(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T244(EAX).A =   RV.T29(EAX).A
	PARMADJ	#4.N
	PARM	T244(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2037:	        gen_code(op_mov, makedreg(ECX), makedreg(EDX)); 

	T245(EAX).UI =   #2.C
	PARM	T245(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T246(EAX).A =   RV.T30(EAX).A
	PARMADJ	#4.N
	PARM	T246(EAX).A
	T247(EAX).UI =   #1.C
	PARM	T247(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T248(EAX).A =   RV.T31(EAX).A
	PARMADJ	#4.N
	PARM	T248(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2038:	        gen_code(low, makedreg(EBX), make_stack(-8)); 

	PARM	#FFFFFFFFFFFFFFF8.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T249(EAX).A =   RV.T32(EAX).A
	PARMADJ	#4.N
	PARM	T249(EAX).A
	T250(EAX).UI =   #3.C
	PARM	T250(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T251(EAX).A =   RV.T33(EAX).A
	PARMADJ	#4.N
	PARM	T251(EAX).A
	T252(EAX).I =   _low:LINK(4).I
	PARM	T252(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2039:	        gen_code(high, makedreg(ECX), make_stack(-12)); 

	PARM	#FFFFFFFFFFFFFFF4.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T253(EAX).A =   RV.T34(EAX).A
	PARMADJ	#4.N
	PARM	T253(EAX).A
	T254(EAX).UI =   #1.C
	PARM	T254(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T255(EAX).A =   RV.T35(EAX).A
	PARMADJ	#4.N
	PARM	T255(EAX).A
	T256(EAX).I =   _high:LINK(8).I
	PARM	T256(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2040:	        gen_codes(op_cmpxchg8b, ISZ_NONE, apll, nullptr); 

	PARM	#0.UI
	T257(EAX).A =   _apll:LINK(-28).A
	PARM	T257(EAX).A
	T258(EAX).UI =   #0.C
	PARM	T258(EAX).UI
	PARM	#5E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2041:	    } 

	BLOCK END
	BLOCK 113

L_2692:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_2693:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_2688:
	BLOCK END
	BLOCK 116

L_2694:
	DBG BLOCK END
; Line 2042:	    gen_code(op_jne, make_label(lab), NULL); 

	T259(EAX).A =   #0.C
	PARM	T259(EAX).A
	T260(EAX).I =   _lab:LINK(-4).I
	PARM	T260(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T261(EAX).A =   RV.T36(EAX).A
	PARMADJ	#4.N
	PARM	T261(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_2696:
; Line 2043:	    if (q->atomicpostfetch) 

	T262(EAX).A =   _q:LINK(12).A
	CONDGO	L_2695:PC ; *(T262(EAX) + B8){23:1}.A.I == #0.C
	BLOCK END
	BLOCK 118
	DBG BLOCK START
	BLOCK END
	BLOCK 119

L_2697:
; Line 2044:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_2698:
; Line 2045:	        if (q->ans->size == ISZ_DOUBLE) 

	DBG BLOCK START
	BLOCK END
	BLOCK 121

L_2700:
	T263(EAX).A =   _q:LINK(12).A
	T264(EAX).A =   *(T263(EAX) + 40).A.A
	T265(AL).C =   *(T264(EAX) + 19).A.C
	CONDGO	L_2699:PC ; T265(AL).C != #13.C
	BLOCK END
	BLOCK 122
	DBG BLOCK START
	BLOCK END
	BLOCK 123

L_2701:
; Line 2046:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 124

L_2702:
; Line 2047:	            gen_code_sse(op_movsd, apal, make_stack(-16)); 

	PARM	#FFFFFFFFFFFFFFF0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T266(EAX).A =   RV.T37(EAX).A
	PARMADJ	#4.N
	PARM	T266(EAX).A
	T267(EAX).A =   _apal:LINK(-20).A
	PARM	T267(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2048:	            gen_code(low == op_add ? op_addsd : op_subsd, apal, aprl); 

	T268(EAX).A =   _aprl:LINK(-36).A
	PARM	T268(EAX).A
	T269(EAX).A =   _apal:LINK(-20).A
	PARM	T269(EAX).A
	T270(EAX).I =   _low:LINK(4).I
	CONDGO	L_2811:PC ; T270(EAX).I != #25.I
	BLOCK END
	BLOCK 125
	T271(EAX).I =   #1A1.I
	GOTO	L_2812:PC
	BLOCK END
	BLOCK 126

L_2811:
	T271(EAX).I =   #257.I
	BLOCK END
	BLOCK 127

L_2812:
	PARM	T271(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2049:	        } 

	BLOCK END
	BLOCK 128

L_2703:
	DBG BLOCK END
	BLOCK END
	BLOCK 129

L_2705:
	DBG BLOCK END
	GOTO	L_2704:PC
	BLOCK END
	BLOCK 130
	DBG BLOCK START
	BLOCK END
	BLOCK 131

L_2706:
	BLOCK END
	BLOCK 132

L_2699:
; Line 2050:	        else 

; Line 2051:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_2707:
; Line 2052:	            gen_codes(low, ISZ_UINT, makedreg(EAX), make_stack(-8)); 

	PARM	#FFFFFFFFFFFFFFF8.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T272(EAX).A =   RV.T38(EAX).A
	PARMADJ	#4.N
	PARM	T272(EAX).A
	T273(EAX).UI =   #0.C
	PARM	T273(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T274(EAX).A =   RV.T39(EAX).A
	PARMADJ	#4.N
	PARM	T274(EAX).A
	T275(EAX).UI =   #7.C
	PARM	T275(EAX).UI
	T276(EAX).I =   _low:LINK(4).I
	PARM	T276(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2053:	            gen_codes(high, ISZ_UINT, makedreg(EDX), make_stack(-12)); 

	PARM	#FFFFFFFFFFFFFFF4.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T277(EAX).A =   RV.T40(EAX).A
	PARMADJ	#4.N
	PARM	T277(EAX).A
	T278(EAX).UI =   #2.C
	PARM	T278(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T279(EAX).A =   RV.T41(EAX).A
	PARMADJ	#4.N
	PARM	T279(EAX).A
	T280(EAX).UI =   #7.C
	PARM	T280(EAX).UI
	T281(EAX).I =   _high:LINK(8).I
	PARM	T281(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2054:	            gen_codes(op_mov, ISZ_UINT, apal, makedreg(EAX)); 

	T282(EAX).UI =   #0.C
	PARM	T282(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T283(EAX).A =   RV.T42(EAX).A
	PARMADJ	#4.N
	PARM	T283(EAX).A
	T284(EAX).A =   _apal:LINK(-20).A
	PARM	T284(EAX).A
	T285(EAX).UI =   #7.C
	PARM	T285(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2055:	            gen_codes(op_mov, ISZ_UINT, apah, makedreg(EDX)); 

	T286(EAX).UI =   #2.C
	PARM	T286(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T287(EAX).A =   RV.T43(EAX).A
	PARMADJ	#4.N
	PARM	T287(EAX).A
	T288(EAX).A =   _apah:LINK(-24).A
	PARM	T288(EAX).A
	T289(EAX).UI =   #7.C
	PARM	T289(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2056:	        } 

	BLOCK END
	BLOCK 134

L_2708:
	DBG BLOCK END
	BLOCK END
	BLOCK 135

L_2709:
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_2704:
	BLOCK END
	BLOCK 137

L_2710:
	DBG BLOCK END
; Line 2057:	        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T290(EDX:EAX).ULL =   #8.I
	PARM	T290(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T291(EAX).A =   RV.T44(EAX).A
	PARMADJ	#8.N
	PARM	T291(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T292(EAX).A =   RV.T45(EAX).A
	PARMADJ	#4.N
	PARM	T292(EAX).A
	T293(EAX).UI =   #7.C
	PARM	T293(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2058:	        pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 2059:	    } 

	BLOCK END
	BLOCK 138

L_2711:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_2713:
	DBG BLOCK END
	GOTO	L_2712:PC
	BLOCK END
	BLOCK 140
	DBG BLOCK START
	BLOCK END
	BLOCK 141

L_2714:
	BLOCK END
	BLOCK 142

L_2695:
; Line 2060:	    else if (q->ans->size == ISZ_DOUBLE) 

	DBG BLOCK START
	BLOCK END
	BLOCK 143

L_2716:
	T294(EAX).A =   _q:LINK(12).A
	T295(EAX).A =   *(T294(EAX) + 40).A.A
	T296(AL).C =   *(T295(EAX) + 19).A.C
	CONDGO	L_2715:PC ; T296(AL).C != #13.C
	BLOCK END
	BLOCK 144
	DBG BLOCK START
	BLOCK END
	BLOCK 145

L_2717:
; Line 2061:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 146

L_2718:
; Line 2062:	        gen_code_sse(op_movsd, apal, make_stack(0)); 

	T297(EAX).UI =   #0.C
	PARM	T297(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T298(EAX).A =   RV.T46(EAX).A
	PARMADJ	#4.N
	PARM	T298(EAX).A
	T299(EAX).A =   _apal:LINK(-20).A
	PARM	T299(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2063:	        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T300(EDX:EAX).ULL =   #8.I
	PARM	T300(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T301(EAX).A =   RV.T47(EAX).A
	PARMADJ	#8.N
	PARM	T301(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T302(EAX).A =   RV.T48(EAX).A
	PARMADJ	#4.N
	PARM	T302(EAX).A
	T303(EAX).UI =   #7.C
	PARM	T303(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2064:	        pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 2065:	    } 

	BLOCK END
	BLOCK 147

L_2719:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_2721:
	DBG BLOCK END
	GOTO	L_2720:PC
	BLOCK END
	BLOCK 149
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_2722:
	BLOCK END
	BLOCK 151

L_2715:
; Line 2066:	    else 

; Line 2067:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_2723:
; Line 2068:	        gen_codes(op_pop, ISZ_UINT, apal, nullptr); 

	PARM	#0.UI
	T304(EAX).A =   _apal:LINK(-20).A
	PARM	T304(EAX).A
	T305(EAX).UI =   #7.C
	PARM	T305(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2069:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2070:	        gen_codes(op_pop, ISZ_UINT, apah, nullptr); 

	PARM	#0.UI
	T306(EAX).A =   _apah:LINK(-24).A
	PARM	T306(EAX).A
	T307(EAX).UI =   #7.C
	PARM	T307(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2071:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2072:	    } 

	BLOCK END
	BLOCK 153

L_2724:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_2725:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_2720:
	BLOCK END
	BLOCK 156

L_2726:
	DBG BLOCK END
	BLOCK END
	BLOCK 157

L_2727:
	DBG BLOCK END
	BLOCK END
	BLOCK 158

L_2712:
	BLOCK END
	BLOCK 159

L_2728:
	DBG BLOCK END
; Line 2074:	    gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T308(EDX:EAX).ULL =   #8.I
	PARM	T308(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T309(EAX).A =   RV.T49(EAX).A
	PARMADJ	#8.N
	PARM	T309(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T310(EAX).A =   RV.T50(EAX).A
	PARMADJ	#4.N
	PARM	T310(EAX).A
	T311(EAX).UI =   #7.C
	PARM	T311(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2075:	    pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_2730:
; Line 2076:	    if (q->ans->size == ISZ_DOUBLE) 

	T312(EAX).A =   _q:LINK(12).A
	T313(EAX).A =   *(T312(EAX) + 40).A.A
	T314(AL).C =   *(T313(EAX) + 19).A.C
	CONDGO	L_2729:PC ; T314(AL).C != #13.C
	BLOCK END
	BLOCK 161
	DBG BLOCK START
	BLOCK END
	BLOCK 162

L_2731:
; Line 2077:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 163

L_2732:
; Line 2078:	        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T315(EDX:EAX).ULL =   #8.I
	PARM	T315(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T316(EAX).A =   RV.T51(EAX).A
	PARMADJ	#8.N
	PARM	T316(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T317(EAX).A =   RV.T52(EAX).A
	PARMADJ	#4.N
	PARM	T317(EAX).A
	T318(EAX).UI =   #7.C
	PARM	T318(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2079:	        pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 2080:	    } 

	BLOCK END
	BLOCK 164

L_2733:
	DBG BLOCK END
	BLOCK END
	BLOCK 165

L_2734:
	DBG BLOCK END
	BLOCK END
	BLOCK 166

L_2729:
	BLOCK END
	BLOCK 167

L_2735:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 168

L_2737:
; Line 2081:	    if (pushreg3) 

	T319(AL).BOOL =   _pushreg3:LINK(-59).BOOL
	CONDGO	L_2736:PC ; T319(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 169
	DBG BLOCK START
	BLOCK END
	BLOCK 170

L_2738:
; Line 2082:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 171

L_2739:
; Line 2083:	        if (equal_address(apal, makedreg(reg3)) || equal_address(apah, makedreg(reg3))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_2741:
	T320(EAX).I =   _reg3:LINK(-72).I
	PARM	T320(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T321(EAX).A =   RV.T53(EAX).A
	PARMADJ	#4.N
	PARM	T321(EAX).A
	T322(EAX).A =   _apal:LINK(-20).A
	PARM	T322(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T323(EAX).I =   RV.T54(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2813:PC ; T323(EAX).I != #0.C
	BLOCK END
	BLOCK 173
	T324(EAX).I =   _reg3:LINK(-72).I
	PARM	T324(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T325(EAX).A =   RV.T55(EAX).A
	PARMADJ	#4.N
	PARM	T325(EAX).A
	T326(EAX).A =   _apah:LINK(-24).A
	PARM	T326(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T327(EAX).I =   RV.T56(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2740:PC ; T327(EAX).I == #0.C
	BLOCK END
	BLOCK 174

L_2813:
	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_2742:
; Line 2084:	            gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(4)); 

	T331(EDX:EAX).ULL =   #4.I
	PARM	T331(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T332(EAX).A =   RV.T57(EAX).A
	PARMADJ	#8.N
	PARM	T332(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T333(EAX).A =   RV.T58(EAX).A
	PARMADJ	#4.N
	PARM	T333(EAX).A
	T334(EAX).UI =   #7.C
	PARM	T334(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 176

L_2744:
	DBG BLOCK END
	GOTO	L_2743:PC
	BLOCK END
	BLOCK 177
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_2745:
	BLOCK END
	BLOCK 179

L_2740:
; Line 2085:	        else 

; Line 2086:	            gen_codes(op_pop, ISZ_UINT, makedreg(reg3), nullptr); 

	PARM	#0.UI
	T328(EAX).I =   _reg3:LINK(-72).I
	PARM	T328(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T329(EAX).A =   RV.T59(EAX).A
	PARMADJ	#4.N
	PARM	T329(EAX).A
	T330(EAX).UI =   #7.C
	PARM	T330(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 180

L_2746:
	DBG BLOCK END
	BLOCK END
	BLOCK 181

L_2743:
	BLOCK END
	BLOCK 182

L_2747:
	DBG BLOCK END
; Line 2087:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2088:	    } 

	BLOCK END
	BLOCK 183

L_2748:
	DBG BLOCK END
	BLOCK END
	BLOCK 184

L_2749:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_2736:
	BLOCK END
	BLOCK 186

L_2750:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 187

L_2752:
; Line 2089:	    if (pushreg2) 

	T335(AL).BOOL =   _pushreg2:LINK(-58).BOOL
	CONDGO	L_2751:PC ; T335(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 188
	DBG BLOCK START
	BLOCK END
	BLOCK 189

L_2753:
; Line 2090:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 190

L_2754:
; Line 2091:	        if (equal_address(apal, makedreg(reg2)) || apah && equal_address(apah, makedreg(reg2))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 191

L_2756:
	T336(EAX).I =   _reg2:LINK(-68).I
	PARM	T336(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T337(EAX).A =   RV.T60(EAX).A
	PARMADJ	#4.N
	PARM	T337(EAX).A
	T338(EAX).A =   _apal:LINK(-20).A
	PARM	T338(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T339(EAX).I =   RV.T61(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2814:PC ; T339(EAX).I != #0.C
	BLOCK END
	BLOCK 192
	T340(EAX).A =   _apah:LINK(-24).A
	CONDGO	L_2755:PC ; T340(EAX).A == #0.A
	BLOCK END
	BLOCK 193
	T341(EAX).I =   _reg2:LINK(-68).I
	PARM	T341(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T342(EAX).A =   RV.T62(EAX).A
	PARMADJ	#4.N
	PARM	T342(EAX).A
	T343(EAX).A =   _apah:LINK(-24).A
	PARM	T343(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T344(EAX).I =   RV.T63(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2755:PC ; T344(EAX).I == #0.C
	BLOCK END
	BLOCK 194

L_2814:
	DBG BLOCK START
	BLOCK END
	BLOCK 195

L_2757:
; Line 2092:	            gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(4)); 

	T348(EDX:EAX).ULL =   #4.I
	PARM	T348(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T349(EAX).A =   RV.T64(EAX).A
	PARMADJ	#8.N
	PARM	T349(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T350(EAX).A =   RV.T65(EAX).A
	PARMADJ	#4.N
	PARM	T350(EAX).A
	T351(EAX).UI =   #7.C
	PARM	T351(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 196

L_2759:
	DBG BLOCK END
	GOTO	L_2758:PC
	BLOCK END
	BLOCK 197
	DBG BLOCK START
	BLOCK END
	BLOCK 198

L_2760:
	BLOCK END
	BLOCK 199

L_2755:
; Line 2093:	        else 

; Line 2094:	            gen_codes(op_pop, ISZ_UINT, makedreg(reg2), nullptr); 

	PARM	#0.UI
	T345(EAX).I =   _reg2:LINK(-68).I
	PARM	T345(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T346(EAX).A =   RV.T66(EAX).A
	PARMADJ	#4.N
	PARM	T346(EAX).A
	T347(EAX).UI =   #7.C
	PARM	T347(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 200

L_2761:
	DBG BLOCK END
	BLOCK END
	BLOCK 201

L_2758:
	BLOCK END
	BLOCK 202

L_2762:
	DBG BLOCK END
; Line 2095:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2096:	    } 

	BLOCK END
	BLOCK 203

L_2763:
	DBG BLOCK END
	BLOCK END
	BLOCK 204

L_2764:
	DBG BLOCK END
	BLOCK END
	BLOCK 205

L_2751:
	BLOCK END
	BLOCK 206

L_2765:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 207

L_2767:
; Line 2097:	    if (pushreg1) 

	T352(AL).BOOL =   _pushreg1:LINK(-57).BOOL
	CONDGO	L_2766:PC ; T352(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 208
	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_2768:
; Line 2098:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_2769:
; Line 2099:	        if (equal_address(apal, makedreg(reg1)) || apah && equal_address(apah, makedreg(reg1))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 211

L_2771:
	T353(EAX).I =   _reg1:LINK(-64).I
	PARM	T353(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T354(EAX).A =   RV.T67(EAX).A
	PARMADJ	#4.N
	PARM	T354(EAX).A
	T355(EAX).A =   _apal:LINK(-20).A
	PARM	T355(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T356(EAX).I =   RV.T68(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2815:PC ; T356(EAX).I != #0.C
	BLOCK END
	BLOCK 212
	T357(EAX).A =   _apah:LINK(-24).A
	CONDGO	L_2770:PC ; T357(EAX).A == #0.A
	BLOCK END
	BLOCK 213
	T358(EAX).I =   _reg1:LINK(-64).I
	PARM	T358(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T359(EAX).A =   RV.T69(EAX).A
	PARMADJ	#4.N
	PARM	T359(EAX).A
	T360(EAX).A =   _apah:LINK(-24).A
	PARM	T360(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T361(EAX).I =   RV.T70(EAX).I
	PARMADJ	#8.N
	CONDGO	L_2770:PC ; T361(EAX).I == #0.C
	BLOCK END
	BLOCK 214

L_2815:
	DBG BLOCK START
	BLOCK END
	BLOCK 215

L_2772:
; Line 2100:	            gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(4)); 

	T365(EDX:EAX).ULL =   #4.I
	PARM	T365(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T366(EAX).A =   RV.T71(EAX).A
	PARMADJ	#8.N
	PARM	T366(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T367(EAX).A =   RV.T72(EAX).A
	PARMADJ	#4.N
	PARM	T367(EAX).A
	T368(EAX).UI =   #7.C
	PARM	T368(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 216

L_2774:
	DBG BLOCK END
	GOTO	L_2773:PC
	BLOCK END
	BLOCK 217
	DBG BLOCK START
	BLOCK END
	BLOCK 218

L_2775:
	BLOCK END
	BLOCK 219

L_2770:
; Line 2101:	        else 

; Line 2102:	            gen_codes(op_pop, ISZ_UINT, makedreg(reg1), nullptr); 

	PARM	#0.UI
	T362(EAX).I =   _reg1:LINK(-64).I
	PARM	T362(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T363(EAX).A =   RV.T73(EAX).A
	PARMADJ	#4.N
	PARM	T363(EAX).A
	T364(EAX).UI =   #7.C
	PARM	T364(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 220

L_2776:
	DBG BLOCK END
	BLOCK END
	BLOCK 221

L_2773:
	BLOCK END
	BLOCK 222

L_2777:
	DBG BLOCK END
; Line 2103:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2104:	    } 

	BLOCK END
	BLOCK 223

L_2778:
	DBG BLOCK END
	BLOCK END
	BLOCK 224

L_2780:
	DBG BLOCK END
	GOTO	L_2779:PC
	BLOCK END
	BLOCK 225
	DBG BLOCK START
	BLOCK END
	BLOCK 226

L_2781:
	BLOCK END
	BLOCK 227

L_2766:
; Line 2105:	    else if (pushpair) 

	DBG BLOCK START
	BLOCK END
	BLOCK 228

L_2783:
	T369(AL).BOOL =   _pushpair:LINK(-77).BOOL
	CONDGO	L_2782:PC ; T369(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 229
	DBG BLOCK START
	BLOCK END
	BLOCK 230

L_2784:
; Line 2106:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 231

L_2785:
; Line 2107:	        gen_codes(op_pop, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T370(EAX).UI =   #0.C
	PARM	T370(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T371(EAX).A =   RV.T74(EAX).A
	PARMADJ	#4.N
	PARM	T371(EAX).A
	T372(EAX).UI =   #7.C
	PARM	T372(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2108:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2109:	        gen_codes(op_pop, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T373(EAX).UI =   #0.C
	PARM	T373(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T374(EAX).A =   RV.T75(EAX).A
	PARMADJ	#4.N
	PARM	T374(EAX).A
	T375(EAX).UI =   #7.C
	PARM	T375(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2110:	        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2111:	    } 

	BLOCK END
	BLOCK 232

L_2786:
	DBG BLOCK END
	BLOCK END
	BLOCK 233

L_2787:
	DBG BLOCK END
	BLOCK END
	BLOCK 234

L_2782:
	BLOCK END
	BLOCK 235

L_2788:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_2789:
	DBG BLOCK END
	BLOCK END
	BLOCK 237

L_2779:
	BLOCK END
	BLOCK 238

L_2790:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 239

L_2792:
; Line 2112:	    if (apal->preg != EBX && (!apah || apah->preg != EBX)) 

	T376(EAX).A =   _apal:LINK(-20).A
	T377(AL).C =   *(T376(EAX) + 4).A.C
	CONDGO	L_2791:PC ; T377(AL).C == #3.C
	BLOCK END
	BLOCK 240
	T378(EAX).A =   _apah:LINK(-24).A
	CONDGO	L_2816:PC ; T378(EAX).A == #0.A
	BLOCK END
	BLOCK 241
	T379(EAX).A =   _apah:LINK(-24).A
	T380(AL).C =   *(T379(EAX) + 4).A.C
	CONDGO	L_2791:PC ; T380(AL).C == #3.C
	BLOCK END
	BLOCK 242

L_2816:
	DBG BLOCK START
	BLOCK END
	BLOCK 243

L_2793:
; Line 2113:	        gen_codes(op_pop, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T381(EAX).UI =   #3.C
	PARM	T381(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T382(EAX).A =   RV.T76(EAX).A
	PARMADJ	#4.N
	PARM	T382(EAX).A
	T383(EAX).UI =   #7.C
	PARM	T383(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 244

L_2795:
	DBG BLOCK END
	GOTO	L_2794:PC
	BLOCK END
	BLOCK 245
	DBG BLOCK START
	BLOCK END
	BLOCK 246

L_2796:
	BLOCK END
	BLOCK 247

L_2791:
; Line 2114:	    else 

; Line 2115:	        gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T384(EDX:EAX).ULL =   #4.I
	PARM	T384(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T385(EAX).A =   RV.T77(EAX).A
	PARMADJ	#8.N
	PARM	T385(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T386(EAX).A =   RV.T78(EAX).A
	PARMADJ	#4.N
	PARM	T386(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 248

L_2797:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_2794:
	BLOCK END
	BLOCK 250

L_2798:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 251

L_2800:
; Line 2116:	    if (apal->preg != ECX && (!apah || apah->preg != ECX)) 

	T387(EAX).A =   _apal:LINK(-20).A
	T388(AL).C =   *(T387(EAX) + 4).A.C
	CONDGO	L_2799:PC ; T388(AL).C == #1.C
	BLOCK END
	BLOCK 252
	T389(EAX).A =   _apah:LINK(-24).A
	CONDGO	L_2817:PC ; T389(EAX).A == #0.A
	BLOCK END
	BLOCK 253
	T390(EAX).A =   _apah:LINK(-24).A
	T391(AL).C =   *(T390(EAX) + 4).A.C
	CONDGO	L_2799:PC ; T391(AL).C == #1.C
	BLOCK END
	BLOCK 254

L_2817:
	DBG BLOCK START
	BLOCK END
	BLOCK 255

L_2801:
; Line 2117:	        gen_codes(op_pop, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T392(EAX).UI =   #1.C
	PARM	T392(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T393(EAX).A =   RV.T79(EAX).A
	PARMADJ	#4.N
	PARM	T393(EAX).A
	T394(EAX).UI =   #7.C
	PARM	T394(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 256

L_2803:
	DBG BLOCK END
	GOTO	L_2802:PC
	BLOCK END
	BLOCK 257
	DBG BLOCK START
	BLOCK END
	BLOCK 258

L_2804:
	BLOCK END
	BLOCK 259

L_2799:
; Line 2118:	    else 

; Line 2119:	        gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T395(EDX:EAX).ULL =   #4.I
	PARM	T395(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T396(EAX).A =   RV.T80(EAX).A
	PARMADJ	#8.N
	PARM	T396(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T397(EAX).A =   RV.T81(EAX).A
	PARMADJ	#4.N
	PARM	T397(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 260

L_2805:
	DBG BLOCK END
	BLOCK END
	BLOCK 261

L_2802:
	BLOCK END
	BLOCK 262

L_2806:
	DBG BLOCK END
; Line 2120:	    pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 2121:	} 

	BLOCK END
	BLOCK 263

L_2807:
	DBG BLOCK END
	BLOCK END
	BLOCK 264

L_2598:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

@occx86@addsubatomic$q8e_opcodep15@Optimizer@quad:
; Line 2122:	static void logicatomic(e_opcode op, Optimizer::QUAD* q); 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#34.UI
	BLOCK END
	BLOCK 2

L_2821:
	VAR START	op
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2823:
; Line 2125:	{ 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2825:
; Line 2126:	    if (((q->ans->size <= ISZ_U32 && q->ans->size != -ISZ_ULONGLONG) || q->ans->size == ISZ_ADDR) || 
; Line 2129:	    { 

	T9(EAX).A =   _q:LINK(8).A
	T10(EAX).A =   *(T9(EAX) + 40).A.A
	T11(EAX).I =   *(T10(EAX) + 19).A.C
	CONDGO	L_2922:PC ; T11(EAX).I S> #A.I
	BLOCK END
	BLOCK 5
	T12(EAX).A =   _q:LINK(8).A
	T13(EAX).A =   *(T12(EAX) + 40).A.A
	T14(EAX).I =   *(T13(EAX) + 19).A.C
	CONDGO	L_2921:PC ; T14(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_2922:
	T15(EAX).A =   _q:LINK(8).A
	T16(EAX).A =   *(T15(EAX) + 40).A.A
	T17(AL).C =   *(T16(EAX) + 19).A.C
	CONDGO	L_2921:PC ; T17(AL).C == #C.C
	BLOCK END
	BLOCK 7
	T18(EAX).A =   _q:LINK(8).A
	T19(EAX).A =   *(T18(EAX) + 4+0).A.A
	T20(EAX).I =   *(T19(EAX) + 19).A.C
	CONDGO	L_2923:PC ; T20(EAX).I S> #A.I
	BLOCK END
	BLOCK 8
	T21(EAX).A =   _q:LINK(8).A
	T22(EAX).A =   *(T21(EAX) + 4+0).A.A
	T23(EAX).I =   *(T22(EAX) + 19).A.C
	CONDGO	L_2921:PC ; T23(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 9

L_2923:
	T24(EAX).A =   _q:LINK(8).A
	T25(EAX).A =   *(T24(EAX) + 4+0).A.A
	T26(AL).C =   *(T25(EAX) + 19).A.C
	CONDGO	L_2921:PC ; T26(AL).C == #C.C
	BLOCK END
	BLOCK 10
	T27(EAX).A =   _q:LINK(8).A
	T28(EAX).A =   *(T27(EAX) + 8+0).A.A
	T29(EAX).I =   *(T28(EAX) + 19).A.C
	CONDGO	L_2925:PC ; T29(EAX).I S> #A.I
	BLOCK END
	BLOCK 11
	T30(EAX).A =   _q:LINK(8).A
	T31(EAX).A =   *(T30(EAX) + 8+0).A.A
	T32(EAX).I =   *(T31(EAX) + 19).A.C
	CONDGO	L_2924:PC ; T32(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 12

L_2925:
	T33(EAX).A =   _q:LINK(8).A
	T34(EAX).A =   *(T33(EAX) + 8+0).A.A
	T35(AL).C =   *(T34(EAX) + 19).A.C
	CONDGO	L_2824:PC ; T35(AL).C != #C.C
	BLOCK END
	BLOCK 13

L_2924:
	BLOCK END
	BLOCK 14

L_2921:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_2826:
; Line 2128:	        ((q->dc.right->size <= ISZ_U32 && q->dc.right->size != -ISZ_ULONGLONG) || q->dc.right->size == ISZ_ADDR)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_2827:
; Line 2130:	        bool pushbp = false; 

	VAR START	pushbp
	_pushbp:LINK(-1).BOOL =   #0.BOOL
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
; Line 2132:	        AMODE *apal, *apah, *apll, *aplh, *aprl, *aprh; 

	T44(EAX).A =   #_aplh:LINK(-32).A
	PARM	T44(EAX).A
	T45(EAX).A =   #_apll:LINK(-28).A
	PARM	T45(EAX).A
	T46(EAX).A =   _q:LINK(8).A
	T47(EAX).A =   *(T46(EAX) + 4+0).A.A
	PARM	T47(EAX).A
	T48(EAX).A =   #_opl:LINK(-12).A
	PARM	T48(EAX).A
	T49(EAX).A =   _q:LINK(8).A
	PARM	T49(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2134:	        getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T50(EAX).A =   #_aprh:LINK(-40).A
	PARM	T50(EAX).A
	T51(EAX).A =   #_aprl:LINK(-36).A
	PARM	T51(EAX).A
	T52(EAX).A =   _q:LINK(8).A
	T53(EAX).A =   *(T52(EAX) + 8+0).A.A
	PARM	T53(EAX).A
	T54(EAX).A =   #_opr:LINK(-16).A
	PARM	T54(EAX).A
	T55(EAX).A =   _q:LINK(8).A
	PARM	T55(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2135:	        getAmodes(q, &opa, q->ans, &apal, &apah); 

	T56(EAX).A =   #_apah:LINK(-24).A
	PARM	T56(EAX).A
	T57(EAX).A =   #_apal:LINK(-20).A
	PARM	T57(EAX).A
	T58(EAX).A =   _q:LINK(8).A
	T59(EAX).A =   *(T58(EAX) + 40).A.A
	PARM	T59(EAX).A
	T60(EAX).A =   #_opa:LINK(-8).A
	PARM	T60(EAX).A
	T61(EAX).A =   _q:LINK(8).A
	PARM	T61(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_2829:
; Line 2136:	        if (apal->liveRegs & (1 << apal->preg)) 

	T62(EDX).A =   _apal:LINK(-20).A
	T63(EAX).A =   _apal:LINK(-20).A
	T65(CL).C =   *(T63(EAX) + 4).A.C
	T152(AL).C =   T65(CL).C^
	T153(CL).C =   T152(AL).C^
	T66(EAX).I = #1.C << T153(CL).C
	T67(EAX).I = *(T62(EDX) + 10).A.I & T66(EAX).I
	CONDGO	L_2828:PC ; T67(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_2830:
; Line 2137:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2831:
; Line 2138:	            int regflags = makeregflags(apll); 

	VAR START	regflags
	T68(EAX).A =   _apll:LINK(-28).A
	PARM	T68(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T69(EAX).I =   RV.T0(EAX).I
	PARMADJ	#4.N
	_regflags:LINK(-44).I =   T69(EAX).I
; Line 2139:	            regflags |= makeregflags(apal); 

	T70(EBX).I =   _regflags:LINK(-44).I
	T71(EAX).A =   _apal:LINK(-20).A
	PARM	T71(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T72(EAX).I =   RV.T1(EAX).I
	PARMADJ	#4.N
	T73(EAX).I = T70(EBX).I | T72(EAX).I
	_regflags:LINK(-44).I =   T73(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_2833:
; Line 2140:	            if (q->ans->size < 0) 

	T74(EAX).A =   _q:LINK(8).A
	T75(EAX).A =   *(T74(EAX) + 40).A.A
	T76(EAX).I =   *(T75(EAX) + 19).A.C
	CONDGO	L_2832:PC ; T76(EAX).I S>= #0.C
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_2834:
; Line 2141:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_2835:
; Line 2142:	                if (-q->ans->size < ISZ_USHORT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_2837:
	T77(EAX).A =   _q:LINK(8).A
	T78(EAX).A =   *(T77(EAX) + 40).A.A
	T79(EAX).I =   *(T78(EAX) + 19).A.C
	T80(EAX).I =  - T79(EAX).I
	CONDGO	L_2836:PC ; T80(EAX).I S>= #4.I
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2838:
; Line 2143:	                    regflags |= (1 << ESI) | (1 << EDI); 

	_regflags:LINK(-44).I = _regflags:LINK(-44).I | #C0.I
	BLOCK END
	BLOCK 28

L_2839:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_2836:
	BLOCK END
	BLOCK 30

L_2840:
	DBG BLOCK END
; Line 2144:	            } 

	BLOCK END
	BLOCK 31

L_2841:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_2843:
	DBG BLOCK END
	GOTO	L_2842:PC
	BLOCK END
	BLOCK 33
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_2844:
	BLOCK END
	BLOCK 35

L_2832:
; Line 2145:	            else 

; Line 2146:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_2845:
; Line 2147:	                if (q->ans->size < ISZ_USHORT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_2847:
	T81(EAX).A =   _q:LINK(8).A
	T82(EAX).A =   *(T81(EAX) + 40).A.A
	T83(EAX).I =   *(T82(EAX) + 19).A.C
	CONDGO	L_2846:PC ; T83(EAX).I S>= #4.I
	BLOCK END
	BLOCK 38
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_2848:
; Line 2148:	                    regflags |= (1 << ESI) | (1 << EDI); 

	_regflags:LINK(-44).I = _regflags:LINK(-44).I | #C0.I
	BLOCK END
	BLOCK 40

L_2849:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_2846:
	BLOCK END
	BLOCK 42

L_2850:
	DBG BLOCK END
; Line 2149:	            } 

	BLOCK END
	BLOCK 43

L_2851:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_2852:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_2842:
	BLOCK END
	BLOCK 46

L_2853:
	DBG BLOCK END
	VAR START	pushed
; Line 2150:	            bool pushed = false; 

	_pushed:LINK(-45).BOOL =   #0.BOOL
	VAR START	reg
; Line 2151:	            int reg = getreg(apll, regflags, pushed); 

	T84(EAX).A =   #_pushed:LINK(-45).A
	PARM	T84(EAX).A
	T85(EAX).I =   _regflags:LINK(-44).I
	PARM	T85(EAX).I
	T86(EAX).A =   _apll:LINK(-28).A
	PARM	T86(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T87(EAX).I =   RV.T2(EAX).I
	PARMADJ	#C.N
	_reg:LINK(-52).I =   T87(EAX).I
; Line 2152:	            gen_codes(op_mov, q->ans->size, makedreg(reg), aprl); 

	T88(EAX).A =   _aprl:LINK(-36).A
	PARM	T88(EAX).A
	T89(EAX).I =   _reg:LINK(-52).I
	PARM	T89(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T90(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T90(EAX).A
	T91(EAX).A =   _q:LINK(8).A
	T92(EAX).A =   *(T91(EAX) + 40).A.A
	T93(EAX).I =   *(T92(EAX) + 19).A.C
	PARM	T93(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_2855:
; Line 2153:	            if (op == op_sub) 

	T94(EAX).I =   _op:LINK(4).I
	CONDGO	L_2854:PC ; T94(EAX).I != #189.I
	BLOCK END
	BLOCK 48
	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_2856:
; Line 2154:	                gen_codes(op_neg, q->ans->size, makedreg(reg), NULL); 

	T95(EAX).A =   #0.C
	PARM	T95(EAX).A
	T96(EAX).I =   _reg:LINK(-52).I
	PARM	T96(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T97(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T97(EAX).A
	T98(EAX).A =   _q:LINK(8).A
	T99(EAX).A =   *(T98(EAX) + 40).A.A
	T100(EAX).I =   *(T99(EAX) + 19).A.C
	PARM	T100(EAX).I
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 50

L_2857:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_2854:
	BLOCK END
	BLOCK 52

L_2858:
	DBG BLOCK END
; Line 2155:	            gen_code(op_lock, NULL, NULL); 

	T101(EAX).A =   #0.C
	PARM	T101(EAX).A
	T102(EAX).A =   #0.C
	PARM	T102(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2156:	            gen_codes(op_xadd, q->ans->size, apll, makedreg(reg)); 

	T103(EAX).I =   _reg:LINK(-52).I
	PARM	T103(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T104(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T104(EAX).A
	T105(EAX).A =   _apll:LINK(-28).A
	PARM	T105(EAX).A
	T106(EAX).A =   _q:LINK(8).A
	T107(EAX).A =   *(T106(EAX) + 40).A.A
	T108(EAX).I =   *(T107(EAX) + 19).A.C
	PARM	T108(EAX).I
	PARM	#195.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_2860:
; Line 2157:	            if (q->atomicpostfetch) 

	T109(EAX).A =   _q:LINK(8).A
	CONDGO	L_2859:PC ; *(T109(EAX) + B8){23:1}.A.I == #0.C
	BLOCK END
	BLOCK 54
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_2861:
; Line 2158:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_2862:
; Line 2159:	                gen_codes(op, q->ans->size, makedreg(reg), aprl); 

	T110(EAX).A =   _aprl:LINK(-36).A
	PARM	T110(EAX).A
	T111(EAX).I =   _reg:LINK(-52).I
	PARM	T111(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T112(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T112(EAX).A
	T113(EAX).A =   _q:LINK(8).A
	T114(EAX).A =   *(T113(EAX) + 40).A.A
	T115(EAX).I =   *(T114(EAX) + 19).A.C
	PARM	T115(EAX).I
	T116(EAX).I =   _op:LINK(4).I
	PARM	T116(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2160:	            } 

	BLOCK END
	BLOCK 57

L_2863:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_2864:
	DBG BLOCK END
	BLOCK END
	BLOCK 59

L_2859:
	BLOCK END
	BLOCK 60

L_2865:
	DBG BLOCK END
; Line 2161:	            gen_codes(op_mov, q->ans->size, apal, makedreg(reg)); 

	T117(EAX).I =   _reg:LINK(-52).I
	PARM	T117(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T118(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T118(EAX).A
	T119(EAX).A =   _apal:LINK(-20).A
	PARM	T119(EAX).A
	T120(EAX).A =   _q:LINK(8).A
	T121(EAX).A =   *(T120(EAX) + 40).A.A
	T122(EAX).I =   *(T121(EAX) + 19).A.C
	PARM	T122(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_2867:
; Line 2162:	            if (pushed) 

	T123(AL).BOOL =   _pushed:LINK(-45).BOOL
	CONDGO	L_2866:PC ; T123(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_2868:
; Line 2163:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_2869:
; Line 2164:	                gen_codes(op_pop, ISZ_UINT, makedreg(reg), nullptr); 

	PARM	#0.UI
	T124(EAX).I =   _reg:LINK(-52).I
	PARM	T124(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T125(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T125(EAX).A
	T126(EAX).UI =   #7.C
	PARM	T126(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2165:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2166:	            } 

	BLOCK END
	BLOCK 65

L_2870:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_2871:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_2866:
	BLOCK END
	BLOCK 68

L_2872:
	DBG BLOCK END
; Line 2167:	        } 

	BLOCK END
	BLOCK 69

L_2873:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_2875:
	DBG BLOCK END
	GOTO	L_2874:PC
	BLOCK END
	BLOCK 71
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_2876:
	BLOCK END
	BLOCK 73

L_2828:
; Line 2168:	        else 

; Line 2169:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_2877:
; Line 2170:	            if (aprl->mode == am_dreg || aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_2879:
	T127(EAX).A =   _aprl:LINK(-36).A
	T128(EAX).I =   *(T127(EAX) + 0).A.I
	CONDGO	L_2926:PC ; T128(EAX).I == #2.C
	BLOCK END
	BLOCK 76
	T129(EAX).A =   _aprl:LINK(-36).A
	T130(EAX).I =   *(T129(EAX) + 0).A.I
	CONDGO	L_2878:PC ; T130(EAX).I != #10.I
	BLOCK END
	BLOCK 77

L_2926:
	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_2880:
; Line 2171:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_2881:
; Line 2172:	                gen_code(op_lock, NULL, NULL); 

	T144(EAX).A =   #0.C
	PARM	T144(EAX).A
	T145(EAX).A =   #0.C
	PARM	T145(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2173:	                gen_codes(op, q->ans->size, apll, aprl); 

	T146(EAX).A =   _aprl:LINK(-36).A
	PARM	T146(EAX).A
	T147(EAX).A =   _apll:LINK(-28).A
	PARM	T147(EAX).A
	T148(EAX).A =   _q:LINK(8).A
	T149(EAX).A =   *(T148(EAX) + 40).A.A
	T150(EAX).I =   *(T149(EAX) + 19).A.C
	PARM	T150(EAX).I
	T151(EAX).I =   _op:LINK(4).I
	PARM	T151(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2174:	            } 

	BLOCK END
	BLOCK 80

L_2882:
	DBG BLOCK END
	BLOCK END
	BLOCK 81

L_2884:
	DBG BLOCK END
	GOTO	L_2883:PC
	BLOCK END
	BLOCK 82
	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_2885:
	BLOCK END
	BLOCK 84

L_2878:
; Line 2175:	            else 

; Line 2176:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 85

L_2886:
; Line 2177:	                gen_codes(op_mov, q->ans->size, apal, aprl); 

	T131(EAX).A =   _aprl:LINK(-36).A
	PARM	T131(EAX).A
	T132(EAX).A =   _apal:LINK(-20).A
	PARM	T132(EAX).A
	T133(EAX).A =   _q:LINK(8).A
	T134(EAX).A =   *(T133(EAX) + 40).A.A
	T135(EAX).I =   *(T134(EAX) + 19).A.C
	PARM	T135(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2178:	                gen_code(op_lock, NULL, NULL); 

	T136(EAX).A =   #0.C
	PARM	T136(EAX).A
	T137(EAX).A =   #0.C
	PARM	T137(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2179:	                gen_codes(op, q->ans->size, apll, apal); 

	T138(EAX).A =   _apal:LINK(-20).A
	PARM	T138(EAX).A
	T139(EAX).A =   _apll:LINK(-28).A
	PARM	T139(EAX).A
	T140(EAX).A =   _q:LINK(8).A
	T141(EAX).A =   *(T140(EAX) + 40).A.A
	T142(EAX).I =   *(T141(EAX) + 19).A.C
	PARM	T142(EAX).I
	T143(EAX).I =   _op:LINK(4).I
	PARM	T143(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2180:	            } 

	BLOCK END
	BLOCK 86

L_2887:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_2888:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_2883:
	BLOCK END
	BLOCK 89

L_2889:
	DBG BLOCK END
; Line 2181:	        } 

	BLOCK END
	BLOCK 90

L_2890:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_2891:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_2874:
	BLOCK END
	BLOCK 93

L_2892:
	DBG BLOCK END
; Line 2182:	    } 

	BLOCK END
	BLOCK 94

L_2893:
	DBG BLOCK END
	BLOCK END
	BLOCK 95

L_2895:
	DBG BLOCK END
	GOTO	L_2894:PC
	BLOCK END
	BLOCK 96
	DBG BLOCK START
	BLOCK END
	BLOCK 97

L_2896:
	BLOCK END
	BLOCK 98

L_2824:
; Line 2183:	    else if (q->ans->size == ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_2898:
	T36(EAX).A =   _q:LINK(8).A
	T37(EAX).A =   *(T36(EAX) + 40).A.A
	T38(AL).C =   *(T37(EAX) + 19).A.C
	CONDGO	L_2897:PC ; T38(AL).C != #12.C
	BLOCK END
	BLOCK 100
	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_2899:
; Line 2184:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_2900:
; Line 2185:	        logicatomic(op, q); 

	T39(EAX).A =   _q:LINK(8).A
	PARM	T39(EAX).A
	T40(EAX).I =   _op:LINK(4).I
	PARM	T40(EAX).I
	TAG
	GOSUB	#@occx86@logicatomic$q8e_opcodep15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 2186:	    } 

	BLOCK END
	BLOCK 103

L_2901:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_2903:
	DBG BLOCK END
	GOTO	L_2902:PC
	BLOCK END
	BLOCK 105
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_2904:
	BLOCK END
	BLOCK 107

L_2897:
; Line 2187:	    else 

; Line 2188:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 108

L_2905:
; Line 2189:	        if (op == op_add) 

	DBG BLOCK START
	BLOCK END
	BLOCK 109

L_2907:
	T41(EAX).I =   _op:LINK(4).I
	CONDGO	L_2906:PC ; T41(EAX).I != #25.I
	BLOCK END
	BLOCK 110
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_2908:
; Line 2190:	            llongatomicmath(op_add, op_adc, q); 

	T42(EAX).A =   _q:LINK(8).A
	PARM	T42(EAX).A
	PARM	#24.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@llongatomicmath$q8e_opcoden0p15@Optimizer@quad:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 112

L_2910:
	DBG BLOCK END
	GOTO	L_2909:PC
	BLOCK END
	BLOCK 113
	DBG BLOCK START
	BLOCK END
	BLOCK 114

L_2911:
	BLOCK END
	BLOCK 115

L_2906:
; Line 2191:	        else 

; Line 2192:	            llongatomicmath(op_sub, op_sbb, q); 

	T43(EAX).A =   _q:LINK(8).A
	PARM	T43(EAX).A
	PARM	#153.I
	PARM	#189.I
	TAG
	GOSUB	#@occx86@llongatomicmath$q8e_opcoden0p15@Optimizer@quad:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 116

L_2912:
	DBG BLOCK END
	BLOCK END
	BLOCK 117

L_2909:
	BLOCK END
	BLOCK 118

L_2913:
	DBG BLOCK END
; Line 2193:	    } 

	BLOCK END
	BLOCK 119

L_2914:
	DBG BLOCK END
	BLOCK END
	BLOCK 120

L_2915:
	DBG BLOCK END
	BLOCK END
	BLOCK 121

L_2902:
	BLOCK END
	BLOCK 122

L_2916:
	DBG BLOCK END
	BLOCK END
	BLOCK 123

L_2917:
	DBG BLOCK END
	BLOCK END
	BLOCK 124

L_2894:
	BLOCK END
	BLOCK 125

L_2918:
	DBG BLOCK END
; Line 2194:	} 

	BLOCK END
	BLOCK 126

L_2919:
	DBG BLOCK END
	BLOCK END
	BLOCK 127

L_2822:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END

@occx86@logicatomic$q8e_opcodep15@Optimizer@quad:
; Line 2196:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#48.UI
	BLOCK END
	BLOCK 2

L_2930:
	VAR START	op
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_2932:
; Line 2197:	    if (((q->ans->size <= ISZ_U32 && q->ans->size != -ISZ_ULONGLONG) || q->ans->size == ISZ_ADDR || q->ans->size == ISZ_FLOAT) || 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_2934:
; Line 2198:	        ((q->dc.left->size <= ISZ_U32 && q->dc.left->size != -ISZ_ULONGLONG) || q->dc.left->size == ISZ_ADDR || 
; Line 2202:	    { 

	T27(EAX).A =   _q:LINK(8).A
	T28(EAX).A =   *(T27(EAX) + 40).A.A
	T29(EAX).I =   *(T28(EAX) + 19).A.C
	CONDGO	L_3096:PC ; T29(EAX).I S> #A.I
	BLOCK END
	BLOCK 5
	T30(EAX).A =   _q:LINK(8).A
	T31(EAX).A =   *(T30(EAX) + 40).A.A
	T32(EAX).I =   *(T31(EAX) + 19).A.C
	CONDGO	L_3095:PC ; T32(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_3096:
	T33(EAX).A =   _q:LINK(8).A
	T34(EAX).A =   *(T33(EAX) + 40).A.A
	T35(AL).C =   *(T34(EAX) + 19).A.C
	CONDGO	L_3095:PC ; T35(AL).C == #C.C
	BLOCK END
	BLOCK 7
	T36(EAX).A =   _q:LINK(8).A
	T37(EAX).A =   *(T36(EAX) + 40).A.A
	T38(AL).C =   *(T37(EAX) + 19).A.C
	CONDGO	L_3095:PC ; T38(AL).C == #12.C
	BLOCK END
	BLOCK 8
	T39(EAX).A =   _q:LINK(8).A
	T40(EAX).A =   *(T39(EAX) + 4+0).A.A
	T41(EAX).I =   *(T40(EAX) + 19).A.C
	CONDGO	L_3097:PC ; T41(EAX).I S> #A.I
	BLOCK END
	BLOCK 9
	T42(EAX).A =   _q:LINK(8).A
	T43(EAX).A =   *(T42(EAX) + 4+0).A.A
	T44(EAX).I =   *(T43(EAX) + 19).A.C
	CONDGO	L_3095:PC ; T44(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 10

L_3097:
	T45(EAX).A =   _q:LINK(8).A
	T46(EAX).A =   *(T45(EAX) + 4+0).A.A
	T47(AL).C =   *(T46(EAX) + 19).A.C
	CONDGO	L_3095:PC ; T47(AL).C == #C.C
	BLOCK END
	BLOCK 11
	T48(EAX).A =   _q:LINK(8).A
	T49(EAX).A =   *(T48(EAX) + 4+0).A.A
	T50(AL).C =   *(T49(EAX) + 19).A.C
	CONDGO	L_3095:PC ; T50(AL).C == #12.C
	BLOCK END
	BLOCK 12
	T51(EAX).A =   _q:LINK(8).A
	T52(EAX).A =   *(T51(EAX) + 8+0).A.A
	T53(EAX).I =   *(T52(EAX) + 19).A.C
	CONDGO	L_3099:PC ; T53(EAX).I S> #A.I
	BLOCK END
	BLOCK 13
	T54(EAX).A =   _q:LINK(8).A
	T55(EAX).A =   *(T54(EAX) + 8+0).A.A
	T56(EAX).I =   *(T55(EAX) + 19).A.C
	CONDGO	L_3098:PC ; T56(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 14

L_3099:
	T57(EAX).A =   _q:LINK(8).A
	T58(EAX).A =   *(T57(EAX) + 8+0).A.A
	T59(AL).C =   *(T58(EAX) + 19).A.C
	CONDGO	L_3098:PC ; T59(AL).C == #C.C
	BLOCK END
	BLOCK 15
	T60(EAX).A =   _q:LINK(8).A
	T61(EAX).A =   *(T60(EAX) + 4+0).A.A
	T62(AL).C =   *(T61(EAX) + 19).A.C
	CONDGO	L_2933:PC ; T62(AL).C != #12.C
	BLOCK END
	BLOCK 16

L_3098:
	BLOCK END
	BLOCK 17

L_3095:
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_2935:
; Line 2201:	         q->dc.left->size == ISZ_FLOAT)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_2936:
; Line 2203:	        bool pushbp = false; 

	VAR START	pushbp
	_pushbp:LINK(-1).BOOL =   #0.BOOL
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
	VAR START	apah
	VAR START	apll
	VAR START	aplh
	VAR START	aprl
	VAR START	aprh
; Line 2205:	        AMODE *apal, *apah, *apll, *aplh, *aprl, *aprh; 

	T66(EAX).A =   #_aplh:LINK(-32).A
	PARM	T66(EAX).A
	T67(EAX).A =   #_apll:LINK(-28).A
	PARM	T67(EAX).A
	T68(EAX).A =   _q:LINK(8).A
	T69(EAX).A =   *(T68(EAX) + 4+0).A.A
	PARM	T69(EAX).A
	T70(EAX).A =   #_opl:LINK(-12).A
	PARM	T70(EAX).A
	T71(EAX).A =   _q:LINK(8).A
	PARM	T71(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2207:	        getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T72(EAX).A =   #_aprh:LINK(-40).A
	PARM	T72(EAX).A
	T73(EAX).A =   #_aprl:LINK(-36).A
	PARM	T73(EAX).A
	T74(EAX).A =   _q:LINK(8).A
	T75(EAX).A =   *(T74(EAX) + 8+0).A.A
	PARM	T75(EAX).A
	T76(EAX).A =   #_opr:LINK(-16).A
	PARM	T76(EAX).A
	T77(EAX).A =   _q:LINK(8).A
	PARM	T77(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2208:	        getAmodes(q, &opa, q->ans, &apal, &apah); 

	T78(EAX).A =   #_apah:LINK(-24).A
	PARM	T78(EAX).A
	T79(EAX).A =   #_apal:LINK(-20).A
	PARM	T79(EAX).A
	T80(EAX).A =   _q:LINK(8).A
	T81(EAX).A =   *(T80(EAX) + 40).A.A
	PARM	T81(EAX).A
	T82(EAX).A =   #_opa:LINK(-8).A
	PARM	T82(EAX).A
	T83(EAX).A =   _q:LINK(8).A
	PARM	T83(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_2938:
; Line 2209:	        if (apal->liveRegs & (1 << apal->preg) || q->ans->size == ISZ_FLOAT) 

	T84(EDX).A =   _apal:LINK(-20).A
	T85(EAX).A =   _apal:LINK(-20).A
	T87(CL).C =   *(T85(EAX) + 4).A.C
	T293(AL).C =   T87(CL).C^
	T296(CL).C =   T293(AL).C^
	T88(EAX).I = #1.C << T296(CL).C
	T89(EAX).I = *(T84(EDX) + 10).A.I & T88(EAX).I
	CONDGO	L_3100:PC ; T89(EAX).I != #0.C
	BLOCK END
	BLOCK 21
	T90(EAX).A =   _q:LINK(8).A
	T91(EAX).A =   *(T90(EAX) + 40).A.A
	T92(AL).C =   *(T91(EAX) + 19).A.C
	CONDGO	L_2937:PC ; T92(AL).C != #12.C
	BLOCK END
	BLOCK 22

L_3100:
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_2939:
; Line 2210:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_2940:
; Line 2211:	            int lab = beGetLabel; 

	VAR START	lab
	T118(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-44).I =   T118(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	VAR START	regflagsa
; Line 2212:	            int regflagsa = makeregflags(apal); 

	T119(EAX).A =   _apal:LINK(-20).A
	PARM	T119(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T120(EAX).I =   RV.T0(EAX).I
	PARMADJ	#4.N
	_regflagsa:LINK(-48).I =   T120(EAX).I
	VAR START	regflagsr
; Line 2213:	            int regflagsr = makeregflags(aprl); 

	T121(EAX).A =   _aprl:LINK(-36).A
	PARM	T121(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T122(EAX).I =   RV.T1(EAX).I
	PARMADJ	#4.N
	_regflagsr:LINK(-52).I =   T122(EAX).I
	VAR START	regflagsl
; Line 2214:	            int regflagsl = makeregflags(apll); 

	T123(EAX).A =   _apll:LINK(-28).A
	PARM	T123(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T124(EAX).I =   RV.T2(EAX).I
	PARMADJ	#4.N
	_regflagsl:LINK(-56).I =   T124(EAX).I
	VAR START	reg1
; Line 2215:	            int reg1 = 0, reg2 = 0, reg3 = 0; 

	T125(EAX).I =   #0.C
	_reg1:LINK(-60).I =   T125(EAX).I
	VAR START	reg2
	T126(EAX).I =   #0.C
	_reg2:LINK(-64).I =   T126(EAX).I
	VAR START	reg3
	T127(EAX).I =   #0.C
	_reg3:LINK(-68).I =   T127(EAX).I
	VAR START	pushreg1
; Line 2216:	            bool pushreg1 = false, pushreg2 = false, pushreg3 = false; 

	_pushreg1:LINK(-69).BOOL =   #0.BOOL
	VAR START	pushreg2
	_pushreg2:LINK(-70).BOOL =   #0.BOOL
	VAR START	pushreg3
	_pushreg3:LINK(-71).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_2942:
; Line 2217:	            if (regflagsr & (1 << EAX)) 

	T128(EAX).I =   _regflagsr:LINK(-52).I
	T129(EAX).I = T128(EAX).I & #1.C
	CONDGO	L_2941:PC ; T129(EAX).I == #0.C
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_2943:
; Line 2218:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_2944:
; Line 2219:	                if (q->ans->size < 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_2946:
	T130(EAX).A =   _q:LINK(8).A
	T131(EAX).A =   *(T130(EAX) + 40).A.A
	T132(EAX).I =   *(T131(EAX) + 19).A.C
	CONDGO	L_2945:PC ; T132(EAX).I S>= #0.C
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_2947:
; Line 2220:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_2948:
; Line 2221:	                    if (-q->ans->size < ISZ_USHORT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_2950:
	T133(EAX).A =   _q:LINK(8).A
	T134(EAX).A =   *(T133(EAX) + 40).A.A
	T135(EAX).I =   *(T134(EAX) + 19).A.C
	T136(EAX).I =  - T135(EAX).I
	CONDGO	L_2949:PC ; T136(EAX).I S>= #4.I
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_2951:
; Line 2222:	                        regflagsr |= (1 << ESI) | (1 << EDI); 

	_regflagsr:LINK(-52).I = _regflagsr:LINK(-52).I | #C0.I
	BLOCK END
	BLOCK 36

L_2952:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_2949:
	BLOCK END
	BLOCK 38

L_2953:
	DBG BLOCK END
; Line 2223:	                } 

	BLOCK END
	BLOCK 39

L_2954:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_2956:
	DBG BLOCK END
	GOTO	L_2955:PC
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_2957:
	BLOCK END
	BLOCK 43

L_2945:
; Line 2224:	                else 

; Line 2225:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_2958:
; Line 2226:	                    if (q->ans->size < ISZ_USHORT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_2960:
	T137(EAX).A =   _q:LINK(8).A
	T138(EAX).A =   *(T137(EAX) + 40).A.A
	T139(EAX).I =   *(T138(EAX) + 19).A.C
	CONDGO	L_2959:PC ; T139(EAX).I S>= #4.I
	BLOCK END
	BLOCK 46
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_2961:
; Line 2227:	                        regflagsr |= (1 << ESI) | (1 << EDI); 

	_regflagsr:LINK(-52).I = _regflagsr:LINK(-52).I | #C0.I
	BLOCK END
	BLOCK 48

L_2962:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_2959:
	BLOCK END
	BLOCK 50

L_2963:
	DBG BLOCK END
; Line 2228:	                } 

	BLOCK END
	BLOCK 51

L_2964:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_2965:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_2955:
	BLOCK END
	BLOCK 54

L_2966:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_2968:
; Line 2229:	                if (aprl->mode == am_dreg) 

	T140(EAX).A =   _aprl:LINK(-36).A
	T141(EAX).I =   *(T140(EAX) + 0).A.I
	CONDGO	L_2967:PC ; T141(EAX).I != #2.C
	BLOCK END
	BLOCK 56
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_2969:
; Line 2230:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_2970:
; Line 2231:	                    reg1 = getreg(apll, regflagsl | regflagsr, pushreg1); 

	T142(EAX).A =   #_pushreg1:LINK(-69).A
	PARM	T142(EAX).A
	T143(ECX).I =   _regflagsl:LINK(-56).I
	T144(EAX).I =   _regflagsr:LINK(-52).I
	T145(EAX).I = T143(ECX).I | T144(EAX).I
	PARM	T145(EAX).I
	T146(EAX).A =   _apll:LINK(-28).A
	PARM	T146(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T147(EAX).I =   RV.T3(EAX).I
	PARMADJ	#C.N
	_reg1:LINK(-60).I =   T147(EAX).I
; Line 2232:	                    gen_codes(op_mov, q->ans->size, makedreg(reg1), aprl); 

	T148(EAX).A =   _aprl:LINK(-36).A
	PARM	T148(EAX).A
	T149(EAX).I =   _reg1:LINK(-60).I
	PARM	T149(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T150(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T150(EAX).A
	T151(EAX).A =   _q:LINK(8).A
	T152(EAX).A =   *(T151(EAX) + 40).A.A
	T153(EAX).I =   *(T152(EAX) + 19).A.C
	PARM	T153(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2233:	                    aprl = makedreg(reg1); 

	T154(EAX).I =   _reg1:LINK(-60).I
	PARM	T154(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T155(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	_aprl:LINK(-36).A =   T155(EAX).A
; Line 2234:	                } 

	BLOCK END
	BLOCK 59

L_2971:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_2973:
	DBG BLOCK END
	GOTO	L_2972:PC
	BLOCK END
	BLOCK 61
	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_2974:
	BLOCK END
	BLOCK 63

L_2967:
; Line 2235:	                else 

; Line 2236:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_2975:
; Line 2237:	                    aprl = atomic_lea(apll, aprl, regflagsl | regflagsr, reg1, pushreg1); 

	T156(EAX).A =   #_pushreg1:LINK(-69).A
	PARM	T156(EAX).A
	T157(EAX).A =   #_reg1:LINK(-60).A
	PARM	T157(EAX).A
	T158(ECX).I =   _regflagsl:LINK(-56).I
	T159(EAX).I =   _regflagsr:LINK(-52).I
	T160(EAX).I = T158(ECX).I | T159(EAX).I
	PARM	T160(EAX).I
	T161(EAX).A =   _aprl:LINK(-36).A
	PARM	T161(EAX).A
	T162(EAX).A =   _apll:LINK(-28).A
	PARM	T162(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T163(EAX).A =   RV.T6(EAX).A
	PARMADJ	#14.N
	_aprl:LINK(-36).A =   T163(EAX).A
; Line 2238:	                } 

	BLOCK END
	BLOCK 65

L_2976:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_2977:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_2972:
	BLOCK END
	BLOCK 68

L_2978:
	DBG BLOCK END
; Line 2239:	                aprh = nullptr; 

	_aprh:LINK(-40).A =   #0.A
; Line 2240:	                regflagsr |= 1 << reg1; 

	T164(EDX).I =   _regflagsr:LINK(-52).I
	T166(ECX).I =   _reg1:LINK(-60).I
	T294(EAX).I =   T166(ECX).I^
	T297(ECX).I =   T294(EAX).I^
	T167(EAX).I = #1.C << T297(ECX).I
	T168(EAX).I = T164(EDX).I | T167(EAX).I
	_regflagsr:LINK(-52).I =   T168(EAX).I
; Line 2241:	            } 

	BLOCK END
	BLOCK 69

L_2979:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_2980:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_2941:
	BLOCK END
	BLOCK 72

L_2981:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_2983:
; Line 2242:	            if (regflagsl & (1 << EAX)) 

	T169(EAX).I =   _regflagsl:LINK(-56).I
	T170(EAX).I = T169(EAX).I & #1.C
	CONDGO	L_2982:PC ; T170(EAX).I == #0.C
	BLOCK END
	BLOCK 74
	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_2984:
; Line 2243:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_2985:
; Line 2244:	                apll = atomic_lea(apll, apll, regflagsl | regflagsr, reg2, pushreg2); 

	T171(EAX).A =   #_pushreg2:LINK(-70).A
	PARM	T171(EAX).A
	T172(EAX).A =   #_reg2:LINK(-64).A
	PARM	T172(EAX).A
	T173(ECX).I =   _regflagsl:LINK(-56).I
	T174(EAX).I =   _regflagsr:LINK(-52).I
	T175(EAX).I = T173(ECX).I | T174(EAX).I
	PARM	T175(EAX).I
	T176(EAX).A =   _apll:LINK(-28).A
	PARM	T176(EAX).A
	T177(EAX).A =   _apll:LINK(-28).A
	PARM	T177(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T178(EAX).A =   RV.T7(EAX).A
	PARMADJ	#14.N
	_apll:LINK(-28).A =   T178(EAX).A
; Line 2245:	                aplh = nullptr; 

	_aplh:LINK(-32).A =   #0.A
; Line 2246:	                regflagsl |= 1 << reg2; 

	T179(EDX).I =   _regflagsl:LINK(-56).I
	T181(ECX).I =   _reg2:LINK(-64).I
	T295(EAX).I =   T181(ECX).I^
	T298(ECX).I =   T295(EAX).I^
	T182(EAX).I = #1.C << T298(ECX).I
	T183(EAX).I = T179(EDX).I | T182(EAX).I
	_regflagsl:LINK(-56).I =   T183(EAX).I
; Line 2247:	            } 

	BLOCK END
	BLOCK 77

L_2986:
	DBG BLOCK END
	BLOCK END
	BLOCK 78

L_2987:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_2982:
	BLOCK END
	BLOCK 80

L_2988:
	DBG BLOCK END
; Line 2248:	            reg3 = getreg(apal, regflagsl | regflagsr | (1 << EAX), pushreg3); 

	T184(EAX).A =   #_pushreg3:LINK(-71).A
	PARM	T184(EAX).A
	T185(ECX).I =   _regflagsl:LINK(-56).I
	T186(EAX).I =   _regflagsr:LINK(-52).I
	T187(EAX).I = T186(EAX).I | #1.C
	T188(EAX).I = T185(ECX).I | T187(EAX).I
	PARM	T188(EAX).I
	T189(EAX).A =   _apal:LINK(-20).A
	PARM	T189(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T190(EAX).I =   RV.T8(EAX).I
	PARMADJ	#C.N
	_reg3:LINK(-68).I =   T190(EAX).I
; Line 2249:	            gen_codes(op_mov, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, makedreg(EAX), apll); 

	T191(EAX).A =   _apll:LINK(-28).A
	PARM	T191(EAX).A
	T192(EAX).UI =   #0.C
	PARM	T192(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T193(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	PARM	T193(EAX).A
	T194(EAX).A =   _q:LINK(8).A
	T195(EAX).A =   *(T194(EAX) + 40).A.A
	T196(AL).C =   *(T195(EAX) + 19).A.C
	CONDGO	L_3101:PC ; T196(AL).C != #12.C
	BLOCK END
	BLOCK 81
	T197(EAX).I =   #7.C
	GOTO	L_3102:PC
	BLOCK END
	BLOCK 82

L_3101:
	T198(EAX).A =   _q:LINK(8).A
	T199(EAX).A =   *(T198(EAX) + 40).A.A
	T200(EAX).I =   *(T199(EAX) + 19).A.C
	T197(EAX).I =   T200(EAX).I
	BLOCK END
	BLOCK 83

L_3102:
	PARM	T197(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 84

L_2990:
; Line 2250:	            if (!q->atomicpostfetch) 

	T201(EAX).A =   _q:LINK(8).A
	CONDGO	L_2989:PC ; *(T201(EAX) + B8){23:1}.A.I != #0.C
	BLOCK END
	BLOCK 85
	DBG BLOCK START
	BLOCK END
	BLOCK 86

L_2991:
; Line 2251:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 87

L_2992:
; Line 2252:	                gen_codes(op_push, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	T202(EAX).UI =   #0.C
	PARM	T202(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T203(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	PARM	T203(EAX).A
	T204(EAX).UI =   #7.C
	PARM	T204(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2253:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2254:	            } 

	BLOCK END
	BLOCK 88

L_2993:
	DBG BLOCK END
	BLOCK END
	BLOCK 89

L_2994:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_2989:
	BLOCK END
	BLOCK 91

L_2995:
	DBG BLOCK END
; Line 2255:	            oa_gen_label(lab); 

	T205(EAX).I =   _lab:LINK(-44).I
	PARM	T205(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_2997:
; Line 2256:	            if (q->ans->size == ISZ_FLOAT) 

	T206(EAX).A =   _q:LINK(8).A
	T207(EAX).A =   *(T206(EAX) + 40).A.A
	T208(AL).C =   *(T207(EAX) + 19).A.C
	CONDGO	L_2996:PC ; T208(AL).C != #12.C
	BLOCK END
	BLOCK 93
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_2998:
; Line 2257:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 95

L_2999:
; Line 2258:	                gen_code(op_movd, apal, makedreg(EAX)); 

	T209(EAX).UI =   #0.C
	PARM	T209(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T210(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	PARM	T210(EAX).A
	T211(EAX).A =   _apal:LINK(-20).A
	PARM	T211(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2259:	                gen_code(op == op_add ? op_addss : op_subss, apal, aprl); 

	T212(EAX).A =   _aprl:LINK(-36).A
	PARM	T212(EAX).A
	T213(EAX).A =   _apal:LINK(-20).A
	PARM	T213(EAX).A
	T214(EAX).I =   _op:LINK(4).I
	CONDGO	L_3103:PC ; T214(EAX).I != #25.I
	BLOCK END
	BLOCK 96
	T215(EAX).I =   #1A2.I
	GOTO	L_3104:PC
	BLOCK END
	BLOCK 97

L_3103:
	T215(EAX).I =   #258.I
	BLOCK END
	BLOCK 98

L_3104:
	PARM	T215(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2260:	                gen_code(op_movd, makedreg(reg3), apal); 

	T216(EAX).A =   _apal:LINK(-20).A
	PARM	T216(EAX).A
	T217(EAX).I =   _reg3:LINK(-68).I
	PARM	T217(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T218(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T218(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2261:	            } 

	BLOCK END
	BLOCK 99

L_3000:
	DBG BLOCK END
	BLOCK END
	BLOCK 100

L_3002:
	DBG BLOCK END
	GOTO	L_3001:PC
	BLOCK END
	BLOCK 101
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_3003:
	BLOCK END
	BLOCK 103

L_2996:
; Line 2262:	            else 

; Line 2263:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_3004:
; Line 2264:	                gen_codes(op_mov, q->ans->size, makedreg(reg3), makedreg(EAX)); 

	T219(EAX).UI =   #0.C
	PARM	T219(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T220(EAX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	PARM	T220(EAX).A
	T221(EAX).I =   _reg3:LINK(-68).I
	PARM	T221(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T222(EAX).A =   RV.T14(EAX).A
	PARMADJ	#4.N
	PARM	T222(EAX).A
	T223(EAX).A =   _q:LINK(8).A
	T224(EAX).A =   *(T223(EAX) + 40).A.A
	T225(EAX).I =   *(T224(EAX) + 19).A.C
	PARM	T225(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2265:	                gen_codes(op, q->ans->size, makedreg(reg3), aprl); 

	T226(EAX).A =   _aprl:LINK(-36).A
	PARM	T226(EAX).A
	T227(EAX).I =   _reg3:LINK(-68).I
	PARM	T227(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T228(EAX).A =   RV.T15(EAX).A
	PARMADJ	#4.N
	PARM	T228(EAX).A
	T229(EAX).A =   _q:LINK(8).A
	T230(EAX).A =   *(T229(EAX) + 40).A.A
	T231(EAX).I =   *(T230(EAX) + 19).A.C
	PARM	T231(EAX).I
	T232(EAX).I =   _op:LINK(4).I
	PARM	T232(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2266:	            } 

	BLOCK END
	BLOCK 105

L_3005:
	DBG BLOCK END
	BLOCK END
	BLOCK 106

L_3006:
	DBG BLOCK END
	BLOCK END
	BLOCK 107

L_3001:
	BLOCK END
	BLOCK 108

L_3007:
	DBG BLOCK END
; Line 2267:	            gen_codes(op_cmpxchg, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, apll, makedreg(reg3)); 

	T233(EAX).I =   _reg3:LINK(-68).I
	PARM	T233(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T234(EAX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	PARM	T234(EAX).A
	T235(EAX).A =   _apll:LINK(-28).A
	PARM	T235(EAX).A
	T236(EAX).A =   _q:LINK(8).A
	T237(EAX).A =   *(T236(EAX) + 40).A.A
	T238(AL).C =   *(T237(EAX) + 19).A.C
	CONDGO	L_3105:PC ; T238(AL).C != #12.C
	BLOCK END
	BLOCK 109
	T239(EAX).I =   #7.C
	GOTO	L_3106:PC
	BLOCK END
	BLOCK 110

L_3105:
	T240(EAX).A =   _q:LINK(8).A
	T241(EAX).A =   *(T240(EAX) + 40).A.A
	T242(EAX).I =   *(T241(EAX) + 19).A.C
	T239(EAX).I =   T242(EAX).I
	BLOCK END
	BLOCK 111

L_3106:
	PARM	T239(EAX).I
	PARM	#5D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2268:	            gen_code(op_jne, make_label(lab), NULL); 

	T243(EAX).A =   #0.C
	PARM	T243(EAX).A
	T244(EAX).I =   _lab:LINK(-44).I
	PARM	T244(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T245(EAX).A =   RV.T17(EAX).A
	PARMADJ	#4.N
	PARM	T245(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_3009:
; Line 2269:	            if (q->atomicpostfetch) 

	T246(EAX).A =   _q:LINK(8).A
	CONDGO	L_3008:PC ; *(T246(EAX) + B8){23:1}.A.I == #0.C
	BLOCK END
	BLOCK 113
	DBG BLOCK START
	BLOCK END
	BLOCK 114

L_3010:
; Line 2270:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 115

L_3011:
; Line 2271:	                if (q->ans->size == ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_3013:
	T247(EAX).A =   _q:LINK(8).A
	T248(EAX).A =   *(T247(EAX) + 40).A.A
	T249(AL).C =   *(T248(EAX) + 19).A.C
	CONDGO	L_3012:PC ; T249(AL).C != #12.C
	BLOCK END
	BLOCK 117
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_3014:
; Line 2272:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 119

L_3015:
; Line 2273:	                    gen_code(op_movd, apal, makedreg(EAX)); 

	T250(EAX).UI =   #0.C
	PARM	T250(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T251(EAX).A =   RV.T18(EAX).A
	PARMADJ	#4.N
	PARM	T251(EAX).A
	T252(EAX).A =   _apal:LINK(-20).A
	PARM	T252(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2274:	                    gen_code(op == op_add ? op_addss : op_subss, apal, aprl); 

	T253(EAX).A =   _aprl:LINK(-36).A
	PARM	T253(EAX).A
	T254(EAX).A =   _apal:LINK(-20).A
	PARM	T254(EAX).A
	T255(EAX).I =   _op:LINK(4).I
	CONDGO	L_3107:PC ; T255(EAX).I != #25.I
	BLOCK END
	BLOCK 120
	T256(EAX).I =   #1A2.I
	GOTO	L_3108:PC
	BLOCK END
	BLOCK 121

L_3107:
	T256(EAX).I =   #258.I
	BLOCK END
	BLOCK 122

L_3108:
	PARM	T256(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2275:	                } 

	BLOCK END
	BLOCK 123

L_3016:
	DBG BLOCK END
	BLOCK END
	BLOCK 124

L_3018:
	DBG BLOCK END
	GOTO	L_3017:PC
	BLOCK END
	BLOCK 125
	DBG BLOCK START
	BLOCK END
	BLOCK 126

L_3019:
	BLOCK END
	BLOCK 127

L_3012:
; Line 2276:	                else 

; Line 2277:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 128

L_3020:
; Line 2278:	                    gen_codes(op, q->ans->size, makedreg(EAX), aprl); 

	T257(EAX).A =   _aprl:LINK(-36).A
	PARM	T257(EAX).A
	T258(EAX).UI =   #0.C
	PARM	T258(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T259(EAX).A =   RV.T19(EAX).A
	PARMADJ	#4.N
	PARM	T259(EAX).A
	T260(EAX).A =   _q:LINK(8).A
	T261(EAX).A =   *(T260(EAX) + 40).A.A
	T262(EAX).I =   *(T261(EAX) + 19).A.C
	PARM	T262(EAX).I
	T263(EAX).I =   _op:LINK(4).I
	PARM	T263(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2279:	                    gen_codes(op_mov, q->ans->size, apal, makedreg(EAX)); 

	T264(EAX).UI =   #0.C
	PARM	T264(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T265(EAX).A =   RV.T20(EAX).A
	PARMADJ	#4.N
	PARM	T265(EAX).A
	T266(EAX).A =   _apal:LINK(-20).A
	PARM	T266(EAX).A
	T267(EAX).A =   _q:LINK(8).A
	T268(EAX).A =   *(T267(EAX) + 40).A.A
	T269(EAX).I =   *(T268(EAX) + 19).A.C
	PARM	T269(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2280:	                } 

	BLOCK END
	BLOCK 129

L_3021:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_3022:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_3017:
	BLOCK END
	BLOCK 132

L_3023:
	DBG BLOCK END
; Line 2281:	            } 

	BLOCK END
	BLOCK 133

L_3024:
	DBG BLOCK END
	BLOCK END
	BLOCK 134

L_3026:
	DBG BLOCK END
	GOTO	L_3025:PC
	BLOCK END
	BLOCK 135
	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_3027:
	BLOCK END
	BLOCK 137

L_3008:
; Line 2282:	            else 

; Line 2283:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 138

L_3028:
; Line 2284:	                if (q->ans->size == ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 139

L_3030:
	T270(EAX).A =   _q:LINK(8).A
	T271(EAX).A =   *(T270(EAX) + 40).A.A
	T272(AL).C =   *(T271(EAX) + 19).A.C
	CONDGO	L_3029:PC ; T272(AL).C != #12.C
	BLOCK END
	BLOCK 140
	DBG BLOCK START
	BLOCK END
	BLOCK 141

L_3031:
; Line 2285:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 142

L_3032:
; Line 2286:	                    gen_code_sse(op_movss, apal, make_stack(0)); 

	T273(EAX).UI =   #0.C
	PARM	T273(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T274(EAX).A =   RV.T21(EAX).A
	PARMADJ	#4.N
	PARM	T274(EAX).A
	T275(EAX).A =   _apal:LINK(-20).A
	PARM	T275(EAX).A
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2287:	                    gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T276(EDX:EAX).ULL =   #4.I
	PARM	T276(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T277(EAX).A =   RV.T22(EAX).A
	PARMADJ	#8.N
	PARM	T277(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T278(EAX).A =   RV.T23(EAX).A
	PARMADJ	#4.N
	PARM	T278(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2288:	                } 

	BLOCK END
	BLOCK 143

L_3033:
	DBG BLOCK END
	BLOCK END
	BLOCK 144

L_3035:
	DBG BLOCK END
	GOTO	L_3034:PC
	BLOCK END
	BLOCK 145
	DBG BLOCK START
	BLOCK END
	BLOCK 146

L_3036:
	BLOCK END
	BLOCK 147

L_3029:
; Line 2289:	                else 

; Line 2290:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 148

L_3037:
; Line 2291:	                    gen_codes(op_pop, ISZ_UINT, apal, nullptr); 

	PARM	#0.UI
	T279(EAX).A =   _apal:LINK(-20).A
	PARM	T279(EAX).A
	T280(EAX).UI =   #7.C
	PARM	T280(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2292:	                } 

	BLOCK END
	BLOCK 149

L_3038:
	DBG BLOCK END
	BLOCK END
	BLOCK 150

L_3039:
	DBG BLOCK END
	BLOCK END
	BLOCK 151

L_3034:
	BLOCK END
	BLOCK 152

L_3040:
	DBG BLOCK END
; Line 2293:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2294:	            } 

	BLOCK END
	BLOCK 153

L_3041:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_3042:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_3025:
	BLOCK END
	BLOCK 156

L_3043:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_3045:
; Line 2295:	            if (pushreg3) 

	T281(AL).BOOL =   _pushreg3:LINK(-71).BOOL
	CONDGO	L_3044:PC ; T281(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 158
	DBG BLOCK START
	BLOCK END
	BLOCK 159

L_3046:
; Line 2296:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_3047:
; Line 2297:	                gen_codes(op_pop, ISZ_UINT, makedreg(reg3), nullptr); 

	PARM	#0.UI
	T282(EAX).I =   _reg3:LINK(-68).I
	PARM	T282(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T283(EAX).A =   RV.T24(EAX).A
	PARMADJ	#4.N
	PARM	T283(EAX).A
	T284(EAX).UI =   #7.C
	PARM	T284(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2298:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2299:	            } 

	BLOCK END
	BLOCK 161

L_3048:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_3049:
	DBG BLOCK END
	BLOCK END
	BLOCK 163

L_3044:
	BLOCK END
	BLOCK 164

L_3050:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_3052:
; Line 2300:	            if (pushreg2) 

	T285(AL).BOOL =   _pushreg2:LINK(-70).BOOL
	CONDGO	L_3051:PC ; T285(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 166
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_3053:
; Line 2301:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 168

L_3054:
; Line 2302:	                gen_codes(op_pop, ISZ_UINT, makedreg(reg2), nullptr); 

	PARM	#0.UI
	T286(EAX).I =   _reg2:LINK(-64).I
	PARM	T286(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T287(EAX).A =   RV.T25(EAX).A
	PARMADJ	#4.N
	PARM	T287(EAX).A
	T288(EAX).UI =   #7.C
	PARM	T288(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2303:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2304:	            } 

	BLOCK END
	BLOCK 169

L_3055:
	DBG BLOCK END
	BLOCK END
	BLOCK 170

L_3056:
	DBG BLOCK END
	BLOCK END
	BLOCK 171

L_3051:
	BLOCK END
	BLOCK 172

L_3057:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 173

L_3059:
; Line 2305:	            if (pushreg1) 

	T289(AL).BOOL =   _pushreg1:LINK(-69).BOOL
	CONDGO	L_3058:PC ; T289(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 174
	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_3060:
; Line 2306:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 176

L_3061:
; Line 2307:	                gen_codes(op_pop, ISZ_UINT, makedreg(reg1), nullptr); 

	PARM	#0.UI
	T290(EAX).I =   _reg1:LINK(-60).I
	PARM	T290(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T291(EAX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	PARM	T291(EAX).A
	T292(EAX).UI =   #7.C
	PARM	T292(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2308:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2309:	            } 

	BLOCK END
	BLOCK 177

L_3062:
	DBG BLOCK END
	BLOCK END
	BLOCK 178

L_3063:
	DBG BLOCK END
	BLOCK END
	BLOCK 179

L_3058:
	BLOCK END
	BLOCK 180

L_3064:
	DBG BLOCK END
; Line 2310:	        } 

	BLOCK END
	BLOCK 181

L_3065:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_3067:
	DBG BLOCK END
	GOTO	L_3066:PC
	BLOCK END
	BLOCK 183
	DBG BLOCK START
	BLOCK END
	BLOCK 184

L_3068:
	BLOCK END
	BLOCK 185

L_2937:
; Line 2311:	        else 

; Line 2312:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 186

L_3069:
; Line 2313:	            if (aprl->mode == am_dreg || aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 187

L_3071:
	T93(EAX).A =   _aprl:LINK(-36).A
	T94(EAX).I =   *(T93(EAX) + 0).A.I
	CONDGO	L_3109:PC ; T94(EAX).I == #2.C
	BLOCK END
	BLOCK 188
	T95(EAX).A =   _aprl:LINK(-36).A
	T96(EAX).I =   *(T95(EAX) + 0).A.I
	CONDGO	L_3070:PC ; T96(EAX).I != #10.I
	BLOCK END
	BLOCK 189

L_3109:
	DBG BLOCK START
	BLOCK END
	BLOCK 190

L_3072:
; Line 2314:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 191

L_3073:
; Line 2315:	                gen_code(op_lock, NULL, NULL); 

	T110(EAX).A =   #0.C
	PARM	T110(EAX).A
	T111(EAX).A =   #0.C
	PARM	T111(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2316:	                gen_codes(op, q->ans->size, apll, aprl); 

	T112(EAX).A =   _aprl:LINK(-36).A
	PARM	T112(EAX).A
	T113(EAX).A =   _apll:LINK(-28).A
	PARM	T113(EAX).A
	T114(EAX).A =   _q:LINK(8).A
	T115(EAX).A =   *(T114(EAX) + 40).A.A
	T116(EAX).I =   *(T115(EAX) + 19).A.C
	PARM	T116(EAX).I
	T117(EAX).I =   _op:LINK(4).I
	PARM	T117(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2317:	            } 

	BLOCK END
	BLOCK 192

L_3074:
	DBG BLOCK END
	BLOCK END
	BLOCK 193

L_3076:
	DBG BLOCK END
	GOTO	L_3075:PC
	BLOCK END
	BLOCK 194
	DBG BLOCK START
	BLOCK END
	BLOCK 195

L_3077:
	BLOCK END
	BLOCK 196

L_3070:
; Line 2318:	            else 

; Line 2319:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_3078:
; Line 2320:	                gen_codes(op_mov, q->ans->size, apal, aprl); 

	T97(EAX).A =   _aprl:LINK(-36).A
	PARM	T97(EAX).A
	T98(EAX).A =   _apal:LINK(-20).A
	PARM	T98(EAX).A
	T99(EAX).A =   _q:LINK(8).A
	T100(EAX).A =   *(T99(EAX) + 40).A.A
	T101(EAX).I =   *(T100(EAX) + 19).A.C
	PARM	T101(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2321:	                gen_code(op_lock, NULL, NULL); 

	T102(EAX).A =   #0.C
	PARM	T102(EAX).A
	T103(EAX).A =   #0.C
	PARM	T103(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2322:	                gen_codes(op, q->ans->size, apll, apal); 

	T104(EAX).A =   _apal:LINK(-20).A
	PARM	T104(EAX).A
	T105(EAX).A =   _apll:LINK(-28).A
	PARM	T105(EAX).A
	T106(EAX).A =   _q:LINK(8).A
	T107(EAX).A =   *(T106(EAX) + 40).A.A
	T108(EAX).I =   *(T107(EAX) + 19).A.C
	PARM	T108(EAX).I
	T109(EAX).I =   _op:LINK(4).I
	PARM	T109(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2323:	            } 

	BLOCK END
	BLOCK 198

L_3079:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_3080:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_3075:
	BLOCK END
	BLOCK 201

L_3081:
	DBG BLOCK END
; Line 2324:	        } 

	BLOCK END
	BLOCK 202

L_3082:
	DBG BLOCK END
	BLOCK END
	BLOCK 203

L_3083:
	DBG BLOCK END
	BLOCK END
	BLOCK 204

L_3066:
	BLOCK END
	BLOCK 205

L_3084:
	DBG BLOCK END
; Line 2325:	    } 

	BLOCK END
	BLOCK 206

L_3085:
	DBG BLOCK END
	BLOCK END
	BLOCK 207

L_3087:
	DBG BLOCK END
	GOTO	L_3086:PC
	BLOCK END
	BLOCK 208
	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_3088:
	BLOCK END
	BLOCK 210

L_2933:
; Line 2326:	    else 

; Line 2327:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 211

L_3089:
; Line 2328:	        llongatomicmath(op, op, q); 

	T63(EAX).A =   _q:LINK(8).A
	PARM	T63(EAX).A
	T64(EAX).I =   _op:LINK(4).I
	PARM	T64(EAX).I
	T65(EAX).I =   _op:LINK(4).I
	PARM	T65(EAX).I
	TAG
	GOSUB	#@occx86@llongatomicmath$q8e_opcoden0p15@Optimizer@quad:PC.UI
	PARMADJ	#C.N
; Line 2329:	    } 

	BLOCK END
	BLOCK 212

L_3090:
	DBG BLOCK END
	BLOCK END
	BLOCK 213

L_3091:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_3086:
	BLOCK END
	BLOCK 215

L_3092:
	DBG BLOCK END
; Line 2330:	} 

	BLOCK END
	BLOCK 216

L_3093:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_2931:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_line$qp15@Optimizer@quad


global @occx86@asm_line$qp15@Optimizer@quad
@occx86@asm_line$qp15@Optimizer@quad:
; Line 2332:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_3113:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3115:
; Line 2333:	    OCODE* newitem = beLocalAllocate<OCODE>(); 

	VAR START	newitem
	T1(EAX).UI =   #1.C
	PARM	T1(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5ocode~$qi:PC.UI
	T2(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_newitem:LINK(-4).A =   T2(EAX).A
; Line 2334:	    newitem->opcode = (e_opcode)op_line; 

	T3(ECX).A =   _newitem:LINK(-4).A
	T4(EAX).I =   #1.C
	*(T3(ECX) + 8).A.I =   T4(EAX).I
; Line 2335:	    newitem->oper1 = (AMODE*)(q->dc.left);   

	T5(EAX).A =   _q:LINK(4).A
	T6(ECX).A =   *(T5(EAX) + 4+0).A.A
	T7(EAX).A =   _newitem:LINK(-4).A
	*(T7(EAX) + C).A.A =   T6(ECX).A
; Line 2336:	    add_peep(newitem); 

	T8(EAX).A =   _newitem:LINK(-4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@occx86@add_peep$qp5ocode:PC.UI
	PARMADJ	#4.N
; Line 2337:	} 

	BLOCK END
	BLOCK 4

L_3116:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3114:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_blockstart$qp15@Optimizer@quad


global @occx86@asm_blockstart$qp15@Optimizer@quad
@occx86@asm_blockstart$qp15@Optimizer@quad:
; Line 2339:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_3121:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3123:
; Line 2340:	    OCODE* newitem = beLocalAllocate<OCODE>(); 

	VAR START	newitem
	T1(EAX).UI =   #1.C
	PARM	T1(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5ocode~$qi:PC.UI
	T2(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_newitem:LINK(-4).A =   T2(EAX).A
; Line 2341:	    newitem->opcode = (e_opcode)op_blockstart; 

	T3(ECX).A =   _newitem:LINK(-4).A
	T4(EAX).I =   #2.C
	*(T3(ECX) + 8).A.I =   T4(EAX).I
; Line 2342:	    add_peep(newitem); 

	T5(EAX).A =   _newitem:LINK(-4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@occx86@add_peep$qp5ocode:PC.UI
	PARMADJ	#4.N
; Line 2343:	} 

	BLOCK END
	BLOCK 4

L_3124:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3122:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_blockend$qp15@Optimizer@quad


global @occx86@asm_blockend$qp15@Optimizer@quad
@occx86@asm_blockend$qp15@Optimizer@quad:
; Line 2345:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_3129:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3131:
; Line 2346:	    OCODE* newitem = beLocalAllocate<OCODE>(); 

	VAR START	newitem
	T1(EAX).UI =   #1.C
	PARM	T1(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5ocode~$qi:PC.UI
	T2(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_newitem:LINK(-4).A =   T2(EAX).A
; Line 2347:	    newitem->opcode = (e_opcode)op_blockend; 

	T3(ECX).A =   _newitem:LINK(-4).A
	T4(EAX).I =   #3.C
	*(T3(ECX) + 8).A.I =   T4(EAX).I
; Line 2348:	    add_peep(newitem); 

	T5(EAX).A =   _newitem:LINK(-4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@occx86@add_peep$qp5ocode:PC.UI
	PARMADJ	#4.N
; Line 2349:	} 

	BLOCK END
	BLOCK 4

L_3132:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3130:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_varstart$qp15@Optimizer@quad


global @occx86@asm_varstart$qp15@Optimizer@quad
@occx86@asm_varstart$qp15@Optimizer@quad:
; Line 2351:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_3137:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3139:
; Line 2352:	    OCODE* newitem = beLocalAllocate<OCODE>(); 

	VAR START	newitem
	T1(EAX).UI =   #1.C
	PARM	T1(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5ocode~$qi:PC.UI
	T2(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_newitem:LINK(-4).A =   T2(EAX).A
; Line 2353:	    newitem->opcode = (e_opcode)op_varstart; 

	T3(EAX).A =   _newitem:LINK(-4).A
	*(T3(EAX) + 8).A.I =   #4.I
; Line 2354:	    newitem->oper1 = (AMODE*)(q->dc.left->offset->sp);   

	T4(EAX).A =   _q:LINK(4).A
	T5(EAX).A =   *(T4(EAX) + 4+0).A.A
	T6(EAX).A =   *(T5(EAX) + 4).A.A
	T7(ECX).A =   *(T6(EAX) + 8).A.A
	T8(EAX).A =   _newitem:LINK(-4).A
	*(T8(EAX) + C).A.A =   T7(ECX).A
; Line 2355:	    add_peep(newitem); 

	T9(EAX).A =   _newitem:LINK(-4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@occx86@add_peep$qp5ocode:PC.UI
	PARMADJ	#4.N
; Line 2356:	} 

	BLOCK END
	BLOCK 4

L_3140:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3138:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_func$qp15@Optimizer@quad


global @occx86@asm_func$qp15@Optimizer@quad
@occx86@asm_func$qp15@Optimizer@quad:
; Line 2358:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_3145:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3147:
; Line 2359:	    OCODE* newitem = beLocalAllocate<OCODE>(); 

	VAR START	newitem
	T1(EAX).UI =   #1.C
	PARM	T1(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5ocode~$qi:PC.UI
	T2(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_newitem:LINK(-4).A =   T2(EAX).A
; Line 2360:	    newitem->opcode = (e_opcode)(q->dc.v.label ? op_funcstart : op_funcend); 

	T3(EAX).A =   _q:LINK(4).A
	T4(EAX).L =   *(T3(EAX) + 0+C+0).A.L
	CONDGO	L_3150:PC ; T4(EAX).L == #0.L
	BLOCK END
	BLOCK 4
	T5(ECX).I =   #5.C
	GOTO	L_3151:PC
	BLOCK END
	BLOCK 5

L_3150:
	T5(ECX).I =   #6.I
	BLOCK END
	BLOCK 6

L_3151:
	T6(EAX).A =   _newitem:LINK(-4).A
	*(T6(EAX) + 8).A.I =   T5(ECX).I
; Line 2361:	    newitem->oper1 = (AMODE*)(q->dc.left->offset->sp);   

	T7(EAX).A =   _q:LINK(4).A
	T8(EAX).A =   *(T7(EAX) + 4+0).A.A
	T9(EAX).A =   *(T8(EAX) + 4).A.A
	T10(ECX).A =   *(T9(EAX) + 8).A.A
	T11(EAX).A =   _newitem:LINK(-4).A
	*(T11(EAX) + C).A.A =   T10(ECX).A
; Line 2362:	    add_peep(newitem); 

	T12(EAX).A =   _newitem:LINK(-4).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@occx86@add_peep$qp5ocode:PC.UI
	PARMADJ	#4.N
; Line 2363:	} 

	BLOCK END
	BLOCK 7

L_3148:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_3146:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_passthrough$qp15@Optimizer@quad


global @occx86@asm_passthrough$qp15@Optimizer@quad
@occx86@asm_passthrough$qp15@Optimizer@quad:
; Line 2365:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_3155:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3157:
; Line 2366:	    OCODE* val = (OCODE*)q->dc.left; 

	VAR START	val
	T5(EAX).A =   _q:LINK(4).A
	T6(EAX).A =   *(T5(EAX) + 4+0).A.A
	_val:LINK(-4).A =   T6(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3159:
; Line 2367:	    if (val->oper1 && val->oper1->mode == am_indisp && val->oper1->preg == EBP) 

	T7(EAX).A =   _val:LINK(-4).A
	T8(EAX).A =   *(T7(EAX) + C).A.A
	CONDGO	L_3158:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	T9(EAX).A =   _val:LINK(-4).A
	T10(EAX).A =   *(T9(EAX) + C).A.A
	T11(EAX).I =   *(T10(EAX) + 0).A.I
	CONDGO	L_3158:PC ; T11(EAX).I != #C.C
	BLOCK END
	BLOCK 6
	T12(EAX).A =   _val:LINK(-4).A
	T13(EAX).A =   *(T12(EAX) + C).A.A
	T14(AL).C =   *(T13(EAX) + 4).A.C
	CONDGO	L_3158:PC ; T14(AL).C != #5.C
	BLOCK END
	BLOCK 7
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_3160:
; Line 2368:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_3161:
; Line 2369:	        Optimizer::SimpleSymbol* sp = varsp(val->oper1->offset); 

	VAR START	sp
	T15(EAX).A =   _val:LINK(-4).A
	T16(EAX).A =   *(T15(EAX) + C).A.A
	T17(EAX).A =   *(T16(EAX) + C).A.A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@Optimizer@varsp$qp27@Optimizer@SimpleExpression:PC.UI
	T18(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_sp:LINK(-16).A =   T18(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_3163:
; Line 2370:	        if (usingEsp) 

	T19(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_3162:PC ; T19(EAX).I == #0.C
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_3164:
; Line 2371:	            val->oper1->preg = ESP; 

	T20(EAX).A =   _val:LINK(-4).A
	T21(EAX).A =   *(T20(EAX) + C).A.A
	*(T21(EAX) + 4).A.C =   #4.C
	BLOCK END
	BLOCK 13

L_3165:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_3162:
	BLOCK END
	BLOCK 15

L_3166:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_3168:
; Line 2372:	        if (sp && sp->regmode == 2) 

	T22(EAX).A =   _sp:LINK(-16).A
	CONDGO	L_3167:PC ; T22(EAX).A == #0.A
	BLOCK END
	BLOCK 17
	T23(EAX).A =   _sp:LINK(-16).A
	T24(EAX).UI =   *(T23(EAX) + 58){15:2}.A.UI
	CONDGO	L_3167:PC ; T24(EAX).UI != #2.UI
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_3169:
; Line 2373:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_3170:
; Line 2374:	            int len = -(sp->offset >> 8); 

	VAR START	len
	T25(EAX).A =   _sp:LINK(-16).A
	T26(EAX).I =   *(T25(EAX) + 24).A.I
	T27(EAX).I = T26(EAX).I S>> #8.I
	T28(EAX).I =  - T27(EAX).I
	_len:LINK(-20).I =   T28(EAX).I
; Line 2375:	            val->oper1 = makedreg(-sp->offset & 255); 

	T29(EAX).A =   _sp:LINK(-16).A
	T30(EAX).I =   *(T29(EAX) + 24).A.I
	T31(EAX).I =  - T30(EAX).I
	T32(EAX).I = T31(EAX).I & #FF.I
	PARM	T32(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T33(ECX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T34(EAX).A =   _val:LINK(-4).A
	*(T34(EAX) + C).A.A =   T33(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_3172:
; Line 2376:	            if (len == 2 || len == -2) 

	T35(EAX).I =   _len:LINK(-20).I
	CONDGO	L_3230:PC ; T35(EAX).I == #2.C
	BLOCK END
	BLOCK 22
	T36(EAX).I =   _len:LINK(-20).I
	CONDGO	L_3171:PC ; T36(EAX).I != #FFFFFFFFFFFFFFFE.I
	BLOCK END
	BLOCK 23

L_3230:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_3173:
; Line 2377:	                len = ISZ_USHORT; 

	_len:LINK(-20).I =   #4.I
	BLOCK END
	BLOCK 25

L_3175:
	DBG BLOCK END
	GOTO	L_3174:PC
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_3176:
	BLOCK END
	BLOCK 28

L_3171:
; Line 2378:	            else if (len == 1 || len == -1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_3178:
	T37(EAX).I =   _len:LINK(-20).I
	CONDGO	L_3231:PC ; T37(EAX).I == #1.C
	BLOCK END
	BLOCK 30
	T38(EAX).I =   _len:LINK(-20).I
	CONDGO	L_3177:PC ; T38(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 31

L_3231:
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_3179:
; Line 2379:	                len = ISZ_UCHAR; 

	T40(EAX).I =   #3.C
	_len:LINK(-20).I =   T40(EAX).I
	BLOCK END
	BLOCK 33

L_3181:
	DBG BLOCK END
	GOTO	L_3180:PC
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_3182:
	BLOCK END
	BLOCK 36

L_3177:
; Line 2380:	            else 

; Line 2381:	                len = ISZ_UINT; 

	T39(EAX).I =   #7.C
	_len:LINK(-20).I =   T39(EAX).I
	BLOCK END
	BLOCK 37

L_3183:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_3180:
	BLOCK END
	BLOCK 39

L_3184:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_3185:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_3174:
	BLOCK END
	BLOCK 42

L_3186:
	DBG BLOCK END
; Line 2382:	            val->oper1->length = len; 

	T41(CL).C =   _len:LINK(-20).I
	T42(EAX).A =   _val:LINK(-4).A
	T43(EAX).A =   *(T42(EAX) + C).A.A
	*(T43(EAX) + 8).A.C =   T41(CL).C
; Line 2383:	        } 

	BLOCK END
	BLOCK 43

L_3187:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_3188:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_3167:
	BLOCK END
	BLOCK 46

L_3189:
	DBG BLOCK END
; Line 2384:	    } 

	BLOCK END
	BLOCK 47

L_3190:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_3191:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_3158:
	BLOCK END
	BLOCK 50

L_3192:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_3194:
; Line 2385:	    if (val->oper2 && val->oper2->mode == am_indisp && val->oper2->preg == EBP) 

	T44(EAX).A =   _val:LINK(-4).A
	T45(EAX).A =   *(T44(EAX) + 10).A.A
	CONDGO	L_3193:PC ; T45(EAX).A == #0.A
	BLOCK END
	BLOCK 52
	T46(EAX).A =   _val:LINK(-4).A
	T47(EAX).A =   *(T46(EAX) + 10).A.A
	T48(EAX).I =   *(T47(EAX) + 0).A.I
	CONDGO	L_3193:PC ; T48(EAX).I != #C.C
	BLOCK END
	BLOCK 53
	T49(EAX).A =   _val:LINK(-4).A
	T50(EAX).A =   *(T49(EAX) + 10).A.A
	T51(AL).C =   *(T50(EAX) + 4).A.C
	CONDGO	L_3193:PC ; T51(AL).C != #5.C
	BLOCK END
	BLOCK 54
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_3195:
; Line 2386:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_3196:
; Line 2387:	        Optimizer::SimpleSymbol* sp = varsp(val->oper2->offset); 

	VAR START	sp
	T52(EAX).A =   _val:LINK(-4).A
	T53(EAX).A =   *(T52(EAX) + 10).A.A
	T54(EAX).A =   *(T53(EAX) + C).A.A
	PARM	T54(EAX).A
	TAG
	GOSUB	#@Optimizer@varsp$qp27@Optimizer@SimpleExpression:PC.UI
	T55(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_sp:LINK(-8).A =   T55(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_3198:
; Line 2388:	        if (usingEsp) 

	T56(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_3197:PC ; T56(EAX).I == #0.C
	BLOCK END
	BLOCK 58
	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_3199:
; Line 2389:	            val->oper2->preg = ESP; 

	T57(EAX).A =   _val:LINK(-4).A
	T58(EAX).A =   *(T57(EAX) + 10).A.A
	*(T58(EAX) + 4).A.C =   #4.C
	BLOCK END
	BLOCK 60

L_3200:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_3197:
	BLOCK END
	BLOCK 62

L_3201:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_3203:
; Line 2390:	        if (sp && sp->regmode == 2) 

	T59(EAX).A =   _sp:LINK(-8).A
	CONDGO	L_3202:PC ; T59(EAX).A == #0.A
	BLOCK END
	BLOCK 64
	T60(EAX).A =   _sp:LINK(-8).A
	T61(EAX).UI =   *(T60(EAX) + 58){15:2}.A.UI
	CONDGO	L_3202:PC ; T61(EAX).UI != #2.UI
	BLOCK END
	BLOCK 65
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_3204:
; Line 2391:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_3205:
; Line 2392:	            int len = -(sp->offset >> 8); 

	VAR START	len
	T62(EAX).A =   _sp:LINK(-8).A
	T63(EAX).I =   *(T62(EAX) + 24).A.I
	T64(EAX).I = T63(EAX).I S>> #8.I
	T65(EAX).I =  - T64(EAX).I
	_len:LINK(-12).I =   T65(EAX).I
; Line 2393:	            val->oper2 = makedreg(-sp->offset & 255); 

	T66(EAX).A =   _sp:LINK(-8).A
	T67(EAX).I =   *(T66(EAX) + 24).A.I
	T68(EAX).I =  - T67(EAX).I
	T69(EAX).I = T68(EAX).I & #FF.I
	PARM	T69(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T70(ECX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	T71(EAX).A =   _val:LINK(-4).A
	*(T71(EAX) + 10).A.A =   T70(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_3207:
; Line 2394:	            if (len == 2 || len == -2) 

	T72(EAX).I =   _len:LINK(-12).I
	CONDGO	L_3232:PC ; T72(EAX).I == #2.C
	BLOCK END
	BLOCK 69
	T73(EAX).I =   _len:LINK(-12).I
	CONDGO	L_3206:PC ; T73(EAX).I != #FFFFFFFFFFFFFFFE.I
	BLOCK END
	BLOCK 70

L_3232:
	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_3208:
; Line 2395:	                len = ISZ_USHORT; 

	_len:LINK(-12).I =   #4.I
	BLOCK END
	BLOCK 72

L_3210:
	DBG BLOCK END
	GOTO	L_3209:PC
	BLOCK END
	BLOCK 73
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_3211:
	BLOCK END
	BLOCK 75

L_3206:
; Line 2396:	            else if (len == 1 || len == -1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_3213:
	T74(EAX).I =   _len:LINK(-12).I
	CONDGO	L_3233:PC ; T74(EAX).I == #1.C
	BLOCK END
	BLOCK 77
	T75(EAX).I =   _len:LINK(-12).I
	CONDGO	L_3212:PC ; T75(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 78

L_3233:
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_3214:
; Line 2397:	                len = ISZ_UCHAR; 

	T77(EAX).I =   #3.C
	_len:LINK(-12).I =   T77(EAX).I
	BLOCK END
	BLOCK 80

L_3216:
	DBG BLOCK END
	GOTO	L_3215:PC
	BLOCK END
	BLOCK 81
	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_3217:
	BLOCK END
	BLOCK 83

L_3212:
; Line 2398:	            else 

; Line 2399:	                len = ISZ_UINT; 

	T76(EAX).I =   #7.C
	_len:LINK(-12).I =   T76(EAX).I
	BLOCK END
	BLOCK 84

L_3218:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_3215:
	BLOCK END
	BLOCK 86

L_3219:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_3220:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_3209:
	BLOCK END
	BLOCK 89

L_3221:
	DBG BLOCK END
; Line 2400:	            val->oper2->length = len; 

	T78(CL).C =   _len:LINK(-12).I
	T79(EAX).A =   _val:LINK(-4).A
	T80(EAX).A =   *(T79(EAX) + 10).A.A
	*(T80(EAX) + 8).A.C =   T78(CL).C
; Line 2401:	        } 

	BLOCK END
	BLOCK 90

L_3222:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_3223:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_3202:
	BLOCK END
	BLOCK 93

L_3224:
	DBG BLOCK END
; Line 2402:	    } 

	BLOCK END
	BLOCK 94

L_3225:
	DBG BLOCK END
	BLOCK END
	BLOCK 95

L_3226:
	DBG BLOCK END
	BLOCK END
	BLOCK 96

L_3193:
	BLOCK END
	BLOCK 97

L_3227:
	DBG BLOCK END
; Line 2403:	    val = gen_code(val->opcode, val->oper1, val->oper2); 

	T81(EAX).A =   _val:LINK(-4).A
	T82(EAX).A =   *(T81(EAX) + 10).A.A
	PARM	T82(EAX).A
	T83(EAX).A =   _val:LINK(-4).A
	T84(EAX).A =   *(T83(EAX) + C).A.A
	PARM	T84(EAX).A
	T85(EAX).A =   _val:LINK(-4).A
	T86(EAX).I =   *(T85(EAX) + 8).A.I
	PARM	T86(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	T87(EAX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	_val:LINK(-4).A =   T87(EAX).A
; Line 2404:	    val->noopt = true; 

	T88(EAX).A =   _val:LINK(-4).A
	*(T88(EAX) + 25).A.C =   #1.C
; Line 2405:	} 

	BLOCK END
	BLOCK 98

L_3228:
	DBG BLOCK END
	BLOCK END
	BLOCK 99

L_3156:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_datapassthrough$qp15@Optimizer@quad


global @occx86@asm_datapassthrough$qp15@Optimizer@quad
@occx86@asm_datapassthrough$qp15@Optimizer@quad:
; Line 2406:	void asm_datapassthrough(Optimizer::QUAD* q)   { (void)q; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3237:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3239:
	BLOCK END
	BLOCK 4

L_3240:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3238:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_label$qp15@Optimizer@quad


global @occx86@asm_label$qp15@Optimizer@quad
@occx86@asm_label$qp15@Optimizer@quad:
; Line 2408:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_3245:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3247:
; Line 2409:	    OCODE* out = beLocalAllocate<OCODE>(); 

	VAR START	out
	T2(EAX).UI =   #1.C
	PARM	T2(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5ocode~$qi:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_out:LINK(-4).A =   T3(EAX).A
; Line 2410:	    out->opcode = (e_opcode)op_label; 

	T4(ECX).A =   _out:LINK(-4).A
	T5(EAX).I =   #9.C
	*(T4(ECX) + 8).A.I =   T5(EAX).I
; Line 2411:	    out->oper1 = make_label(q->dc.v.label); 

	T6(EAX).A =   _q:LINK(4).A
	T7(EAX).I =   *(T6(EAX) + 0+C+0).A.L
	PARM	T7(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T8(ECX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T9(EAX).A =   _out:LINK(-4).A
	*(T9(EAX) + C).A.A =   T8(ECX).A
; Line 2412:	    add_peep(out); 

	T10(EAX).A =   _out:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@occx86@add_peep$qp5ocode:PC.UI
	PARMADJ	#4.N
; Line 2413:	} 

	BLOCK END
	BLOCK 4

L_3248:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3246:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_goto$qp15@Optimizer@quad


global @occx86@asm_goto$qp15@Optimizer@quad
@occx86@asm_goto$qp15@Optimizer@quad:
; Line 2415:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_3253:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3255:
; Line 2416:	    if (q->dc.opcode == Optimizer::i_goto) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3257:
	T3(EAX).A =   _q:LINK(4).A
	T4(EAX).I =   *(T3(EAX) + 0+0).A.I
	CONDGO	L_3256:PC ; T4(EAX).I != #8.I
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3258:
; Line 2417:	        gen_branch(op_jmp, q->dc.v.label); 

	T5(EAX).A =   _q:LINK(4).A
	T6(EAX).I =   *(T5(EAX) + 0+C+0).A.L
	PARM	T6(EAX).I
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 7

L_3260:
	DBG BLOCK END
	GOTO	L_3259:PC
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_3261:
	BLOCK END
	BLOCK 10

L_3256:
; Line 2418:	    else   

; Line 2419:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_3262:
; Line 2420:	        AMODE* ap; 

	VAR START	ap
	VAR START	sp
; Line 2421:	        Optimizer::SimpleSymbol* sp = q->dc.left->offset->sp; 

	T7(EAX).A =   _q:LINK(4).A
	T8(EAX).A =   *(T7(EAX) + 4+0).A.A
	T9(EAX).A =   *(T8(EAX) + 4).A.A
	T10(EAX).A =   *(T9(EAX) + 8).A.A
	_sp:LINK(-8).A =   T10(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_3264:
; Line 2422:	        if (sp->storage_class == Optimizer::scc_temp) 

	T11(EAX).A =   _sp:LINK(-8).A
	T12(EAX).I =   *(T11(EAX) + 1C).A.I
	CONDGO	L_3263:PC ; T12(EAX).I != #1E.I
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_3265:
; Line 2423:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_3266:
; Line 2424:	            ap = makedreg(Optimizer::chosenAssembler->arch->regMap[q->leftColor & 0xff][0]); 

	T13(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T14(EAX).A =   *(T13(EAX) + 44).A.A
	T15(ECX).A =   *(T14(EAX) + 58).A.A
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).I =   *(T16(EAX) + 94).A.I
	T18(EAX).I = T17(EAX).I & #FF.I
	T19(EAX).I =   *(T15(ECX) + T18(EAX) * 8).A.I
	PARM	T19(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T20(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T20(EAX).A
; Line 2425:	            ap->liveRegs = q->liveRegs; 

	T21(EAX).A =   _q:LINK(4).A
	T22(ECX).I =   *(T21(EAX) + 48).A.ULL
	T23(EAX).A =   _ap:LINK(-4).A
	*(T23(EAX) + 10).A.I =   T22(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_3268:
; Line 2426:	            if (q->dc.left->mode == Optimizer::i_ind) 

	T24(EAX).A =   _q:LINK(4).A
	T25(EAX).A =   *(T24(EAX) + 4+0).A.A
	T26(EAX).I =   *(T25(EAX) + 0).A.I
	CONDGO	L_3267:PC ; T26(EAX).I != #3.C
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_3269:
; Line 2427:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_3270:
; Line 2428:	                ap->mode = am_indisp; 

	T27(ECX).A =   _ap:LINK(-4).A
	T28(EAX).I =   #C.C
	*(T27(ECX) + 0).A.I =   T28(EAX).I
; Line 2429:	                ap->offset = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T29(EDX:EAX).ULL =   #0.C
	PARM	T29(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T30(ECX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	T31(EAX).A =   _ap:LINK(-4).A
	*(T31(EAX) + C).A.A =   T30(ECX).A
; Line 2430:	            } 

	BLOCK END
	BLOCK 20

L_3271:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_3272:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_3267:
	BLOCK END
	BLOCK 23

L_3273:
	DBG BLOCK END
; Line 2431:	        } 

	BLOCK END
	BLOCK 24

L_3274:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_3276:
	DBG BLOCK END
	GOTO	L_3275:PC
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_3277:
	BLOCK END
	BLOCK 28

L_3263:
; Line 2432:	        else 

; Line 2433:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_3278:
; Line 2434:	            ap = make_offset(q->dc.left->offset); 

	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 4+0).A.A
	T34(EAX).A =   *(T33(EAX) + 4).A.A
	PARM	T34(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T35(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-4).A =   T35(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_3280:
; Line 2435:	            if (q->dc.left->offset->type == Optimizer::se_pc) 

	T36(EAX).A =   _q:LINK(4).A
	T37(EAX).A =   *(T36(EAX) + 4+0).A.A
	T38(EAX).A =   *(T37(EAX) + 4).A.A
	T39(EAX).I =   *(T38(EAX) + 0).A.I
	CONDGO	L_3279:PC ; T39(EAX).I != #E.I
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_3281:
; Line 2436:	                ap->mode = am_immed; 

	T40(EAX).A =   _ap:LINK(-4).A
	*(T40(EAX) + 0).A.I =   #10.I
	BLOCK END
	BLOCK 33

L_3282:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_3279:
	BLOCK END
	BLOCK 35

L_3283:
	DBG BLOCK END
; Line 2437:	            ap->liveRegs = q->liveRegs; 

	T41(EAX).A =   _q:LINK(4).A
	T42(ECX).I =   *(T41(EAX) + 48).A.ULL
	T43(EAX).A =   _ap:LINK(-4).A
	*(T43(EAX) + 10).A.I =   T42(ECX).I
; Line 2438:	        } 

	BLOCK END
	BLOCK 36

L_3284:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_3285:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_3275:
	BLOCK END
	BLOCK 39

L_3286:
	DBG BLOCK END
; Line 2439:	        gen_code(op_jmp, ap, 0); 

	T44(EAX).A =   #0.C
	PARM	T44(EAX).A
	T45(EAX).A =   _ap:LINK(-4).A
	PARM	T45(EAX).A
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2440:	    } 

	BLOCK END
	BLOCK 40

L_3287:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_3288:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_3259:
	BLOCK END
	BLOCK 43

L_3289:
	DBG BLOCK END
; Line 2441:	} 

	BLOCK END
	BLOCK 44

L_3290:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_3254:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_parm$qp15@Optimizer@quad


global @occx86@asm_parm$qp15@Optimizer@quad
@occx86@asm_parm$qp15@Optimizer@quad:
; Line 2443:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#40.UI
	BLOCK END
	BLOCK 2

L_3295:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3297:
; Line 2444:	    enum e_opcode op = op_mov; 

	VAR START	op
	_op:LINK(-4).I =   #11D.I
	VAR START	apl
; Line 2445:	    AMODE *apl = nullptr, *aph = nullptr; 

	T33(EAX).A =   #0.UI
	_apl:LINK(-8).A =   T33(EAX).A
	VAR START	aph
	T34(EAX).A =   #0.UI
	_aph:LINK(-12).A =   T34(EAX).A
; Line 2446:	    getAmodes(q, &op, q->dc.left, &apl, &aph); 

	T35(EAX).A =   #_aph:LINK(-12).A
	PARM	T35(EAX).A
	T36(EAX).A =   #_apl:LINK(-8).A
	PARM	T36(EAX).A
	T37(EAX).A =   _q:LINK(4).A
	T38(EAX).A =   *(T37(EAX) + 4+0).A.A
	PARM	T38(EAX).A
	T39(EAX).A =   #_op:LINK(-4).A
	PARM	T39(EAX).A
	T40(EAX).A =   _q:LINK(4).A
	PARM	T40(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3299:
; Line 2447:	    if (q->dc.left->mode == Optimizer::i_immed) 

	T41(EAX).A =   _q:LINK(4).A
	T42(EAX).A =   *(T41(EAX) + 4+0).A.A
	T43(EAX).I =   *(T42(EAX) + 0).A.I
	CONDGO	L_3298:PC ; T43(EAX).I != #1.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3300:
; Line 2448:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_3301:
; Line 2449:	        if (q->dc.left->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_3303:
	T44(EAX).A =   _q:LINK(4).A
	T45(EAX).A =   *(T44(EAX) + 4+0).A.A
	T46(EAX).I =   *(T45(EAX) + 19).A.C
	CONDGO	L_3302:PC ; T46(EAX).I S< #18.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_3304:
; Line 2450:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_3305:
; Line 2451:	            int sz = 8; 

	VAR START	sz
	_sz:LINK(-64).I =   #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_3307:
; Line 2452:	            if (q->dc.left->size == ISZ_FLOAT || q->dc.left->size == ISZ_IFLOAT || q->dc.left->size == ISZ_CFLOAT) 

	T47(EAX).A =   _q:LINK(4).A
	T48(EAX).A =   *(T47(EAX) + 4+0).A.A
	T49(AL).C =   *(T48(EAX) + 19).A.C
	CONDGO	L_3525:PC ; T49(AL).C == #12.C
	BLOCK END
	BLOCK 13
	T50(EAX).A =   _q:LINK(4).A
	T51(EAX).A =   *(T50(EAX) + 4+0).A.A
	T52(AL).C =   *(T51(EAX) + 19).A.C
	CONDGO	L_3525:PC ; T52(AL).C == #15.C
	BLOCK END
	BLOCK 14
	T53(EAX).A =   _q:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + 4+0).A.A
	T55(AL).C =   *(T54(EAX) + 19).A.C
	CONDGO	L_3306:PC ; T55(AL).C != #18.C
	BLOCK END
	BLOCK 15

L_3525:
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_3308:
; Line 2453:	                sz = 4; 

	_sz:LINK(-64).I =   #4.I
	BLOCK END
	BLOCK 17

L_3309:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_3306:
	BLOCK END
	BLOCK 19

L_3310:
	DBG BLOCK END
; Line 2454:	            pushlevel += sz * 2; 

	T56(ECX).I =   @occx86@pushlevel:RAM.I
	T57(EAX).I =   _sz:LINK(-64).I
	T58(EAX).I = T57(EAX).I << #1.C
	T59(EAX).I = T56(ECX).I + T58(EAX).I
	@occx86@pushlevel:RAM.I =   T59(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_3312:
; Line 2455:	            if (apl->mode == am_xmmreg) 

	T60(EAX).A =   _apl:LINK(-8).A
	T61(EAX).I =   *(T60(EAX) + 0).A.I
	CONDGO	L_3311:PC ; T61(EAX).I != #A.I
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_3313:
; Line 2456:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_3314:
; Line 2457:	                gen_codes(op_sub, ISZ_UINT, makedreg(ESP), aimmed(sz * 2)); 

	T62(EAX).I =   _sz:LINK(-64).I
	T63(EAX).I = T62(EAX).I << #1.C
	T64(EDX:EAX).ULL =   T63(EAX).I
	PARM	T64(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T65(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T65(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T66(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T66(EAX).A
	T67(EAX).UI =   #7.C
	PARM	T67(EAX).UI
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2458:	                gen_code_sse(op_movss, op_movsd, q->dc.left->size, make_stack(-sz), aph); 

	T68(EAX).A =   _aph:LINK(-12).A
	PARM	T68(EAX).A
	T69(EAX).I =   _sz:LINK(-64).I
	T70(EAX).I =  - T69(EAX).I
	PARM	T70(EAX).I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T71(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T71(EAX).A
	T72(EAX).A =   _q:LINK(4).A
	T73(EAX).A =   *(T72(EAX) + 4+0).A.A
	T74(EAX).I =   *(T73(EAX) + 19).A.C
	PARM	T74(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2459:	                gen_code_sse(op_movss, op_movsd, q->dc.left->size, make_stack(0), apl); 

	T75(EAX).A =   _apl:LINK(-8).A
	PARM	T75(EAX).A
	T76(EAX).UI =   #0.C
	PARM	T76(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T77(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T77(EAX).A
	T78(EAX).A =   _q:LINK(4).A
	T79(EAX).A =   *(T78(EAX) + 4+0).A.A
	T80(EAX).I =   *(T79(EAX) + 19).A.C
	PARM	T80(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2460:	            } 

	BLOCK END
	BLOCK 24

L_3315:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_3317:
	DBG BLOCK END
	GOTO	L_3316:PC
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_3318:
	BLOCK END
	BLOCK 28

L_3311:
; Line 2461:	            else 

; Line 2462:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_3319:
; Line 2463:	                if (sz == 8) 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_3321:
	T81(EAX).I =   _sz:LINK(-64).I
	CONDGO	L_3320:PC ; T81(EAX).I != #8.I
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_3322:
; Line 2464:	                    gen_codes(op_push, ISZ_UINT, 
; Line 2468:	                gen_codes(op_push, ISZ_UINT, aph, NULL); 

	T82(EAX).A =   #0.C
	PARM	T82(EAX).A
	T83(EDX:EAX).ULL =   #4.I
	PARM	T83(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T84(EAX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	PARM	T84(EAX).A
	T85(EAX).A =   _aph:LINK(-12).A
	T86(EAX).A =   *(T85(EAX) + C).A.A
	PARM	T86(EAX).A
	T87(EAX).UI =   #1.C
	PARM	T87(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T88(EAX).A =   RV.T5(EAX).A
	PARMADJ	#C.N
	PARM	T88(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T89(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T89(EAX).A
	T90(EAX).UI =   #7.C
	PARM	T90(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 33

L_3323:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_3320:
	BLOCK END
	BLOCK 35

L_3324:
	DBG BLOCK END
; Line 2467:	                              NULL); 

	T91(EAX).A =   #0.C
	PARM	T91(EAX).A
	T92(EAX).A =   _aph:LINK(-12).A
	PARM	T92(EAX).A
	T93(EAX).UI =   #7.C
	PARM	T93(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_3326:
; Line 2469:	                if (sz == 8) 

	T94(EAX).I =   _sz:LINK(-64).I
	CONDGO	L_3325:PC ; T94(EAX).I != #8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_3327:
; Line 2470:	                    gen_codes(op_push, ISZ_UINT, 
; Line 2474:	                gen_codes(op_push, ISZ_UINT, apl, NULL); 

	T95(EAX).A =   #0.C
	PARM	T95(EAX).A
	T96(EDX:EAX).ULL =   #4.I
	PARM	T96(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T97(EAX).A =   RV.T7(EAX).A
	PARMADJ	#C.N
	PARM	T97(EAX).A
	T98(EAX).A =   _apl:LINK(-8).A
	T99(EAX).A =   *(T98(EAX) + C).A.A
	PARM	T99(EAX).A
	T100(EAX).UI =   #1.C
	PARM	T100(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T101(EAX).A =   RV.T8(EAX).A
	PARMADJ	#C.N
	PARM	T101(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T102(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	PARM	T102(EAX).A
	T103(EAX).UI =   #7.C
	PARM	T103(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 39

L_3328:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_3325:
	BLOCK END
	BLOCK 41

L_3329:
	DBG BLOCK END
; Line 2473:	                              NULL); 

	T104(EAX).A =   #0.C
	PARM	T104(EAX).A
	T105(EAX).A =   _apl:LINK(-8).A
	PARM	T105(EAX).A
	T106(EAX).UI =   #7.C
	PARM	T106(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2475:	            } 

	BLOCK END
	BLOCK 42

L_3330:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_3331:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_3316:
	BLOCK END
	BLOCK 45

L_3332:
	DBG BLOCK END
; Line 2476:	        } 

	BLOCK END
	BLOCK 46

L_3333:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_3335:
	DBG BLOCK END
	GOTO	L_3334:PC
	BLOCK END
	BLOCK 48
	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_3336:
	BLOCK END
	BLOCK 50

L_3302:
; Line 2477:	        else if (q->dc.left->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_3338:
	T107(EAX).A =   _q:LINK(4).A
	T108(EAX).A =   *(T107(EAX) + 4+0).A.A
	T109(EAX).I =   *(T108(EAX) + 19).A.C
	CONDGO	L_3337:PC ; T109(EAX).I S< #12.C
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_3339:
; Line 2478:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_3340:
; Line 2479:	            int sz = 8; 

	VAR START	sz
	_sz:LINK(-60).I =   #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_3342:
; Line 2480:	            if (q->dc.left->size == ISZ_FLOAT || q->dc.left->size == ISZ_IFLOAT || q->dc.left->size == ISZ_CFLOAT) 

	T110(EAX).A =   _q:LINK(4).A
	T111(EAX).A =   *(T110(EAX) + 4+0).A.A
	T112(AL).C =   *(T111(EAX) + 19).A.C
	CONDGO	L_3526:PC ; T112(AL).C == #12.C
	BLOCK END
	BLOCK 56
	T113(EAX).A =   _q:LINK(4).A
	T114(EAX).A =   *(T113(EAX) + 4+0).A.A
	T115(AL).C =   *(T114(EAX) + 19).A.C
	CONDGO	L_3526:PC ; T115(AL).C == #15.C
	BLOCK END
	BLOCK 57
	T116(EAX).A =   _q:LINK(4).A
	T117(EAX).A =   *(T116(EAX) + 4+0).A.A
	T118(AL).C =   *(T117(EAX) + 19).A.C
	CONDGO	L_3341:PC ; T118(AL).C != #18.C
	BLOCK END
	BLOCK 58

L_3526:
	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_3343:
; Line 2481:	                sz = 4; 

	_sz:LINK(-60).I =   #4.I
	BLOCK END
	BLOCK 60

L_3344:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_3341:
	BLOCK END
	BLOCK 62

L_3345:
	DBG BLOCK END
; Line 2482:	            pushlevel += sz; 

	T119(ECX).I =   @occx86@pushlevel:RAM.I
	T120(EAX).I =   _sz:LINK(-60).I
	T121(EAX).I = T119(ECX).I + T120(EAX).I
	@occx86@pushlevel:RAM.I =   T121(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_3347:
; Line 2483:	            if (apl->mode == am_xmmreg) 

	T122(EAX).A =   _apl:LINK(-8).A
	T123(EAX).I =   *(T122(EAX) + 0).A.I
	CONDGO	L_3346:PC ; T123(EAX).I != #A.I
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_3348:
; Line 2484:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_3349:
; Line 2485:	                if (sz == 4) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_3351:
	T124(EAX).I =   _sz:LINK(-60).I
	CONDGO	L_3350:PC ; T124(EAX).I != #4.I
	BLOCK END
	BLOCK 68
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_3352:
; Line 2486:	                    gen_codes(op_push, ISZ_UINT, makedreg(ECX), NULL); 

	T125(EAX).A =   #0.C
	PARM	T125(EAX).A
	T126(EAX).UI =   #1.C
	PARM	T126(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T127(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	PARM	T127(EAX).A
	T128(EAX).UI =   #7.C
	PARM	T128(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 70

L_3354:
	DBG BLOCK END
	GOTO	L_3353:PC
	BLOCK END
	BLOCK 71
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_3355:
	BLOCK END
	BLOCK 73

L_3350:
; Line 2487:	                else 

; Line 2488:	                    gen_codes(op_sub, ISZ_UINT, makedreg(ESP), aimmed(sz)); 

	T129(EDX:EAX).ULL =   _sz:LINK(-60).I
	PARM	T129(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T130(EAX).A =   RV.T11(EAX).A
	PARMADJ	#8.N
	PARM	T130(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T131(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T131(EAX).A
	T132(EAX).UI =   #7.C
	PARM	T132(EAX).UI
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 74

L_3356:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_3353:
	BLOCK END
	BLOCK 76

L_3357:
	DBG BLOCK END
; Line 2489:	                gen_code_sse(op_movss, op_movsd, q->dc.left->size, make_stack(0), apl); 

	T133(EAX).A =   _apl:LINK(-8).A
	PARM	T133(EAX).A
	T134(EAX).UI =   #0.C
	PARM	T134(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T135(EAX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	PARM	T135(EAX).A
	T136(EAX).A =   _q:LINK(4).A
	T137(EAX).A =   *(T136(EAX) + 4+0).A.A
	T138(EAX).I =   *(T137(EAX) + 19).A.C
	PARM	T138(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2490:	            } 

	BLOCK END
	BLOCK 77

L_3358:
	DBG BLOCK END
	BLOCK END
	BLOCK 78

L_3360:
	DBG BLOCK END
	GOTO	L_3359:PC
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_3361:
	BLOCK END
	BLOCK 81

L_3346:
; Line 2491:	            else 

; Line 2492:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_3362:
; Line 2493:	                if (sz == 8) 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_3364:
	T139(EAX).I =   _sz:LINK(-60).I
	CONDGO	L_3363:PC ; T139(EAX).I != #8.I
	BLOCK END
	BLOCK 84
	DBG BLOCK START
	BLOCK END
	BLOCK 85

L_3365:
; Line 2494:	                    gen_codes(op_push, ISZ_UINT, 
; Line 2498:	                gen_codes(op_push, ISZ_UINT, apl, NULL); 

	T140(EAX).A =   #0.C
	PARM	T140(EAX).A
	T141(EDX:EAX).ULL =   #4.I
	PARM	T141(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T142(EAX).A =   RV.T14(EAX).A
	PARMADJ	#C.N
	PARM	T142(EAX).A
	T143(EAX).A =   _apl:LINK(-8).A
	T144(EAX).A =   *(T143(EAX) + C).A.A
	PARM	T144(EAX).A
	T145(EAX).UI =   #1.C
	PARM	T145(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T146(EAX).A =   RV.T15(EAX).A
	PARMADJ	#C.N
	PARM	T146(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T147(EAX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	PARM	T147(EAX).A
	T148(EAX).UI =   #7.C
	PARM	T148(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 86

L_3366:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_3363:
	BLOCK END
	BLOCK 88

L_3367:
	DBG BLOCK END
; Line 2497:	                              NULL); 

	T149(EAX).A =   #0.C
	PARM	T149(EAX).A
	T150(EAX).A =   _apl:LINK(-8).A
	PARM	T150(EAX).A
	T151(EAX).UI =   #7.C
	PARM	T151(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2499:	            } 

	BLOCK END
	BLOCK 89

L_3368:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_3369:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_3359:
	BLOCK END
	BLOCK 92

L_3370:
	DBG BLOCK END
; Line 2500:	        } 

	BLOCK END
	BLOCK 93

L_3371:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_3373:
	DBG BLOCK END
	GOTO	L_3372:PC
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_3374:
	BLOCK END
	BLOCK 97

L_3337:
; Line 2501:	        else 

; Line 2502:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_3375:
; Line 2503:	            int sz = q->dc.left->size; 

	VAR START	sz
	T152(EAX).A =   _q:LINK(4).A
	T153(EAX).A =   *(T152(EAX) + 4+0).A.A
	T154(EAX).I =   *(T153(EAX) + 19).A.C
	_sz:LINK(-44).I =   T154(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_3377:
; Line 2504:	            if (!isintconst(apl->offset)) 

	T155(EAX).A =   _apl:LINK(-8).A
	T156(EAX).A =   *(T155(EAX) + C).A.A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T157(AL).BOOL =   RV.T17(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_3376:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 100
	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_3378:
; Line 2505:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_3379:
; Line 2506:	                gen_codes(op_push, ISZ_UINT, apl, 0); 

	T158(EAX).A =   #0.C
	PARM	T158(EAX).A
	T159(EAX).A =   _apl:LINK(-8).A
	PARM	T159(EAX).A
	T160(EAX).UI =   #7.C
	PARM	T160(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2507:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2508:	            } 

	BLOCK END
	BLOCK 103

L_3380:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_3382:
	DBG BLOCK END
	GOTO	L_3381:PC
	BLOCK END
	BLOCK 105
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_3383:
	BLOCK END
	BLOCK 107

L_3376:
; Line 2509:	            else if (sz == ISZ_ULONGLONG || sz == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 108

L_3385:
	T161(EAX).I =   _sz:LINK(-44).I
	CONDGO	L_3527:PC ; T161(EAX).I == #B.C
	BLOCK END
	BLOCK 109
	T162(EAX).I =   _sz:LINK(-44).I
	CONDGO	L_3384:PC ; T162(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 110

L_3527:
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_3386:
; Line 2510:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_3387:
; Line 2511:	                gen_codes(op_push, ISZ_UINT, aph, 0); 

	T191(EAX).A =   #0.C
	PARM	T191(EAX).A
	T192(EAX).A =   _aph:LINK(-12).A
	PARM	T192(EAX).A
	T193(EAX).UI =   #7.C
	PARM	T193(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2512:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2513:	                gen_codes(op_push, ISZ_UINT, apl, 0); 

	T194(EAX).A =   #0.C
	PARM	T194(EAX).A
	T195(EAX).A =   _apl:LINK(-8).A
	PARM	T195(EAX).A
	T196(EAX).UI =   #7.C
	PARM	T196(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2514:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2515:	            } 

	BLOCK END
	BLOCK 113

L_3388:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_3390:
	DBG BLOCK END
	GOTO	L_3389:PC
	BLOCK END
	BLOCK 115
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_3391:
	BLOCK END
	BLOCK 117

L_3384:
; Line 2516:	            else 

; Line 2517:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_3392:
; Line 2518:	                long long i; 

	VAR START	i
; Line 2519:	                i = apl->offset->i; 

	T163(EAX).A =   _apl:LINK(-8).A
	T164(EAX).A =   *(T163(EAX) + C).A.A
	T165(EDX:EAX).LL =   *(T164(EAX) + 8).A.LL
	_i:LINK(-56).LL =   T165(EDX:EAX).LL
	DBG BLOCK START
	BLOCK END
	BLOCK 119

L_3394:
	DBG BLOCK END
; Line 2520:	                switch (sz) 

	T166(EAX).I =   _sz:LINK(-44).I
	COSWITCH(T166(EAX).I,#6.UI,#A.UI,L_3409:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFC.UI,L_3400:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFD.UI,L_3404:PC)
	SWBRANCH(#2.UI,L_3406:PC)
	SWBRANCH(#3.UI,L_3402:PC)
	SWBRANCH(#4.UI,L_3396:PC)
	SWBRANCH(#5.UI,L_3398:PC)
; Line 2521:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_3395:
	BLOCK END
	BLOCK 121

L_3396:
	BLOCK END
	BLOCK 122

L_3398:
	DBG BLOCK START
; Line 2523:	                    case ISZ_WCHAR: 
; Line 2524:	                        i &= 0xffff; 

; Line 2524:	                        i &= 0xffff; 

	T167(EDX:EAX).LL =   _i:LINK(-56).LL
	T168(EDX:EAX).LL = T167(EDX:EAX).LL & #FFFF.LL
	_i:LINK(-56).LL =   T168(EDX:EAX).LL
; Line 2525:	                        break; 

	GOTO	L_3393:PC
	BLOCK END
	BLOCK 123
	DBG BLOCK END
	BLOCK END
	BLOCK 124

L_3400:
	DBG BLOCK START
; Line 2526:	                    case -ISZ_USHORT: 
; Line 2527:	                        i &= 0xffff; 

; Line 2527:	                        i &= 0xffff; 

	T169(EDX:EAX).LL =   _i:LINK(-56).LL
	T170(EDX:EAX).LL = T169(EDX:EAX).LL & #FFFF.LL
	_i:LINK(-56).LL =   T170(EDX:EAX).LL
; Line 2528:	                        i |= i & 0x8000 ? 0xffff0000U : 0; 

	T171(EDX:EAX).LL =   _i:LINK(-56).LL
	T172(EBX:ESI).LL = T171(EDX:EAX).LL & #8000.LL
	CONDGO	L_3528:PC ; T172(EBX:ESI).LL == #0.LL
	BLOCK END
	BLOCK 125
	T173(ECX).UL =   #FFFF0000.UL
	GOTO	L_3529:PC
	BLOCK END
	BLOCK 126

L_3528:
	T173(ECX).UL =   #0.UL
	BLOCK END
	BLOCK 127

L_3529:
	T174(EBX:ESI).LL =   T173(ECX).UL
	T175(EDX:EAX).LL = T171(EDX:EAX).LL | T174(EBX:ESI).LL
	_i:LINK(-56).LL =   T175(EDX:EAX).LL
; Line 2529:	                        break; 

	GOTO	L_3393:PC
	BLOCK END
	BLOCK 128
	DBG BLOCK END
	BLOCK END
	BLOCK 129

L_3402:
	DBG BLOCK START
; Line 2530:	                    case ISZ_UCHAR: 
; Line 2531:	                        i &= 0xff; 

; Line 2531:	                        i &= 0xff; 

	T176(EDX:EAX).LL =   _i:LINK(-56).LL
	T177(EDX:EAX).LL = T176(EDX:EAX).LL & #FF.LL
	_i:LINK(-56).LL =   T177(EDX:EAX).LL
; Line 2532:	                        break; 

	GOTO	L_3393:PC
	BLOCK END
	BLOCK 130
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_3404:
	DBG BLOCK START
; Line 2533:	                    case -ISZ_UCHAR: 
; Line 2534:	                        i &= 0xff; 

; Line 2534:	                        i &= 0xff; 

	T178(EDX:EAX).LL =   _i:LINK(-56).LL
	T179(EDX:EAX).LL = T178(EDX:EAX).LL & #FF.LL
	_i:LINK(-56).LL =   T179(EDX:EAX).LL
; Line 2535:	                        i |= i & 0x80 ? 0xffffff00U : 0; 

	T180(EDX:EAX).LL =   _i:LINK(-56).LL
	T181(EBX:ESI).LL = T180(EDX:EAX).LL & #80.LL
	CONDGO	L_3530:PC ; T181(EBX:ESI).LL == #0.LL
	BLOCK END
	BLOCK 132
	T182(ECX).UL =   #FFFFFF00.UL
	GOTO	L_3531:PC
	BLOCK END
	BLOCK 133

L_3530:
	T182(ECX).UL =   #0.UL
	BLOCK END
	BLOCK 134

L_3531:
	T183(EBX:ESI).LL =   T182(ECX).UL
	T184(EDX:EAX).LL = T180(EDX:EAX).LL | T183(EBX:ESI).LL
	_i:LINK(-56).LL =   T184(EDX:EAX).LL
; Line 2536:	                        break; 

	GOTO	L_3393:PC
	BLOCK END
	BLOCK 135
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_3406:
	DBG BLOCK START
; Line 2537:	                    case ISZ_BOOLEAN: 
; Line 2538:	                        i &= 1; 

; Line 2538:	                        i &= 1; 

	T185(EDX:EAX).LL =   _i:LINK(-56).LL
	T186(EDX:EAX).LL = T185(EDX:EAX).LL & #1.LL
	_i:LINK(-56).LL =   T186(EDX:EAX).LL
; Line 2539:	                        break; 

	BLOCK END
	BLOCK 137

L_3408:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_3409:
	BLOCK END
	BLOCK 139

L_3393:
	BLOCK END
	BLOCK 140

L_3410:
	DBG BLOCK END
; Line 2541:	                gen_codes(op_push, ISZ_UINT, aimmed(i), 0); 

	T187(EAX).A =   #0.C
	PARM	T187(EAX).A
	T188(EDX:EAX).ULL =   _i:LINK(-56).LL
	PARM	T188(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T189(EAX).A =   RV.T18(EAX).A
	PARMADJ	#8.N
	PARM	T189(EAX).A
	T190(EAX).UI =   #7.C
	PARM	T190(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2542:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2543:	            } 

	BLOCK END
	BLOCK 141

L_3411:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_3412:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_3389:
	BLOCK END
	BLOCK 144

L_3413:
	DBG BLOCK END
	BLOCK END
	BLOCK 145

L_3414:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_3381:
	BLOCK END
	BLOCK 147

L_3415:
	DBG BLOCK END
; Line 2544:	        } 

	BLOCK END
	BLOCK 148

L_3416:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_3417:
	DBG BLOCK END
	BLOCK END
	BLOCK 150

L_3372:
	BLOCK END
	BLOCK 151

L_3418:
	DBG BLOCK END
	BLOCK END
	BLOCK 152

L_3419:
	DBG BLOCK END
	BLOCK END
	BLOCK 153

L_3334:
	BLOCK END
	BLOCK 154

L_3420:
	DBG BLOCK END
; Line 2545:	    } 

	BLOCK END
	BLOCK 155

L_3421:
	DBG BLOCK END
	BLOCK END
	BLOCK 156

L_3423:
	DBG BLOCK END
	GOTO	L_3422:PC
	BLOCK END
	BLOCK 157
	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_3424:
	BLOCK END
	BLOCK 159

L_3298:
; Line 2546:	    else 

; Line 2547:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_3425:
; Line 2548:	        if (q->dc.left->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 161

L_3427:
	T197(EAX).A =   _q:LINK(4).A
	T198(EAX).A =   *(T197(EAX) + 4+0).A.A
	T199(EAX).I =   *(T198(EAX) + 19).A.C
	CONDGO	L_3426:PC ; T199(EAX).I S< #18.C
	BLOCK END
	BLOCK 162
	DBG BLOCK START
	BLOCK END
	BLOCK 163

L_3428:
; Line 2549:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 164

L_3429:
; Line 2550:	            int sz = 8; 

	VAR START	sz
	_sz:LINK(-40).I =   #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_3431:
; Line 2551:	            if (q->dc.left->size == ISZ_FLOAT || q->dc.left->size == ISZ_IFLOAT || q->dc.left->size == ISZ_CFLOAT) 

	T200(EAX).A =   _q:LINK(4).A
	T201(EAX).A =   *(T200(EAX) + 4+0).A.A
	T202(AL).C =   *(T201(EAX) + 19).A.C
	CONDGO	L_3532:PC ; T202(AL).C == #12.C
	BLOCK END
	BLOCK 166
	T203(EAX).A =   _q:LINK(4).A
	T204(EAX).A =   *(T203(EAX) + 4+0).A.A
	T205(AL).C =   *(T204(EAX) + 19).A.C
	CONDGO	L_3532:PC ; T205(AL).C == #15.C
	BLOCK END
	BLOCK 167
	T206(EAX).A =   _q:LINK(4).A
	T207(EAX).A =   *(T206(EAX) + 4+0).A.A
	T208(AL).C =   *(T207(EAX) + 19).A.C
	CONDGO	L_3430:PC ; T208(AL).C != #18.C
	BLOCK END
	BLOCK 168

L_3532:
	DBG BLOCK START
	BLOCK END
	BLOCK 169

L_3432:
; Line 2552:	                sz = 4; 

	_sz:LINK(-40).I =   #4.I
	BLOCK END
	BLOCK 170

L_3433:
	DBG BLOCK END
	BLOCK END
	BLOCK 171

L_3430:
	BLOCK END
	BLOCK 172

L_3434:
	DBG BLOCK END
; Line 2553:	            gen_codes(op_sub, ISZ_UINT, makedreg(ESP), aimmed(sz * 2)); 

	T209(EAX).I =   _sz:LINK(-40).I
	T210(EAX).I = T209(EAX).I << #1.C
	T211(EDX:EAX).ULL =   T210(EAX).I
	PARM	T211(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T212(EAX).A =   RV.T19(EAX).A
	PARMADJ	#8.N
	PARM	T212(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T213(EAX).A =   RV.T20(EAX).A
	PARMADJ	#4.N
	PARM	T213(EAX).A
	T214(EAX).UI =   #7.C
	PARM	T214(EAX).UI
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2554:	            pushlevel += sz * 2; 

	T215(ECX).I =   @occx86@pushlevel:RAM.I
	T216(EAX).I =   _sz:LINK(-40).I
	T217(EAX).I = T216(EAX).I << #1.C
	T218(EAX).I = T215(ECX).I + T217(EAX).I
	@occx86@pushlevel:RAM.I =   T218(EAX).I
; Line 2555:	            gen_code_sse(op_movss, op_movsd, q->dc.left->size, make_stack(-sz), aph); 

	T219(EAX).A =   _aph:LINK(-12).A
	PARM	T219(EAX).A
	T220(EAX).I =   _sz:LINK(-40).I
	T221(EAX).I =  - T220(EAX).I
	PARM	T221(EAX).I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T222(EAX).A =   RV.T21(EAX).A
	PARMADJ	#4.N
	PARM	T222(EAX).A
	T223(EAX).A =   _q:LINK(4).A
	T224(EAX).A =   *(T223(EAX) + 4+0).A.A
	T225(EAX).I =   *(T224(EAX) + 19).A.C
	PARM	T225(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2556:	            gen_code_sse(op_movss, op_movsd, q->dc.left->size, make_stack(0), apl); 

	T226(EAX).A =   _apl:LINK(-8).A
	PARM	T226(EAX).A
	T227(EAX).UI =   #0.C
	PARM	T227(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T228(EAX).A =   RV.T22(EAX).A
	PARMADJ	#4.N
	PARM	T228(EAX).A
	T229(EAX).A =   _q:LINK(4).A
	T230(EAX).A =   *(T229(EAX) + 4+0).A.A
	T231(EAX).I =   *(T230(EAX) + 19).A.C
	PARM	T231(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2557:	        } 

	BLOCK END
	BLOCK 173

L_3435:
	DBG BLOCK END
	BLOCK END
	BLOCK 174

L_3437:
	DBG BLOCK END
	GOTO	L_3436:PC
	BLOCK END
	BLOCK 175
	DBG BLOCK START
	BLOCK END
	BLOCK 176

L_3438:
	BLOCK END
	BLOCK 177

L_3426:
; Line 2558:	        else if (q->dc.left->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_3440:
	T232(EAX).A =   _q:LINK(4).A
	T233(EAX).A =   *(T232(EAX) + 4+0).A.A
	T234(EAX).I =   *(T233(EAX) + 19).A.C
	CONDGO	L_3439:PC ; T234(EAX).I S< #12.C
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_3441:
; Line 2559:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 181

L_3442:
; Line 2560:	            int sz = 8; 

	VAR START	sz
	_sz:LINK(-36).I =   #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 182

L_3444:
; Line 2561:	            if (q->dc.left->size == ISZ_FLOAT || q->dc.left->size == ISZ_IFLOAT || q->dc.left->size == ISZ_CFLOAT) 

	T235(EAX).A =   _q:LINK(4).A
	T236(EAX).A =   *(T235(EAX) + 4+0).A.A
	T237(AL).C =   *(T236(EAX) + 19).A.C
	CONDGO	L_3533:PC ; T237(AL).C == #12.C
	BLOCK END
	BLOCK 183
	T238(EAX).A =   _q:LINK(4).A
	T239(EAX).A =   *(T238(EAX) + 4+0).A.A
	T240(AL).C =   *(T239(EAX) + 19).A.C
	CONDGO	L_3533:PC ; T240(AL).C == #15.C
	BLOCK END
	BLOCK 184
	T241(EAX).A =   _q:LINK(4).A
	T242(EAX).A =   *(T241(EAX) + 4+0).A.A
	T243(AL).C =   *(T242(EAX) + 19).A.C
	CONDGO	L_3443:PC ; T243(AL).C != #18.C
	BLOCK END
	BLOCK 185

L_3533:
	DBG BLOCK START
	BLOCK END
	BLOCK 186

L_3445:
; Line 2562:	                sz = 4; 

	_sz:LINK(-36).I =   #4.I
	BLOCK END
	BLOCK 187

L_3446:
	DBG BLOCK END
	BLOCK END
	BLOCK 188

L_3443:
	BLOCK END
	BLOCK 189

L_3447:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 190

L_3449:
; Line 2563:	            if (sz == 4) 

	T244(EAX).I =   _sz:LINK(-36).I
	CONDGO	L_3448:PC ; T244(EAX).I != #4.I
	BLOCK END
	BLOCK 191
	DBG BLOCK START
	BLOCK END
	BLOCK 192

L_3450:
; Line 2564:	                gen_codes(op_push, ISZ_UINT, makedreg(ECX), NULL); 

	T245(EAX).A =   #0.C
	PARM	T245(EAX).A
	T246(EAX).UI =   #1.C
	PARM	T246(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T247(EAX).A =   RV.T23(EAX).A
	PARMADJ	#4.N
	PARM	T247(EAX).A
	T248(EAX).UI =   #7.C
	PARM	T248(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 193

L_3452:
	DBG BLOCK END
	GOTO	L_3451:PC
	BLOCK END
	BLOCK 194
	DBG BLOCK START
	BLOCK END
	BLOCK 195

L_3453:
	BLOCK END
	BLOCK 196

L_3448:
; Line 2565:	            else 

; Line 2566:	                gen_codes(op_sub, ISZ_UINT, makedreg(ESP), aimmed(sz)); 

	T249(EDX:EAX).ULL =   _sz:LINK(-36).I
	PARM	T249(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T250(EAX).A =   RV.T24(EAX).A
	PARMADJ	#8.N
	PARM	T250(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T251(EAX).A =   RV.T25(EAX).A
	PARMADJ	#4.N
	PARM	T251(EAX).A
	T252(EAX).UI =   #7.C
	PARM	T252(EAX).UI
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 197

L_3454:
	DBG BLOCK END
	BLOCK END
	BLOCK 198

L_3451:
	BLOCK END
	BLOCK 199

L_3455:
	DBG BLOCK END
; Line 2567:	            pushlevel += sz; 

	T253(ECX).I =   @occx86@pushlevel:RAM.I
	T254(EAX).I =   _sz:LINK(-36).I
	T255(EAX).I = T253(ECX).I + T254(EAX).I
	@occx86@pushlevel:RAM.I =   T255(EAX).I
; Line 2568:	            gen_code_sse(op_movss, op_movsd, q->dc.left->size, make_stack(0), apl); 

	T256(EAX).A =   _apl:LINK(-8).A
	PARM	T256(EAX).A
	T257(EAX).UI =   #0.C
	PARM	T257(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T258(EAX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	PARM	T258(EAX).A
	T259(EAX).A =   _q:LINK(4).A
	T260(EAX).A =   *(T259(EAX) + 4+0).A.A
	T261(EAX).I =   *(T260(EAX) + 19).A.C
	PARM	T261(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2569:	        } 

	BLOCK END
	BLOCK 200

L_3456:
	DBG BLOCK END
	BLOCK END
	BLOCK 201

L_3458:
	DBG BLOCK END
	GOTO	L_3457:PC
	BLOCK END
	BLOCK 202
	DBG BLOCK START
	BLOCK END
	BLOCK 203

L_3459:
	BLOCK END
	BLOCK 204

L_3439:
; Line 2570:	        else 

; Line 2571:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_3460:
; Line 2572:	            if (q->dc.left->size == ISZ_ULONGLONG || q->dc.left->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_3462:
	T262(EAX).A =   _q:LINK(4).A
	T263(EAX).A =   *(T262(EAX) + 4+0).A.A
	T264(AL).C =   *(T263(EAX) + 19).A.C
	CONDGO	L_3534:PC ; T264(AL).C == #B.C
	BLOCK END
	BLOCK 207
	T265(EAX).A =   _q:LINK(4).A
	T266(EAX).A =   *(T265(EAX) + 4+0).A.A
	T267(EAX).I =   *(T266(EAX) + 19).A.C
	CONDGO	L_3461:PC ; T267(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 208

L_3534:
	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_3463:
; Line 2573:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_3464:
; Line 2574:	                if (q->dc.left->mode == Optimizer::i_direct && q->dc.left->offset->type == Optimizer::se_tempref) 

	DBG BLOCK START
	BLOCK END
	BLOCK 211

L_3466:
	T316(EAX).A =   _q:LINK(4).A
	T317(EAX).A =   *(T316(EAX) + 4+0).A.A
	T318(EAX).I =   *(T317(EAX) + 0).A.I
	CONDGO	L_3465:PC ; T318(EAX).I != #2.C
	BLOCK END
	BLOCK 212
	T319(EAX).A =   _q:LINK(4).A
	T320(EAX).A =   *(T319(EAX) + 4+0).A.A
	T321(EAX).A =   *(T320(EAX) + 4).A.A
	T322(EAX).I =   *(T321(EAX) + 0).A.I
	CONDGO	L_3465:PC ; T322(EAX).I != #12.C
	BLOCK END
	BLOCK 213
	DBG BLOCK START
	BLOCK END
	BLOCK 214

L_3467:
; Line 2575:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 215

L_3468:
; Line 2576:	                    int clr = beRegFromTemp(q, q->dc.left); 

	VAR START	clr
	T323(EAX).A =   _q:LINK(4).A
	T324(EAX).A =   *(T323(EAX) + 4+0).A.A
	PARM	T324(EAX).A
	T325(EAX).A =   _q:LINK(4).A
	PARM	T325(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T326(EAX).I =   RV.T27(EAX).I
	PARMADJ	#8.N
	_clr:LINK(-24).I =   T326(EAX).I
	VAR START	reg1
	VAR START	reg2
; Line 2577:	                    int reg1, reg2; 
; Line 2578:	                    reg1 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][1]; 

; Line 2578:	                    reg1 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][1]; 

	T327(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T328(EAX).A =   *(T327(EAX) + 44).A.A
	T329(ECX).A =   *(T328(EAX) + 58).A.A
	T330(EAX).I =   _clr:LINK(-24).I
	T331(EAX).I = T330(EAX).I & #FF.I
	T332(EAX).I =   *(T329(ECX) + T331(EAX) * 8 + 4).A.I
	_reg1:LINK(-28).I =   T332(EAX).I
; Line 2579:	                    reg2 = Optimizer::chosenAssembler->arch->regMap[clr & 0xff][0]; 

	T333(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T334(EAX).A =   *(T333(EAX) + 44).A.A
	T335(ECX).A =   *(T334(EAX) + 58).A.A
	T336(EAX).I =   _clr:LINK(-24).I
	T337(EAX).I = T336(EAX).I & #FF.I
	T338(EAX).I =   *(T335(ECX) + T337(EAX) * 8).A.I
	_reg2:LINK(-32).I =   T338(EAX).I
; Line 2580:	                    gen_codes(op_push, ISZ_UINT, makedreg(reg1), 0); 

	T339(EAX).A =   #0.C
	PARM	T339(EAX).A
	T340(EAX).I =   _reg1:LINK(-28).I
	PARM	T340(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T341(EAX).A =   RV.T28(EAX).A
	PARMADJ	#4.N
	PARM	T341(EAX).A
	T342(EAX).UI =   #7.C
	PARM	T342(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2581:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2582:	                    gen_codes(op_push, ISZ_UINT, makedreg(reg2), 0); 

	T343(EAX).A =   #0.C
	PARM	T343(EAX).A
	T344(EAX).I =   _reg2:LINK(-32).I
	PARM	T344(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T345(EAX).A =   RV.T29(EAX).A
	PARMADJ	#4.N
	PARM	T345(EAX).A
	T346(EAX).UI =   #7.C
	PARM	T346(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2583:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2584:	                } 

	BLOCK END
	BLOCK 216

L_3469:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_3471:
	DBG BLOCK END
	GOTO	L_3470:PC
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_3472:
	BLOCK END
	BLOCK 220

L_3465:
; Line 2585:	                else 

; Line 2586:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_3473:
; Line 2587:	                    gen_codes(op_push, ISZ_UINT, aph, 0); 

	T347(EAX).A =   #0.C
	PARM	T347(EAX).A
	T348(EAX).A =   _aph:LINK(-12).A
	PARM	T348(EAX).A
	T349(EAX).UI =   #7.C
	PARM	T349(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2588:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2589:	                    gen_codes(op_push, ISZ_UINT, apl, 0); 

	T350(EAX).A =   #0.C
	PARM	T350(EAX).A
	T351(EAX).A =   _apl:LINK(-8).A
	PARM	T351(EAX).A
	T352(EAX).UI =   #7.C
	PARM	T352(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2590:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2591:	                } 

	BLOCK END
	BLOCK 222

L_3474:
	DBG BLOCK END
	BLOCK END
	BLOCK 223

L_3475:
	DBG BLOCK END
	BLOCK END
	BLOCK 224

L_3470:
	BLOCK END
	BLOCK 225

L_3476:
	DBG BLOCK END
; Line 2592:	            } 

	BLOCK END
	BLOCK 226

L_3477:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_3479:
	DBG BLOCK END
	GOTO	L_3478:PC
	BLOCK END
	BLOCK 228
	DBG BLOCK START
	BLOCK END
	BLOCK 229

L_3480:
	BLOCK END
	BLOCK 230

L_3461:
; Line 2593:	            else 

; Line 2594:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 231

L_3481:
; Line 2595:	                if (q->dc.left->mode == Optimizer::i_direct && q->dc.left->offset->type == Optimizer::se_tempref) 

	DBG BLOCK START
	BLOCK END
	BLOCK 232

L_3483:
	T268(EAX).A =   _q:LINK(4).A
	T269(EAX).A =   *(T268(EAX) + 4+0).A.A
	T270(EAX).I =   *(T269(EAX) + 0).A.I
	CONDGO	L_3482:PC ; T270(EAX).I != #2.C
	BLOCK END
	BLOCK 233
	T271(EAX).A =   _q:LINK(4).A
	T272(EAX).A =   *(T271(EAX) + 4+0).A.A
	T273(EAX).A =   *(T272(EAX) + 4).A.A
	T274(EAX).I =   *(T273(EAX) + 0).A.I
	CONDGO	L_3482:PC ; T274(EAX).I != #12.C
	BLOCK END
	BLOCK 234
	DBG BLOCK START
	BLOCK END
	BLOCK 235

L_3484:
; Line 2596:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 236

L_3485:
; Line 2597:	                    int l = beRegFromTemp(q, q->dc.left); 

	VAR START	l
	T275(EAX).A =   _q:LINK(4).A
	T276(EAX).A =   *(T275(EAX) + 4+0).A.A
	PARM	T276(EAX).A
	T277(EAX).A =   _q:LINK(4).A
	PARM	T277(EAX).A
	TAG
	GOSUB	#@occx86@beRegFromTemp$qp15@Optimizer@quadp18@Optimizer@_imode_:PC.UI
	T278(EAX).I =   RV.T30(EAX).I
	PARMADJ	#8.N
	_l:LINK(-16).I =   T278(EAX).I
	VAR START	pal
; Line 2598:	                    AMODE* pal; 
; Line 2599:	                    l = Optimizer::chosenAssembler->arch->regMap[l][0]; 

; Line 2599:	                    l = Optimizer::chosenAssembler->arch->regMap[l][0]; 

	T279(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T280(EAX).A =   *(T279(EAX) + 44).A.A
	T281(ECX).A =   *(T280(EAX) + 58).A.A
	T282(EAX).I =   _l:LINK(-16).I
	T283(EAX).I =   *(T281(ECX) + T282(EAX) * 8).A.I
	_l:LINK(-16).I =   T283(EAX).I
; Line 2600:	                    pal = makedreg(l); 

	T284(EAX).I =   _l:LINK(-16).I
	PARM	T284(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T285(EAX).A =   RV.T31(EAX).A
	PARMADJ	#4.N
	_pal:LINK(-20).A =   T285(EAX).A
; Line 2601:	                    pal->liveRegs = q->liveRegs; 

	T286(EAX).A =   _q:LINK(4).A
	T287(ECX).I =   *(T286(EAX) + 48).A.ULL
	T288(EAX).A =   _pal:LINK(-20).A
	*(T288(EAX) + 10).A.I =   T287(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 237

L_3487:
	DBG BLOCK END
; Line 2602:	                    switch (q->dc.left->size) 

	T289(EAX).A =   _q:LINK(4).A
	T290(EAX).A =   *(T289(EAX) + 4+0).A.A
	T291(AL).C =   *(T290(EAX) + 19).A.C
	COSWITCH(T291(AL).C,#6.UI,#A.UI,L_3501:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFC.UI,L_3493:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFD.UI,L_3499:PC)
	SWBRANCH(#2.UI,L_3497:PC)
	SWBRANCH(#3.UI,L_3495:PC)
	SWBRANCH(#4.UI,L_3489:PC)
	SWBRANCH(#5.UI,L_3491:PC)
; Line 2603:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_3488:
	BLOCK END
	BLOCK 239

L_3489:
	BLOCK END
	BLOCK 240

L_3491:
	DBG BLOCK START
; Line 2605:	                        case ISZ_WCHAR: 
; Line 2606:	                            do_movzx(ISZ_UINT, ISZ_USHORT, pal, pal); 

; Line 2606:	                            do_movzx(ISZ_UINT, ISZ_USHORT, pal, pal); 

	T292(EAX).A =   _pal:LINK(-20).A
	PARM	T292(EAX).A
	T293(EAX).A =   _pal:LINK(-20).A
	PARM	T293(EAX).A
	PARM	#4.I
	T294(EAX).UI =   #7.C
	PARM	T294(EAX).UI
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2607:	                            break; 

	GOTO	L_3486:PC
	BLOCK END
	BLOCK 241
	DBG BLOCK END
	BLOCK END
	BLOCK 242

L_3493:
	DBG BLOCK START
; Line 2608:	                        case -ISZ_USHORT: 
; Line 2609:	                            do_movsx(ISZ_UINT, ISZ_USHORT, pal, pal); 

; Line 2609:	                            do_movsx(ISZ_UINT, ISZ_USHORT, pal, pal); 

	T295(EAX).A =   _pal:LINK(-20).A
	PARM	T295(EAX).A
	T296(EAX).A =   _pal:LINK(-20).A
	PARM	T296(EAX).A
	PARM	#4.I
	T297(EAX).UI =   #7.C
	PARM	T297(EAX).UI
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2610:	                            break; 

	GOTO	L_3486:PC
	BLOCK END
	BLOCK 243
	DBG BLOCK END
	BLOCK END
	BLOCK 244

L_3495:
	DBG BLOCK START
; Line 2611:	                        case ISZ_UCHAR: 
; Line 2612:	                            do_movzx(ISZ_UINT, ISZ_UCHAR, pal, pal); 

; Line 2612:	                            do_movzx(ISZ_UINT, ISZ_UCHAR, pal, pal); 

	T298(EAX).A =   _pal:LINK(-20).A
	PARM	T298(EAX).A
	T299(EAX).A =   _pal:LINK(-20).A
	PARM	T299(EAX).A
	T300(EAX).UI =   #3.C
	PARM	T300(EAX).UI
	T301(EAX).UI =   #7.C
	PARM	T301(EAX).UI
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2613:	                            break; 

	GOTO	L_3486:PC
	BLOCK END
	BLOCK 245
	DBG BLOCK END
	BLOCK END
	BLOCK 246

L_3497:
	DBG BLOCK START
; Line 2614:	                        case ISZ_BOOLEAN: 
; Line 2615:	                            gen_codes(op_and, ISZ_UINT, pal, aimmed(1)); 

; Line 2615:	                            gen_codes(op_and, ISZ_UINT, pal, aimmed(1)); 

	T302(EDX:EAX).ULL =   #1.C
	PARM	T302(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T303(EAX).A =   RV.T32(EAX).A
	PARMADJ	#8.N
	PARM	T303(EAX).A
	T304(EAX).A =   _pal:LINK(-20).A
	PARM	T304(EAX).A
	T305(EAX).UI =   #7.C
	PARM	T305(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2616:	                            break; 

	GOTO	L_3486:PC
	BLOCK END
	BLOCK 247
	DBG BLOCK END
	BLOCK END
	BLOCK 248

L_3499:
	DBG BLOCK START
; Line 2617:	                        case -ISZ_UCHAR: 
; Line 2618:	                            do_movsx(ISZ_UINT, ISZ_UCHAR, pal, pal); 

; Line 2618:	                            do_movsx(ISZ_UINT, ISZ_UCHAR, pal, pal); 

	T306(EAX).A =   _pal:LINK(-20).A
	PARM	T306(EAX).A
	T307(EAX).A =   _pal:LINK(-20).A
	PARM	T307(EAX).A
	T308(EAX).UI =   #3.C
	PARM	T308(EAX).UI
	T309(EAX).UI =   #7.C
	PARM	T309(EAX).UI
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2619:	                            break; 

	GOTO	L_3486:PC
	BLOCK END
	BLOCK 249
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_3501:
	DBG BLOCK START
; Line 2620:	                        default: 
; Line 2621:	                            break; 

; Line 2621:	                            break; 

	BLOCK END
	BLOCK 251

L_3502:
	DBG BLOCK END
	BLOCK END
	BLOCK 252

L_3486:
	BLOCK END
	BLOCK 253

L_3503:
	DBG BLOCK END
; Line 2623:	                    gen_codes(op_push, ISZ_UINT, pal, 0); 

	T310(EAX).A =   #0.C
	PARM	T310(EAX).A
	T311(EAX).A =   _pal:LINK(-20).A
	PARM	T311(EAX).A
	T312(EAX).UI =   #7.C
	PARM	T312(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2624:	                } 

	BLOCK END
	BLOCK 254

L_3504:
	DBG BLOCK END
	BLOCK END
	BLOCK 255

L_3506:
	DBG BLOCK END
	GOTO	L_3505:PC
	BLOCK END
	BLOCK 256
	DBG BLOCK START
	BLOCK END
	BLOCK 257

L_3507:
	BLOCK END
	BLOCK 258

L_3482:
; Line 2625:	                else 

; Line 2626:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 259

L_3508:
; Line 2627:	                    gen_codes(op_push, ISZ_UINT, apl, 0); 

	T313(EAX).A =   #0.C
	PARM	T313(EAX).A
	T314(EAX).A =   _apl:LINK(-8).A
	PARM	T314(EAX).A
	T315(EAX).UI =   #7.C
	PARM	T315(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2628:	                } 

	BLOCK END
	BLOCK 260

L_3509:
	DBG BLOCK END
	BLOCK END
	BLOCK 261

L_3510:
	DBG BLOCK END
	BLOCK END
	BLOCK 262

L_3505:
	BLOCK END
	BLOCK 263

L_3511:
	DBG BLOCK END
; Line 2629:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2630:	            } 

	BLOCK END
	BLOCK 264

L_3512:
	DBG BLOCK END
	BLOCK END
	BLOCK 265

L_3513:
	DBG BLOCK END
	BLOCK END
	BLOCK 266

L_3478:
	BLOCK END
	BLOCK 267

L_3514:
	DBG BLOCK END
; Line 2631:	        } 

	BLOCK END
	BLOCK 268

L_3515:
	DBG BLOCK END
	BLOCK END
	BLOCK 269

L_3516:
	DBG BLOCK END
	BLOCK END
	BLOCK 270

L_3457:
	BLOCK END
	BLOCK 271

L_3517:
	DBG BLOCK END
	BLOCK END
	BLOCK 272

L_3518:
	DBG BLOCK END
	BLOCK END
	BLOCK 273

L_3436:
	BLOCK END
	BLOCK 274

L_3519:
	DBG BLOCK END
; Line 2632:	    } 

	BLOCK END
	BLOCK 275

L_3520:
	DBG BLOCK END
	BLOCK END
	BLOCK 276

L_3521:
	DBG BLOCK END
	BLOCK END
	BLOCK 277

L_3422:
	BLOCK END
	BLOCK 278

L_3522:
	DBG BLOCK END
; Line 2633:	} 

	BLOCK END
	BLOCK 279

L_3523:
	DBG BLOCK END
	BLOCK END
	BLOCK 280

L_3296:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_parmblock$qp15@Optimizer@quad


global @occx86@asm_parmblock$qp15@Optimizer@quad
@occx86@asm_parmblock$qp15@Optimizer@quad:
; Line 2635:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#24.UI
	BLOCK END
	BLOCK 2

L_3538:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3540:
; Line 2636:	    int n = q->dc.right->offset->i; 

	VAR START	n
	T9(EAX).A =   _q:LINK(4).A
	T10(EAX).A =   *(T9(EAX) + 8+0).A.A
	T11(EAX).A =   *(T10(EAX) + 4).A.A
	T12(EAX).I =   *(T11(EAX) + 8).A.LL
	_n:LINK(-4).I =   T12(EAX).I
	VAR START	apl
	VAR START	aph
	VAR START	op
	VAR START	ofs
; Line 2641:	    getAmodes(q, &op, q->dc.left, &apl, &aph); 

	T13(EAX).A =   #_aph:LINK(-12).A
	PARM	T13(EAX).A
	T14(EAX).A =   #_apl:LINK(-8).A
	PARM	T14(EAX).A
	T15(EAX).A =   _q:LINK(4).A
	T16(EAX).A =   *(T15(EAX) + 4+0).A.A
	PARM	T16(EAX).A
	T17(EAX).A =   #_op:LINK(-16).A
	PARM	T17(EAX).A
	T18(EAX).A =   _q:LINK(4).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2643:	    n += 3; 

	_n:LINK(-4).I = _n:LINK(-4).I + #3.C
; Line 2644:	    n &= 0xfffffffcU; 

	T19(EAX).UI =   _n:LINK(-4).I
	T21(EAX).UI = T19(EAX).UI & #FFFFFFFC.UI
	_n:LINK(-4).I =   T21(EAX).I
; Line 2646:	    ofs = apl->offset; 

	T22(EAX).A =   _apl:LINK(-8).A
	T23(EAX).A =   *(T22(EAX) + C).A.A
	_ofs:LINK(-20).A =   T23(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3542:
; Line 2647:	    if (q->dc.left->mode == Optimizer::i_immed) 

	T24(EAX).A =   _q:LINK(4).A
	T25(EAX).A =   *(T24(EAX) + 4+0).A.A
	T26(EAX).I =   *(T25(EAX) + 0).A.I
	CONDGO	L_3541:PC ; T26(EAX).I != #1.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3543:
; Line 2648:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_3544:
; Line 2649:	        op = op_lea; 

	_op:LINK(-16).I =   #106.I
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_3546:
; Line 2650:	        if (ofs->type == Optimizer::se_auto) 

	T27(EAX).A =   _ofs:LINK(-20).A
	T28(EAX).I =   *(T27(EAX) + 0).A.I
	CONDGO	L_3545:PC ; T28(EAX).I != #B.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_3547:
; Line 2651:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_3548:
; Line 2652:	            if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_3550:
	T29(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_3549:PC ; T29(EAX).I == #0.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_3551:
; Line 2653:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_3552:
; Line 2654:	                apl->preg = ESP; 

	T30(EAX).A =   _apl:LINK(-8).A
	*(T30(EAX) + 4).A.C =   #4.C
; Line 2655:	            } 

	BLOCK END
	BLOCK 16

L_3553:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_3555:
	DBG BLOCK END
	GOTO	L_3554:PC
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_3556:
	BLOCK END
	BLOCK 20

L_3549:
; Line 2656:	            else 

; Line 2657:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_3557:
; Line 2658:	                apl->preg = EBP; 

	T31(EAX).A =   _apl:LINK(-8).A
	*(T31(EAX) + 4).A.C =   #5.C
; Line 2659:	            } 

	BLOCK END
	BLOCK 22

L_3558:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_3559:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_3554:
	BLOCK END
	BLOCK 25

L_3560:
	DBG BLOCK END
; Line 2660:	            apl->mode = am_indisp; 

	T32(ECX).A =   _apl:LINK(-8).A
	T33(EAX).I =   #C.C
	*(T32(ECX) + 0).A.I =   T33(EAX).I
; Line 2661:	        } 

	BLOCK END
	BLOCK 26

L_3561:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_3563:
	DBG BLOCK END
	GOTO	L_3562:PC
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_3564:
	BLOCK END
	BLOCK 30

L_3545:
; Line 2662:	        else 

; Line 2663:	            apl->mode = am_direct; 

	T34(EAX).A =   _apl:LINK(-8).A
	*(T34(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 31

L_3565:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_3562:
	BLOCK END
	BLOCK 33

L_3566:
	DBG BLOCK END
; Line 2664:	    } 

	BLOCK END
	BLOCK 34

L_3567:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_3568:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_3541:
	BLOCK END
	BLOCK 37

L_3569:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_3571:
; Line 2666:	    if (n <= 24 && q->dc.left->mode == Optimizer::i_immed) 

	T35(EAX).I =   _n:LINK(-4).I
	CONDGO	L_3570:PC ; T35(EAX).I S> #18.C
	BLOCK END
	BLOCK 39
	T36(EAX).A =   _q:LINK(4).A
	T37(EAX).A =   *(T36(EAX) + 4+0).A.A
	T38(EAX).I =   *(T37(EAX) + 0).A.I
	CONDGO	L_3570:PC ; T38(EAX).I != #1.C
	BLOCK END
	BLOCK 40
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_3572:
; Line 2667:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_3573:
; Line 2668:	        while (n > 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_3577:
	GOTO	L_3576:PC
	BLOCK END
	BLOCK 44

L_3574:
	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_3578:
; Line 2669:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_3579:
; Line 2670:	            n -= 4; 

	_n:LINK(-4).I = _n:LINK(-4).I - #4.I
; Line 2671:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n)); 

	T40(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T40(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T41(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	PARM	T41(EAX).A
	T42(EAX).A =   _ofs:LINK(-20).A
	PARM	T42(EAX).A
	T43(EAX).UI =   #1.C
	PARM	T43(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T44(ECX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	T45(EAX).A =   _apl:LINK(-8).A
	*(T45(EAX) + C).A.A =   T44(ECX).A
; Line 2672:	            gen_codes(op_push, ISZ_UINT, apl, 0); 

	T46(EAX).A =   #0.C
	PARM	T46(EAX).A
	T47(EAX).A =   _apl:LINK(-8).A
	PARM	T47(EAX).A
	T48(EAX).UI =   #7.C
	PARM	T48(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2673:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 2674:	        } 

	BLOCK END
	BLOCK 47

L_3580:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_3581:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_3576:
	T39(EAX).I =   _n:LINK(-4).I
	CONDGO	L_3574:PC ; T39(EAX).I S> #0.C
	BLOCK END
	BLOCK 50

L_3575:
	BLOCK END
	BLOCK 51

L_3582:
	DBG BLOCK END
; Line 2675:	    } 

	BLOCK END
	BLOCK 52

L_3583:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_3585:
	DBG BLOCK END
	GOTO	L_3584:PC
	BLOCK END
	BLOCK 54
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_3586:
	BLOCK END
	BLOCK 56

L_3570:
; Line 2676:	    else 

; Line 2677:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_3587:
; Line 2678:	        AMODE* cx = makedreg(ECX); 

	VAR START	cx
	T49(EAX).UI =   #1.C
	PARM	T49(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T50(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_cx:LINK(-24).A =   T50(EAX).A
	VAR START	di
; Line 2679:	        AMODE* di = makedreg(EDI); 

	T51(EAX).UI =   #7.C
	PARM	T51(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T52(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	_di:LINK(-28).A =   T52(EAX).A
	VAR START	si
; Line 2680:	        AMODE* si = makedreg(ESI); 

	PARM	#6.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T53(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	_si:LINK(-32).A =   T53(EAX).A
	VAR START	sp
; Line 2681:	        AMODE* sp = makedreg(ESP); 

	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T54(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	_sp:LINK(-36).A =   T54(EAX).A
; Line 2682:	        cx->liveRegs = q->liveRegs; 

	T55(EAX).A =   _q:LINK(4).A
	T56(ECX).I =   *(T55(EAX) + 48).A.ULL
	T57(EAX).A =   _cx:LINK(-24).A
	*(T57(EAX) + 10).A.I =   T56(ECX).I
; Line 2683:	        si->liveRegs = q->liveRegs; 

	T58(EAX).A =   _q:LINK(4).A
	T59(ECX).I =   *(T58(EAX) + 48).A.ULL
	T60(EAX).A =   _si:LINK(-32).A
	*(T60(EAX) + 10).A.I =   T59(ECX).I
; Line 2684:	        di->liveRegs = q->liveRegs; 

	T61(EAX).A =   _q:LINK(4).A
	T62(ECX).I =   *(T61(EAX) + 48).A.ULL
	T63(EAX).A =   _di:LINK(-28).A
	*(T63(EAX) + 10).A.I =   T62(ECX).I
; Line 2685:	        gen_codes(op_sub, ISZ_UINT, sp, aimmed(n)); 

	T64(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T64(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T65(EAX).A =   RV.T6(EAX).A
	PARMADJ	#8.N
	PARM	T65(EAX).A
	T66(EAX).A =   _sp:LINK(-36).A
	PARM	T66(EAX).A
	T67(EAX).UI =   #7.C
	PARM	T67(EAX).UI
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2686:	        pushlevel += n; 

	T68(ECX).I =   @occx86@pushlevel:RAM.I
	T69(EAX).I =   _n:LINK(-4).I
	T70(EAX).I = T68(ECX).I + T69(EAX).I
	@occx86@pushlevel:RAM.I =   T70(EAX).I
; Line 2687:	        gen_codes(op_push, ISZ_UINT, di, 0); 

	T71(EAX).A =   #0.C
	PARM	T71(EAX).A
	T72(EAX).A =   _di:LINK(-28).A
	PARM	T72(EAX).A
	T73(EAX).UI =   #7.C
	PARM	T73(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2688:	        gen_codes(op_push, ISZ_UINT, si, 0); 

	T74(EAX).A =   #0.C
	PARM	T74(EAX).A
	T75(EAX).A =   _si:LINK(-32).A
	PARM	T75(EAX).A
	T76(EAX).UI =   #7.C
	PARM	T76(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2689:	        gen_codes(op_push, ISZ_UINT, cx, 0); 

	T77(EAX).A =   #0.C
	PARM	T77(EAX).A
	T78(EAX).A =   _cx:LINK(-24).A
	PARM	T78(EAX).A
	T79(EAX).UI =   #7.C
	PARM	T79(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2690:	        pushlevel += 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #C.C
; Line 2691:	        gen_codes(op, ISZ_UINT, si, apl); 

	T80(EAX).A =   _apl:LINK(-8).A
	PARM	T80(EAX).A
	T81(EAX).A =   _si:LINK(-32).A
	PARM	T81(EAX).A
	T82(EAX).UI =   #7.C
	PARM	T82(EAX).UI
	T83(EAX).I =   _op:LINK(-16).I
	PARM	T83(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2692:	        gen_codes(op_mov, ISZ_UINT, di, sp); 

	T84(EAX).A =   _sp:LINK(-36).A
	PARM	T84(EAX).A
	T85(EAX).A =   _di:LINK(-28).A
	PARM	T85(EAX).A
	T86(EAX).UI =   #7.C
	PARM	T86(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2693:	        gen_codes(op_add, ISZ_UINT, di, aimmed(12)); 

	T87(EDX:EAX).ULL =   #C.C
	PARM	T87(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T88(EAX).A =   RV.T7(EAX).A
	PARMADJ	#8.N
	PARM	T88(EAX).A
	T89(EAX).A =   _di:LINK(-28).A
	PARM	T89(EAX).A
	T90(EAX).UI =   #7.C
	PARM	T90(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2694:	        gen_codes(op_mov, ISZ_UINT, cx, aimmed(n / 4)); 

	T91(ECX).I =   _n:LINK(-4).I
	T92(EAX).I = T91(ECX).I S>> #1.UI
	T93(EAX).I = T92(EAX).I U>> #1E.UI
	T94(EAX).I = T93(EAX).I + T91(ECX).I
	T95(EAX).I = T94(EAX).I S>> #2.UI
	T96(EDX:EAX).ULL =   T95(EAX).I
	PARM	T96(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T97(EAX).A =   RV.T8(EAX).A
	PARMADJ	#8.N
	PARM	T97(EAX).A
	T98(EAX).A =   _cx:LINK(-24).A
	PARM	T98(EAX).A
	T99(EAX).UI =   #7.C
	PARM	T99(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2695:	        gen_code(op_cld, 0, 0); 

	T100(EAX).A =   #0.C
	PARM	T100(EAX).A
	T101(EAX).A =   #0.C
	PARM	T101(EAX).A
	PARM	#35.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2696:	        gen_code(op_rep, 0, 0); 

	T102(EAX).A =   #0.C
	PARM	T102(EAX).A
	T103(EAX).A =   #0.C
	PARM	T103(EAX).A
	PARM	#272.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2697:	        gen_code(op_movsd, 0, 0); 

	T104(EAX).A =   #0.C
	PARM	T104(EAX).A
	T105(EAX).A =   #0.C
	PARM	T105(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2698:	        gen_codes(op_pop, ISZ_UINT, cx, 0); 

	T106(EAX).A =   #0.C
	PARM	T106(EAX).A
	T107(EAX).A =   _cx:LINK(-24).A
	PARM	T107(EAX).A
	T108(EAX).UI =   #7.C
	PARM	T108(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2699:	        gen_codes(op_pop, ISZ_UINT, si, 0); 

	T109(EAX).A =   #0.C
	PARM	T109(EAX).A
	T110(EAX).A =   _si:LINK(-32).A
	PARM	T110(EAX).A
	T111(EAX).UI =   #7.C
	PARM	T111(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2700:	        gen_codes(op_pop, ISZ_UINT, di, 0); 

	T112(EAX).A =   #0.C
	PARM	T112(EAX).A
	T113(EAX).A =   _di:LINK(-28).A
	PARM	T113(EAX).A
	T114(EAX).UI =   #7.C
	PARM	T114(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2701:	        pushlevel -= 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #C.C
; Line 2702:	    } 

	BLOCK END
	BLOCK 58

L_3588:
	DBG BLOCK END
	BLOCK END
	BLOCK 59

L_3589:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_3584:
	BLOCK END
	BLOCK 61

L_3590:
	DBG BLOCK END
; Line 2703:	} 

	BLOCK END
	BLOCK 62

L_3591:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_3539:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_parmadj$qp15@Optimizer@quad


global @occx86@asm_parmadj$qp15@Optimizer@quad
@occx86@asm_parmadj$qp15@Optimizer@quad:
; Line 2705:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#8.UI
	BLOCK END
	BLOCK 2

L_3596:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3598:
; Line 2706:	    int mask; 

	VAR START	mask
	VAR START	i
; Line 2707:	    int i = beGetIcon(q->dc.left); 

	T4(EAX).A =   _q:LINK(4).A
	T5(EAX).A =   *(T4(EAX) + 4+0).A.A
	T6(EAX).A =   *(T5(EAX) + 4).A.A
	T7(EAX).I =   *(T6(EAX) + 8).A.LL
	_i:LINK(-8).I =   T7(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3600:
; Line 2708:	    if (i) 

	T8(EAX).I =   _i:LINK(-8).I
	CONDGO	L_3599:PC ; T8(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3601:
; Line 2709:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_3602:
; Line 2722:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_3603:
; Line 2723:	            gen_code(op_add, makedreg(ESP), aimmed(i)); 

	T9(EDX:EAX).ULL =   _i:LINK(-8).I
	PARM	T9(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T10(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T10(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T11(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T11(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2724:	        } 

	BLOCK END
	BLOCK 9

L_3604:
	DBG BLOCK END
; Line 2725:	    } 

	BLOCK END
	BLOCK 10

L_3605:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_3606:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_3599:
	BLOCK END
	BLOCK 13

L_3607:
	DBG BLOCK END
; Line 2726:	    pushlevel -= beGetIcon(q->dc.right); 

	T12(EDX:EAX).LL =   @occx86@pushlevel:RAM.I
	T13(ECX).A =   _q:LINK(4).A
	T14(ECX).A =   *(T13(ECX) + 8+0).A.A
	T15(ECX).A =   *(T14(ECX) + 4).A.A
	T16(EBX:ESI).LL =   *(T15(ECX) + 8).A.LL
	T17(EDX:EAX).LL = T12(EDX:EAX).LL - T16(EBX:ESI).LL
	T18(EAX).I =   T17(EDX:EAX).LL
	@occx86@pushlevel:RAM.I =   T18(EAX).I
; Line 2727:	    mask = getPushMask(q->dc.v.i); 

	T19(EAX).A =   _q:LINK(4).A
	T20(EAX).I =   *(T19(EAX) + 0+C+0).A.UI
	PARM	T20(EAX).I
	TAG
	GOSUB	#@occx86@getPushMask$qi:PC.UI
	T21(EAX).I =   RV.T2(EAX).I
	PARMADJ	#4.N
	_mask:LINK(-4).I =   T21(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_3612:
; Line 2728:	    for (i = 3; i >= 0; i--) 

	T22(EAX).I =   #3.C
	_i:LINK(-8).I =   T22(EAX).I
	GOTO	L_3609:PC
	BLOCK END
	BLOCK 15

L_3608:
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_3613:
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_3615:
; Line 2729:	        if ((1 << i) & mask) 

	T25(ECX).I =   _i:LINK(-8).I
	T37(EAX).I =   T25(ECX).I^
	T38(ECX).I =   T37(EAX).I^
	T26(EDX).I = #1.C << T38(ECX).I
	T27(EAX).I =   _mask:LINK(-4).I
	T28(EAX).I = T26(EDX).I & T27(EAX).I
	CONDGO	L_3614:PC ; T28(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_3616:
; Line 2730:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_3617:
; Line 2731:	            gen_codes(op_pop, ISZ_UINT, makedreg(Optimizer::chosenAssembler->arch->regMap[i][0]), 0); 

	T29(EAX).A =   #0.C
	PARM	T29(EAX).A
	T30(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T31(EAX).A =   *(T30(EAX) + 44).A.A
	T32(ECX).A =   *(T31(EAX) + 58).A.A
	T33(EAX).I =   _i:LINK(-8).I
	T34(EAX).I =   *(T32(ECX) + T33(EAX) * 8).A.I
	PARM	T34(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T35(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T35(EAX).A
	T36(EAX).UI =   #7.C
	PARM	T36(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2732:	            pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 2733:	        } 

	BLOCK END
	BLOCK 21

L_3618:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_3619:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_3614:
	BLOCK END
	BLOCK 24

L_3620:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_3621:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_3611:
	_i:LINK(-8).I = _i:LINK(-8).I - #1.C
	BLOCK END
	BLOCK 27

L_3609:
	T23(EAX).I =   _i:LINK(-8).I
	CONDGO	L_3608:PC ; T23(EAX).I S>= #0.C
	BLOCK END
	BLOCK 28

L_3610:
	BLOCK END
	BLOCK 29

L_3622:
	DBG BLOCK END
; Line 2734:	} 

	BLOCK END
	BLOCK 30

L_3623:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_3597:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_gosub$qp15@Optimizer@quad


global @occx86@asm_gosub$qp15@Optimizer@quad
@occx86@asm_gosub$qp15@Optimizer@quad:
; Line 2736:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_3628:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3630:
; Line 2737:	    Optimizer::SimpleExpression* en = NULL; 

	VAR START	en
	T8(EAX).A =   #0.C
	_en:LINK(-4).A =   T8(EAX).A
	VAR START	op
	VAR START	apl
	VAR START	aph
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3632:
; Line 2739:	    AMODE *apl, *aph; 

	T9(EAX).A =   _q:LINK(4).A
	T10(EAX).A =   *(T9(EAX) + 4+0).A.A
	T11(EAX).A =   *(T10(EAX) + 4).A.A
	CONDGO	L_3710:PC ; T11(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	T12(EAX).A =   _q:LINK(4).A
	T13(EAX).A =   *(T12(EAX) + 4+0).A.A
	T14(EAX).A =   *(T13(EAX) + 4).A.A
	T15(EAX).I =   *(T14(EAX) + 0).A.I
	CONDGO	L_3710:PC ; T15(EAX).I != #E.I
	BLOCK END
	BLOCK 6
	T16(EAX).A =   _q:LINK(4).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@occx86@BackendIntrinsic$qp15@Optimizer@quad:PC.UI
	T17(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_3631:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 7

L_3710:
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_3633:
; Line 2741:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_3634:
; Line 2742:	        if (q->dc.left->offset) 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_3636:
	T18(EAX).A =   _q:LINK(4).A
	T19(EAX).A =   *(T18(EAX) + 4+0).A.A
	T20(EAX).A =   *(T19(EAX) + 4).A.A
	CONDGO	L_3635:PC ; T20(EAX).A == #0.A
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_3637:
; Line 2743:	            en = GetSymRef(q->dc.left->offset); 

	T21(EAX).A =   _q:LINK(4).A
	T22(EAX).A =   *(T21(EAX) + 4+0).A.A
	T23(EAX).A =   *(T22(EAX) + 4).A.A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@Optimizer@GetSymRef$qp27@Optimizer@SimpleExpression:PC.UI
	T24(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	_en:LINK(-4).A =   T24(EAX).A
	BLOCK END
	BLOCK 13

L_3638:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_3635:
	BLOCK END
	BLOCK 15

L_3639:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_3641:
; Line 2744:	        if (!en && q->dc.left->offset2) 

	T25(EAX).A =   _en:LINK(-4).A
	CONDGO	L_3640:PC ; T25(EAX).A != #0.A
	BLOCK END
	BLOCK 17
	T26(EAX).A =   _q:LINK(4).A
	T27(EAX).A =   *(T26(EAX) + 4+0).A.A
	T28(EAX).A =   *(T27(EAX) + 8).A.A
	CONDGO	L_3640:PC ; T28(EAX).A == #0.A
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_3642:
; Line 2745:	            en = GetSymRef(q->dc.left->offset2); 

	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).A =   *(T29(EAX) + 4+0).A.A
	T31(EAX).A =   *(T30(EAX) + 8).A.A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@Optimizer@GetSymRef$qp27@Optimizer@SimpleExpression:PC.UI
	T32(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_en:LINK(-4).A =   T32(EAX).A
	BLOCK END
	BLOCK 20

L_3643:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_3640:
	BLOCK END
	BLOCK 22

L_3644:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_3646:
; Line 2746:	        if (!en && q->dc.left->offset3) 

	T33(EAX).A =   _en:LINK(-4).A
	CONDGO	L_3645:PC ; T33(EAX).A != #0.A
	BLOCK END
	BLOCK 24
	T34(EAX).A =   _q:LINK(4).A
	T35(EAX).A =   *(T34(EAX) + 4+0).A.A
	T36(EAX).A =   *(T35(EAX) + C).A.A
	CONDGO	L_3645:PC ; T36(EAX).A == #0.A
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_3647:
; Line 2747:	            en = GetSymRef(q->dc.left->offset3); 

	T37(EAX).A =   _q:LINK(4).A
	T38(EAX).A =   *(T37(EAX) + 4+0).A.A
	T39(EAX).A =   *(T38(EAX) + C).A.A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@Optimizer@GetSymRef$qp27@Optimizer@SimpleExpression:PC.UI
	T40(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	_en:LINK(-4).A =   T40(EAX).A
	BLOCK END
	BLOCK 27

L_3648:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_3645:
	BLOCK END
	BLOCK 29

L_3649:
	DBG BLOCK END
; Line 2748:	        getAmodes(q, &op, q->dc.left, &apl, &aph); 

	T41(EAX).A =   #_aph:LINK(-16).A
	PARM	T41(EAX).A
	T42(EAX).A =   #_apl:LINK(-12).A
	PARM	T42(EAX).A
	T43(EAX).A =   _q:LINK(4).A
	T44(EAX).A =   *(T43(EAX) + 4+0).A.A
	PARM	T44(EAX).A
	T45(EAX).A =   #_op:LINK(-8).A
	PARM	T45(EAX).A
	T46(EAX).A =   _q:LINK(4).A
	PARM	T46(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_3651:
; Line 2750:	        if (q->dc.left->mode == Optimizer::i_immed) 

	T47(EAX).A =   _q:LINK(4).A
	T48(EAX).A =   *(T47(EAX) + 4+0).A.A
	T49(EAX).I =   *(T48(EAX) + 0).A.I
	CONDGO	L_3650:PC ; T49(EAX).I != #1.C
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_3652:
; Line 2751:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_3653:
; Line 2752:	            if (isintconst(q->dc.left->offset)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_3655:
	T50(EAX).A =   _q:LINK(4).A
	T51(EAX).A =   *(T50(EAX) + 4+0).A.A
	T52(EAX).A =   *(T51(EAX) + 4).A.A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@Optimizer@isintconst$qp27@Optimizer@SimpleExpression:PC.UI
	T53(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#4.N
	CONDGO	L_3654:PC ; T53(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_3656:
; Line 2753:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_3657:
; Line 2755:	                apl->length = 0; 

	T54(EAX).A =   _apl:LINK(-12).A
	*(T54(EAX) + 8).A.C =   #0.C
	VAR START	lbl
; Line 2756:	                int lbl = beGetLabel; 

	T55(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lbl:LINK(-20).I =   T55(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 2757:	                gen_codes(op_push, ISZ_UINT, make_label(lbl), nullptr); 

	PARM	#0.UI
	T56(EAX).I =   _lbl:LINK(-20).I
	PARM	T56(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T57(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T57(EAX).A
	T58(EAX).UI =   #7.C
	PARM	T58(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2758:	                gen_codes(op_push, ISZ_UINT, apl, nullptr); 

	PARM	#0.UI
	T59(EAX).A =   _apl:LINK(-12).A
	PARM	T59(EAX).A
	T60(EAX).UI =   #7.C
	PARM	T60(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2759:	                gen_code(op_ret, nullptr, nullptr); 

	PARM	#0.UI
	PARM	#0.UI
	PARM	#14B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2760:	                oa_gen_label(lbl); 

	T61(EAX).I =   _lbl:LINK(-20).I
	PARM	T61(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 2761:	            } 

	BLOCK END
	BLOCK 38

L_3658:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_3660:
	DBG BLOCK END
	GOTO	L_3659:PC
	BLOCK END
	BLOCK 40
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_3661:
	BLOCK END
	BLOCK 42

L_3654:
; Line 2762:	            else 

; Line 2763:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_3662:
; Line 2764:	                apl->length = 0; 

	T62(EAX).A =   _apl:LINK(-12).A
	*(T62(EAX) + 8).A.C =   #0.C
; Line 2765:	                gen_code(op_call, apl, nullptr); 

	PARM	#0.UI
	T63(EAX).A =   _apl:LINK(-12).A
	PARM	T63(EAX).A
	PARM	#30.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2766:	            } 

	BLOCK END
	BLOCK 44

L_3663:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_3664:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_3659:
	BLOCK END
	BLOCK 47

L_3665:
	DBG BLOCK END
; Line 2767:	        } 

	BLOCK END
	BLOCK 48

L_3666:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_3668:
	DBG BLOCK END
	GOTO	L_3667:PC
	BLOCK END
	BLOCK 50
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_3669:
	BLOCK END
	BLOCK 52

L_3650:
; Line 2768:	        else 

; Line 2769:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_3670:
; Line 2770:	            apl->liveRegs = q->liveRegs; 

	T64(EAX).A =   _q:LINK(4).A
	T65(ECX).I =   *(T64(EAX) + 48).A.ULL
	T66(EAX).A =   _apl:LINK(-12).A
	*(T66(EAX) + 10).A.I =   T65(ECX).I
; Line 2771:	            gen_code(op_call, apl, 0); 

	T67(EAX).A =   #0.C
	PARM	T67(EAX).A
	T68(EAX).A =   _apl:LINK(-12).A
	PARM	T68(EAX).A
	PARM	#30.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2772:	        } 

	BLOCK END
	BLOCK 54

L_3671:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_3672:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_3667:
	BLOCK END
	BLOCK 57

L_3673:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_3675:
; Line 2776:	        if (q->novalue >= 0) 

	T69(EAX).A =   _q:LINK(4).A
	T70(EAX).I =   *(T69(EAX) + BE).A.C
	CONDGO	L_3674:PC ; T70(EAX).I S< #0.C
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_3676:
; Line 2777:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_3677:
; Line 2778:	            switch (q->novalue) 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_3679:
	DBG BLOCK END
	T71(EAX).A =   _q:LINK(4).A
	T72(AL).C =   *(T71(EAX) + BE).A.C
	COSWITCH(T72(AL).C,#9.UI,#9.UI,L_3700:PC)
	SWBRANCH(#12.UI,L_3687:PC)
	SWBRANCH(#13.UI,L_3689:PC)
	SWBRANCH(#14.UI,L_3691:PC)
	SWBRANCH(#15.UI,L_3693:PC)
	SWBRANCH(#16.UI,L_3695:PC)
	SWBRANCH(#17.UI,L_3697:PC)
	SWBRANCH(#18.UI,L_3681:PC)
	SWBRANCH(#19.UI,L_3683:PC)
	SWBRANCH(#1A.UI,L_3685:PC)
; Line 2779:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_3680:
	BLOCK END
	BLOCK 64

L_3681:
	BLOCK END
	BLOCK 65

L_3683:
	BLOCK END
	BLOCK 66

L_3685:
	DBG BLOCK START
; Line 2781:	                case ISZ_CDOUBLE: 
; Line 2782:	                case ISZ_CLDOUBLE: 

; Line 2782:	                case ISZ_CLDOUBLE: 

	T73(EAX).A =   #0.C
	PARM	T73(EAX).A
	T74(EAX).UI =   #0.C
	PARM	T74(EAX).UI
	TAG
	GOSUB	#@occx86@makefreg$qi:PC.UI
	T75(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T75(EAX).A
	PARM	#14.I
	PARM	#B7.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_3687:
	BLOCK END
	BLOCK 68

L_3689:
	BLOCK END
	BLOCK 69

L_3691:
	BLOCK END
	BLOCK 70

L_3693:
	BLOCK END
	BLOCK 71

L_3695:
	BLOCK END
	BLOCK 72

L_3697:
	DBG BLOCK START
; Line 2783:	                    gen_codes(op_fstp, ISZ_LDOUBLE, makefreg(0), 0); 

	T76(EAX).A =   #0.C
	PARM	T76(EAX).A
	T77(EAX).UI =   #0.C
	PARM	T77(EAX).UI
	TAG
	GOSUB	#@occx86@makefreg$qi:PC.UI
	T78(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T78(EAX).A
	PARM	#14.I
	PARM	#B7.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2785:	                case ISZ_FLOAT: 
; Line 2786:	                case ISZ_DOUBLE: 

; Line 2786:	                case ISZ_DOUBLE: 

	BLOCK END
	BLOCK 73

L_3699:
	DBG BLOCK END
	BLOCK END
	BLOCK 74

L_3700:
	BLOCK END
	BLOCK 75

L_3678:
	BLOCK END
	BLOCK 76

L_3701:
	DBG BLOCK END
; Line 2788:	                case ISZ_IFLOAT: 

	BLOCK END
	BLOCK 77

L_3702:
	DBG BLOCK END
	BLOCK END
	BLOCK 78

L_3703:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_3674:
	BLOCK END
	BLOCK 80

L_3704:
	DBG BLOCK END
; Line 2789:	                case ISZ_IDOUBLE: 

	BLOCK END
	BLOCK 81

L_3705:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_3706:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_3631:
	BLOCK END
	BLOCK 84

L_3707:
	DBG BLOCK END
; Line 2790:	                case ISZ_ILDOUBLE: 
; Line 2791:	                    gen_codes(op_fstp, ISZ_LDOUBLE, makefreg(0), 0); 

; Line 2791:	                    gen_codes(op_fstp, ISZ_LDOUBLE, makefreg(0), 0); 

	BLOCK END
	BLOCK 85

L_3708:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_3629:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_fargosub$qp15@Optimizer@quad


global @occx86@asm_fargosub$qp15@Optimizer@quad
@occx86@asm_fargosub$qp15@Optimizer@quad:
; Line 2798:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3714:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3716:
; Line 2799:	    gen_codes(op_push, ISZ_UINT, makesegreg(CS), 0); 

	T1(EAX).A =   #0.C
	PARM	T1(EAX).A
	T2(EAX).UI =   #1.C
	PARM	T2(EAX).UI
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T3(EAX).A
	T4(EAX).UI =   #7.C
	PARM	T4(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2800:	    asm_gosub(q); 

	T5(EAX).A =   _q:LINK(4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@occx86@asm_gosub$qp15@Optimizer@quad:PC.UI
	PARMADJ	#4.N
; Line 2801:	} 

	BLOCK END
	BLOCK 4

L_3717:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3715:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_trap$qp15@Optimizer@quad


global @occx86@asm_trap$qp15@Optimizer@quad
@occx86@asm_trap$qp15@Optimizer@quad:
; Line 2803:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3722:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3724:
; Line 2804:	    if (q->dc.left->offset->i == 3) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3726:
	T1(EAX).A =   _q:LINK(4).A
	T2(EAX).A =   *(T1(EAX) + 4+0).A.A
	T3(EAX).A =   *(T2(EAX) + 4).A.A
	T4(EDX:EAX).LL =   *(T3(EAX) + 8).A.LL
	CONDGO	L_3725:PC ; T4(EDX:EAX).LL != #3.LL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3727:
; Line 2805:	        gen_code(op_int3, 0, 0); 

	T5(EAX).A =   #0.C
	PARM	T5(EAX).A
	T6(EAX).A =   #0.C
	PARM	T6(EAX).A
	PARM	#DA.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 7

L_3729:
	DBG BLOCK END
	GOTO	L_3728:PC
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_3730:
	BLOCK END
	BLOCK 10

L_3725:
; Line 2806:	    else 

; Line 2807:	        gen_code(op_int, aimmed(q->dc.left->offset->i), 0); 

	T7(EAX).A =   #0.C
	PARM	T7(EAX).A
	T8(EAX).A =   _q:LINK(4).A
	T9(EAX).A =   *(T8(EAX) + 4+0).A.A
	T10(EAX).A =   *(T9(EAX) + 4).A.A
	T11(EDX:EAX).ULL =   *(T10(EAX) + 8).A.LL
	PARM	T11(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T12(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T12(EAX).A
	PARM	#D8.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 11

L_3731:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_3728:
	BLOCK END
	BLOCK 13

L_3732:
	DBG BLOCK END
; Line 2808:	} 

	BLOCK END
	BLOCK 14

L_3733:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_3723:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_int$qp15@Optimizer@quad


global @occx86@asm_int$qp15@Optimizer@quad
@occx86@asm_int$qp15@Optimizer@quad:
; Line 2810:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3738:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3740:
; Line 2811:	    gen_code(op_pushf, 0, 0); 

	T1(EAX).A =   #0.C
	PARM	T1(EAX).A
	T2(EAX).A =   #0.C
	PARM	T2(EAX).A
	PARM	#142.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2812:	    gen_codes(op_push, ISZ_UINT, makesegreg(CS), 0); 

	T3(EAX).A =   #0.C
	PARM	T3(EAX).A
	T4(EAX).UI =   #1.C
	PARM	T4(EAX).UI
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T5(EAX).A
	T6(EAX).UI =   #7.C
	PARM	T6(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 2813:	    asm_gosub(q); 

	T7(EAX).A =   _q:LINK(4).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@occx86@asm_gosub$qp15@Optimizer@quad:PC.UI
	PARMADJ	#4.N
; Line 2814:	} 

	BLOCK END
	BLOCK 4

L_3741:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3739:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_ret$qp15@Optimizer@quad


global @occx86@asm_ret$qp15@Optimizer@quad
@occx86@asm_ret$qp15@Optimizer@quad:
; Line 2819:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3746:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3748:
; Line 2820:	    if (beGetIcon(q->dc.left)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3750:
	T1(EAX).A =   _q:LINK(4).A
	T2(EAX).A =   *(T1(EAX) + 4+0).A.A
	T3(EAX).A =   *(T2(EAX) + 4).A.A
	T4(EDX:EAX).LL =   *(T3(EAX) + 8).A.LL
	CONDGO	L_3749:PC ; T4(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3751:
; Line 2821:	        gen_code(op_ret, aimmed(beGetIcon(q->dc.left)), 0); 

	T5(EAX).A =   #0.C
	PARM	T5(EAX).A
	T6(EAX).A =   _q:LINK(4).A
	T7(EAX).A =   *(T6(EAX) + 4+0).A.A
	T8(EAX).A =   *(T7(EAX) + 4).A.A
	T9(EDX:EAX).ULL =   *(T8(EAX) + 8).A.LL
	PARM	T9(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T10(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T10(EAX).A
	PARM	#14B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 7

L_3753:
	DBG BLOCK END
	GOTO	L_3752:PC
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_3754:
	BLOCK END
	BLOCK 10

L_3749:
; Line 2822:	    else 

; Line 2823:	        gen_code(op_ret, 0, 0); 

	T11(EAX).A =   #0.C
	PARM	T11(EAX).A
	T12(EAX).A =   #0.C
	PARM	T12(EAX).A
	PARM	#14B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 11

L_3755:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_3752:
	BLOCK END
	BLOCK 13

L_3756:
	DBG BLOCK END
; Line 2824:	} 

	BLOCK END
	BLOCK 14

L_3757:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_3747:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_fret$qp15@Optimizer@quad


global @occx86@asm_fret$qp15@Optimizer@quad
@occx86@asm_fret$qp15@Optimizer@quad:
; Line 2829:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3762:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3764:
; Line 2830:	    if (beGetIcon(q->dc.left)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3766:
	T1(EAX).A =   _q:LINK(4).A
	T2(EAX).A =   *(T1(EAX) + 4+0).A.A
	T3(EAX).A =   *(T2(EAX) + 4).A.A
	T4(EDX:EAX).LL =   *(T3(EAX) + 8).A.LL
	CONDGO	L_3765:PC ; T4(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3767:
; Line 2831:	        gen_code(op_retf, aimmed(beGetIcon(q->dc.left)), 0); 

	T5(EAX).A =   #0.C
	PARM	T5(EAX).A
	T6(EAX).A =   _q:LINK(4).A
	T7(EAX).A =   *(T6(EAX) + 4+0).A.A
	T8(EAX).A =   *(T7(EAX) + 4).A.A
	T9(EDX:EAX).ULL =   *(T8(EAX) + 8).A.LL
	PARM	T9(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T10(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T10(EAX).A
	PARM	#14C.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 7

L_3769:
	DBG BLOCK END
	GOTO	L_3768:PC
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_3770:
	BLOCK END
	BLOCK 10

L_3765:
; Line 2832:	    else 

; Line 2833:	        gen_code(op_retf, 0, 0); 

	T11(EAX).A =   #0.C
	PARM	T11(EAX).A
	T12(EAX).A =   #0.C
	PARM	T12(EAX).A
	PARM	#14C.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 11

L_3771:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_3768:
	BLOCK END
	BLOCK 13

L_3772:
	DBG BLOCK END
; Line 2834:	} 

	BLOCK END
	BLOCK 14

L_3773:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_3763:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_rett$qp15@Optimizer@quad


global @occx86@asm_rett$qp15@Optimizer@quad
@occx86@asm_rett$qp15@Optimizer@quad:
; Line 2841:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_3778:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3780:
; Line 2842:	    (void)q; 

; Line 2843:	    gen_code(op_iret, 0, 0); 

	T0(EAX).A =   #0.C
	PARM	T0(EAX).A
	T1(EAX).A =   #0.C
	PARM	T1(EAX).A
	PARM	#DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 2844:	} 

	BLOCK END
	BLOCK 4

L_3781:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_3779:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_add$qp15@Optimizer@quad


global @occx86@asm_add$qp15@Optimizer@quad
@occx86@asm_add$qp15@Optimizer@quad:
; Line 2846:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#30.UI
	BLOCK END
	BLOCK 2

L_3787:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_3789:
; Line 2847:	    if (q->atomic) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_3791:
	T22(EAX).A =   _q:LINK(4).A
	CONDGO	L_3790:PC ; *(T22(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_3792:
; Line 2848:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_3793:
; Line 2849:	        addsubatomic(op_add, q); 

	T23(EAX).A =   _q:LINK(4).A
	PARM	T23(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@addsubatomic$q8e_opcodep15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 2850:	        return; 

	GOTO	L_3788:PC
; Line 2851:	    } 

	BLOCK END
	BLOCK 8

L_3794:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_3795:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_3790:
	BLOCK END
	BLOCK 11

L_3796:
	DBG BLOCK END
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 2852:	    enum e_opcode opa, opl, opr; 
; Line 2853:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

; Line 2853:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T24(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T24(EAX).A
	VAR START	apah
	T25(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T25(EAX).A
	VAR START	apll
	T26(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T26(EAX).A
	VAR START	aplh
	T27(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T27(EAX).A
	VAR START	aprl
	T28(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T28(EAX).A
	VAR START	aprh
	T29(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T29(EAX).A
; Line 2854:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T30(EAX).A =   #_aplh:LINK(-28).A
	PARM	T30(EAX).A
	T31(EAX).A =   #_apll:LINK(-24).A
	PARM	T31(EAX).A
	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 4+0).A.A
	PARM	T33(EAX).A
	T34(EAX).A =   #_opl:LINK(-8).A
	PARM	T34(EAX).A
	T35(EAX).A =   _q:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2855:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T36(EAX).A =   #_aprh:LINK(-36).A
	PARM	T36(EAX).A
	T37(EAX).A =   #_aprl:LINK(-32).A
	PARM	T37(EAX).A
	T38(EAX).A =   _q:LINK(4).A
	T39(EAX).A =   *(T38(EAX) + 8+0).A.A
	PARM	T39(EAX).A
	T40(EAX).A =   #_opr:LINK(-12).A
	PARM	T40(EAX).A
	T41(EAX).A =   _q:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 2856:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T42(EAX).A =   #_apah:LINK(-20).A
	PARM	T42(EAX).A
	T43(EAX).A =   #_apal:LINK(-16).A
	PARM	T43(EAX).A
	T44(EAX).A =   _q:LINK(4).A
	T45(EAX).A =   *(T44(EAX) + 40).A.A
	PARM	T45(EAX).A
	T46(EAX).A =   #_opa:LINK(-4).A
	PARM	T46(EAX).A
	T47(EAX).A =   _q:LINK(4).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_3798:
; Line 2857:	    if (q->ans->size >= ISZ_CFLOAT) 

	T48(EAX).A =   _q:LINK(4).A
	T49(EAX).A =   *(T48(EAX) + 40).A.A
	T50(EAX).I =   *(T49(EAX) + 19).A.C
	CONDGO	L_3797:PC ; T50(EAX).I S< #18.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_3799:
; Line 2858:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_3800:
; Line 2859:	        if ((q->dc.left->size < ISZ_CFLOAT && q->dc.right->size < ISZ_CFLOAT) && 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_3802:
; Line 2860:	            (q->dc.left->size < ISZ_IFLOAT) != (q->dc.right->size < ISZ_IFLOAT)) 

	T51(EAX).A =   _q:LINK(4).A
	T52(EAX).A =   *(T51(EAX) + 4+0).A.A
	T53(EAX).I =   *(T52(EAX) + 19).A.C
	CONDGO	L_3801:PC ; T53(EAX).I S>= #18.C
	BLOCK END
	BLOCK 17
	T54(EAX).A =   _q:LINK(4).A
	T55(EAX).A =   *(T54(EAX) + 8+0).A.A
	T56(EAX).I =   *(T55(EAX) + 19).A.C
	CONDGO	L_3801:PC ; T56(EAX).I S>= #18.C
	BLOCK END
	BLOCK 18
	T57(EAX).A =   _q:LINK(4).A
	T58(EAX).A =   *(T57(EAX) + 8+0).A.A
	T59(EAX).I =   *(T58(EAX) + 19).A.C
	T61(ECX).UI = T59(EAX).I S< #15.I
	T62(EAX).A =   _q:LINK(4).A
	T63(EAX).A =   *(T62(EAX) + 4+0).A.A
	T64(EAX).I =   *(T63(EAX) + 19).A.C
	T66(EAX).UI = T64(EAX).I S< #15.I
	CONDGO	L_3801:PC ; T66(EAX).I == T61(ECX).I
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_3803:
; Line 2861:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_3804:
; Line 2862:	            AMODE* realsource; 

	VAR START	realsource
	VAR START	imagsource
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_3806:
; Line 2863:	            AMODE* imagsource; 
; Line 2864:	            if (q->dc.left->size < ISZ_IFLOAT) 

; Line 2864:	            if (q->dc.left->size < ISZ_IFLOAT) 

	T67(EAX).A =   _q:LINK(4).A
	T68(EAX).A =   *(T67(EAX) + 4+0).A.A
	T69(EAX).I =   *(T68(EAX) + 19).A.C
	CONDGO	L_3805:PC ; T69(EAX).I S>= #15.I
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_3807:
; Line 2865:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_3808:
; Line 2866:	                realsource = apll; 

	T70(EAX).A =   _apll:LINK(-24).A
	_realsource:LINK(-44).A =   T70(EAX).A
; Line 2867:	                imagsource = aprl; 

	T71(EAX).A =   _aprl:LINK(-32).A
	_imagsource:LINK(-48).A =   T71(EAX).A
; Line 2868:	            } 

	BLOCK END
	BLOCK 26

L_3809:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_3811:
	DBG BLOCK END
	GOTO	L_3810:PC
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_3812:
	BLOCK END
	BLOCK 30

L_3805:
; Line 2869:	            else 

; Line 2871:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_3813:
; Line 2872:	                realsource = aprl; 

	T72(EAX).A =   _aprl:LINK(-32).A
	_realsource:LINK(-44).A =   T72(EAX).A
; Line 2873:	                imagsource = apll; 

	T73(EAX).A =   _apll:LINK(-24).A
	_imagsource:LINK(-48).A =   T73(EAX).A
; Line 2874:	            } 

	BLOCK END
	BLOCK 32

L_3814:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_3815:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_3810:
	BLOCK END
	BLOCK 35

L_3816:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_3818:
; Line 2875:	            if (equal_address(apal, imagsource)) 

	T74(EAX).A =   _imagsource:LINK(-48).A
	PARM	T74(EAX).A
	T75(EAX).A =   _apal:LINK(-16).A
	PARM	T75(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T76(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3817:PC ; T76(EAX).I == #0.C
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_3819:
; Line 2876:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_3820:
; Line 2877:	                if (equal_address(apah, realsource)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_3822:
	T77(EAX).A =   _realsource:LINK(-44).A
	PARM	T77(EAX).A
	T78(EAX).A =   _apah:LINK(-20).A
	PARM	T78(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T79(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3821:PC ; T79(EAX).I == #0.C
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_3823:
; Line 2878:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_3824:
; Line 2880:	                    gen_code_sse_imm(op_shufps, op_shufpd, q->dc.left->size, apah, apal, 

	T80(EDX:EAX).ULL =   #0.C
	PARM	T80(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T81(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T81(EAX).A
	T82(EAX).A =   _apal:LINK(-16).A
	PARM	T82(EAX).A
	T83(EAX).A =   _apah:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   _q:LINK(4).A
	T85(EAX).A =   *(T84(EAX) + 4+0).A.A
	T86(EAX).I =   *(T85(EAX) + 19).A.C
	PARM	T86(EAX).I
	PARM	#24F.I
	PARM	#250.I
	TAG
	GOSUB	#@occx86@gen_code_sse_imm$qiiip5amodepn0pn0:PC.UI
	PARMADJ	#18.N
; Line 2882:	                    gen_code_sse_imm(op_shufps, op_shufpd, q->dc.left->size, apal, apah, 
; Line 2883:	                                     aimmed(0));   

; Line 2883:	                                     aimmed(0));   

	T87(EDX:EAX).ULL =   #0.C
	PARM	T87(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T88(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T88(EAX).A
	T89(EAX).A =   _apah:LINK(-20).A
	PARM	T89(EAX).A
	T90(EAX).A =   _apal:LINK(-16).A
	PARM	T90(EAX).A
	T91(EAX).A =   _q:LINK(4).A
	T92(EAX).A =   *(T91(EAX) + 4+0).A.A
	T93(EAX).I =   *(T92(EAX) + 19).A.C
	PARM	T93(EAX).I
	PARM	#24F.I
	PARM	#250.I
	TAG
	GOSUB	#@occx86@gen_code_sse_imm$qiiip5amodepn0pn0:PC.UI
	PARMADJ	#18.N
; Line 2884:	                    gen_code_sse_imm(op_shufps, op_shufpd, q->dc.left->size, apah, apah, 
; Line 2885:	                                     aimmed(q->ans->size == ISZ_CFLOAT ? 2 : 1));   

; Line 2885:	                                     aimmed(q->ans->size == ISZ_CFLOAT ? 2 : 1));   

	T94(EAX).A =   _q:LINK(4).A
	T95(EAX).A =   *(T94(EAX) + 40).A.A
	T96(AL).C =   *(T95(EAX) + 19).A.C
	CONDGO	L_4166:PC ; T96(AL).C != #18.C
	BLOCK END
	BLOCK 44
	T97(EAX).I =   #2.C
	GOTO	L_4167:PC
	BLOCK END
	BLOCK 45

L_4166:
	T97(EAX).I =   #1.C
	BLOCK END
	BLOCK 46

L_4167:
	T98(EDX:EAX).ULL =   T97(EAX).I
	PARM	T98(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T99(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T99(EAX).A
	T100(EAX).A =   _apah:LINK(-20).A
	PARM	T100(EAX).A
	T101(EAX).A =   _apah:LINK(-20).A
	PARM	T101(EAX).A
	T102(EAX).A =   _q:LINK(4).A
	T103(EAX).A =   *(T102(EAX) + 4+0).A.A
	T104(EAX).I =   *(T103(EAX) + 19).A.C
	PARM	T104(EAX).I
	PARM	#24F.I
	PARM	#250.I
	TAG
	GOSUB	#@occx86@gen_code_sse_imm$qiiip5amodepn0pn0:PC.UI
	PARMADJ	#18.N
; Line 2886:	                    gen_code_sse_imm(op_shufps, op_shufpd, q->dc.left->size, apal, apal, 
; Line 2887:	                                     aimmed(q->ans->size == ISZ_CFLOAT ? 2 : 1));   

; Line 2887:	                                     aimmed(q->ans->size == ISZ_CFLOAT ? 2 : 1));   

	T105(EAX).A =   _q:LINK(4).A
	T106(EAX).A =   *(T105(EAX) + 40).A.A
	T107(AL).C =   *(T106(EAX) + 19).A.C
	CONDGO	L_4168:PC ; T107(AL).C != #18.C
	BLOCK END
	BLOCK 47
	T108(EAX).I =   #2.C
	GOTO	L_4169:PC
	BLOCK END
	BLOCK 48

L_4168:
	T108(EAX).I =   #1.C
	BLOCK END
	BLOCK 49

L_4169:
	T109(EDX:EAX).ULL =   T108(EAX).I
	PARM	T109(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T110(EAX).A =   RV.T5(EAX).A
	PARMADJ	#8.N
	PARM	T110(EAX).A
	T111(EAX).A =   _apal:LINK(-16).A
	PARM	T111(EAX).A
	T112(EAX).A =   _apal:LINK(-16).A
	PARM	T112(EAX).A
	T113(EAX).A =   _q:LINK(4).A
	T114(EAX).A =   *(T113(EAX) + 4+0).A.A
	T115(EAX).I =   *(T114(EAX) + 19).A.C
	PARM	T115(EAX).I
	PARM	#24F.I
	PARM	#250.I
	TAG
	GOSUB	#@occx86@gen_code_sse_imm$qiiip5amodepn0pn0:PC.UI
	PARMADJ	#18.N
; Line 2888:	                } 

	BLOCK END
	BLOCK 50

L_3825:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_3827:
	DBG BLOCK END
	GOTO	L_3826:PC
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_3828:
	BLOCK END
	BLOCK 54

L_3821:
; Line 2889:	                else 

; Line 2890:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_3829:
; Line 2891:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apah, imagsource); 

	T116(EAX).A =   _imagsource:LINK(-48).A
	PARM	T116(EAX).A
	T117(EAX).A =   _apah:LINK(-20).A
	PARM	T117(EAX).A
	T118(EAX).A =   _q:LINK(4).A
	T119(EAX).A =   *(T118(EAX) + 40).A.A
	T120(EAX).I =   *(T119(EAX) + 19).A.C
	PARM	T120(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2892:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apal, realsource); 

	T121(EAX).A =   _realsource:LINK(-44).A
	PARM	T121(EAX).A
	T122(EAX).A =   _apal:LINK(-16).A
	PARM	T122(EAX).A
	T123(EAX).A =   _q:LINK(4).A
	T124(EAX).A =   *(T123(EAX) + 40).A.A
	T125(EAX).I =   *(T124(EAX) + 19).A.C
	PARM	T125(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2893:	                } 

	BLOCK END
	BLOCK 56

L_3830:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_3831:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_3826:
	BLOCK END
	BLOCK 59

L_3832:
	DBG BLOCK END
; Line 2894:	            } 

	BLOCK END
	BLOCK 60

L_3833:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_3835:
	DBG BLOCK END
	GOTO	L_3834:PC
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_3836:
	BLOCK END
	BLOCK 64

L_3817:
; Line 2895:	            else   

; Line 2896:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_3837:
; Line 2897:	                gen_code_sse(op_movss, op_movsd, q->ans->size, apal, realsource); 

	T126(EAX).A =   _realsource:LINK(-44).A
	PARM	T126(EAX).A
	T127(EAX).A =   _apal:LINK(-16).A
	PARM	T127(EAX).A
	T128(EAX).A =   _q:LINK(4).A
	T129(EAX).A =   *(T128(EAX) + 40).A.A
	T130(EAX).I =   *(T129(EAX) + 19).A.C
	PARM	T130(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2898:	                gen_code_sse(op_movss, op_movsd, q->ans->size, apah, imagsource); 

	T131(EAX).A =   _imagsource:LINK(-48).A
	PARM	T131(EAX).A
	T132(EAX).A =   _apah:LINK(-20).A
	PARM	T132(EAX).A
	T133(EAX).A =   _q:LINK(4).A
	T134(EAX).A =   *(T133(EAX) + 40).A.A
	T135(EAX).I =   *(T134(EAX) + 19).A.C
	PARM	T135(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2899:	            } 

	BLOCK END
	BLOCK 66

L_3838:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_3839:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_3834:
	BLOCK END
	BLOCK 69

L_3840:
	DBG BLOCK END
; Line 2900:	        } 

	BLOCK END
	BLOCK 70

L_3841:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_3843:
	DBG BLOCK END
	GOTO	L_3842:PC
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_3844:
	BLOCK END
	BLOCK 74

L_3801:
; Line 2902:	        else 

; Line 2903:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_3845:
; Line 2904:	            bool highzero = false, lowzero = false; 

	VAR START	highzero
	_highzero:LINK(-37).BOOL =   #0.BOOL
	VAR START	lowzero
	_lowzero:LINK(-38).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_3847:
; Line 2905:	            if ((q->dc.left->size < ISZ_CFLOAT && q->dc.right->size < ISZ_CFLOAT) && 
; Line 2906:	                (q->dc.left->size < ISZ_IFLOAT) == (q->dc.right->size < ISZ_IFLOAT)) 

; Line 2906:	                (q->dc.left->size < ISZ_IFLOAT) == (q->dc.right->size < ISZ_IFLOAT)) 

	T136(EAX).A =   _q:LINK(4).A
	T137(EAX).A =   *(T136(EAX) + 4+0).A.A
	T138(EAX).I =   *(T137(EAX) + 19).A.C
	CONDGO	L_3846:PC ; T138(EAX).I S>= #18.C
	BLOCK END
	BLOCK 77
	T139(EAX).A =   _q:LINK(4).A
	T140(EAX).A =   *(T139(EAX) + 8+0).A.A
	T141(EAX).I =   *(T140(EAX) + 19).A.C
	CONDGO	L_3846:PC ; T141(EAX).I S>= #18.C
	BLOCK END
	BLOCK 78
	T142(EAX).A =   _q:LINK(4).A
	T143(EAX).A =   *(T142(EAX) + 8+0).A.A
	T144(EAX).I =   *(T143(EAX) + 19).A.C
	T146(ECX).UI = T144(EAX).I S< #15.I
	T147(EAX).A =   _q:LINK(4).A
	T148(EAX).A =   *(T147(EAX) + 4+0).A.A
	T149(EAX).I =   *(T148(EAX) + 19).A.C
	T151(EAX).UI = T149(EAX).I S< #15.I
	CONDGO	L_3846:PC ; T151(EAX).I != T146(ECX).I
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_3848:
; Line 2907:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_3849:
; Line 2908:	                if (q->dc.left->size < ISZ_IFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_3851:
	T152(EAX).A =   _q:LINK(4).A
	T153(EAX).A =   *(T152(EAX) + 4+0).A.A
	T154(EAX).I =   *(T153(EAX) + 19).A.C
	CONDGO	L_3850:PC ; T154(EAX).I S>= #15.I
	BLOCK END
	BLOCK 83
	DBG BLOCK START
	BLOCK END
	BLOCK 84

L_3852:
; Line 2909:	                    highzero = true; 

	_highzero:LINK(-37).BOOL =   #1.BOOL
	BLOCK END
	BLOCK 85

L_3854:
	DBG BLOCK END
	GOTO	L_3853:PC
	BLOCK END
	BLOCK 86
	DBG BLOCK START
	BLOCK END
	BLOCK 87

L_3855:
	BLOCK END
	BLOCK 88

L_3850:
; Line 2910:	                else 

; Line 2911:	                    lowzero = true; 

	_lowzero:LINK(-38).BOOL =   #1.BOOL
	BLOCK END
	BLOCK 89

L_3856:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_3853:
	BLOCK END
	BLOCK 91

L_3857:
	DBG BLOCK END
; Line 2912:	            } 

	BLOCK END
	BLOCK 92

L_3858:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_3859:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_3846:
	BLOCK END
	BLOCK 95

L_3860:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_3862:
; Line 2913:	            if (equal_address(apal, apll)) 

	T155(EAX).A =   _apll:LINK(-24).A
	PARM	T155(EAX).A
	T156(EAX).A =   _apal:LINK(-16).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T157(EAX).I =   RV.T6(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3861:PC ; T157(EAX).I == #0.C
	BLOCK END
	BLOCK 97
	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_3863:
; Line 2914:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_3864:
; Line 2915:	                if (!lowzero) 

	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_3866:
	T158(AL).BOOL =   _lowzero:LINK(-38).BOOL
	CONDGO	L_3865:PC ; T158(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 101
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_3867:
; Line 2916:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_3868:
; Line 2917:	                    gen_code_sse(op_addss, op_addsd, q->ans->size, apal, aprl); 

	T159(EAX).A =   _aprl:LINK(-32).A
	PARM	T159(EAX).A
	T160(EAX).A =   _apal:LINK(-16).A
	PARM	T160(EAX).A
	T161(EAX).A =   _q:LINK(4).A
	T162(EAX).A =   *(T161(EAX) + 40).A.A
	T163(EAX).I =   *(T162(EAX) + 19).A.C
	PARM	T163(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2918:	                } 

	BLOCK END
	BLOCK 104

L_3869:
	DBG BLOCK END
	BLOCK END
	BLOCK 105

L_3871:
	DBG BLOCK END
	GOTO	L_3870:PC
	BLOCK END
	BLOCK 106
	DBG BLOCK START
	BLOCK END
	BLOCK 107

L_3872:
	BLOCK END
	BLOCK 108

L_3865:
; Line 2919:	                else 

; Line 2920:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 109

L_3873:
; Line 2921:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apal, floatzero(apal)); 

	T164(EAX).A =   _apal:LINK(-16).A
	PARM	T164(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T165(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T165(EAX).A
	T166(EAX).A =   _apal:LINK(-16).A
	PARM	T166(EAX).A
	T167(EAX).A =   _q:LINK(4).A
	T168(EAX).A =   *(T167(EAX) + 40).A.A
	T169(EAX).I =   *(T168(EAX) + 19).A.C
	PARM	T169(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2922:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 2923:	                } 

	BLOCK END
	BLOCK 110

L_3874:
	DBG BLOCK END
	BLOCK END
	BLOCK 111

L_3875:
	DBG BLOCK END
	BLOCK END
	BLOCK 112

L_3870:
	BLOCK END
	BLOCK 113

L_3876:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 114

L_3878:
; Line 2924:	                if (!highzero) 

	T170(AL).BOOL =   _highzero:LINK(-37).BOOL
	CONDGO	L_3877:PC ; T170(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 115
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_3879:
; Line 2925:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_3880:
; Line 2926:	                    gen_code_sse(op_addss, op_addsd, q->ans->size, apah, aprh); 

	T171(EAX).A =   _aprh:LINK(-36).A
	PARM	T171(EAX).A
	T172(EAX).A =   _apah:LINK(-20).A
	PARM	T172(EAX).A
	T173(EAX).A =   _q:LINK(4).A
	T174(EAX).A =   *(T173(EAX) + 40).A.A
	T175(EAX).I =   *(T174(EAX) + 19).A.C
	PARM	T175(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2927:	                } 

	BLOCK END
	BLOCK 118

L_3881:
	DBG BLOCK END
	BLOCK END
	BLOCK 119

L_3883:
	DBG BLOCK END
	GOTO	L_3882:PC
	BLOCK END
	BLOCK 120
	DBG BLOCK START
	BLOCK END
	BLOCK 121

L_3884:
	BLOCK END
	BLOCK 122

L_3877:
; Line 2928:	                else 

; Line 2929:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 123

L_3885:
; Line 2930:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apah, floatzero(apah)); 

	T176(EAX).A =   _apah:LINK(-20).A
	PARM	T176(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T177(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T177(EAX).A
	T178(EAX).A =   _apah:LINK(-20).A
	PARM	T178(EAX).A
	T179(EAX).A =   _q:LINK(4).A
	T180(EAX).A =   *(T179(EAX) + 40).A.A
	T181(EAX).I =   *(T180(EAX) + 19).A.C
	PARM	T181(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2931:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 2932:	                } 

	BLOCK END
	BLOCK 124

L_3886:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_3887:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_3882:
	BLOCK END
	BLOCK 127

L_3888:
	DBG BLOCK END
; Line 2933:	            } 

	BLOCK END
	BLOCK 128

L_3889:
	DBG BLOCK END
	BLOCK END
	BLOCK 129

L_3891:
	DBG BLOCK END
	GOTO	L_3890:PC
	BLOCK END
	BLOCK 130
	DBG BLOCK START
	BLOCK END
	BLOCK 131

L_3892:
	BLOCK END
	BLOCK 132

L_3861:
; Line 2934:	            else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_3894:
	T182(EAX).A =   _aprl:LINK(-32).A
	PARM	T182(EAX).A
	T183(EAX).A =   _apal:LINK(-16).A
	PARM	T183(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T184(EAX).I =   RV.T9(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3893:PC ; T184(EAX).I == #0.C
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_3895:
; Line 2935:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_3896:
; Line 2936:	                if (!lowzero) 

	DBG BLOCK START
	BLOCK END
	BLOCK 137

L_3898:
	T185(AL).BOOL =   _lowzero:LINK(-38).BOOL
	CONDGO	L_3897:PC ; T185(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 138
	DBG BLOCK START
	BLOCK END
	BLOCK 139

L_3899:
; Line 2937:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_3900:
; Line 2938:	                    gen_code_sse(op_addss, op_addsd, q->ans->size, apal, apll); 

	T186(EAX).A =   _apll:LINK(-24).A
	PARM	T186(EAX).A
	T187(EAX).A =   _apal:LINK(-16).A
	PARM	T187(EAX).A
	T188(EAX).A =   _q:LINK(4).A
	T189(EAX).A =   *(T188(EAX) + 40).A.A
	T190(EAX).I =   *(T189(EAX) + 19).A.C
	PARM	T190(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2939:	                } 

	BLOCK END
	BLOCK 141

L_3901:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_3903:
	DBG BLOCK END
	GOTO	L_3902:PC
	BLOCK END
	BLOCK 143
	DBG BLOCK START
	BLOCK END
	BLOCK 144

L_3904:
	BLOCK END
	BLOCK 145

L_3897:
; Line 2940:	                else 

; Line 2941:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 146

L_3905:
; Line 2942:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apal, floatzero(apal)); 

	T191(EAX).A =   _apal:LINK(-16).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T192(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	PARM	T192(EAX).A
	T193(EAX).A =   _apal:LINK(-16).A
	PARM	T193(EAX).A
	T194(EAX).A =   _q:LINK(4).A
	T195(EAX).A =   *(T194(EAX) + 40).A.A
	T196(EAX).I =   *(T195(EAX) + 19).A.C
	PARM	T196(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2943:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 2944:	                } 

	BLOCK END
	BLOCK 147

L_3906:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_3907:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_3902:
	BLOCK END
	BLOCK 150

L_3908:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 151

L_3910:
; Line 2945:	                if (!highzero) 

	T197(AL).BOOL =   _highzero:LINK(-37).BOOL
	CONDGO	L_3909:PC ; T197(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 152
	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_3911:
; Line 2946:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_3912:
; Line 2947:	                    gen_code_sse(op_addss, op_addsd, q->ans->size, apah, aplh); 

	T198(EAX).A =   _aplh:LINK(-28).A
	PARM	T198(EAX).A
	T199(EAX).A =   _apah:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   _q:LINK(4).A
	T201(EAX).A =   *(T200(EAX) + 40).A.A
	T202(EAX).I =   *(T201(EAX) + 19).A.C
	PARM	T202(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2948:	                } 

	BLOCK END
	BLOCK 155

L_3913:
	DBG BLOCK END
	BLOCK END
	BLOCK 156

L_3915:
	DBG BLOCK END
	GOTO	L_3914:PC
	BLOCK END
	BLOCK 157
	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_3916:
	BLOCK END
	BLOCK 159

L_3909:
; Line 2949:	                else 

; Line 2950:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_3917:
; Line 2951:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apah, floatzero(apah)); 

	T203(EAX).A =   _apah:LINK(-20).A
	PARM	T203(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T204(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	PARM	T204(EAX).A
	T205(EAX).A =   _apah:LINK(-20).A
	PARM	T205(EAX).A
	T206(EAX).A =   _q:LINK(4).A
	T207(EAX).A =   *(T206(EAX) + 40).A.A
	T208(EAX).I =   *(T207(EAX) + 19).A.C
	PARM	T208(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2952:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 2953:	                } 

	BLOCK END
	BLOCK 161

L_3918:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_3919:
	DBG BLOCK END
	BLOCK END
	BLOCK 163

L_3914:
	BLOCK END
	BLOCK 164

L_3920:
	DBG BLOCK END
; Line 2954:	            } 

	BLOCK END
	BLOCK 165

L_3921:
	DBG BLOCK END
	BLOCK END
	BLOCK 166

L_3923:
	DBG BLOCK END
	GOTO	L_3922:PC
	BLOCK END
	BLOCK 167
	DBG BLOCK START
	BLOCK END
	BLOCK 168

L_3924:
	BLOCK END
	BLOCK 169

L_3893:
; Line 2955:	            else 

; Line 2956:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 170

L_3925:
; Line 2957:	                if (!lowzero) 

	DBG BLOCK START
	BLOCK END
	BLOCK 171

L_3927:
	T209(AL).BOOL =   _lowzero:LINK(-38).BOOL
	CONDGO	L_3926:PC ; T209(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 172
	DBG BLOCK START
	BLOCK END
	BLOCK 173

L_3928:
; Line 2958:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_3929:
; Line 2959:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T210(EAX).A =   _apll:LINK(-24).A
	PARM	T210(EAX).A
	T211(EAX).A =   _apal:LINK(-16).A
	PARM	T211(EAX).A
	T212(EAX).A =   _q:LINK(4).A
	T213(EAX).A =   *(T212(EAX) + 40).A.A
	T214(EAX).I =   *(T213(EAX) + 19).A.C
	PARM	T214(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2960:	                    gen_code_sse(op_addss, op_addsd, q->ans->size, apal, aprl); 

	T215(EAX).A =   _aprl:LINK(-32).A
	PARM	T215(EAX).A
	T216(EAX).A =   _apal:LINK(-16).A
	PARM	T216(EAX).A
	T217(EAX).A =   _q:LINK(4).A
	T218(EAX).A =   *(T217(EAX) + 40).A.A
	T219(EAX).I =   *(T218(EAX) + 19).A.C
	PARM	T219(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2961:	                } 

	BLOCK END
	BLOCK 175

L_3930:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_3932:
	DBG BLOCK END
	GOTO	L_3931:PC
	BLOCK END
	BLOCK 177
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_3933:
	BLOCK END
	BLOCK 179

L_3926:
; Line 2962:	                else 

; Line 2963:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_3934:
; Line 2964:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apal, floatzero(apal)); 

	T220(EAX).A =   _apal:LINK(-16).A
	PARM	T220(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T221(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T221(EAX).A
	T222(EAX).A =   _apal:LINK(-16).A
	PARM	T222(EAX).A
	T223(EAX).A =   _q:LINK(4).A
	T224(EAX).A =   *(T223(EAX) + 40).A.A
	T225(EAX).I =   *(T224(EAX) + 19).A.C
	PARM	T225(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2965:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 2966:	                } 

	BLOCK END
	BLOCK 181

L_3935:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_3936:
	DBG BLOCK END
	BLOCK END
	BLOCK 183

L_3931:
	BLOCK END
	BLOCK 184

L_3937:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 185

L_3939:
; Line 2967:	                if (!highzero) 

	T226(AL).BOOL =   _highzero:LINK(-37).BOOL
	CONDGO	L_3938:PC ; T226(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 186
	DBG BLOCK START
	BLOCK END
	BLOCK 187

L_3940:
; Line 2968:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 188

L_3941:
; Line 2969:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apah, aplh); 

	T227(EAX).A =   _aplh:LINK(-28).A
	PARM	T227(EAX).A
	T228(EAX).A =   _apah:LINK(-20).A
	PARM	T228(EAX).A
	T229(EAX).A =   _q:LINK(4).A
	T230(EAX).A =   *(T229(EAX) + 40).A.A
	T231(EAX).I =   *(T230(EAX) + 19).A.C
	PARM	T231(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2970:	                    gen_code_sse(op_addss, op_addsd, q->ans->size, apah, aprh); 

	T232(EAX).A =   _aprh:LINK(-36).A
	PARM	T232(EAX).A
	T233(EAX).A =   _apah:LINK(-20).A
	PARM	T233(EAX).A
	T234(EAX).A =   _q:LINK(4).A
	T235(EAX).A =   *(T234(EAX) + 40).A.A
	T236(EAX).I =   *(T235(EAX) + 19).A.C
	PARM	T236(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2971:	                } 

	BLOCK END
	BLOCK 189

L_3942:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_3944:
	DBG BLOCK END
	GOTO	L_3943:PC
	BLOCK END
	BLOCK 191
	DBG BLOCK START
	BLOCK END
	BLOCK 192

L_3945:
	BLOCK END
	BLOCK 193

L_3938:
; Line 2972:	                else 

; Line 2973:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 194

L_3946:
; Line 2974:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apah, floatzero(apah)); 

	T237(EAX).A =   _apah:LINK(-20).A
	PARM	T237(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T238(EAX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	PARM	T238(EAX).A
	T239(EAX).A =   _apah:LINK(-20).A
	PARM	T239(EAX).A
	T240(EAX).A =   _q:LINK(4).A
	T241(EAX).A =   *(T240(EAX) + 40).A.A
	T242(EAX).I =   *(T241(EAX) + 19).A.C
	PARM	T242(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2975:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 2976:	                } 

	BLOCK END
	BLOCK 195

L_3947:
	DBG BLOCK END
	BLOCK END
	BLOCK 196

L_3948:
	DBG BLOCK END
	BLOCK END
	BLOCK 197

L_3943:
	BLOCK END
	BLOCK 198

L_3949:
	DBG BLOCK END
; Line 2977:	            } 

	BLOCK END
	BLOCK 199

L_3950:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_3951:
	DBG BLOCK END
	BLOCK END
	BLOCK 201

L_3922:
	BLOCK END
	BLOCK 202

L_3952:
	DBG BLOCK END
	BLOCK END
	BLOCK 203

L_3953:
	DBG BLOCK END
	BLOCK END
	BLOCK 204

L_3890:
	BLOCK END
	BLOCK 205

L_3954:
	DBG BLOCK END
; Line 2978:	        } 

	BLOCK END
	BLOCK 206

L_3955:
	DBG BLOCK END
	BLOCK END
	BLOCK 207

L_3956:
	DBG BLOCK END
	BLOCK END
	BLOCK 208

L_3842:
	BLOCK END
	BLOCK 209

L_3957:
	DBG BLOCK END
; Line 2979:	    } 

	BLOCK END
	BLOCK 210

L_3958:
	DBG BLOCK END
	BLOCK END
	BLOCK 211

L_3960:
	DBG BLOCK END
	GOTO	L_3959:PC
	BLOCK END
	BLOCK 212
	DBG BLOCK START
	BLOCK END
	BLOCK 213

L_3961:
	BLOCK END
	BLOCK 214

L_3797:
; Line 2980:	    else if (q->ans->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 215

L_3963:
	T243(EAX).A =   _q:LINK(4).A
	T244(EAX).A =   *(T243(EAX) + 40).A.A
	T245(EAX).I =   *(T244(EAX) + 19).A.C
	CONDGO	L_3962:PC ; T245(EAX).I S< #12.C
	BLOCK END
	BLOCK 216
	DBG BLOCK START
	BLOCK END
	BLOCK 217

L_3964:
; Line 2981:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 218

L_3965:
; Line 2982:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_3967:
	T246(EAX).A =   _apll:LINK(-24).A
	PARM	T246(EAX).A
	T247(EAX).A =   _apal:LINK(-16).A
	PARM	T247(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T248(EAX).I =   RV.T14(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3966:PC ; T248(EAX).I == #0.C
	BLOCK END
	BLOCK 220
	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_3968:
; Line 2983:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_3969:
; Line 2984:	            gen_code_sse(op_addss, op_addsd, q->ans->size, apal, aprl); 

	T249(EAX).A =   _aprl:LINK(-32).A
	PARM	T249(EAX).A
	T250(EAX).A =   _apal:LINK(-16).A
	PARM	T250(EAX).A
	T251(EAX).A =   _q:LINK(4).A
	T252(EAX).A =   *(T251(EAX) + 40).A.A
	T253(EAX).I =   *(T252(EAX) + 19).A.C
	PARM	T253(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2985:	        } 

	BLOCK END
	BLOCK 223

L_3970:
	DBG BLOCK END
	BLOCK END
	BLOCK 224

L_3972:
	DBG BLOCK END
	GOTO	L_3971:PC
	BLOCK END
	BLOCK 225
	DBG BLOCK START
	BLOCK END
	BLOCK 226

L_3973:
	BLOCK END
	BLOCK 227

L_3966:
; Line 2986:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 228

L_3975:
	T254(EAX).A =   _aprl:LINK(-32).A
	PARM	T254(EAX).A
	T255(EAX).A =   _apal:LINK(-16).A
	PARM	T255(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T256(EAX).I =   RV.T15(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3974:PC ; T256(EAX).I == #0.C
	BLOCK END
	BLOCK 229
	DBG BLOCK START
	BLOCK END
	BLOCK 230

L_3976:
; Line 2987:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 231

L_3977:
; Line 2988:	            gen_code_sse(op_addss, op_addsd, q->ans->size, apal, apll); 

	T257(EAX).A =   _apll:LINK(-24).A
	PARM	T257(EAX).A
	T258(EAX).A =   _apal:LINK(-16).A
	PARM	T258(EAX).A
	T259(EAX).A =   _q:LINK(4).A
	T260(EAX).A =   *(T259(EAX) + 40).A.A
	T261(EAX).I =   *(T260(EAX) + 19).A.C
	PARM	T261(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2989:	        } 

	BLOCK END
	BLOCK 232

L_3978:
	DBG BLOCK END
	BLOCK END
	BLOCK 233

L_3980:
	DBG BLOCK END
	GOTO	L_3979:PC
	BLOCK END
	BLOCK 234
	DBG BLOCK START
	BLOCK END
	BLOCK 235

L_3981:
	BLOCK END
	BLOCK 236

L_3974:
; Line 2990:	        else 

; Line 2991:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 237

L_3982:
; Line 2992:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T262(EAX).A =   _apll:LINK(-24).A
	PARM	T262(EAX).A
	T263(EAX).A =   _apal:LINK(-16).A
	PARM	T263(EAX).A
	T264(EAX).A =   _q:LINK(4).A
	T265(EAX).A =   *(T264(EAX) + 40).A.A
	T266(EAX).I =   *(T265(EAX) + 19).A.C
	PARM	T266(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2993:	            gen_code_sse(op_addss, op_addsd, q->ans->size, apal, aprl); 

	T267(EAX).A =   _aprl:LINK(-32).A
	PARM	T267(EAX).A
	T268(EAX).A =   _apal:LINK(-16).A
	PARM	T268(EAX).A
	T269(EAX).A =   _q:LINK(4).A
	T270(EAX).A =   *(T269(EAX) + 40).A.A
	T271(EAX).I =   *(T270(EAX) + 19).A.C
	PARM	T271(EAX).I
	PARM	#1A1.I
	PARM	#1A2.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 2994:	        } 

	BLOCK END
	BLOCK 238

L_3983:
	DBG BLOCK END
	BLOCK END
	BLOCK 239

L_3984:
	DBG BLOCK END
	BLOCK END
	BLOCK 240

L_3979:
	BLOCK END
	BLOCK 241

L_3985:
	DBG BLOCK END
	BLOCK END
	BLOCK 242

L_3986:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_3971:
	BLOCK END
	BLOCK 244

L_3987:
	DBG BLOCK END
; Line 2995:	    } 

	BLOCK END
	BLOCK 245

L_3988:
	DBG BLOCK END
	BLOCK END
	BLOCK 246

L_3990:
	DBG BLOCK END
	GOTO	L_3989:PC
	BLOCK END
	BLOCK 247
	DBG BLOCK START
	BLOCK END
	BLOCK 248

L_3991:
	BLOCK END
	BLOCK 249

L_3962:
; Line 2996:	    else if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 250

L_3993:
	T272(EAX).A =   _q:LINK(4).A
	T273(EAX).A =   *(T272(EAX) + 40).A.A
	T274(AL).C =   *(T273(EAX) + 19).A.C
	CONDGO	L_4170:PC ; T274(AL).C == #B.C
	BLOCK END
	BLOCK 251
	T275(EAX).A =   _q:LINK(4).A
	T276(EAX).A =   *(T275(EAX) + 40).A.A
	T277(EAX).I =   *(T276(EAX) + 19).A.C
	CONDGO	L_3992:PC ; T277(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 252

L_4170:
	DBG BLOCK START
	BLOCK END
	BLOCK 253

L_3994:
; Line 2997:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 254

L_3995:
; Line 2998:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 255

L_3997:
	T408(EAX).A =   _apll:LINK(-24).A
	PARM	T408(EAX).A
	T409(EAX).A =   _apal:LINK(-16).A
	PARM	T409(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T410(EAX).I =   RV.T16(EAX).I
	PARMADJ	#8.N
	CONDGO	L_3996:PC ; T410(EAX).I == #0.C
	BLOCK END
	BLOCK 256
	DBG BLOCK START
	BLOCK END
	BLOCK 257

L_3998:
; Line 2999:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 258

L_3999:
; Line 3000:	            func_axdx(op_add, apal, apah, aprl, aprh); 

	T411(EAX).A =   _aprh:LINK(-36).A
	PARM	T411(EAX).A
	T412(EAX).A =   _aprl:LINK(-32).A
	PARM	T412(EAX).A
	T413(EAX).A =   _apah:LINK(-20).A
	PARM	T413(EAX).A
	T414(EAX).A =   _apal:LINK(-16).A
	PARM	T414(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3001:	        } 

	BLOCK END
	BLOCK 259

L_4000:
	DBG BLOCK END
	BLOCK END
	BLOCK 260

L_4002:
	DBG BLOCK END
	GOTO	L_4001:PC
	BLOCK END
	BLOCK 261
	DBG BLOCK START
	BLOCK END
	BLOCK 262

L_4003:
	BLOCK END
	BLOCK 263

L_3996:
; Line 3002:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 264

L_4005:
	T415(EAX).A =   _aprl:LINK(-32).A
	PARM	T415(EAX).A
	T416(EAX).A =   _apal:LINK(-16).A
	PARM	T416(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T417(EAX).I =   RV.T17(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4004:PC ; T417(EAX).I == #0.C
	BLOCK END
	BLOCK 265
	DBG BLOCK START
	BLOCK END
	BLOCK 266

L_4006:
; Line 3003:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 267

L_4007:
; Line 3004:	            func_axdx(op_add, apal, apah, apll, aplh); 

	T418(EAX).A =   _aplh:LINK(-28).A
	PARM	T418(EAX).A
	T419(EAX).A =   _apll:LINK(-24).A
	PARM	T419(EAX).A
	T420(EAX).A =   _apah:LINK(-20).A
	PARM	T420(EAX).A
	T421(EAX).A =   _apal:LINK(-16).A
	PARM	T421(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3005:	        } 

	BLOCK END
	BLOCK 268

L_4008:
	DBG BLOCK END
	BLOCK END
	BLOCK 269

L_4010:
	DBG BLOCK END
	GOTO	L_4009:PC
	BLOCK END
	BLOCK 270
	DBG BLOCK START
	BLOCK END
	BLOCK 271

L_4011:
	BLOCK END
	BLOCK 272

L_4004:
; Line 3006:	        else 

; Line 3007:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 273

L_4012:
; Line 3008:	            liveQualify(apal, apal, apah); 

	T422(EAX).A =   _apah:LINK(-20).A
	PARM	T422(EAX).A
	T423(EAX).A =   _apal:LINK(-16).A
	PARM	T423(EAX).A
	T424(EAX).A =   _apal:LINK(-16).A
	PARM	T424(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3009:	            liveQualify(apah, apal, apah); 

	T425(EAX).A =   _apah:LINK(-20).A
	PARM	T425(EAX).A
	T426(EAX).A =   _apal:LINK(-16).A
	PARM	T426(EAX).A
	T427(EAX).A =   _apah:LINK(-20).A
	PARM	T427(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3010:	            func_axdx_mov(op_add, apal, apah, apll, aplh, aprl, aprh); 

	T428(EAX).A =   _aprh:LINK(-36).A
	PARM	T428(EAX).A
	T429(EAX).A =   _aprl:LINK(-32).A
	PARM	T429(EAX).A
	T430(EAX).A =   _aplh:LINK(-28).A
	PARM	T430(EAX).A
	T431(EAX).A =   _apll:LINK(-24).A
	PARM	T431(EAX).A
	T432(EAX).A =   _apah:LINK(-20).A
	PARM	T432(EAX).A
	T433(EAX).A =   _apal:LINK(-16).A
	PARM	T433(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1:PC.UI
	PARMADJ	#1C.N
; Line 3011:	        } 

	BLOCK END
	BLOCK 274

L_4013:
	DBG BLOCK END
	BLOCK END
	BLOCK 275

L_4014:
	DBG BLOCK END
	BLOCK END
	BLOCK 276

L_4009:
	BLOCK END
	BLOCK 277

L_4015:
	DBG BLOCK END
	BLOCK END
	BLOCK 278

L_4016:
	DBG BLOCK END
	BLOCK END
	BLOCK 279

L_4001:
	BLOCK END
	BLOCK 280

L_4017:
	DBG BLOCK END
; Line 3012:	    } 

	BLOCK END
	BLOCK 281

L_4018:
	DBG BLOCK END
	BLOCK END
	BLOCK 282

L_4020:
	DBG BLOCK END
	GOTO	L_4019:PC
	BLOCK END
	BLOCK 283
	DBG BLOCK START
	BLOCK END
	BLOCK 284

L_4021:
	BLOCK END
	BLOCK 285

L_3992:
; Line 3013:	    else 

; Line 3014:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 286

L_4022:
; Line 3015:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 287

L_4024:
	T278(EAX).A =   _apll:LINK(-24).A
	PARM	T278(EAX).A
	T279(EAX).A =   _apal:LINK(-16).A
	PARM	T279(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T280(EAX).I =   RV.T18(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4023:PC ; T280(EAX).I == #0.C
	BLOCK END
	BLOCK 288
	DBG BLOCK START
	BLOCK END
	BLOCK 289

L_4025:
; Line 3016:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 290

L_4026:
; Line 3017:	            if (opr == op_lea) 

	DBG BLOCK START
	BLOCK END
	BLOCK 291

L_4028:
	T281(EAX).I =   _opr:LINK(-12).I
	CONDGO	L_4027:PC ; T281(EAX).I != #106.I
	BLOCK END
	BLOCK 292
	DBG BLOCK START
	BLOCK END
	BLOCK 293

L_4029:
; Line 3018:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 294

L_4030:
; Line 3019:	                if (apal->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 295

L_4032:
	T282(EAX).A =   _apal:LINK(-16).A
	T283(EAX).I =   *(T282(EAX) + 0).A.I
	CONDGO	L_4031:PC ; T283(EAX).I == #2.C
	BLOCK END
	BLOCK 296
	DBG BLOCK START
	BLOCK END
	BLOCK 297

L_4033:
; Line 3020:	                    diag("asm_add: expected dreg in add from EBP"); 

	PARM	#L_3786:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 298

L_4034:
	DBG BLOCK END
	BLOCK END
	BLOCK 299

L_4031:
	BLOCK END
	BLOCK 300

L_4035:
	DBG BLOCK END
; Line 3021:	                aprl->mode = am_indispscale; 

	T284(EAX).A =   _aprl:LINK(-32).A
	*(T284(EAX) + 0).A.I =   #D.I
; Line 3022:	                aprl->sreg = apal->preg; 

	T285(EAX).A =   _apal:LINK(-16).A
	T286(CL).C =   *(T285(EAX) + 4).A.C
	T287(EAX).A =   _aprl:LINK(-32).A
	*(T287(EAX) + 5).A.C =   T286(CL).C
; Line 3023:	                gen_codes(op_lea, q->ans->size, apal, aprl); 

	T288(EAX).A =   _aprl:LINK(-32).A
	PARM	T288(EAX).A
	T289(EAX).A =   _apal:LINK(-16).A
	PARM	T289(EAX).A
	T290(EAX).A =   _q:LINK(4).A
	T291(EAX).A =   *(T290(EAX) + 40).A.A
	T292(EAX).I =   *(T291(EAX) + 19).A.C
	PARM	T292(EAX).I
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3024:	            } 

	BLOCK END
	BLOCK 301

L_4036:
	DBG BLOCK END
	BLOCK END
	BLOCK 302

L_4038:
	DBG BLOCK END
	GOTO	L_4037:PC
	BLOCK END
	BLOCK 303
	DBG BLOCK START
	BLOCK END
	BLOCK 304

L_4039:
	BLOCK END
	BLOCK 305

L_4027:
; Line 3025:	            else 

; Line 3026:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 306

L_4040:
; Line 3027:	                gen_codes(op_add, q->ans->size, apal, aprl); 

	T293(EAX).A =   _aprl:LINK(-32).A
	PARM	T293(EAX).A
	T294(EAX).A =   _apal:LINK(-16).A
	PARM	T294(EAX).A
	T295(EAX).A =   _q:LINK(4).A
	T296(EAX).A =   *(T295(EAX) + 40).A.A
	T297(EAX).I =   *(T296(EAX) + 19).A.C
	PARM	T297(EAX).I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3028:	            } 

	BLOCK END
	BLOCK 307

L_4041:
	DBG BLOCK END
	BLOCK END
	BLOCK 308

L_4042:
	DBG BLOCK END
	BLOCK END
	BLOCK 309

L_4037:
	BLOCK END
	BLOCK 310

L_4043:
	DBG BLOCK END
; Line 3029:	        } 

	BLOCK END
	BLOCK 311

L_4044:
	DBG BLOCK END
	BLOCK END
	BLOCK 312

L_4046:
	DBG BLOCK END
	GOTO	L_4045:PC
	BLOCK END
	BLOCK 313
	DBG BLOCK START
	BLOCK END
	BLOCK 314

L_4047:
	BLOCK END
	BLOCK 315

L_4023:
; Line 3030:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 316

L_4049:
	T298(EAX).A =   _aprl:LINK(-32).A
	PARM	T298(EAX).A
	T299(EAX).A =   _apal:LINK(-16).A
	PARM	T299(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T300(EAX).I =   RV.T19(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4048:PC ; T300(EAX).I == #0.C
	BLOCK END
	BLOCK 317
	DBG BLOCK START
	BLOCK END
	BLOCK 318

L_4050:
; Line 3031:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 319

L_4051:
; Line 3032:	            if (opl == op_lea) 

	DBG BLOCK START
	BLOCK END
	BLOCK 320

L_4053:
	T301(EAX).I =   _opl:LINK(-8).I
	CONDGO	L_4052:PC ; T301(EAX).I != #106.I
	BLOCK END
	BLOCK 321
	DBG BLOCK START
	BLOCK END
	BLOCK 322

L_4054:
; Line 3033:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 323

L_4055:
; Line 3034:	                if (apal->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 324

L_4057:
	T302(EAX).A =   _apal:LINK(-16).A
	T303(EAX).I =   *(T302(EAX) + 0).A.I
	CONDGO	L_4056:PC ; T303(EAX).I == #2.C
	BLOCK END
	BLOCK 325
	DBG BLOCK START
	BLOCK END
	BLOCK 326

L_4058:
; Line 3035:	                    diag("asm_add: expected dreg in add from EBP"); 

	PARM	#L_3786:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 327

L_4059:
	DBG BLOCK END
	BLOCK END
	BLOCK 328

L_4056:
	BLOCK END
	BLOCK 329

L_4060:
	DBG BLOCK END
; Line 3036:	                apll->mode = am_indispscale; 

	T304(EAX).A =   _apll:LINK(-24).A
	*(T304(EAX) + 0).A.I =   #D.I
; Line 3037:	                apll->sreg = apal->preg; 

	T305(EAX).A =   _apal:LINK(-16).A
	T306(CL).C =   *(T305(EAX) + 4).A.C
	T307(EAX).A =   _apll:LINK(-24).A
	*(T307(EAX) + 5).A.C =   T306(CL).C
; Line 3038:	                gen_codes(op_lea, q->ans->size, apal, apll); 

	T308(EAX).A =   _apll:LINK(-24).A
	PARM	T308(EAX).A
	T309(EAX).A =   _apal:LINK(-16).A
	PARM	T309(EAX).A
	T310(EAX).A =   _q:LINK(4).A
	T311(EAX).A =   *(T310(EAX) + 40).A.A
	T312(EAX).I =   *(T311(EAX) + 19).A.C
	PARM	T312(EAX).I
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3039:	            } 

	BLOCK END
	BLOCK 330

L_4061:
	DBG BLOCK END
	BLOCK END
	BLOCK 331

L_4063:
	DBG BLOCK END
	GOTO	L_4062:PC
	BLOCK END
	BLOCK 332
	DBG BLOCK START
	BLOCK END
	BLOCK 333

L_4064:
	BLOCK END
	BLOCK 334

L_4052:
; Line 3040:	            else 

; Line 3041:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 335

L_4065:
; Line 3042:	                gen_codes(op_add, q->ans->size, apal, apll); 

	T313(EAX).A =   _apll:LINK(-24).A
	PARM	T313(EAX).A
	T314(EAX).A =   _apal:LINK(-16).A
	PARM	T314(EAX).A
	T315(EAX).A =   _q:LINK(4).A
	T316(EAX).A =   *(T315(EAX) + 40).A.A
	T317(EAX).I =   *(T316(EAX) + 19).A.C
	PARM	T317(EAX).I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3043:	            } 

	BLOCK END
	BLOCK 336

L_4066:
	DBG BLOCK END
	BLOCK END
	BLOCK 337

L_4067:
	DBG BLOCK END
	BLOCK END
	BLOCK 338

L_4062:
	BLOCK END
	BLOCK 339

L_4068:
	DBG BLOCK END
; Line 3044:	        } 

	BLOCK END
	BLOCK 340

L_4069:
	DBG BLOCK END
	BLOCK END
	BLOCK 341

L_4071:
	DBG BLOCK END
	GOTO	L_4070:PC
	BLOCK END
	BLOCK 342
	DBG BLOCK START
	BLOCK END
	BLOCK 343

L_4072:
	BLOCK END
	BLOCK 344

L_4048:
; Line 3045:	        else 

; Line 3046:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 345

L_4073:
; Line 3047:	            if (samereg(apal, aprl) || apll->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 346

L_4075:
	T318(EAX).A =   _aprl:LINK(-32).A
	PARM	T318(EAX).A
	T319(EAX).A =   _apal:LINK(-16).A
	PARM	T319(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T320(EAX).I =   RV.T20(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4171:PC ; T320(EAX).I != #0.C
	BLOCK END
	BLOCK 347
	T321(EAX).A =   _apll:LINK(-24).A
	T322(EAX).I =   *(T321(EAX) + 0).A.I
	CONDGO	L_4074:PC ; T322(EAX).I != #10.I
	BLOCK END
	BLOCK 348

L_4171:
	DBG BLOCK START
	BLOCK END
	BLOCK 349

L_4076:
; Line 3048:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 350

L_4077:
; Line 3049:	                liveQualify(apal, apal, 0); 

	T382(EAX).A =   #0.C
	PARM	T382(EAX).A
	T383(EAX).A =   _apal:LINK(-16).A
	PARM	T383(EAX).A
	T384(EAX).A =   _apal:LINK(-16).A
	PARM	T384(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3050:	                gen_codes(opr, q->ans->size, apal, aprl); 

	T385(EAX).A =   _aprl:LINK(-32).A
	PARM	T385(EAX).A
	T386(EAX).A =   _apal:LINK(-16).A
	PARM	T386(EAX).A
	T387(EAX).A =   _q:LINK(4).A
	T388(EAX).A =   *(T387(EAX) + 40).A.A
	T389(EAX).I =   *(T388(EAX) + 19).A.C
	PARM	T389(EAX).I
	T390(EAX).I =   _opr:LINK(-12).I
	PARM	T390(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 351

L_4079:
; Line 3051:	                if (opl == op_lea) 

	T391(EAX).I =   _opl:LINK(-8).I
	CONDGO	L_4078:PC ; T391(EAX).I != #106.I
	BLOCK END
	BLOCK 352
	DBG BLOCK START
	BLOCK END
	BLOCK 353

L_4080:
; Line 3052:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 354

L_4081:
; Line 3053:	                    if (apal->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 355

L_4083:
	T392(EAX).A =   _apal:LINK(-16).A
	T393(EAX).I =   *(T392(EAX) + 0).A.I
	CONDGO	L_4082:PC ; T393(EAX).I == #2.C
	BLOCK END
	BLOCK 356
	DBG BLOCK START
	BLOCK END
	BLOCK 357

L_4084:
; Line 3054:	                        diag("asm_add: expected dreg in add from EBP"); 

	PARM	#L_3786:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 358

L_4085:
	DBG BLOCK END
	BLOCK END
	BLOCK 359

L_4082:
	BLOCK END
	BLOCK 360

L_4086:
	DBG BLOCK END
; Line 3055:	                    apll->mode = am_indispscale; 

	T394(EAX).A =   _apll:LINK(-24).A
	*(T394(EAX) + 0).A.I =   #D.I
; Line 3056:	                    apll->sreg = apal->preg; 

	T395(EAX).A =   _apal:LINK(-16).A
	T396(CL).C =   *(T395(EAX) + 4).A.C
	T397(EAX).A =   _apll:LINK(-24).A
	*(T397(EAX) + 5).A.C =   T396(CL).C
; Line 3057:	                    gen_codes(op_lea, q->ans->size, apal, apll); 

	T398(EAX).A =   _apll:LINK(-24).A
	PARM	T398(EAX).A
	T399(EAX).A =   _apal:LINK(-16).A
	PARM	T399(EAX).A
	T400(EAX).A =   _q:LINK(4).A
	T401(EAX).A =   *(T400(EAX) + 40).A.A
	T402(EAX).I =   *(T401(EAX) + 19).A.C
	PARM	T402(EAX).I
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3058:	                } 

	BLOCK END
	BLOCK 361

L_4087:
	DBG BLOCK END
	BLOCK END
	BLOCK 362

L_4089:
	DBG BLOCK END
	GOTO	L_4088:PC
	BLOCK END
	BLOCK 363
	DBG BLOCK START
	BLOCK END
	BLOCK 364

L_4090:
	BLOCK END
	BLOCK 365

L_4078:
; Line 3059:	                else 

; Line 3060:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 366

L_4091:
; Line 3061:	                    gen_codes(op_add, q->ans->size, apal, apll); 

	T403(EAX).A =   _apll:LINK(-24).A
	PARM	T403(EAX).A
	T404(EAX).A =   _apal:LINK(-16).A
	PARM	T404(EAX).A
	T405(EAX).A =   _q:LINK(4).A
	T406(EAX).A =   *(T405(EAX) + 40).A.A
	T407(EAX).I =   *(T406(EAX) + 19).A.C
	PARM	T407(EAX).I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3062:	                } 

	BLOCK END
	BLOCK 367

L_4092:
	DBG BLOCK END
	BLOCK END
	BLOCK 368

L_4093:
	DBG BLOCK END
	BLOCK END
	BLOCK 369

L_4088:
	BLOCK END
	BLOCK 370

L_4094:
	DBG BLOCK END
; Line 3063:	            } 

	BLOCK END
	BLOCK 371

L_4095:
	DBG BLOCK END
	BLOCK END
	BLOCK 372

L_4097:
	DBG BLOCK END
	GOTO	L_4096:PC
	BLOCK END
	BLOCK 373
	DBG BLOCK START
	BLOCK END
	BLOCK 374

L_4098:
	BLOCK END
	BLOCK 375

L_4074:
; Line 3064:	            else 

; Line 3065:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 376

L_4099:
; Line 3066:	                liveQualify(apal, apal, 0); 

	T323(EAX).A =   #0.C
	PARM	T323(EAX).A
	T324(EAX).A =   _apal:LINK(-16).A
	PARM	T324(EAX).A
	T325(EAX).A =   _apal:LINK(-16).A
	PARM	T325(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 377

L_4101:
; Line 3067:	                if (opl == op_lea && aprl->mode == am_dreg) 

	T326(EAX).I =   _opl:LINK(-8).I
	CONDGO	L_4100:PC ; T326(EAX).I != #106.I
	BLOCK END
	BLOCK 378
	T327(EAX).A =   _aprl:LINK(-32).A
	T328(EAX).I =   *(T327(EAX) + 0).A.I
	CONDGO	L_4100:PC ; T328(EAX).I != #2.C
	BLOCK END
	BLOCK 379
	DBG BLOCK START
	BLOCK END
	BLOCK 380

L_4102:
; Line 3068:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 381

L_4103:
; Line 3069:	                    if (apal->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 382

L_4105:
	T329(EAX).A =   _apal:LINK(-16).A
	T330(EAX).I =   *(T329(EAX) + 0).A.I
	CONDGO	L_4104:PC ; T330(EAX).I == #2.C
	BLOCK END
	BLOCK 383
	DBG BLOCK START
	BLOCK END
	BLOCK 384

L_4106:
; Line 3070:	                        diag("asm_add: expected dreg in add from EBP"); 

	PARM	#L_3786:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 385

L_4107:
	DBG BLOCK END
	BLOCK END
	BLOCK 386

L_4104:
	BLOCK END
	BLOCK 387

L_4108:
	DBG BLOCK END
; Line 3071:	                    apll->mode = am_indispscale; 

	T331(EAX).A =   _apll:LINK(-24).A
	*(T331(EAX) + 0).A.I =   #D.I
; Line 3072:	                    apll->sreg = aprl->preg; 

	T332(EAX).A =   _aprl:LINK(-32).A
	T333(CL).C =   *(T332(EAX) + 4).A.C
	T334(EAX).A =   _apll:LINK(-24).A
	*(T334(EAX) + 5).A.C =   T333(CL).C
; Line 3073:	                    gen_codes(op_lea, q->ans->size, apal, apll); 

	T335(EAX).A =   _apll:LINK(-24).A
	PARM	T335(EAX).A
	T336(EAX).A =   _apal:LINK(-16).A
	PARM	T336(EAX).A
	T337(EAX).A =   _q:LINK(4).A
	T338(EAX).A =   *(T337(EAX) + 40).A.A
	T339(EAX).I =   *(T338(EAX) + 19).A.C
	PARM	T339(EAX).I
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3074:	                } 

	BLOCK END
	BLOCK 388

L_4109:
	DBG BLOCK END
	BLOCK END
	BLOCK 389

L_4111:
	DBG BLOCK END
	GOTO	L_4110:PC
	BLOCK END
	BLOCK 390
	DBG BLOCK START
	BLOCK END
	BLOCK 391

L_4112:
	BLOCK END
	BLOCK 392

L_4100:
; Line 3075:	                else if (opr == op_lea && apll->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 393

L_4114:
	T340(EAX).I =   _opr:LINK(-12).I
	CONDGO	L_4113:PC ; T340(EAX).I != #106.I
	BLOCK END
	BLOCK 394
	T341(EAX).A =   _apll:LINK(-24).A
	T342(EAX).I =   *(T341(EAX) + 0).A.I
	CONDGO	L_4113:PC ; T342(EAX).I != #2.C
	BLOCK END
	BLOCK 395
	DBG BLOCK START
	BLOCK END
	BLOCK 396

L_4115:
; Line 3076:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 397

L_4116:
; Line 3077:	                    if (apal->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 398

L_4118:
	T343(EAX).A =   _apal:LINK(-16).A
	T344(EAX).I =   *(T343(EAX) + 0).A.I
	CONDGO	L_4117:PC ; T344(EAX).I == #2.C
	BLOCK END
	BLOCK 399
	DBG BLOCK START
	BLOCK END
	BLOCK 400

L_4119:
; Line 3078:	                        diag("asm_add: expected dreg in add from EBP"); 

	PARM	#L_3786:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 401

L_4120:
	DBG BLOCK END
	BLOCK END
	BLOCK 402

L_4117:
	BLOCK END
	BLOCK 403

L_4121:
	DBG BLOCK END
; Line 3079:	                    aprl->mode = am_indispscale; 

	T345(EAX).A =   _aprl:LINK(-32).A
	*(T345(EAX) + 0).A.I =   #D.I
; Line 3080:	                    aprl->sreg = apll->preg; 

	T346(EAX).A =   _apll:LINK(-24).A
	T347(CL).C =   *(T346(EAX) + 4).A.C
	T348(EAX).A =   _aprl:LINK(-32).A
	*(T348(EAX) + 5).A.C =   T347(CL).C
; Line 3081:	                    gen_codes(op_lea, q->ans->size, apal, aprl); 

	T349(EAX).A =   _aprl:LINK(-32).A
	PARM	T349(EAX).A
	T350(EAX).A =   _apal:LINK(-16).A
	PARM	T350(EAX).A
	T351(EAX).A =   _q:LINK(4).A
	T352(EAX).A =   *(T351(EAX) + 40).A.A
	T353(EAX).I =   *(T352(EAX) + 19).A.C
	PARM	T353(EAX).I
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3082:	                } 

	BLOCK END
	BLOCK 404

L_4122:
	DBG BLOCK END
	BLOCK END
	BLOCK 405

L_4124:
	DBG BLOCK END
	GOTO	L_4123:PC
	BLOCK END
	BLOCK 406
	DBG BLOCK START
	BLOCK END
	BLOCK 407

L_4125:
	BLOCK END
	BLOCK 408

L_4113:
; Line 3083:	                else 

; Line 3084:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 409

L_4126:
; Line 3085:	                    if (equal_address(apll, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 410

L_4128:
	T354(EAX).A =   _aprl:LINK(-32).A
	PARM	T354(EAX).A
	T355(EAX).A =   _apll:LINK(-24).A
	PARM	T355(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T356(EAX).I =   RV.T21(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4127:PC ; T356(EAX).I == #0.C
	BLOCK END
	BLOCK 411
	DBG BLOCK START
	BLOCK END
	BLOCK 412

L_4129:
; Line 3086:	                        apal->liveRegs = -1; 

	T357(EAX).A =   _apal:LINK(-16).A
	*(T357(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 413

L_4130:
	DBG BLOCK END
	BLOCK END
	BLOCK 414

L_4127:
	BLOCK END
	BLOCK 415

L_4131:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 416

L_4133:
; Line 3087:	                    if (opl == op_lea || opr != op_lea) 

	T358(EAX).I =   _opl:LINK(-8).I
	CONDGO	L_4172:PC ; T358(EAX).I == #106.I
	BLOCK END
	BLOCK 417
	T359(EAX).I =   _opr:LINK(-12).I
	CONDGO	L_4132:PC ; T359(EAX).I == #106.I
	BLOCK END
	BLOCK 418

L_4172:
	DBG BLOCK START
	BLOCK END
	BLOCK 419

L_4134:
; Line 3088:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 420

L_4135:
; Line 3089:	                        gen_codes(opl, q->ans->size, apal, apll); 

	T371(EAX).A =   _apll:LINK(-24).A
	PARM	T371(EAX).A
	T372(EAX).A =   _apal:LINK(-16).A
	PARM	T372(EAX).A
	T373(EAX).A =   _q:LINK(4).A
	T374(EAX).A =   *(T373(EAX) + 40).A.A
	T375(EAX).I =   *(T374(EAX) + 19).A.C
	PARM	T375(EAX).I
	T376(EAX).I =   _opl:LINK(-8).I
	PARM	T376(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3090:	                        gen_codes(op_add, q->ans->size, apal, aprl); 

	T377(EAX).A =   _aprl:LINK(-32).A
	PARM	T377(EAX).A
	T378(EAX).A =   _apal:LINK(-16).A
	PARM	T378(EAX).A
	T379(EAX).A =   _q:LINK(4).A
	T380(EAX).A =   *(T379(EAX) + 40).A.A
	T381(EAX).I =   *(T380(EAX) + 19).A.C
	PARM	T381(EAX).I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3091:	                    } 

	BLOCK END
	BLOCK 421

L_4136:
	DBG BLOCK END
	BLOCK END
	BLOCK 422

L_4138:
	DBG BLOCK END
	GOTO	L_4137:PC
	BLOCK END
	BLOCK 423
	DBG BLOCK START
	BLOCK END
	BLOCK 424

L_4139:
	BLOCK END
	BLOCK 425

L_4132:
; Line 3092:	                    else 

; Line 3093:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 426

L_4140:
; Line 3094:	                        gen_codes(opr, q->ans->size, apal, aprl); 

	T360(EAX).A =   _aprl:LINK(-32).A
	PARM	T360(EAX).A
	T361(EAX).A =   _apal:LINK(-16).A
	PARM	T361(EAX).A
	T362(EAX).A =   _q:LINK(4).A
	T363(EAX).A =   *(T362(EAX) + 40).A.A
	T364(EAX).I =   *(T363(EAX) + 19).A.C
	PARM	T364(EAX).I
	T365(EAX).I =   _opr:LINK(-12).I
	PARM	T365(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3095:	                        gen_codes(op_add, q->ans->size, apal, apll); 

	T366(EAX).A =   _apll:LINK(-24).A
	PARM	T366(EAX).A
	T367(EAX).A =   _apal:LINK(-16).A
	PARM	T367(EAX).A
	T368(EAX).A =   _q:LINK(4).A
	T369(EAX).A =   *(T368(EAX) + 40).A.A
	T370(EAX).I =   *(T369(EAX) + 19).A.C
	PARM	T370(EAX).I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3096:	                    } 

	BLOCK END
	BLOCK 427

L_4141:
	DBG BLOCK END
	BLOCK END
	BLOCK 428

L_4142:
	DBG BLOCK END
	BLOCK END
	BLOCK 429

L_4137:
	BLOCK END
	BLOCK 430

L_4143:
	DBG BLOCK END
; Line 3097:	                } 

	BLOCK END
	BLOCK 431

L_4144:
	DBG BLOCK END
	BLOCK END
	BLOCK 432

L_4145:
	DBG BLOCK END
	BLOCK END
	BLOCK 433

L_4123:
	BLOCK END
	BLOCK 434

L_4146:
	DBG BLOCK END
	BLOCK END
	BLOCK 435

L_4147:
	DBG BLOCK END
	BLOCK END
	BLOCK 436

L_4110:
	BLOCK END
	BLOCK 437

L_4148:
	DBG BLOCK END
; Line 3098:	            } 

	BLOCK END
	BLOCK 438

L_4149:
	DBG BLOCK END
	BLOCK END
	BLOCK 439

L_4150:
	DBG BLOCK END
	BLOCK END
	BLOCK 440

L_4096:
	BLOCK END
	BLOCK 441

L_4151:
	DBG BLOCK END
; Line 3099:	        } 

	BLOCK END
	BLOCK 442

L_4152:
	DBG BLOCK END
	BLOCK END
	BLOCK 443

L_4153:
	DBG BLOCK END
	BLOCK END
	BLOCK 444

L_4070:
	BLOCK END
	BLOCK 445

L_4154:
	DBG BLOCK END
	BLOCK END
	BLOCK 446

L_4155:
	DBG BLOCK END
	BLOCK END
	BLOCK 447

L_4045:
	BLOCK END
	BLOCK 448

L_4156:
	DBG BLOCK END
; Line 3100:	    } 

	BLOCK END
	BLOCK 449

L_4157:
	DBG BLOCK END
	BLOCK END
	BLOCK 450

L_4158:
	DBG BLOCK END
	BLOCK END
	BLOCK 451

L_4019:
	BLOCK END
	BLOCK 452

L_4159:
	DBG BLOCK END
	BLOCK END
	BLOCK 453

L_4160:
	DBG BLOCK END
	BLOCK END
	BLOCK 454

L_3989:
	BLOCK END
	BLOCK 455

L_4161:
	DBG BLOCK END
	BLOCK END
	BLOCK 456

L_4162:
	DBG BLOCK END
	BLOCK END
	BLOCK 457

L_3959:
	BLOCK END
	BLOCK 458

L_4163:
	DBG BLOCK END
; Line 3101:	} 

	BLOCK END
	BLOCK 459

L_4164:
	DBG BLOCK END
	BLOCK END
	BLOCK 460

L_3788:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_sub$qp15@Optimizer@quad


global @occx86@asm_sub$qp15@Optimizer@quad
@occx86@asm_sub$qp15@Optimizer@quad:
; Line 3103:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#24.UI
	BLOCK END
	BLOCK 2

L_4176:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4178:
; Line 3104:	    if (q->atomic) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4180:
	T9(EAX).A =   _q:LINK(4).A
	CONDGO	L_4179:PC ; *(T9(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_4181:
; Line 3105:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4182:
; Line 3106:	        addsubatomic(op_sub, q); 

	T10(EAX).A =   _q:LINK(4).A
	PARM	T10(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@addsubatomic$q8e_opcodep15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 3107:	        return; 

	GOTO	L_4177:PC
; Line 3108:	    } 

	BLOCK END
	BLOCK 8

L_4183:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_4184:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_4179:
	BLOCK END
	BLOCK 11

L_4185:
	DBG BLOCK END
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3109:	    enum e_opcode opa, opl, opr; 
; Line 3110:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

; Line 3110:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T11(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T11(EAX).A
	VAR START	apah
	T12(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T12(EAX).A
	VAR START	apll
	T13(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T13(EAX).A
	VAR START	aplh
	T14(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T14(EAX).A
	VAR START	aprl
	T15(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T15(EAX).A
	VAR START	aprh
	T16(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T16(EAX).A
; Line 3111:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T17(EAX).A =   #_aplh:LINK(-28).A
	PARM	T17(EAX).A
	T18(EAX).A =   #_apll:LINK(-24).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	T20(EAX).A =   *(T19(EAX) + 4+0).A.A
	PARM	T20(EAX).A
	T21(EAX).A =   #_opl:LINK(-8).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3112:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T23(EAX).A =   #_aprh:LINK(-36).A
	PARM	T23(EAX).A
	T24(EAX).A =   #_aprl:LINK(-32).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	T26(EAX).A =   *(T25(EAX) + 8+0).A.A
	PARM	T26(EAX).A
	T27(EAX).A =   #_opr:LINK(-12).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	PARM	T28(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3113:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T29(EAX).A =   #_apah:LINK(-20).A
	PARM	T29(EAX).A
	T30(EAX).A =   #_apal:LINK(-16).A
	PARM	T30(EAX).A
	T31(EAX).A =   _q:LINK(4).A
	T32(EAX).A =   *(T31(EAX) + 40).A.A
	PARM	T32(EAX).A
	T33(EAX).A =   #_opa:LINK(-4).A
	PARM	T33(EAX).A
	T34(EAX).A =   _q:LINK(4).A
	PARM	T34(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4187:
; Line 3114:	    if (q->ans->size >= ISZ_CFLOAT) 

	T35(EAX).A =   _q:LINK(4).A
	T36(EAX).A =   *(T35(EAX) + 40).A.A
	T37(EAX).I =   *(T36(EAX) + 19).A.C
	CONDGO	L_4186:PC ; T37(EAX).I S< #18.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_4188:
; Line 3115:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4189:
; Line 3116:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4191:
	T38(EAX).A =   _apll:LINK(-24).A
	PARM	T38(EAX).A
	T39(EAX).A =   _apal:LINK(-16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T40(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4190:PC ; T40(EAX).I == #0.C
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_4192:
; Line 3117:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4193:
; Line 3118:	            gen_code_sse(op_subss, op_subsd, q->ans->size, apal, aprl); 

	T41(EAX).A =   _aprl:LINK(-32).A
	PARM	T41(EAX).A
	T42(EAX).A =   _apal:LINK(-16).A
	PARM	T42(EAX).A
	T43(EAX).A =   _q:LINK(4).A
	T44(EAX).A =   *(T43(EAX) + 40).A.A
	T45(EAX).I =   *(T44(EAX) + 19).A.C
	PARM	T45(EAX).I
	PARM	#257.I
	PARM	#258.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3119:	            gen_code_sse(op_subss, op_subsd, q->ans->size, apah, aprh); 

	T46(EAX).A =   _aprh:LINK(-36).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apah:LINK(-20).A
	PARM	T47(EAX).A
	T48(EAX).A =   _q:LINK(4).A
	T49(EAX).A =   *(T48(EAX) + 40).A.A
	T50(EAX).I =   *(T49(EAX) + 19).A.C
	PARM	T50(EAX).I
	PARM	#257.I
	PARM	#258.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3120:	        } 

	BLOCK END
	BLOCK 20

L_4194:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_4196:
	DBG BLOCK END
	GOTO	L_4195:PC
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_4197:
	BLOCK END
	BLOCK 24

L_4190:
; Line 3121:	        else 

; Line 3122:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_4198:
; Line 3123:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T51(EAX).A =   _apll:LINK(-24).A
	PARM	T51(EAX).A
	T52(EAX).A =   _apal:LINK(-16).A
	PARM	T52(EAX).A
	T53(EAX).A =   _q:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + 40).A.A
	T55(EAX).I =   *(T54(EAX) + 19).A.C
	PARM	T55(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3124:	            gen_code_sse(op_subss, op_subsd, q->ans->size, apal, aprl); 

	T56(EAX).A =   _aprl:LINK(-32).A
	PARM	T56(EAX).A
	T57(EAX).A =   _apal:LINK(-16).A
	PARM	T57(EAX).A
	T58(EAX).A =   _q:LINK(4).A
	T59(EAX).A =   *(T58(EAX) + 40).A.A
	T60(EAX).I =   *(T59(EAX) + 19).A.C
	PARM	T60(EAX).I
	PARM	#257.I
	PARM	#258.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3125:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apah, aplh); 

	T61(EAX).A =   _aplh:LINK(-28).A
	PARM	T61(EAX).A
	T62(EAX).A =   _apah:LINK(-20).A
	PARM	T62(EAX).A
	T63(EAX).A =   _q:LINK(4).A
	T64(EAX).A =   *(T63(EAX) + 40).A.A
	T65(EAX).I =   *(T64(EAX) + 19).A.C
	PARM	T65(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3126:	            gen_code_sse(op_subss, op_subsd, q->ans->size, apah, aprh); 

	T66(EAX).A =   _aprh:LINK(-36).A
	PARM	T66(EAX).A
	T67(EAX).A =   _apah:LINK(-20).A
	PARM	T67(EAX).A
	T68(EAX).A =   _q:LINK(4).A
	T69(EAX).A =   *(T68(EAX) + 40).A.A
	T70(EAX).I =   *(T69(EAX) + 19).A.C
	PARM	T70(EAX).I
	PARM	#257.I
	PARM	#258.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3127:	        } 

	BLOCK END
	BLOCK 26

L_4199:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_4200:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_4195:
	BLOCK END
	BLOCK 29

L_4201:
	DBG BLOCK END
; Line 3128:	    } 

	BLOCK END
	BLOCK 30

L_4202:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_4204:
	DBG BLOCK END
	GOTO	L_4203:PC
	BLOCK END
	BLOCK 32
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_4205:
	BLOCK END
	BLOCK 34

L_4186:
; Line 3129:	    else if (q->ans->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_4207:
	T71(EAX).A =   _q:LINK(4).A
	T72(EAX).A =   *(T71(EAX) + 40).A.A
	T73(EAX).I =   *(T72(EAX) + 19).A.C
	CONDGO	L_4206:PC ; T73(EAX).I S< #12.C
	BLOCK END
	BLOCK 36
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_4208:
; Line 3130:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_4209:
; Line 3131:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_4211:
	T74(EAX).A =   _apll:LINK(-24).A
	PARM	T74(EAX).A
	T75(EAX).A =   _apal:LINK(-16).A
	PARM	T75(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T76(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4210:PC ; T76(EAX).I == #0.C
	BLOCK END
	BLOCK 40
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_4212:
; Line 3132:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_4213:
; Line 3133:	            gen_code_sse(op_subss, op_subsd, q->ans->size, apal, aprl); 

	T77(EAX).A =   _aprl:LINK(-32).A
	PARM	T77(EAX).A
	T78(EAX).A =   _apal:LINK(-16).A
	PARM	T78(EAX).A
	T79(EAX).A =   _q:LINK(4).A
	T80(EAX).A =   *(T79(EAX) + 40).A.A
	T81(EAX).I =   *(T80(EAX) + 19).A.C
	PARM	T81(EAX).I
	PARM	#257.I
	PARM	#258.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3134:	        } 

	BLOCK END
	BLOCK 43

L_4214:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_4216:
	DBG BLOCK END
	GOTO	L_4215:PC
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_4217:
	BLOCK END
	BLOCK 47

L_4210:
; Line 3135:	        else 

; Line 3136:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_4218:
; Line 3137:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T82(EAX).A =   _apll:LINK(-24).A
	PARM	T82(EAX).A
	T83(EAX).A =   _apal:LINK(-16).A
	PARM	T83(EAX).A
	T84(EAX).A =   _q:LINK(4).A
	T85(EAX).A =   *(T84(EAX) + 40).A.A
	T86(EAX).I =   *(T85(EAX) + 19).A.C
	PARM	T86(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3138:	            gen_code_sse(op_subss, op_subsd, q->ans->size, apal, aprl); 

	T87(EAX).A =   _aprl:LINK(-32).A
	PARM	T87(EAX).A
	T88(EAX).A =   _apal:LINK(-16).A
	PARM	T88(EAX).A
	T89(EAX).A =   _q:LINK(4).A
	T90(EAX).A =   *(T89(EAX) + 40).A.A
	T91(EAX).I =   *(T90(EAX) + 19).A.C
	PARM	T91(EAX).I
	PARM	#257.I
	PARM	#258.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3139:	        } 

	BLOCK END
	BLOCK 49

L_4219:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_4220:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_4215:
	BLOCK END
	BLOCK 52

L_4221:
	DBG BLOCK END
; Line 3140:	    } 

	BLOCK END
	BLOCK 53

L_4222:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_4224:
	DBG BLOCK END
	GOTO	L_4223:PC
	BLOCK END
	BLOCK 55
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_4225:
	BLOCK END
	BLOCK 57

L_4206:
; Line 3141:	    else if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_4227:
	T92(EAX).A =   _q:LINK(4).A
	T93(EAX).A =   *(T92(EAX) + 40).A.A
	T94(AL).C =   *(T93(EAX) + 19).A.C
	CONDGO	L_4305:PC ; T94(AL).C == #B.C
	BLOCK END
	BLOCK 59
	T95(EAX).A =   _q:LINK(4).A
	T96(EAX).A =   *(T95(EAX) + 40).A.A
	T97(EAX).I =   *(T96(EAX) + 19).A.C
	CONDGO	L_4226:PC ; T97(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 60

L_4305:
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_4228:
; Line 3142:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_4229:
; Line 3143:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_4231:
	T162(EAX).A =   _apll:LINK(-24).A
	PARM	T162(EAX).A
	T163(EAX).A =   _apal:LINK(-16).A
	PARM	T163(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T164(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4230:PC ; T164(EAX).I == #0.C
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_4232:
; Line 3144:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_4233:
; Line 3145:	            func_axdx(op_sub, apal, apah, aprl, aprh); 

	T165(EAX).A =   _aprh:LINK(-36).A
	PARM	T165(EAX).A
	T166(EAX).A =   _aprl:LINK(-32).A
	PARM	T166(EAX).A
	T167(EAX).A =   _apah:LINK(-20).A
	PARM	T167(EAX).A
	T168(EAX).A =   _apal:LINK(-16).A
	PARM	T168(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3146:	        } 

	BLOCK END
	BLOCK 67

L_4234:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_4236:
	DBG BLOCK END
	GOTO	L_4235:PC
	BLOCK END
	BLOCK 69
	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_4237:
	BLOCK END
	BLOCK 71

L_4230:
; Line 3147:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_4239:
	T169(EAX).A =   _aprl:LINK(-32).A
	PARM	T169(EAX).A
	T170(EAX).A =   _apal:LINK(-16).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T171(EAX).I =   RV.T3(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4238:PC ; T171(EAX).I == #0.C
	BLOCK END
	BLOCK 73
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_4240:
; Line 3148:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_4241:
; Line 3149:	            func_axdx(op_sub, apal, apah, apll, aplh); 

	T172(EAX).A =   _aplh:LINK(-28).A
	PARM	T172(EAX).A
	T173(EAX).A =   _apll:LINK(-24).A
	PARM	T173(EAX).A
	T174(EAX).A =   _apah:LINK(-20).A
	PARM	T174(EAX).A
	T175(EAX).A =   _apal:LINK(-16).A
	PARM	T175(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3150:	            gen_codes(op_neg, ISZ_UINT, apah, 0); 

	T176(EAX).A =   #0.C
	PARM	T176(EAX).A
	T177(EAX).A =   _apah:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).UI =   #7.C
	PARM	T178(EAX).UI
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3151:	            gen_codes(op_neg, ISZ_UINT, apal, 0); 

	T179(EAX).A =   #0.C
	PARM	T179(EAX).A
	T180(EAX).A =   _apal:LINK(-16).A
	PARM	T180(EAX).A
	T181(EAX).UI =   #7.C
	PARM	T181(EAX).UI
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3152:	            gen_codes(op_sbb, ISZ_UINT, apah, aimmed(0)); 

	T182(EDX:EAX).ULL =   #0.C
	PARM	T182(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T183(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T183(EAX).A
	T184(EAX).A =   _apah:LINK(-20).A
	PARM	T184(EAX).A
	T185(EAX).UI =   #7.C
	PARM	T185(EAX).UI
	PARM	#153.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3153:	        } 

	BLOCK END
	BLOCK 76

L_4242:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_4244:
	DBG BLOCK END
	GOTO	L_4243:PC
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_4245:
	BLOCK END
	BLOCK 80

L_4238:
; Line 3154:	        else 

; Line 3155:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_4246:
; Line 3156:	            liveQualify(apal, apal, apah); 

	T186(EAX).A =   _apah:LINK(-20).A
	PARM	T186(EAX).A
	T187(EAX).A =   _apal:LINK(-16).A
	PARM	T187(EAX).A
	T188(EAX).A =   _apal:LINK(-16).A
	PARM	T188(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3157:	            liveQualify(apah, apal, apah); 

	T189(EAX).A =   _apah:LINK(-20).A
	PARM	T189(EAX).A
	T190(EAX).A =   _apal:LINK(-16).A
	PARM	T190(EAX).A
	T191(EAX).A =   _apah:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3158:	            func_axdx_mov(op_sub, apal, apah, apll, aplh, aprl, aprh); 

	T192(EAX).A =   _aprh:LINK(-36).A
	PARM	T192(EAX).A
	T193(EAX).A =   _aprl:LINK(-32).A
	PARM	T193(EAX).A
	T194(EAX).A =   _aplh:LINK(-28).A
	PARM	T194(EAX).A
	T195(EAX).A =   _apll:LINK(-24).A
	PARM	T195(EAX).A
	T196(EAX).A =   _apah:LINK(-20).A
	PARM	T196(EAX).A
	T197(EAX).A =   _apal:LINK(-16).A
	PARM	T197(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1:PC.UI
	PARMADJ	#1C.N
; Line 3159:	        } 

	BLOCK END
	BLOCK 82

L_4247:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_4248:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_4243:
	BLOCK END
	BLOCK 85

L_4249:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_4250:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_4235:
	BLOCK END
	BLOCK 88

L_4251:
	DBG BLOCK END
; Line 3160:	    } 

	BLOCK END
	BLOCK 89

L_4252:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_4254:
	DBG BLOCK END
	GOTO	L_4253:PC
	BLOCK END
	BLOCK 91
	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_4255:
	BLOCK END
	BLOCK 93

L_4226:
; Line 3161:	    else 

; Line 3162:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_4256:
; Line 3163:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 95

L_4258:
	T98(EAX).A =   _apll:LINK(-24).A
	PARM	T98(EAX).A
	T99(EAX).A =   _apal:LINK(-16).A
	PARM	T99(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T100(EAX).I =   RV.T5(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4257:PC ; T100(EAX).I == #0.C
	BLOCK END
	BLOCK 96
	DBG BLOCK START
	BLOCK END
	BLOCK 97

L_4259:
; Line 3164:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_4260:
; Line 3165:	            gen_codes(op_sub, q->ans->size, apal, aprl); 

	T101(EAX).A =   _aprl:LINK(-32).A
	PARM	T101(EAX).A
	T102(EAX).A =   _apal:LINK(-16).A
	PARM	T102(EAX).A
	T103(EAX).A =   _q:LINK(4).A
	T104(EAX).A =   *(T103(EAX) + 40).A.A
	T105(EAX).I =   *(T104(EAX) + 19).A.C
	PARM	T105(EAX).I
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3166:	        } 

	BLOCK END
	BLOCK 99

L_4261:
	DBG BLOCK END
	BLOCK END
	BLOCK 100

L_4263:
	DBG BLOCK END
	GOTO	L_4262:PC
	BLOCK END
	BLOCK 101
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_4264:
	BLOCK END
	BLOCK 103

L_4257:
; Line 3167:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_4266:
	T106(EAX).A =   _aprl:LINK(-32).A
	PARM	T106(EAX).A
	T107(EAX).A =   _apal:LINK(-16).A
	PARM	T107(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T108(EAX).I =   RV.T6(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4265:PC ; T108(EAX).I == #0.C
	BLOCK END
	BLOCK 105
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_4267:
; Line 3168:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 107

L_4268:
; Line 3169:	            liveQualify(apal, apal, 0); 

	T109(EAX).A =   #0.C
	PARM	T109(EAX).A
	T110(EAX).A =   _apal:LINK(-16).A
	PARM	T110(EAX).A
	T111(EAX).A =   _apal:LINK(-16).A
	PARM	T111(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3170:	            gen_codes(op_sub, q->ans->size, apal, apll); 

	T112(EAX).A =   _apll:LINK(-24).A
	PARM	T112(EAX).A
	T113(EAX).A =   _apal:LINK(-16).A
	PARM	T113(EAX).A
	T114(EAX).A =   _q:LINK(4).A
	T115(EAX).A =   *(T114(EAX) + 40).A.A
	T116(EAX).I =   *(T115(EAX) + 19).A.C
	PARM	T116(EAX).I
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3171:	            gen_codes(op_neg, q->ans->size, apal, 0); 

	T117(EAX).A =   #0.C
	PARM	T117(EAX).A
	T118(EAX).A =   _apal:LINK(-16).A
	PARM	T118(EAX).A
	T119(EAX).A =   _q:LINK(4).A
	T120(EAX).A =   *(T119(EAX) + 40).A.A
	T121(EAX).I =   *(T120(EAX) + 19).A.C
	PARM	T121(EAX).I
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3172:	        } 

	BLOCK END
	BLOCK 108

L_4269:
	DBG BLOCK END
	BLOCK END
	BLOCK 109

L_4271:
	DBG BLOCK END
	GOTO	L_4270:PC
	BLOCK END
	BLOCK 110
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_4272:
	BLOCK END
	BLOCK 112

L_4265:
; Line 3173:	        else 

; Line 3174:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_4273:
; Line 3175:	            if (equal_address(apll, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 114

L_4275:
	T122(EAX).A =   _aprl:LINK(-32).A
	PARM	T122(EAX).A
	T123(EAX).A =   _apll:LINK(-24).A
	PARM	T123(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T124(EAX).I =   RV.T7(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4274:PC ; T124(EAX).I == #0.C
	BLOCK END
	BLOCK 115
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_4276:
; Line 3176:	                apal->liveRegs = -1; 

	T125(EAX).A =   _apal:LINK(-16).A
	*(T125(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 117

L_4277:
	DBG BLOCK END
	BLOCK END
	BLOCK 118

L_4274:
	BLOCK END
	BLOCK 119

L_4278:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_4280:
; Line 3177:	            if (samereg(apal, aprl)) 

	T126(EAX).A =   _aprl:LINK(-32).A
	PARM	T126(EAX).A
	T127(EAX).A =   _apal:LINK(-16).A
	PARM	T127(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T128(EAX).I =   RV.T8(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4279:PC ; T128(EAX).I == #0.C
	BLOCK END
	BLOCK 121
	DBG BLOCK START
	BLOCK END
	BLOCK 122

L_4281:
; Line 3178:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 123

L_4282:
; Line 3179:	                liveQualify(apal, apal, 0); 

	T129(EAX).A =   #0.C
	PARM	T129(EAX).A
	T130(EAX).A =   _apal:LINK(-16).A
	PARM	T130(EAX).A
	T131(EAX).A =   _apal:LINK(-16).A
	PARM	T131(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3180:	                gen_codes(opr, q->ans->size, apal, aprl); 

	T132(EAX).A =   _aprl:LINK(-32).A
	PARM	T132(EAX).A
	T133(EAX).A =   _apal:LINK(-16).A
	PARM	T133(EAX).A
	T134(EAX).A =   _q:LINK(4).A
	T135(EAX).A =   *(T134(EAX) + 40).A.A
	T136(EAX).I =   *(T135(EAX) + 19).A.C
	PARM	T136(EAX).I
	T137(EAX).I =   _opr:LINK(-12).I
	PARM	T137(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3181:	                gen_codes(op_sub, q->ans->size, apal, apll); 

	T138(EAX).A =   _apll:LINK(-24).A
	PARM	T138(EAX).A
	T139(EAX).A =   _apal:LINK(-16).A
	PARM	T139(EAX).A
	T140(EAX).A =   _q:LINK(4).A
	T141(EAX).A =   *(T140(EAX) + 40).A.A
	T142(EAX).I =   *(T141(EAX) + 19).A.C
	PARM	T142(EAX).I
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3182:	                gen_codes(op_neg, q->ans->size, apal, 0); 

	T143(EAX).A =   #0.C
	PARM	T143(EAX).A
	T144(EAX).A =   _apal:LINK(-16).A
	PARM	T144(EAX).A
	T145(EAX).A =   _q:LINK(4).A
	T146(EAX).A =   *(T145(EAX) + 40).A.A
	T147(EAX).I =   *(T146(EAX) + 19).A.C
	PARM	T147(EAX).I
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3183:	            } 

	BLOCK END
	BLOCK 124

L_4283:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_4285:
	DBG BLOCK END
	GOTO	L_4284:PC
	BLOCK END
	BLOCK 126
	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_4286:
	BLOCK END
	BLOCK 128

L_4279:
; Line 3184:	            else 

; Line 3185:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 129

L_4287:
; Line 3186:	                liveQualify(apal, apal, 0); 

	T148(EAX).A =   #0.C
	PARM	T148(EAX).A
	T149(EAX).A =   _apal:LINK(-16).A
	PARM	T149(EAX).A
	T150(EAX).A =   _apal:LINK(-16).A
	PARM	T150(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3187:	                gen_codes(opl, q->ans->size, apal, apll); 

	T151(EAX).A =   _apll:LINK(-24).A
	PARM	T151(EAX).A
	T152(EAX).A =   _apal:LINK(-16).A
	PARM	T152(EAX).A
	T153(EAX).A =   _q:LINK(4).A
	T154(EAX).A =   *(T153(EAX) + 40).A.A
	T155(EAX).I =   *(T154(EAX) + 19).A.C
	PARM	T155(EAX).I
	T156(EAX).I =   _opl:LINK(-8).I
	PARM	T156(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3188:	                gen_codes(op_sub, q->ans->size, apal, aprl); 

	T157(EAX).A =   _aprl:LINK(-32).A
	PARM	T157(EAX).A
	T158(EAX).A =   _apal:LINK(-16).A
	PARM	T158(EAX).A
	T159(EAX).A =   _q:LINK(4).A
	T160(EAX).A =   *(T159(EAX) + 40).A.A
	T161(EAX).I =   *(T160(EAX) + 19).A.C
	PARM	T161(EAX).I
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3189:	            } 

	BLOCK END
	BLOCK 130

L_4288:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_4289:
	DBG BLOCK END
	BLOCK END
	BLOCK 132

L_4284:
	BLOCK END
	BLOCK 133

L_4290:
	DBG BLOCK END
; Line 3190:	        } 

	BLOCK END
	BLOCK 134

L_4291:
	DBG BLOCK END
	BLOCK END
	BLOCK 135

L_4292:
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_4270:
	BLOCK END
	BLOCK 137

L_4293:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_4294:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_4262:
	BLOCK END
	BLOCK 140

L_4295:
	DBG BLOCK END
; Line 3191:	    } 

	BLOCK END
	BLOCK 141

L_4296:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_4297:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_4253:
	BLOCK END
	BLOCK 144

L_4298:
	DBG BLOCK END
	BLOCK END
	BLOCK 145

L_4299:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_4223:
	BLOCK END
	BLOCK 147

L_4300:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_4301:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_4203:
	BLOCK END
	BLOCK 150

L_4302:
	DBG BLOCK END
; Line 3192:	} 

	BLOCK END
	BLOCK 151

L_4303:
	DBG BLOCK END
	BLOCK END
	BLOCK 152

L_4177:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_udiv$qp15@Optimizer@quad


global @occx86@asm_udiv$qp15@Optimizer@quad
@occx86@asm_udiv$qp15@Optimizer@quad:
; Line 3193:	void asm_udiv(Optimizer::QUAD* q)   { gen_div(q, op_div); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4309:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4311:
	PARM	#67.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_div$qp15@Optimizer@quad8e_opcode:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_4312:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_4310:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_umod$qp15@Optimizer@quad


global @occx86@asm_umod$qp15@Optimizer@quad
@occx86@asm_umod$qp15@Optimizer@quad:
; Line 3194:	void asm_umod(Optimizer::QUAD* q)   { gen_div(q, op_div); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4317:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4319:
	PARM	#67.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_div$qp15@Optimizer@quad8e_opcode:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_4320:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_4318:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_sdiv$qp15@Optimizer@quad


global @occx86@asm_sdiv$qp15@Optimizer@quad
@occx86@asm_sdiv$qp15@Optimizer@quad:
; Line 3195:	void asm_sdiv(Optimizer::QUAD* q)   { gen_div(q, op_idiv); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4325:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4327:
	PARM	#D0.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_div$qp15@Optimizer@quad8e_opcode:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_4328:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_4326:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_smod$qp15@Optimizer@quad


global @occx86@asm_smod$qp15@Optimizer@quad
@occx86@asm_smod$qp15@Optimizer@quad:
; Line 3196:	void asm_smod(Optimizer::QUAD* q)   { gen_div(q, op_idiv); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4333:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4335:
	PARM	#D0.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_div$qp15@Optimizer@quad8e_opcode:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_4336:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_4334:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_muluh$qp15@Optimizer@quad


global @occx86@asm_muluh$qp15@Optimizer@quad
@occx86@asm_muluh$qp15@Optimizer@quad:
; Line 3197:	void asm_muluh(Optimizer::QUAD* q) { gen_mulxh(q, op_mul); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4341:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4343:
	PARM	#127.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_mulxh$qp15@Optimizer@quad8e_opcode:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_4344:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_4342:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_mulsh$qp15@Optimizer@quad


global @occx86@asm_mulsh$qp15@Optimizer@quad
@occx86@asm_mulsh$qp15@Optimizer@quad:
; Line 3198:	void asm_mulsh(Optimizer::QUAD* q) { gen_mulxh(q, op_imul); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_4349:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4351:
	PARM	#D1.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_mulxh$qp15@Optimizer@quad8e_opcode:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_4352:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_4350:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_mul$qp15@Optimizer@quad


global @occx86@asm_mul$qp15@Optimizer@quad
@occx86@asm_mul$qp15@Optimizer@quad:
; Line 3200:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#24.UI
	BLOCK END
	BLOCK 2

L_4358:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4360:
; Line 3201:	    enum e_opcode opa, opl, opr; 

	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3202:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T8(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T8(EAX).A
	VAR START	apah
	T9(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T9(EAX).A
	VAR START	apll
	T10(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T10(EAX).A
	VAR START	aplh
	T11(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T11(EAX).A
	VAR START	aprl
	T12(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T12(EAX).A
	VAR START	aprh
	T13(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T13(EAX).A
; Line 3203:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T14(EAX).A =   #_aplh:LINK(-28).A
	PARM	T14(EAX).A
	T15(EAX).A =   #_apll:LINK(-24).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 4+0).A.A
	PARM	T17(EAX).A
	T18(EAX).A =   #_opl:LINK(-8).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3204:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T20(EAX).A =   #_aprh:LINK(-36).A
	PARM	T20(EAX).A
	T21(EAX).A =   #_aprl:LINK(-32).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	T23(EAX).A =   *(T22(EAX) + 8+0).A.A
	PARM	T23(EAX).A
	T24(EAX).A =   #_opr:LINK(-12).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3205:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T26(EAX).A =   #_apah:LINK(-20).A
	PARM	T26(EAX).A
	T27(EAX).A =   #_apal:LINK(-16).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	T29(EAX).A =   *(T28(EAX) + 40).A.A
	PARM	T29(EAX).A
	T30(EAX).A =   #_opa:LINK(-4).A
	PARM	T30(EAX).A
	T31(EAX).A =   _q:LINK(4).A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4362:
; Line 3206:	    if (q->ans->size >= ISZ_FLOAT) 

	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(EAX).I =   *(T33(EAX) + 19).A.C
	CONDGO	L_4361:PC ; T34(EAX).I S< #12.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_4363:
; Line 3207:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4364:
; Line 3208:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_4366:
	T35(EAX).A =   _apll:LINK(-24).A
	PARM	T35(EAX).A
	T36(EAX).A =   _apal:LINK(-16).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T37(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4365:PC ; T37(EAX).I == #0.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_4367:
; Line 3209:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_4368:
; Line 3210:	            gen_code_sse(op_mulss, op_mulsd, q->ans->size, apal, aprl); 

	T38(EAX).A =   _aprl:LINK(-32).A
	PARM	T38(EAX).A
	T39(EAX).A =   _apal:LINK(-16).A
	PARM	T39(EAX).A
	T40(EAX).A =   _q:LINK(4).A
	T41(EAX).A =   *(T40(EAX) + 40).A.A
	T42(EAX).I =   *(T41(EAX) + 19).A.C
	PARM	T42(EAX).I
	PARM	#1FA.I
	PARM	#1FB.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3211:	        } 

	BLOCK END
	BLOCK 12

L_4369:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_4371:
	DBG BLOCK END
	GOTO	L_4370:PC
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4372:
	BLOCK END
	BLOCK 16

L_4365:
; Line 3212:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4374:
	T43(EAX).A =   _aprl:LINK(-32).A
	PARM	T43(EAX).A
	T44(EAX).A =   _apal:LINK(-16).A
	PARM	T44(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T45(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4373:PC ; T45(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4375:
; Line 3213:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_4376:
; Line 3214:	            gen_code_sse(op_mulss, op_mulsd, q->ans->size, apal, apll); 

	T46(EAX).A =   _apll:LINK(-24).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apal:LINK(-16).A
	PARM	T47(EAX).A
	T48(EAX).A =   _q:LINK(4).A
	T49(EAX).A =   *(T48(EAX) + 40).A.A
	T50(EAX).I =   *(T49(EAX) + 19).A.C
	PARM	T50(EAX).I
	PARM	#1FA.I
	PARM	#1FB.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3215:	        } 

	BLOCK END
	BLOCK 21

L_4377:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_4379:
	DBG BLOCK END
	GOTO	L_4378:PC
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_4380:
	BLOCK END
	BLOCK 25

L_4373:
; Line 3216:	        else 

; Line 3217:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4381:
; Line 3218:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T51(EAX).A =   _apll:LINK(-24).A
	PARM	T51(EAX).A
	T52(EAX).A =   _apal:LINK(-16).A
	PARM	T52(EAX).A
	T53(EAX).A =   _q:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + 40).A.A
	T55(EAX).I =   *(T54(EAX) + 19).A.C
	PARM	T55(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3219:	            gen_code_sse(op_mulss, op_mulsd, q->ans->size, apal, aprl); 

	T56(EAX).A =   _aprl:LINK(-32).A
	PARM	T56(EAX).A
	T57(EAX).A =   _apal:LINK(-16).A
	PARM	T57(EAX).A
	T58(EAX).A =   _q:LINK(4).A
	T59(EAX).A =   *(T58(EAX) + 40).A.A
	T60(EAX).I =   *(T59(EAX) + 19).A.C
	PARM	T60(EAX).I
	PARM	#1FA.I
	PARM	#1FB.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3220:	        } 

	BLOCK END
	BLOCK 27

L_4382:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_4383:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_4378:
	BLOCK END
	BLOCK 30

L_4384:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_4385:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_4370:
	BLOCK END
	BLOCK 33

L_4386:
	DBG BLOCK END
; Line 3221:	    } 

	BLOCK END
	BLOCK 34

L_4387:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_4389:
	DBG BLOCK END
	GOTO	L_4388:PC
	BLOCK END
	BLOCK 36
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_4390:
	BLOCK END
	BLOCK 38

L_4361:
; Line 3222:	    else if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_4392:
	T61(EAX).A =   _q:LINK(4).A
	T62(EAX).A =   *(T61(EAX) + 40).A.A
	T63(AL).C =   *(T62(EAX) + 19).A.C
	CONDGO	L_4493:PC ; T63(AL).C == #B.C
	BLOCK END
	BLOCK 40
	T64(EAX).A =   _q:LINK(4).A
	T65(EAX).A =   *(T64(EAX) + 40).A.A
	T66(EAX).I =   *(T65(EAX) + 19).A.C
	CONDGO	L_4391:PC ; T66(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 41

L_4493:
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_4393:
; Line 3223:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_4394:
; Line 3224:	        diag("asm_smul: long long"); 

	PARM	#L_4357:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 3225:	    } 

	BLOCK END
	BLOCK 44

L_4395:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_4397:
	DBG BLOCK END
	GOTO	L_4396:PC
	BLOCK END
	BLOCK 46
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_4398:
	BLOCK END
	BLOCK 48

L_4391:
; Line 3226:	    else 

; Line 3227:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_4399:
; Line 3228:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_4401:
	T67(EAX).A =   _apll:LINK(-24).A
	PARM	T67(EAX).A
	T68(EAX).A =   _apal:LINK(-16).A
	PARM	T68(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T69(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4400:PC ; T69(EAX).I == #0.C
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_4402:
; Line 3229:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_4403:
; Line 3230:	            gen_codes(op_imul, q->ans->size, apal, aprl); 

	T70(EAX).A =   _aprl:LINK(-32).A
	PARM	T70(EAX).A
	T71(EAX).A =   _apal:LINK(-16).A
	PARM	T71(EAX).A
	T72(EAX).A =   _q:LINK(4).A
	T73(EAX).A =   *(T72(EAX) + 40).A.A
	T74(EAX).I =   *(T73(EAX) + 19).A.C
	PARM	T74(EAX).I
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3231:	        } 

	BLOCK END
	BLOCK 54

L_4404:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_4406:
	DBG BLOCK END
	GOTO	L_4405:PC
	BLOCK END
	BLOCK 56
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_4407:
	BLOCK END
	BLOCK 58

L_4400:
; Line 3232:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_4409:
	T75(EAX).A =   _aprl:LINK(-32).A
	PARM	T75(EAX).A
	T76(EAX).A =   _apal:LINK(-16).A
	PARM	T76(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T77(EAX).I =   RV.T3(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4408:PC ; T77(EAX).I == #0.C
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_4410:
; Line 3233:	            gen_codes(op_imul, q->ans->size, apal, apll); 

	T78(EAX).A =   _apll:LINK(-24).A
	PARM	T78(EAX).A
	T79(EAX).A =   _apal:LINK(-16).A
	PARM	T79(EAX).A
	T80(EAX).A =   _q:LINK(4).A
	T81(EAX).A =   *(T80(EAX) + 40).A.A
	T82(EAX).I =   *(T81(EAX) + 19).A.C
	PARM	T82(EAX).I
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 62

L_4412:
	DBG BLOCK END
	GOTO	L_4411:PC
	BLOCK END
	BLOCK 63
	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_4413:
	BLOCK END
	BLOCK 65

L_4408:
; Line 3234:	        else if (apll->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_4415:
	T83(EAX).A =   _apll:LINK(-24).A
	T84(EAX).I =   *(T83(EAX) + 0).A.I
	CONDGO	L_4414:PC ; T84(EAX).I != #10.I
	BLOCK END
	BLOCK 67
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_4416:
; Line 3235:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_4417:
; Line 3236:	            if (aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_4419:
	T85(EAX).A =   _aprl:LINK(-32).A
	T86(EAX).I =   *(T85(EAX) + 0).A.I
	CONDGO	L_4418:PC ; T86(EAX).I != #10.I
	BLOCK END
	BLOCK 71
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_4420:
; Line 3237:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_4421:
; Line 3238:	                apll = aimmed(apll->offset->i * aprl->offset->i); 

	T87(EAX).A =   _apll:LINK(-24).A
	T88(EAX).A =   *(T87(EAX) + C).A.A
	T89(EDX:EAX).LL =   *(T88(EAX) + 8).A.LL
	T90(ECX).A =   _aprl:LINK(-32).A
	T91(ECX).A =   *(T90(ECX) + C).A.A
	T92(EBX:ESI).LL =   *(T91(ECX) + 8).A.LL
	PARM	T92(EBX:ESI).LL
	PARM	T89(EDX:EAX).LL
	GOSUB	#__LXMUL:PC.N
	PARMADJ	#0.N
	T94(EDX:EAX).LL =   RV.T7(EDX:EAX).LL
	PARM	T94(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T95(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	_apll:LINK(-24).A =   T95(EAX).A
; Line 3239:	                gen_codes(op_mov, q->ans->size, apal, apll); 

	T96(EAX).A =   _apll:LINK(-24).A
	PARM	T96(EAX).A
	T97(EAX).A =   _apal:LINK(-16).A
	PARM	T97(EAX).A
	T98(EAX).A =   _q:LINK(4).A
	T99(EAX).A =   *(T98(EAX) + 40).A.A
	T100(EAX).I =   *(T99(EAX) + 19).A.C
	PARM	T100(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3240:	            } 

	BLOCK END
	BLOCK 74

L_4422:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_4424:
	DBG BLOCK END
	GOTO	L_4423:PC
	BLOCK END
	BLOCK 76
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_4425:
	BLOCK END
	BLOCK 78

L_4418:
; Line 3241:	            else 

; Line 3242:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_4426:
; Line 3243:	                gen_code3(op_imul, apal, aprl, apll); 

	T101(EAX).A =   _apll:LINK(-24).A
	PARM	T101(EAX).A
	T102(EAX).A =   _aprl:LINK(-32).A
	PARM	T102(EAX).A
	T103(EAX).A =   _apal:LINK(-16).A
	PARM	T103(EAX).A
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_code3$qip5amodepn0pn0:PC.UI
	PARMADJ	#10.N
; Line 3244:	            } 

	BLOCK END
	BLOCK 80

L_4427:
	DBG BLOCK END
	BLOCK END
	BLOCK 81

L_4428:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_4423:
	BLOCK END
	BLOCK 83

L_4429:
	DBG BLOCK END
; Line 3245:	        } 

	BLOCK END
	BLOCK 84

L_4430:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_4432:
	DBG BLOCK END
	GOTO	L_4431:PC
	BLOCK END
	BLOCK 86
	DBG BLOCK START
	BLOCK END
	BLOCK 87

L_4433:
	BLOCK END
	BLOCK 88

L_4414:
; Line 3246:	        else if (aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 89

L_4435:
	T104(EAX).A =   _aprl:LINK(-32).A
	T105(EAX).I =   *(T104(EAX) + 0).A.I
	CONDGO	L_4434:PC ; T105(EAX).I != #10.I
	BLOCK END
	BLOCK 90
	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_4436:
; Line 3247:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_4437:
; Line 3248:	            gen_code3(op_imul, apal, apll, aprl); 

	T106(EAX).A =   _aprl:LINK(-32).A
	PARM	T106(EAX).A
	T107(EAX).A =   _apll:LINK(-24).A
	PARM	T107(EAX).A
	T108(EAX).A =   _apal:LINK(-16).A
	PARM	T108(EAX).A
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_code3$qip5amodepn0pn0:PC.UI
	PARMADJ	#10.N
; Line 3249:	        } 

	BLOCK END
	BLOCK 93

L_4438:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_4440:
	DBG BLOCK END
	GOTO	L_4439:PC
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_4441:
	BLOCK END
	BLOCK 97

L_4434:
; Line 3250:	        else 

; Line 3251:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_4442:
; Line 3252:	            if (apll->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_4444:
	T109(EAX).A =   _apll:LINK(-24).A
	T110(EAX).I =   *(T109(EAX) + 0).A.I
	CONDGO	L_4443:PC ; T110(EAX).I != #10.I
	BLOCK END
	BLOCK 100
	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_4445:
; Line 3253:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_4446:
; Line 3254:	                liveQualify(apal, apal, 0); 

	T111(EAX).A =   #0.C
	PARM	T111(EAX).A
	T112(EAX).A =   _apal:LINK(-16).A
	PARM	T112(EAX).A
	T113(EAX).A =   _apal:LINK(-16).A
	PARM	T113(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3255:	                gen_codes(op_mov, q->ans->size, apal, aprl); 

	T114(EAX).A =   _aprl:LINK(-32).A
	PARM	T114(EAX).A
	T115(EAX).A =   _apal:LINK(-16).A
	PARM	T115(EAX).A
	T116(EAX).A =   _q:LINK(4).A
	T117(EAX).A =   *(T116(EAX) + 40).A.A
	T118(EAX).I =   *(T117(EAX) + 19).A.C
	PARM	T118(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3256:	                gen_codes(op_imul, q->ans->size, apal, apll); 

	T119(EAX).A =   _apll:LINK(-24).A
	PARM	T119(EAX).A
	T120(EAX).A =   _apal:LINK(-16).A
	PARM	T120(EAX).A
	T121(EAX).A =   _q:LINK(4).A
	T122(EAX).A =   *(T121(EAX) + 40).A.A
	T123(EAX).I =   *(T122(EAX) + 19).A.C
	PARM	T123(EAX).I
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3257:	            } 

	BLOCK END
	BLOCK 103

L_4447:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_4449:
	DBG BLOCK END
	GOTO	L_4448:PC
	BLOCK END
	BLOCK 105
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_4450:
	BLOCK END
	BLOCK 107

L_4443:
; Line 3258:	            else 

; Line 3259:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 108

L_4451:
; Line 3260:	                liveQualify(apal, apal, 0); 

	T124(EAX).A =   #0.C
	PARM	T124(EAX).A
	T125(EAX).A =   _apal:LINK(-16).A
	PARM	T125(EAX).A
	T126(EAX).A =   _apal:LINK(-16).A
	PARM	T126(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 109

L_4453:
; Line 3261:	                if (equal_address(apll, aprl)) 

	T127(EAX).A =   _aprl:LINK(-32).A
	PARM	T127(EAX).A
	T128(EAX).A =   _apll:LINK(-24).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T129(EAX).I =   RV.T5(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4452:PC ; T129(EAX).I == #0.C
	BLOCK END
	BLOCK 110
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_4454:
; Line 3262:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_4455:
; Line 3263:	                    gen_codes(op_mov, q->ans->size, apal, apll); 

	T130(EAX).A =   _apll:LINK(-24).A
	PARM	T130(EAX).A
	T131(EAX).A =   _apal:LINK(-16).A
	PARM	T131(EAX).A
	T132(EAX).A =   _q:LINK(4).A
	T133(EAX).A =   *(T132(EAX) + 40).A.A
	T134(EAX).I =   *(T133(EAX) + 19).A.C
	PARM	T134(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3264:	                    gen_codes(op_imul, q->ans->size, apal, apal); 

	T135(EAX).A =   _apal:LINK(-16).A
	PARM	T135(EAX).A
	T136(EAX).A =   _apal:LINK(-16).A
	PARM	T136(EAX).A
	T137(EAX).A =   _q:LINK(4).A
	T138(EAX).A =   *(T137(EAX) + 40).A.A
	T139(EAX).I =   *(T138(EAX) + 19).A.C
	PARM	T139(EAX).I
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3265:	                } 

	BLOCK END
	BLOCK 113

L_4456:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_4458:
	DBG BLOCK END
	GOTO	L_4457:PC
	BLOCK END
	BLOCK 115
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_4459:
	BLOCK END
	BLOCK 117

L_4452:
; Line 3266:	                else if (samereg(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_4461:
	T140(EAX).A =   _aprl:LINK(-32).A
	PARM	T140(EAX).A
	T141(EAX).A =   _apal:LINK(-16).A
	PARM	T141(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T142(EAX).I =   RV.T6(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4460:PC ; T142(EAX).I == #0.C
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_4462:
; Line 3267:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 121

L_4463:
; Line 3268:	                    gen_codes(op_mov, q->ans->size, apal, aprl); 

	T143(EAX).A =   _aprl:LINK(-32).A
	PARM	T143(EAX).A
	T144(EAX).A =   _apal:LINK(-16).A
	PARM	T144(EAX).A
	T145(EAX).A =   _q:LINK(4).A
	T146(EAX).A =   *(T145(EAX) + 40).A.A
	T147(EAX).I =   *(T146(EAX) + 19).A.C
	PARM	T147(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3269:	                    gen_codes(op_imul, q->ans->size, apal, apll); 

	T148(EAX).A =   _apll:LINK(-24).A
	PARM	T148(EAX).A
	T149(EAX).A =   _apal:LINK(-16).A
	PARM	T149(EAX).A
	T150(EAX).A =   _q:LINK(4).A
	T151(EAX).A =   *(T150(EAX) + 40).A.A
	T152(EAX).I =   *(T151(EAX) + 19).A.C
	PARM	T152(EAX).I
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3270:	                } 

	BLOCK END
	BLOCK 122

L_4464:
	DBG BLOCK END
	BLOCK END
	BLOCK 123

L_4466:
	DBG BLOCK END
	GOTO	L_4465:PC
	BLOCK END
	BLOCK 124
	DBG BLOCK START
	BLOCK END
	BLOCK 125

L_4467:
	BLOCK END
	BLOCK 126

L_4460:
; Line 3271:	                else 

; Line 3272:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_4468:
; Line 3273:	                    gen_codes(op_mov, q->ans->size, apal, apll); 

	T153(EAX).A =   _apll:LINK(-24).A
	PARM	T153(EAX).A
	T154(EAX).A =   _apal:LINK(-16).A
	PARM	T154(EAX).A
	T155(EAX).A =   _q:LINK(4).A
	T156(EAX).A =   *(T155(EAX) + 40).A.A
	T157(EAX).I =   *(T156(EAX) + 19).A.C
	PARM	T157(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3274:	                    gen_codes(op_imul, q->ans->size, apal, aprl); 

	T158(EAX).A =   _aprl:LINK(-32).A
	PARM	T158(EAX).A
	T159(EAX).A =   _apal:LINK(-16).A
	PARM	T159(EAX).A
	T160(EAX).A =   _q:LINK(4).A
	T161(EAX).A =   *(T160(EAX) + 40).A.A
	T162(EAX).I =   *(T161(EAX) + 19).A.C
	PARM	T162(EAX).I
	PARM	#D1.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3275:	                } 

	BLOCK END
	BLOCK 128

L_4469:
	DBG BLOCK END
	BLOCK END
	BLOCK 129

L_4470:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_4465:
	BLOCK END
	BLOCK 131

L_4471:
	DBG BLOCK END
	BLOCK END
	BLOCK 132

L_4472:
	DBG BLOCK END
	BLOCK END
	BLOCK 133

L_4457:
	BLOCK END
	BLOCK 134

L_4473:
	DBG BLOCK END
; Line 3276:	            } 

	BLOCK END
	BLOCK 135

L_4474:
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_4475:
	DBG BLOCK END
	BLOCK END
	BLOCK 137

L_4448:
	BLOCK END
	BLOCK 138

L_4476:
	DBG BLOCK END
; Line 3277:	        } 

	BLOCK END
	BLOCK 139

L_4477:
	DBG BLOCK END
	BLOCK END
	BLOCK 140

L_4478:
	DBG BLOCK END
	BLOCK END
	BLOCK 141

L_4439:
	BLOCK END
	BLOCK 142

L_4479:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_4480:
	DBG BLOCK END
	BLOCK END
	BLOCK 144

L_4431:
	BLOCK END
	BLOCK 145

L_4481:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_4482:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_4411:
	BLOCK END
	BLOCK 148

L_4483:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_4484:
	DBG BLOCK END
	BLOCK END
	BLOCK 150

L_4405:
	BLOCK END
	BLOCK 151

L_4485:
	DBG BLOCK END
; Line 3278:	    } 

	BLOCK END
	BLOCK 152

L_4486:
	DBG BLOCK END
	BLOCK END
	BLOCK 153

L_4487:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_4396:
	BLOCK END
	BLOCK 155

L_4488:
	DBG BLOCK END
	BLOCK END
	BLOCK 156

L_4489:
	DBG BLOCK END
	BLOCK END
	BLOCK 157

L_4388:
	BLOCK END
	BLOCK 158

L_4490:
	DBG BLOCK END
; Line 3279:	} 

	BLOCK END
	BLOCK 159

L_4491:
	DBG BLOCK END
	BLOCK END
	BLOCK 160

L_4359:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_lsr$qp15@Optimizer@quad


global @occx86@asm_lsr$qp15@Optimizer@quad
@occx86@asm_lsr$qp15@Optimizer@quad:
; Line 3281:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#28.UI
	BLOCK END
	BLOCK 2

L_4498:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4500:
; Line 3282:	    enum e_opcode opa, opl, opr; 

	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3283:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T5(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T5(EAX).A
	VAR START	apah
	T6(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T6(EAX).A
	VAR START	apll
	T7(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T7(EAX).A
	VAR START	aplh
	T8(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T8(EAX).A
	VAR START	aprl
	T9(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T9(EAX).A
	VAR START	aprh
	T10(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T10(EAX).A
; Line 3284:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T11(EAX).A =   #_aplh:LINK(-28).A
	PARM	T11(EAX).A
	T12(EAX).A =   #_apll:LINK(-24).A
	PARM	T12(EAX).A
	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).A =   *(T13(EAX) + 4+0).A.A
	PARM	T14(EAX).A
	T15(EAX).A =   #_opl:LINK(-8).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3285:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T17(EAX).A =   #_aprh:LINK(-36).A
	PARM	T17(EAX).A
	T18(EAX).A =   #_aprl:LINK(-32).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	T20(EAX).A =   *(T19(EAX) + 8+0).A.A
	PARM	T20(EAX).A
	T21(EAX).A =   #_opr:LINK(-12).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3286:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T23(EAX).A =   #_apah:LINK(-20).A
	PARM	T23(EAX).A
	T24(EAX).A =   #_apal:LINK(-16).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	T26(EAX).A =   *(T25(EAX) + 40).A.A
	PARM	T26(EAX).A
	T27(EAX).A =   #_opa:LINK(-4).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	PARM	T28(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4502:
; Line 3287:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).A =   *(T29(EAX) + 40).A.A
	T31(AL).C =   *(T30(EAX) + 19).A.C
	CONDGO	L_4556:PC ; T31(AL).C == #B.C
	BLOCK END
	BLOCK 5
	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(EAX).I =   *(T33(EAX) + 19).A.C
	CONDGO	L_4501:PC ; T34(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_4556:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4503:
; Line 3288:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_4504:
; Line 3289:	        if (aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_4506:
	T39(EAX).A =   _aprl:LINK(-32).A
	T40(EAX).I =   *(T39(EAX) + 0).A.I
	CONDGO	L_4505:PC ; T40(EAX).I != #10.I
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_4507:
; Line 3290:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4508:
; Line 3291:	            int n = aprl->offset->i; 

	VAR START	n
	T41(EAX).A =   _aprl:LINK(-32).A
	T42(EAX).A =   *(T41(EAX) + C).A.A
	T43(EAX).I =   *(T42(EAX) + 8).A.LL
	_n:LINK(-40).I =   T43(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_4510:
; Line 3292:	            if (n >= 32) 

	T44(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4509:PC ; T44(EAX).I S< #20.I
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4511:
; Line 3293:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4512:
; Line 3294:	                n -= 32; 

	_n:LINK(-40).I = _n:LINK(-40).I - #20.I
; Line 3295:	                liveQualify(apah, apal, apah); 

	T45(EAX).A =   _apah:LINK(-20).A
	PARM	T45(EAX).A
	T46(EAX).A =   _apal:LINK(-16).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apah:LINK(-20).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3296:	                gen_codes(op_mov, ISZ_UINT, apal, aplh); 

	T48(EAX).A =   _aplh:LINK(-28).A
	PARM	T48(EAX).A
	T49(EAX).A =   _apal:LINK(-16).A
	PARM	T49(EAX).A
	T50(EAX).UI =   #7.C
	PARM	T50(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3297:	                gen_codes(op_mov, ISZ_UINT, apah, aimmed(0)); 

	T51(EDX:EAX).ULL =   #0.C
	PARM	T51(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T52(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T52(EAX).A
	T53(EAX).A =   _apah:LINK(-20).A
	PARM	T53(EAX).A
	T54(EAX).UI =   #7.C
	PARM	T54(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4514:
; Line 3298:	                if (n) 

	T55(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4513:PC ; T55(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4515:
; Line 3299:	                    gen_codes(op_shr, ISZ_UINT, apal, aimmed(n)); 

	T56(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T56(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T57(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T57(EAX).A
	T58(EAX).A =   _apal:LINK(-16).A
	PARM	T58(EAX).A
	T59(EAX).UI =   #7.C
	PARM	T59(EAX).UI
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 20

L_4516:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_4513:
	BLOCK END
	BLOCK 22

L_4517:
	DBG BLOCK END
; Line 3300:	            } 

	BLOCK END
	BLOCK 23

L_4518:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_4520:
	DBG BLOCK END
	GOTO	L_4519:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4521:
	BLOCK END
	BLOCK 27

L_4509:
; Line 3301:	            else 

; Line 3302:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_4522:
; Line 3303:	                if (!equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_4524:
	T60(EAX).A =   _apll:LINK(-24).A
	PARM	T60(EAX).A
	T61(EAX).A =   _apal:LINK(-16).A
	PARM	T61(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T62(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4523:PC ; T62(EAX).I != #0.C
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_4525:
; Line 3304:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_4526:
; Line 3305:	                    func_axdx(op_mov, apal, apah, apll, aplh); 

	T63(EAX).A =   _aplh:LINK(-28).A
	PARM	T63(EAX).A
	T64(EAX).A =   _apll:LINK(-24).A
	PARM	T64(EAX).A
	T65(EAX).A =   _apah:LINK(-20).A
	PARM	T65(EAX).A
	T66(EAX).A =   _apal:LINK(-16).A
	PARM	T66(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3306:	                } 

	BLOCK END
	BLOCK 33

L_4527:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_4528:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_4523:
	BLOCK END
	BLOCK 36

L_4529:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_4531:
; Line 3307:	                if (n) 

	T67(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4530:PC ; T67(EAX).I == #0.C
	BLOCK END
	BLOCK 38
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_4532:
; Line 3308:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_4533:
; Line 3309:	                    gen_lshift(op_shrd, apal, apah, aimmed(n)); 

	T68(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T68(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T69(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T69(EAX).A
	T70(EAX).A =   _apah:LINK(-20).A
	PARM	T70(EAX).A
	T71(EAX).A =   _apal:LINK(-16).A
	PARM	T71(EAX).A
	PARM	#17C.I
	TAG
	GOSUB	#@occx86@gen_lshift$q8e_opcodep5amodepn1pn1:PC.UI
	PARMADJ	#10.N
; Line 3310:	                    gen_codes(op_shr, ISZ_UINT, apah, aimmed(n)); 

	T72(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T72(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T73(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T73(EAX).A
	T74(EAX).A =   _apah:LINK(-20).A
	PARM	T74(EAX).A
	T75(EAX).UI =   #7.C
	PARM	T75(EAX).UI
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3311:	                } 

	BLOCK END
	BLOCK 41

L_4534:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_4535:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_4530:
	BLOCK END
	BLOCK 44

L_4536:
	DBG BLOCK END
; Line 3312:	            } 

	BLOCK END
	BLOCK 45

L_4537:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_4538:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_4519:
	BLOCK END
	BLOCK 48

L_4539:
	DBG BLOCK END
; Line 3313:	        } 

	BLOCK END
	BLOCK 49

L_4540:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_4542:
	DBG BLOCK END
	GOTO	L_4541:PC
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_4543:
	BLOCK END
	BLOCK 53

L_4505:
; Line 3314:	        else 

; Line 3315:	            diag("asm_lsr: long long shift by non-const"); 

	PARM	#L_4497:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 54

L_4544:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_4541:
	BLOCK END
	BLOCK 56

L_4545:
	DBG BLOCK END
; Line 3316:	    } 

	BLOCK END
	BLOCK 57

L_4546:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_4548:
	DBG BLOCK END
	GOTO	L_4547:PC
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_4549:
	BLOCK END
	BLOCK 61

L_4501:
; Line 3317:	    else 

; Line 3318:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_4550:
; Line 3319:	        gen_shift(q, op_shr, apal, apll, aprl); 

	T35(EAX).A =   _aprl:LINK(-32).A
	PARM	T35(EAX).A
	T36(EAX).A =   _apll:LINK(-24).A
	PARM	T36(EAX).A
	T37(EAX).A =   _apal:LINK(-16).A
	PARM	T37(EAX).A
	PARM	#17B.I
	T38(EAX).A =   _q:LINK(4).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@occx86@gen_shift$qp15@Optimizer@quad8e_opcodep5amodepn2pn2:PC.UI
	PARMADJ	#14.N
; Line 3320:	    } 

	BLOCK END
	BLOCK 63

L_4551:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_4552:
	DBG BLOCK END
	BLOCK END
	BLOCK 65

L_4547:
	BLOCK END
	BLOCK 66

L_4553:
	DBG BLOCK END
; Line 3321:	} 

	BLOCK END
	BLOCK 67

L_4554:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_4499:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_lsl$qp15@Optimizer@quad


global @occx86@asm_lsl$qp15@Optimizer@quad
@occx86@asm_lsl$qp15@Optimizer@quad:
; Line 3323:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#28.UI
	BLOCK END
	BLOCK 2

L_4560:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4562:
; Line 3324:	    enum e_opcode opa, opl, opr; 

	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3325:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T5(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T5(EAX).A
	VAR START	apah
	T6(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T6(EAX).A
	VAR START	apll
	T7(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T7(EAX).A
	VAR START	aplh
	T8(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T8(EAX).A
	VAR START	aprl
	T9(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T9(EAX).A
	VAR START	aprh
	T10(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T10(EAX).A
; Line 3326:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T11(EAX).A =   #_aplh:LINK(-28).A
	PARM	T11(EAX).A
	T12(EAX).A =   #_apll:LINK(-24).A
	PARM	T12(EAX).A
	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).A =   *(T13(EAX) + 4+0).A.A
	PARM	T14(EAX).A
	T15(EAX).A =   #_opl:LINK(-8).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3327:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T17(EAX).A =   #_aprh:LINK(-36).A
	PARM	T17(EAX).A
	T18(EAX).A =   #_aprl:LINK(-32).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	T20(EAX).A =   *(T19(EAX) + 8+0).A.A
	PARM	T20(EAX).A
	T21(EAX).A =   #_opr:LINK(-12).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3328:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T23(EAX).A =   #_apah:LINK(-20).A
	PARM	T23(EAX).A
	T24(EAX).A =   #_apal:LINK(-16).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	T26(EAX).A =   *(T25(EAX) + 40).A.A
	PARM	T26(EAX).A
	T27(EAX).A =   #_opa:LINK(-4).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	PARM	T28(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4564:
; Line 3329:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).A =   *(T29(EAX) + 40).A.A
	T31(AL).C =   *(T30(EAX) + 19).A.C
	CONDGO	L_4611:PC ; T31(AL).C == #B.C
	BLOCK END
	BLOCK 5
	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(EAX).I =   *(T33(EAX) + 19).A.C
	CONDGO	L_4563:PC ; T34(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_4611:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4565:
; Line 3330:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_4566:
; Line 3331:	        if (aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_4568:
	T39(EAX).A =   _aprl:LINK(-32).A
	T40(EAX).I =   *(T39(EAX) + 0).A.I
	CONDGO	L_4567:PC ; T40(EAX).I != #10.I
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_4569:
; Line 3332:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4570:
; Line 3333:	            int n = aprl->offset->i; 

	VAR START	n
	T41(EAX).A =   _aprl:LINK(-32).A
	T42(EAX).A =   *(T41(EAX) + C).A.A
	T43(EAX).I =   *(T42(EAX) + 8).A.LL
	_n:LINK(-40).I =   T43(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_4572:
; Line 3334:	            if (n >= 32) 

	T44(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4571:PC ; T44(EAX).I S< #20.I
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4573:
; Line 3335:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4574:
; Line 3336:	                n -= 32; 

	_n:LINK(-40).I = _n:LINK(-40).I - #20.I
; Line 3337:	                liveQualify(apal, apal, apah); 

	T45(EAX).A =   _apah:LINK(-20).A
	PARM	T45(EAX).A
	T46(EAX).A =   _apal:LINK(-16).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apal:LINK(-16).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3338:	                liveQualify(apah, apal, apah); 

	T48(EAX).A =   _apah:LINK(-20).A
	PARM	T48(EAX).A
	T49(EAX).A =   _apal:LINK(-16).A
	PARM	T49(EAX).A
	T50(EAX).A =   _apah:LINK(-20).A
	PARM	T50(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3339:	                gen_codes(op_mov, ISZ_UINT, apah, apll); 

	T51(EAX).A =   _apll:LINK(-24).A
	PARM	T51(EAX).A
	T52(EAX).A =   _apah:LINK(-20).A
	PARM	T52(EAX).A
	T53(EAX).UI =   #7.C
	PARM	T53(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3340:	                gen_codes(op_mov, ISZ_UINT, apal, aimmed(0)); 

	T54(EDX:EAX).ULL =   #0.C
	PARM	T54(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T55(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T55(EAX).A
	T56(EAX).A =   _apal:LINK(-16).A
	PARM	T56(EAX).A
	T57(EAX).UI =   #7.C
	PARM	T57(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4576:
; Line 3341:	                if (n) 

	T58(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4575:PC ; T58(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4577:
; Line 3342:	                    gen_code(op_shl, apah, aimmed(n)); 

	T59(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T59(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T60(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T60(EAX).A
	T61(EAX).A =   _apah:LINK(-20).A
	PARM	T61(EAX).A
	PARM	#179.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 20

L_4578:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_4575:
	BLOCK END
	BLOCK 22

L_4579:
	DBG BLOCK END
; Line 3343:	            } 

	BLOCK END
	BLOCK 23

L_4580:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_4582:
	DBG BLOCK END
	GOTO	L_4581:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4583:
	BLOCK END
	BLOCK 27

L_4571:
; Line 3344:	            else 

; Line 3345:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_4584:
; Line 3346:	                liveQualify(apal, apal, apah); 

	T62(EAX).A =   _apah:LINK(-20).A
	PARM	T62(EAX).A
	T63(EAX).A =   _apal:LINK(-16).A
	PARM	T63(EAX).A
	T64(EAX).A =   _apal:LINK(-16).A
	PARM	T64(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3347:	                liveQualify(apah, apal, apah); 

	T65(EAX).A =   _apah:LINK(-20).A
	PARM	T65(EAX).A
	T66(EAX).A =   _apal:LINK(-16).A
	PARM	T66(EAX).A
	T67(EAX).A =   _apah:LINK(-20).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_4586:
; Line 3348:	                if (!equal_address(apal, apll)) 

	T68(EAX).A =   _apll:LINK(-24).A
	PARM	T68(EAX).A
	T69(EAX).A =   _apal:LINK(-16).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T70(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4585:PC ; T70(EAX).I != #0.C
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_4587:
; Line 3349:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_4588:
; Line 3350:	                    func_axdx(op_mov, apal, apah, apll, aplh); 

	T71(EAX).A =   _aplh:LINK(-28).A
	PARM	T71(EAX).A
	T72(EAX).A =   _apll:LINK(-24).A
	PARM	T72(EAX).A
	T73(EAX).A =   _apah:LINK(-20).A
	PARM	T73(EAX).A
	T74(EAX).A =   _apal:LINK(-16).A
	PARM	T74(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3351:	                } 

	BLOCK END
	BLOCK 33

L_4589:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_4590:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_4585:
	BLOCK END
	BLOCK 36

L_4591:
	DBG BLOCK END
; Line 3352:	                gen_lshift(op_shld, apah, apal, aimmed(n)); 

	T75(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T75(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T76(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T76(EAX).A
	T77(EAX).A =   _apal:LINK(-16).A
	PARM	T77(EAX).A
	T78(EAX).A =   _apah:LINK(-20).A
	PARM	T78(EAX).A
	PARM	#17A.I
	TAG
	GOSUB	#@occx86@gen_lshift$q8e_opcodep5amodepn1pn1:PC.UI
	PARMADJ	#10.N
; Line 3353:	                gen_codes(op_shl, ISZ_UINT, apal, aimmed(n)); 

	T79(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T79(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T80(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T80(EAX).A
	T81(EAX).A =   _apal:LINK(-16).A
	PARM	T81(EAX).A
	T82(EAX).UI =   #7.C
	PARM	T82(EAX).UI
	PARM	#179.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3354:	            } 

	BLOCK END
	BLOCK 37

L_4592:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_4593:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_4581:
	BLOCK END
	BLOCK 40

L_4594:
	DBG BLOCK END
; Line 3355:	        } 

	BLOCK END
	BLOCK 41

L_4595:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_4597:
	DBG BLOCK END
	GOTO	L_4596:PC
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_4598:
	BLOCK END
	BLOCK 45

L_4567:
; Line 3356:	        else 

; Line 3357:	            diag("asm_lsr: long long shift by non-const"); 

	PARM	#L_4497:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 46

L_4599:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_4596:
	BLOCK END
	BLOCK 48

L_4600:
	DBG BLOCK END
; Line 3358:	    } 

	BLOCK END
	BLOCK 49

L_4601:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_4603:
	DBG BLOCK END
	GOTO	L_4602:PC
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_4604:
	BLOCK END
	BLOCK 53

L_4563:
; Line 3359:	    else 

; Line 3360:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_4605:
; Line 3361:	        gen_shift(q, op_shl, apal, apll, aprl); 

	T35(EAX).A =   _aprl:LINK(-32).A
	PARM	T35(EAX).A
	T36(EAX).A =   _apll:LINK(-24).A
	PARM	T36(EAX).A
	T37(EAX).A =   _apal:LINK(-16).A
	PARM	T37(EAX).A
	PARM	#179.I
	T38(EAX).A =   _q:LINK(4).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@occx86@gen_shift$qp15@Optimizer@quad8e_opcodep5amodepn2pn2:PC.UI
	PARMADJ	#14.N
; Line 3362:	    } 

	BLOCK END
	BLOCK 55

L_4606:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_4607:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_4602:
	BLOCK END
	BLOCK 58

L_4608:
	DBG BLOCK END
; Line 3363:	} 

	BLOCK END
	BLOCK 59

L_4609:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_4561:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_asr$qp15@Optimizer@quad


global @occx86@asm_asr$qp15@Optimizer@quad
@occx86@asm_asr$qp15@Optimizer@quad:
; Line 3365:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#28.UI
	BLOCK END
	BLOCK 2

L_4616:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4618:
; Line 3366:	    enum e_opcode opa, opl, opr; 

	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3367:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T5(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T5(EAX).A
	VAR START	apah
	T6(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T6(EAX).A
	VAR START	apll
	T7(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T7(EAX).A
	VAR START	aplh
	T8(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T8(EAX).A
	VAR START	aprl
	T9(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T9(EAX).A
	VAR START	aprh
	T10(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T10(EAX).A
; Line 3368:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T11(EAX).A =   #_aplh:LINK(-28).A
	PARM	T11(EAX).A
	T12(EAX).A =   #_apll:LINK(-24).A
	PARM	T12(EAX).A
	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).A =   *(T13(EAX) + 4+0).A.A
	PARM	T14(EAX).A
	T15(EAX).A =   #_opl:LINK(-8).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3369:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T17(EAX).A =   #_aprh:LINK(-36).A
	PARM	T17(EAX).A
	T18(EAX).A =   #_aprl:LINK(-32).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	T20(EAX).A =   *(T19(EAX) + 8+0).A.A
	PARM	T20(EAX).A
	T21(EAX).A =   #_opr:LINK(-12).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3370:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T23(EAX).A =   #_apah:LINK(-20).A
	PARM	T23(EAX).A
	T24(EAX).A =   #_apal:LINK(-16).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	T26(EAX).A =   *(T25(EAX) + 40).A.A
	PARM	T26(EAX).A
	T27(EAX).A =   #_opa:LINK(-4).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	PARM	T28(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4620:
; Line 3371:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).A =   *(T29(EAX) + 40).A.A
	T31(AL).C =   *(T30(EAX) + 19).A.C
	CONDGO	L_4674:PC ; T31(AL).C == #B.C
	BLOCK END
	BLOCK 5
	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(EAX).I =   *(T33(EAX) + 19).A.C
	CONDGO	L_4619:PC ; T34(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_4674:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4621:
; Line 3372:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_4622:
; Line 3373:	        if (aprl->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_4624:
	T39(EAX).A =   _aprl:LINK(-32).A
	T40(EAX).I =   *(T39(EAX) + 0).A.I
	CONDGO	L_4623:PC ; T40(EAX).I != #10.I
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_4625:
; Line 3374:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4626:
; Line 3375:	            int n = aprl->offset->i; 

	VAR START	n
	T41(EAX).A =   _aprl:LINK(-32).A
	T42(EAX).A =   *(T41(EAX) + C).A.A
	T43(EAX).I =   *(T42(EAX) + 8).A.LL
	_n:LINK(-40).I =   T43(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_4628:
; Line 3376:	            if (n >= 32) 

	T44(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4627:PC ; T44(EAX).I S< #20.I
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4629:
; Line 3377:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4630:
; Line 3378:	                n -= 32; 

	_n:LINK(-40).I = _n:LINK(-40).I - #20.I
; Line 3379:	                liveQualify(apal, apal, apah); 

	T45(EAX).A =   _apah:LINK(-20).A
	PARM	T45(EAX).A
	T46(EAX).A =   _apal:LINK(-16).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apal:LINK(-16).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3380:	                liveQualify(apah, apal, apah); 

	T48(EAX).A =   _apah:LINK(-20).A
	PARM	T48(EAX).A
	T49(EAX).A =   _apal:LINK(-16).A
	PARM	T49(EAX).A
	T50(EAX).A =   _apah:LINK(-20).A
	PARM	T50(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3381:	                func_axdx(op_mov, apal, apah, aplh, aplh); 

	T51(EAX).A =   _aplh:LINK(-28).A
	PARM	T51(EAX).A
	T52(EAX).A =   _aplh:LINK(-28).A
	PARM	T52(EAX).A
	T53(EAX).A =   _apah:LINK(-20).A
	PARM	T53(EAX).A
	T54(EAX).A =   _apal:LINK(-16).A
	PARM	T54(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3382:	                gen_codes(op_sar, ISZ_UINT, apah, aimmed(31)); 

	T55(EDX:EAX).ULL =   #1F.I
	PARM	T55(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T56(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T56(EAX).A
	T57(EAX).A =   _apah:LINK(-20).A
	PARM	T57(EAX).A
	T58(EAX).UI =   #7.C
	PARM	T58(EAX).UI
	PARM	#152.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4632:
; Line 3383:	                if (n) 

	T59(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4631:PC ; T59(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4633:
; Line 3384:	                    gen_code(op_sar, apal, aimmed(n)); 

	T60(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T60(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T61(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T61(EAX).A
	T62(EAX).A =   _apal:LINK(-16).A
	PARM	T62(EAX).A
	PARM	#152.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 20

L_4634:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_4631:
	BLOCK END
	BLOCK 22

L_4635:
	DBG BLOCK END
; Line 3385:	            } 

	BLOCK END
	BLOCK 23

L_4636:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_4638:
	DBG BLOCK END
	GOTO	L_4637:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4639:
	BLOCK END
	BLOCK 27

L_4627:
; Line 3386:	            else 

; Line 3387:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_4640:
; Line 3388:	                if (!equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_4642:
	T63(EAX).A =   _apll:LINK(-24).A
	PARM	T63(EAX).A
	T64(EAX).A =   _apal:LINK(-16).A
	PARM	T64(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T65(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4641:PC ; T65(EAX).I != #0.C
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_4643:
; Line 3389:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_4644:
; Line 3390:	                    liveQualify(apah, apal, apah); 

	T66(EAX).A =   _apah:LINK(-20).A
	PARM	T66(EAX).A
	T67(EAX).A =   _apal:LINK(-16).A
	PARM	T67(EAX).A
	T68(EAX).A =   _apah:LINK(-20).A
	PARM	T68(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3391:	                    func_axdx(op_mov, apal, apah, apll, aplh); 

	T69(EAX).A =   _aplh:LINK(-28).A
	PARM	T69(EAX).A
	T70(EAX).A =   _apll:LINK(-24).A
	PARM	T70(EAX).A
	T71(EAX).A =   _apah:LINK(-20).A
	PARM	T71(EAX).A
	T72(EAX).A =   _apal:LINK(-16).A
	PARM	T72(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3392:	                } 

	BLOCK END
	BLOCK 33

L_4645:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_4646:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_4641:
	BLOCK END
	BLOCK 36

L_4647:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_4649:
; Line 3393:	                if (n) 

	T73(EAX).I =   _n:LINK(-40).I
	CONDGO	L_4648:PC ; T73(EAX).I == #0.C
	BLOCK END
	BLOCK 38
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_4650:
; Line 3394:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_4651:
; Line 3395:	                    liveQualify(apah, apal, apah); 

	T74(EAX).A =   _apah:LINK(-20).A
	PARM	T74(EAX).A
	T75(EAX).A =   _apal:LINK(-16).A
	PARM	T75(EAX).A
	T76(EAX).A =   _apah:LINK(-20).A
	PARM	T76(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3396:	                    gen_lshift(op_shrd, apal, apah, aimmed(n)); 

	T77(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T77(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T78(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T78(EAX).A
	T79(EAX).A =   _apah:LINK(-20).A
	PARM	T79(EAX).A
	T80(EAX).A =   _apal:LINK(-16).A
	PARM	T80(EAX).A
	PARM	#17C.I
	TAG
	GOSUB	#@occx86@gen_lshift$q8e_opcodep5amodepn1pn1:PC.UI
	PARMADJ	#10.N
; Line 3397:	                    gen_codes(op_sar, ISZ_UINT, apah, aimmed(n)); 

	T81(EDX:EAX).ULL =   _n:LINK(-40).I
	PARM	T81(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T82(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T82(EAX).A
	T83(EAX).A =   _apah:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).UI =   #7.C
	PARM	T84(EAX).UI
	PARM	#152.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3398:	                } 

	BLOCK END
	BLOCK 41

L_4652:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_4653:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_4648:
	BLOCK END
	BLOCK 44

L_4654:
	DBG BLOCK END
; Line 3399:	            } 

	BLOCK END
	BLOCK 45

L_4655:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_4656:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_4637:
	BLOCK END
	BLOCK 48

L_4657:
	DBG BLOCK END
; Line 3400:	        } 

	BLOCK END
	BLOCK 49

L_4658:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_4660:
	DBG BLOCK END
	GOTO	L_4659:PC
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_4661:
	BLOCK END
	BLOCK 53

L_4623:
; Line 3401:	        else 

; Line 3402:	            diag("asm_asr: long long shift by non-const"); 

	PARM	#L_4615:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 54

L_4662:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_4659:
	BLOCK END
	BLOCK 56

L_4663:
	DBG BLOCK END
; Line 3403:	    } 

	BLOCK END
	BLOCK 57

L_4664:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_4666:
	DBG BLOCK END
	GOTO	L_4665:PC
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_4667:
	BLOCK END
	BLOCK 61

L_4619:
; Line 3404:	    else 

; Line 3405:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_4668:
; Line 3406:	        gen_shift(q, op_sar, apal, apll, aprl); 

	T35(EAX).A =   _aprl:LINK(-32).A
	PARM	T35(EAX).A
	T36(EAX).A =   _apll:LINK(-24).A
	PARM	T36(EAX).A
	T37(EAX).A =   _apal:LINK(-16).A
	PARM	T37(EAX).A
	PARM	#152.I
	T38(EAX).A =   _q:LINK(4).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@occx86@gen_shift$qp15@Optimizer@quad8e_opcodep5amodepn2pn2:PC.UI
	PARMADJ	#14.N
; Line 3407:	    } 

	BLOCK END
	BLOCK 63

L_4669:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_4670:
	DBG BLOCK END
	BLOCK END
	BLOCK 65

L_4665:
	BLOCK END
	BLOCK 66

L_4671:
	DBG BLOCK END
; Line 3408:	} 

	BLOCK END
	BLOCK 67

L_4672:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_4617:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_neg$qp15@Optimizer@quad


global @occx86@asm_neg$qp15@Optimizer@quad
@occx86@asm_neg$qp15@Optimizer@quad:
; Line 3410:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_4678:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4680:
; Line 3411:	    enum e_opcode opa, opl; 

	VAR START	opa
	VAR START	opl
	VAR START	apal
; Line 3412:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T5(EAX).A =   #0.UI
	_apal:LINK(-12).A =   T5(EAX).A
	VAR START	apah
	T6(EAX).A =   #0.UI
	_apah:LINK(-16).A =   T6(EAX).A
	VAR START	apll
	T7(EAX).A =   #0.UI
	_apll:LINK(-20).A =   T7(EAX).A
	VAR START	aplh
	T8(EAX).A =   #0.UI
	_aplh:LINK(-24).A =   T8(EAX).A
	VAR START	aprl
	T9(EAX).A =   #0.UI
	_aprl:LINK(-28).A =   T9(EAX).A
	VAR START	aprh
	T10(EAX).A =   #0.UI
	_aprh:LINK(-32).A =   T10(EAX).A
; Line 3413:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T11(EAX).A =   #_aplh:LINK(-24).A
	PARM	T11(EAX).A
	T12(EAX).A =   #_apll:LINK(-20).A
	PARM	T12(EAX).A
	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).A =   *(T13(EAX) + 4+0).A.A
	PARM	T14(EAX).A
	T15(EAX).A =   #_opl:LINK(-8).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3414:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T17(EAX).A =   #_apah:LINK(-16).A
	PARM	T17(EAX).A
	T18(EAX).A =   #_apal:LINK(-12).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	T20(EAX).A =   *(T19(EAX) + 40).A.A
	PARM	T20(EAX).A
	T21(EAX).A =   #_opa:LINK(-4).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4682:
; Line 3415:	    if (q->ans->size >= ISZ_CFLOAT) 

	T23(EAX).A =   _q:LINK(4).A
	T24(EAX).A =   *(T23(EAX) + 40).A.A
	T25(EAX).I =   *(T24(EAX) + 19).A.C
	CONDGO	L_4681:PC ; T25(EAX).I S< #18.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_4683:
; Line 3416:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4684:
; Line 3417:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_4686:
	T26(EAX).A =   _apll:LINK(-20).A
	PARM	T26(EAX).A
	T27(EAX).A =   _apal:LINK(-12).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T28(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4685:PC ; T28(EAX).I == #0.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_4687:
; Line 3418:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_4688:
; Line 3419:	            floatchs(apal, q->ans->size); 

	T29(EAX).A =   _q:LINK(4).A
	T30(EAX).A =   *(T29(EAX) + 40).A.A
	T31(EAX).I =   *(T30(EAX) + 19).A.C
	PARM	T31(EAX).I
	T32(EAX).A =   _apal:LINK(-12).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@occx86@floatchs$qp5amodei:PC.UI
	PARMADJ	#8.N
; Line 3420:	            floatchs(apah, q->ans->size); 

	T33(EAX).A =   _q:LINK(4).A
	T34(EAX).A =   *(T33(EAX) + 40).A.A
	T35(EAX).I =   *(T34(EAX) + 19).A.C
	PARM	T35(EAX).I
	T36(EAX).A =   _apah:LINK(-16).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@occx86@floatchs$qp5amodei:PC.UI
	PARMADJ	#8.N
; Line 3421:	        } 

	BLOCK END
	BLOCK 12

L_4689:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_4691:
	DBG BLOCK END
	GOTO	L_4690:PC
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4692:
	BLOCK END
	BLOCK 16

L_4685:
; Line 3422:	        else 

; Line 3423:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4693:
; Line 3424:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T37(EAX).A =   _apll:LINK(-20).A
	PARM	T37(EAX).A
	T38(EAX).A =   _apal:LINK(-12).A
	PARM	T38(EAX).A
	T39(EAX).A =   _q:LINK(4).A
	T40(EAX).A =   *(T39(EAX) + 40).A.A
	T41(EAX).I =   *(T40(EAX) + 19).A.C
	PARM	T41(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3425:	            floatchs(apal, q->ans->size); 

	T42(EAX).A =   _q:LINK(4).A
	T43(EAX).A =   *(T42(EAX) + 40).A.A
	T44(EAX).I =   *(T43(EAX) + 19).A.C
	PARM	T44(EAX).I
	T45(EAX).A =   _apal:LINK(-12).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@occx86@floatchs$qp5amodei:PC.UI
	PARMADJ	#8.N
; Line 3426:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, aplh); 

	T46(EAX).A =   _aplh:LINK(-24).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apal:LINK(-12).A
	PARM	T47(EAX).A
	T48(EAX).A =   _q:LINK(4).A
	T49(EAX).A =   *(T48(EAX) + 40).A.A
	T50(EAX).I =   *(T49(EAX) + 19).A.C
	PARM	T50(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3427:	            floatchs(apah, q->ans->size); 

	T51(EAX).A =   _q:LINK(4).A
	T52(EAX).A =   *(T51(EAX) + 40).A.A
	T53(EAX).I =   *(T52(EAX) + 19).A.C
	PARM	T53(EAX).I
	T54(EAX).A =   _apah:LINK(-16).A
	PARM	T54(EAX).A
	TAG
	GOSUB	#@occx86@floatchs$qp5amodei:PC.UI
	PARMADJ	#8.N
; Line 3428:	        } 

	BLOCK END
	BLOCK 18

L_4694:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_4695:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_4690:
	BLOCK END
	BLOCK 21

L_4696:
	DBG BLOCK END
; Line 3429:	    } 

	BLOCK END
	BLOCK 22

L_4697:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_4699:
	DBG BLOCK END
	GOTO	L_4698:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_4700:
	BLOCK END
	BLOCK 26

L_4681:
; Line 3430:	    else if (q->ans->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_4702:
	T55(EAX).A =   _q:LINK(4).A
	T56(EAX).A =   *(T55(EAX) + 40).A.A
	T57(EAX).I =   *(T56(EAX) + 19).A.C
	CONDGO	L_4701:PC ; T57(EAX).I S< #12.C
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_4703:
; Line 3431:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_4704:
; Line 3432:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_4706:
	T58(EAX).A =   _apll:LINK(-20).A
	PARM	T58(EAX).A
	T59(EAX).A =   _apal:LINK(-12).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T60(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4705:PC ; T60(EAX).I == #0.C
	BLOCK END
	BLOCK 32
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_4707:
; Line 3433:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_4708:
; Line 3434:	            floatchs(apal, q->ans->size); 

	T61(EAX).A =   _q:LINK(4).A
	T62(EAX).A =   *(T61(EAX) + 40).A.A
	T63(EAX).I =   *(T62(EAX) + 19).A.C
	PARM	T63(EAX).I
	T64(EAX).A =   _apal:LINK(-12).A
	PARM	T64(EAX).A
	TAG
	GOSUB	#@occx86@floatchs$qp5amodei:PC.UI
	PARMADJ	#8.N
; Line 3435:	        } 

	BLOCK END
	BLOCK 35

L_4709:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_4711:
	DBG BLOCK END
	GOTO	L_4710:PC
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_4712:
	BLOCK END
	BLOCK 39

L_4705:
; Line 3436:	        else 

; Line 3437:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_4713:
; Line 3438:	            gen_code_sse(op_movss, op_movsd, q->ans->size, apal, apll); 

	T65(EAX).A =   _apll:LINK(-20).A
	PARM	T65(EAX).A
	T66(EAX).A =   _apal:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   _q:LINK(4).A
	T68(EAX).A =   *(T67(EAX) + 40).A.A
	T69(EAX).I =   *(T68(EAX) + 19).A.C
	PARM	T69(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3439:	            floatchs(apal, q->ans->size); 

	T70(EAX).A =   _q:LINK(4).A
	T71(EAX).A =   *(T70(EAX) + 40).A.A
	T72(EAX).I =   *(T71(EAX) + 19).A.C
	PARM	T72(EAX).I
	T73(EAX).A =   _apal:LINK(-12).A
	PARM	T73(EAX).A
	TAG
	GOSUB	#@occx86@floatchs$qp5amodei:PC.UI
	PARMADJ	#8.N
; Line 3440:	        } 

	BLOCK END
	BLOCK 41

L_4714:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_4715:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_4710:
	BLOCK END
	BLOCK 44

L_4716:
	DBG BLOCK END
; Line 3441:	    } 

	BLOCK END
	BLOCK 45

L_4717:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_4719:
	DBG BLOCK END
	GOTO	L_4718:PC
	BLOCK END
	BLOCK 47
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_4720:
	BLOCK END
	BLOCK 49

L_4701:
; Line 3442:	    else if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_4722:
	T74(EAX).A =   _q:LINK(4).A
	T75(EAX).A =   *(T74(EAX) + 40).A.A
	T76(AL).C =   *(T75(EAX) + 19).A.C
	CONDGO	L_4753:PC ; T76(AL).C == #B.C
	BLOCK END
	BLOCK 51
	T77(EAX).A =   _q:LINK(4).A
	T78(EAX).A =   *(T77(EAX) + 40).A.A
	T79(EAX).I =   *(T78(EAX) + 19).A.C
	CONDGO	L_4721:PC ; T79(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 52

L_4753:
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_4723:
; Line 3443:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_4724:
; Line 3444:	        if (!equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_4726:
	T96(EAX).A =   _apll:LINK(-20).A
	PARM	T96(EAX).A
	T97(EAX).A =   _apal:LINK(-12).A
	PARM	T97(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T98(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4725:PC ; T98(EAX).I != #0.C
	BLOCK END
	BLOCK 56
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_4727:
; Line 3445:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_4728:
; Line 3446:	            func_axdx(op_mov, apal, apah, apll, aplh); 

	T99(EAX).A =   _aplh:LINK(-24).A
	PARM	T99(EAX).A
	T100(EAX).A =   _apll:LINK(-20).A
	PARM	T100(EAX).A
	T101(EAX).A =   _apah:LINK(-16).A
	PARM	T101(EAX).A
	T102(EAX).A =   _apal:LINK(-12).A
	PARM	T102(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3447:	        } 

	BLOCK END
	BLOCK 59

L_4729:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_4730:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_4725:
	BLOCK END
	BLOCK 62

L_4731:
	DBG BLOCK END
; Line 3448:	        liveQualify(apah, apah, 0); 

	T103(EAX).A =   #0.C
	PARM	T103(EAX).A
	T104(EAX).A =   _apah:LINK(-16).A
	PARM	T104(EAX).A
	T105(EAX).A =   _apah:LINK(-16).A
	PARM	T105(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3449:	        liveQualify(apal, apah, 0); 

	T106(EAX).A =   #0.C
	PARM	T106(EAX).A
	T107(EAX).A =   _apah:LINK(-16).A
	PARM	T107(EAX).A
	T108(EAX).A =   _apal:LINK(-12).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3450:	        gen_codes(op_neg, ISZ_UINT, apah, 0); 

	T109(EAX).A =   #0.C
	PARM	T109(EAX).A
	T110(EAX).A =   _apah:LINK(-16).A
	PARM	T110(EAX).A
	T111(EAX).UI =   #7.C
	PARM	T111(EAX).UI
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3451:	        gen_codes(op_neg, ISZ_UINT, apal, 0); 

	T112(EAX).A =   #0.C
	PARM	T112(EAX).A
	T113(EAX).A =   _apal:LINK(-12).A
	PARM	T113(EAX).A
	T114(EAX).UI =   #7.C
	PARM	T114(EAX).UI
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3452:	        gen_codes(op_sbb, ISZ_UINT, apah, aimmed(0)); 

	T115(EDX:EAX).ULL =   #0.C
	PARM	T115(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T116(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T116(EAX).A
	T117(EAX).A =   _apah:LINK(-16).A
	PARM	T117(EAX).A
	T118(EAX).UI =   #7.C
	PARM	T118(EAX).UI
	PARM	#153.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3453:	    } 

	BLOCK END
	BLOCK 63

L_4732:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_4734:
	DBG BLOCK END
	GOTO	L_4733:PC
	BLOCK END
	BLOCK 65
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_4735:
	BLOCK END
	BLOCK 67

L_4721:
; Line 3454:	    else 

; Line 3455:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_4736:
; Line 3456:	        if (!equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_4738:
	T80(EAX).A =   _apll:LINK(-20).A
	PARM	T80(EAX).A
	T81(EAX).A =   _apal:LINK(-12).A
	PARM	T81(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T82(EAX).I =   RV.T4(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4737:PC ; T82(EAX).I != #0.C
	BLOCK END
	BLOCK 70
	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_4739:
; Line 3457:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_4740:
; Line 3458:	            liveQualify(apal, apal, 0); 

	T83(EAX).A =   #0.C
	PARM	T83(EAX).A
	T84(EAX).A =   _apal:LINK(-12).A
	PARM	T84(EAX).A
	T85(EAX).A =   _apal:LINK(-12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3459:	            gen_codes(op_mov, q->ans->size, apal, apll); 

	T86(EAX).A =   _apll:LINK(-20).A
	PARM	T86(EAX).A
	T87(EAX).A =   _apal:LINK(-12).A
	PARM	T87(EAX).A
	T88(EAX).A =   _q:LINK(4).A
	T89(EAX).A =   *(T88(EAX) + 40).A.A
	T90(EAX).I =   *(T89(EAX) + 19).A.C
	PARM	T90(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3460:	        } 

	BLOCK END
	BLOCK 73

L_4741:
	DBG BLOCK END
	BLOCK END
	BLOCK 74

L_4742:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_4737:
	BLOCK END
	BLOCK 76

L_4743:
	DBG BLOCK END
; Line 3461:	        gen_codes(op_neg, q->ans->size, apal, 0); 

	T91(EAX).A =   #0.C
	PARM	T91(EAX).A
	T92(EAX).A =   _apal:LINK(-12).A
	PARM	T92(EAX).A
	T93(EAX).A =   _q:LINK(4).A
	T94(EAX).A =   *(T93(EAX) + 40).A.A
	T95(EAX).I =   *(T94(EAX) + 19).A.C
	PARM	T95(EAX).I
	PARM	#128.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3462:	    } 

	BLOCK END
	BLOCK 77

L_4744:
	DBG BLOCK END
	BLOCK END
	BLOCK 78

L_4745:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_4733:
	BLOCK END
	BLOCK 80

L_4746:
	DBG BLOCK END
	BLOCK END
	BLOCK 81

L_4747:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_4718:
	BLOCK END
	BLOCK 83

L_4748:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_4749:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_4698:
	BLOCK END
	BLOCK 86

L_4750:
	DBG BLOCK END
; Line 3463:	} 

	BLOCK END
	BLOCK 87

L_4751:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_4679:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_not$qp15@Optimizer@quad


global @occx86@asm_not$qp15@Optimizer@quad
@occx86@asm_not$qp15@Optimizer@quad:
; Line 3465:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_4757:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4759:
; Line 3466:	    enum e_opcode opa, opl; 

	VAR START	opa
	VAR START	opl
	VAR START	apal
; Line 3467:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T2(EAX).A =   #0.UI
	_apal:LINK(-12).A =   T2(EAX).A
	VAR START	apah
	T3(EAX).A =   #0.UI
	_apah:LINK(-16).A =   T3(EAX).A
	VAR START	apll
	T4(EAX).A =   #0.UI
	_apll:LINK(-20).A =   T4(EAX).A
	VAR START	aplh
	T5(EAX).A =   #0.UI
	_aplh:LINK(-24).A =   T5(EAX).A
	VAR START	aprl
	T6(EAX).A =   #0.UI
	_aprl:LINK(-28).A =   T6(EAX).A
	VAR START	aprh
	T7(EAX).A =   #0.UI
	_aprh:LINK(-32).A =   T7(EAX).A
; Line 3468:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T8(EAX).A =   #_aplh:LINK(-24).A
	PARM	T8(EAX).A
	T9(EAX).A =   #_apll:LINK(-20).A
	PARM	T9(EAX).A
	T10(EAX).A =   _q:LINK(4).A
	T11(EAX).A =   *(T10(EAX) + 4+0).A.A
	PARM	T11(EAX).A
	T12(EAX).A =   #_opl:LINK(-8).A
	PARM	T12(EAX).A
	T13(EAX).A =   _q:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3469:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T14(EAX).A =   #_apah:LINK(-16).A
	PARM	T14(EAX).A
	T15(EAX).A =   #_apal:LINK(-12).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 40).A.A
	PARM	T17(EAX).A
	T18(EAX).A =   #_opa:LINK(-4).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4761:
; Line 3470:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T20(EAX).A =   _q:LINK(4).A
	T21(EAX).A =   *(T20(EAX) + 40).A.A
	T22(AL).C =   *(T21(EAX) + 19).A.C
	CONDGO	L_4788:PC ; T22(AL).C == #B.C
	BLOCK END
	BLOCK 5
	T23(EAX).A =   _q:LINK(4).A
	T24(EAX).A =   *(T23(EAX) + 40).A.A
	T25(EAX).I =   *(T24(EAX) + 19).A.C
	CONDGO	L_4760:PC ; T25(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 6

L_4788:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4762:
; Line 3471:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_4763:
; Line 3472:	        if (!equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_4765:
	T42(EAX).A =   _apll:LINK(-20).A
	PARM	T42(EAX).A
	T43(EAX).A =   _apal:LINK(-12).A
	PARM	T43(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T44(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4764:PC ; T44(EAX).I != #0.C
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_4766:
; Line 3473:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4767:
; Line 3474:	            func_axdx(op_mov, apal, apah, apll, aplh); 

	T45(EAX).A =   _aplh:LINK(-24).A
	PARM	T45(EAX).A
	T46(EAX).A =   _apll:LINK(-20).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apah:LINK(-16).A
	PARM	T47(EAX).A
	T48(EAX).A =   _apal:LINK(-12).A
	PARM	T48(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3475:	        } 

	BLOCK END
	BLOCK 13

L_4768:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_4769:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_4764:
	BLOCK END
	BLOCK 16

L_4770:
	DBG BLOCK END
; Line 3476:	        gen_codes(op_not, ISZ_UINT, apah, 0); 

	T49(EAX).A =   #0.C
	PARM	T49(EAX).A
	T50(EAX).A =   _apah:LINK(-16).A
	PARM	T50(EAX).A
	T51(EAX).UI =   #7.C
	PARM	T51(EAX).UI
	PARM	#12A.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3477:	        gen_codes(op_not, ISZ_UINT, apal, 0); 

	T52(EAX).A =   #0.C
	PARM	T52(EAX).A
	T53(EAX).A =   _apal:LINK(-12).A
	PARM	T53(EAX).A
	T54(EAX).UI =   #7.C
	PARM	T54(EAX).UI
	PARM	#12A.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3478:	    } 

	BLOCK END
	BLOCK 17

L_4771:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_4773:
	DBG BLOCK END
	GOTO	L_4772:PC
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_4774:
	BLOCK END
	BLOCK 21

L_4760:
; Line 3479:	    else 

; Line 3480:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_4775:
; Line 3481:	        if (!equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_4777:
	T26(EAX).A =   _apll:LINK(-20).A
	PARM	T26(EAX).A
	T27(EAX).A =   _apal:LINK(-12).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T28(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4776:PC ; T28(EAX).I != #0.C
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_4778:
; Line 3482:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4779:
; Line 3483:	            liveQualify(apal, apal, 0); 

	T29(EAX).A =   #0.C
	PARM	T29(EAX).A
	T30(EAX).A =   _apal:LINK(-12).A
	PARM	T30(EAX).A
	T31(EAX).A =   _apal:LINK(-12).A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3484:	            gen_codes(op_mov, q->ans->size, apal, apll); 

	T32(EAX).A =   _apll:LINK(-20).A
	PARM	T32(EAX).A
	T33(EAX).A =   _apal:LINK(-12).A
	PARM	T33(EAX).A
	T34(EAX).A =   _q:LINK(4).A
	T35(EAX).A =   *(T34(EAX) + 40).A.A
	T36(EAX).I =   *(T35(EAX) + 19).A.C
	PARM	T36(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3485:	        } 

	BLOCK END
	BLOCK 27

L_4780:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_4781:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_4776:
	BLOCK END
	BLOCK 30

L_4782:
	DBG BLOCK END
; Line 3486:	        gen_codes(op_not, q->ans->size, apal, 0); 

	T37(EAX).A =   #0.C
	PARM	T37(EAX).A
	T38(EAX).A =   _apal:LINK(-12).A
	PARM	T38(EAX).A
	T39(EAX).A =   _q:LINK(4).A
	T40(EAX).A =   *(T39(EAX) + 40).A.A
	T41(EAX).I =   *(T40(EAX) + 19).A.C
	PARM	T41(EAX).I
	PARM	#12A.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3487:	    } 

	BLOCK END
	BLOCK 31

L_4783:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_4784:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_4772:
	BLOCK END
	BLOCK 34

L_4785:
	DBG BLOCK END
; Line 3488:	} 

	BLOCK END
	BLOCK 35

L_4786:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_4758:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_and$qp15@Optimizer@quad


global @occx86@asm_and$qp15@Optimizer@quad
@occx86@asm_and$qp15@Optimizer@quad:
; Line 3490:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#24.UI
	BLOCK END
	BLOCK 2

L_4792:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4794:
; Line 3491:	    if (q->atomic) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4796:
	T6(EAX).A =   _q:LINK(4).A
	CONDGO	L_4795:PC ; *(T6(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_4797:
; Line 3492:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4798:
; Line 3493:	        logicatomic(op_and, q); 

	T7(EAX).A =   _q:LINK(4).A
	PARM	T7(EAX).A
	PARM	#26.I
	TAG
	GOSUB	#@occx86@logicatomic$q8e_opcodep15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 3494:	        return; 

	GOTO	L_4793:PC
; Line 3495:	    } 

	BLOCK END
	BLOCK 8

L_4799:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_4800:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_4795:
	BLOCK END
	BLOCK 11

L_4801:
	DBG BLOCK END
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3496:	    enum e_opcode opa, opl, opr; 
; Line 3497:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

; Line 3497:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T8(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T8(EAX).A
	VAR START	apah
	T9(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T9(EAX).A
	VAR START	apll
	T10(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T10(EAX).A
	VAR START	aplh
	T11(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T11(EAX).A
	VAR START	aprl
	T12(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T12(EAX).A
	VAR START	aprh
	T13(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T13(EAX).A
; Line 3498:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T14(EAX).A =   #_aplh:LINK(-28).A
	PARM	T14(EAX).A
	T15(EAX).A =   #_apll:LINK(-24).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 4+0).A.A
	PARM	T17(EAX).A
	T18(EAX).A =   #_opl:LINK(-8).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3499:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T20(EAX).A =   #_aprh:LINK(-36).A
	PARM	T20(EAX).A
	T21(EAX).A =   #_aprl:LINK(-32).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	T23(EAX).A =   *(T22(EAX) + 8+0).A.A
	PARM	T23(EAX).A
	T24(EAX).A =   #_opr:LINK(-12).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3500:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T26(EAX).A =   #_apah:LINK(-20).A
	PARM	T26(EAX).A
	T27(EAX).A =   #_apal:LINK(-16).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	T29(EAX).A =   *(T28(EAX) + 40).A.A
	PARM	T29(EAX).A
	T30(EAX).A =   #_opa:LINK(-4).A
	PARM	T30(EAX).A
	T31(EAX).A =   _q:LINK(4).A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4803:
; Line 3501:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(AL).C =   *(T33(EAX) + 19).A.C
	CONDGO	L_4875:PC ; T34(AL).C == #B.C
	BLOCK END
	BLOCK 13
	T35(EAX).A =   _q:LINK(4).A
	T36(EAX).A =   *(T35(EAX) + 40).A.A
	T37(EAX).I =   *(T36(EAX) + 19).A.C
	CONDGO	L_4802:PC ; T37(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 14

L_4875:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4804:
; Line 3502:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4805:
; Line 3503:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4807:
	T87(EAX).A =   _apll:LINK(-24).A
	PARM	T87(EAX).A
	T88(EAX).A =   _apal:LINK(-16).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T89(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4806:PC ; T89(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4808:
; Line 3504:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_4809:
; Line 3505:	            func_axdx(op_and, apal, apah, aprl, aprh); 

	T90(EAX).A =   _aprh:LINK(-36).A
	PARM	T90(EAX).A
	T91(EAX).A =   _aprl:LINK(-32).A
	PARM	T91(EAX).A
	T92(EAX).A =   _apah:LINK(-20).A
	PARM	T92(EAX).A
	T93(EAX).A =   _apal:LINK(-16).A
	PARM	T93(EAX).A
	PARM	#26.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3506:	        } 

	BLOCK END
	BLOCK 21

L_4810:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_4812:
	DBG BLOCK END
	GOTO	L_4811:PC
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_4813:
	BLOCK END
	BLOCK 25

L_4806:
; Line 3507:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4815:
	T94(EAX).A =   _aprl:LINK(-32).A
	PARM	T94(EAX).A
	T95(EAX).A =   _apal:LINK(-16).A
	PARM	T95(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T96(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4814:PC ; T96(EAX).I == #0.C
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_4816:
; Line 3508:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_4817:
; Line 3509:	            func_axdx(op_and, apal, apah, apll, aplh); 

	T97(EAX).A =   _aplh:LINK(-28).A
	PARM	T97(EAX).A
	T98(EAX).A =   _apll:LINK(-24).A
	PARM	T98(EAX).A
	T99(EAX).A =   _apah:LINK(-20).A
	PARM	T99(EAX).A
	T100(EAX).A =   _apal:LINK(-16).A
	PARM	T100(EAX).A
	PARM	#26.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3510:	        } 

	BLOCK END
	BLOCK 30

L_4818:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_4820:
	DBG BLOCK END
	GOTO	L_4819:PC
	BLOCK END
	BLOCK 32
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_4821:
	BLOCK END
	BLOCK 34

L_4814:
; Line 3511:	        else 

; Line 3512:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_4822:
; Line 3513:	            liveQualify(apal, apal, apah); 

	T101(EAX).A =   _apah:LINK(-20).A
	PARM	T101(EAX).A
	T102(EAX).A =   _apal:LINK(-16).A
	PARM	T102(EAX).A
	T103(EAX).A =   _apal:LINK(-16).A
	PARM	T103(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3514:	            liveQualify(apah, apal, apah); 

	T104(EAX).A =   _apah:LINK(-20).A
	PARM	T104(EAX).A
	T105(EAX).A =   _apal:LINK(-16).A
	PARM	T105(EAX).A
	T106(EAX).A =   _apah:LINK(-20).A
	PARM	T106(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3515:	            func_axdx_mov(op_and, apal, apah, apll, aplh, aprl, aprh); 

	T107(EAX).A =   _aprh:LINK(-36).A
	PARM	T107(EAX).A
	T108(EAX).A =   _aprl:LINK(-32).A
	PARM	T108(EAX).A
	T109(EAX).A =   _aplh:LINK(-28).A
	PARM	T109(EAX).A
	T110(EAX).A =   _apll:LINK(-24).A
	PARM	T110(EAX).A
	T111(EAX).A =   _apah:LINK(-20).A
	PARM	T111(EAX).A
	T112(EAX).A =   _apal:LINK(-16).A
	PARM	T112(EAX).A
	PARM	#26.I
	TAG
	GOSUB	#@occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1:PC.UI
	PARMADJ	#1C.N
; Line 3516:	        } 

	BLOCK END
	BLOCK 36

L_4823:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_4824:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_4819:
	BLOCK END
	BLOCK 39

L_4825:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_4826:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_4811:
	BLOCK END
	BLOCK 42

L_4827:
	DBG BLOCK END
; Line 3517:	    } 

	BLOCK END
	BLOCK 43

L_4828:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_4830:
	DBG BLOCK END
	GOTO	L_4829:PC
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_4831:
	BLOCK END
	BLOCK 47

L_4802:
; Line 3518:	    else 

; Line 3519:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_4832:
; Line 3520:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_4834:
	T38(EAX).A =   _apll:LINK(-24).A
	PARM	T38(EAX).A
	T39(EAX).A =   _apal:LINK(-16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T40(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4833:PC ; T40(EAX).I == #0.C
	BLOCK END
	BLOCK 50
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_4835:
; Line 3521:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_4836:
; Line 3522:	            gen_codes(op_and, q->ans->size, apal, aprl); 

	T41(EAX).A =   _aprl:LINK(-32).A
	PARM	T41(EAX).A
	T42(EAX).A =   _apal:LINK(-16).A
	PARM	T42(EAX).A
	T43(EAX).A =   _q:LINK(4).A
	T44(EAX).A =   *(T43(EAX) + 40).A.A
	T45(EAX).I =   *(T44(EAX) + 19).A.C
	PARM	T45(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3523:	        } 

	BLOCK END
	BLOCK 53

L_4837:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_4839:
	DBG BLOCK END
	GOTO	L_4838:PC
	BLOCK END
	BLOCK 55
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_4840:
	BLOCK END
	BLOCK 57

L_4833:
; Line 3524:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_4842:
	T46(EAX).A =   _aprl:LINK(-32).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apal:LINK(-16).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T48(EAX).I =   RV.T3(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4841:PC ; T48(EAX).I == #0.C
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_4843:
; Line 3525:	            gen_codes(op_and, q->ans->size, apal, apll); 

	T49(EAX).A =   _apll:LINK(-24).A
	PARM	T49(EAX).A
	T50(EAX).A =   _apal:LINK(-16).A
	PARM	T50(EAX).A
	T51(EAX).A =   _q:LINK(4).A
	T52(EAX).A =   *(T51(EAX) + 40).A.A
	T53(EAX).I =   *(T52(EAX) + 19).A.C
	PARM	T53(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 61

L_4845:
	DBG BLOCK END
	GOTO	L_4844:PC
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_4846:
	BLOCK END
	BLOCK 64

L_4841:
; Line 3526:	        else 

; Line 3527:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_4847:
; Line 3528:	            if (equal_address(apll, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_4849:
	T54(EAX).A =   _aprl:LINK(-32).A
	PARM	T54(EAX).A
	T55(EAX).A =   _apll:LINK(-24).A
	PARM	T55(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T56(EAX).I =   RV.T4(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4848:PC ; T56(EAX).I == #0.C
	BLOCK END
	BLOCK 67
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_4850:
; Line 3529:	                apal->liveRegs = -1; 

	T57(EAX).A =   _apal:LINK(-16).A
	*(T57(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 69

L_4851:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_4848:
	BLOCK END
	BLOCK 71

L_4852:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_4854:
; Line 3530:	            if (samereg(apal, aprl)) 

	T58(EAX).A =   _aprl:LINK(-32).A
	PARM	T58(EAX).A
	T59(EAX).A =   _apal:LINK(-16).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T60(EAX).I =   RV.T5(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4853:PC ; T60(EAX).I == #0.C
	BLOCK END
	BLOCK 73
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_4855:
; Line 3531:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_4856:
; Line 3532:	                liveQualify(apal, apal, 0); 

	T61(EAX).A =   #0.C
	PARM	T61(EAX).A
	T62(EAX).A =   _apal:LINK(-16).A
	PARM	T62(EAX).A
	T63(EAX).A =   _apal:LINK(-16).A
	PARM	T63(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3533:	                gen_codes(op_mov, q->ans->size, apal, aprl); 

	T64(EAX).A =   _aprl:LINK(-32).A
	PARM	T64(EAX).A
	T65(EAX).A =   _apal:LINK(-16).A
	PARM	T65(EAX).A
	T66(EAX).A =   _q:LINK(4).A
	T67(EAX).A =   *(T66(EAX) + 40).A.A
	T68(EAX).I =   *(T67(EAX) + 19).A.C
	PARM	T68(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3534:	                gen_codes(op_and, q->ans->size, apal, apll); 

	T69(EAX).A =   _apll:LINK(-24).A
	PARM	T69(EAX).A
	T70(EAX).A =   _apal:LINK(-16).A
	PARM	T70(EAX).A
	T71(EAX).A =   _q:LINK(4).A
	T72(EAX).A =   *(T71(EAX) + 40).A.A
	T73(EAX).I =   *(T72(EAX) + 19).A.C
	PARM	T73(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3535:	            } 

	BLOCK END
	BLOCK 76

L_4857:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_4859:
	DBG BLOCK END
	GOTO	L_4858:PC
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_4860:
	BLOCK END
	BLOCK 80

L_4853:
; Line 3536:	            else 

; Line 3537:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_4861:
; Line 3538:	                liveQualify(apal, apal, 0); 

	T74(EAX).A =   #0.C
	PARM	T74(EAX).A
	T75(EAX).A =   _apal:LINK(-16).A
	PARM	T75(EAX).A
	T76(EAX).A =   _apal:LINK(-16).A
	PARM	T76(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3539:	                gen_codes(op_mov, q->ans->size, apal, apll); 

	T77(EAX).A =   _apll:LINK(-24).A
	PARM	T77(EAX).A
	T78(EAX).A =   _apal:LINK(-16).A
	PARM	T78(EAX).A
	T79(EAX).A =   _q:LINK(4).A
	T80(EAX).A =   *(T79(EAX) + 40).A.A
	T81(EAX).I =   *(T80(EAX) + 19).A.C
	PARM	T81(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3540:	                gen_codes(op_and, q->ans->size, apal, aprl); 

	T82(EAX).A =   _aprl:LINK(-32).A
	PARM	T82(EAX).A
	T83(EAX).A =   _apal:LINK(-16).A
	PARM	T83(EAX).A
	T84(EAX).A =   _q:LINK(4).A
	T85(EAX).A =   *(T84(EAX) + 40).A.A
	T86(EAX).I =   *(T85(EAX) + 19).A.C
	PARM	T86(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3541:	            } 

	BLOCK END
	BLOCK 82

L_4862:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_4863:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_4858:
	BLOCK END
	BLOCK 85

L_4864:
	DBG BLOCK END
; Line 3542:	        } 

	BLOCK END
	BLOCK 86

L_4865:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_4866:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_4844:
	BLOCK END
	BLOCK 89

L_4867:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_4868:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_4838:
	BLOCK END
	BLOCK 92

L_4869:
	DBG BLOCK END
; Line 3543:	    } 

	BLOCK END
	BLOCK 93

L_4870:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_4871:
	DBG BLOCK END
	BLOCK END
	BLOCK 95

L_4829:
	BLOCK END
	BLOCK 96

L_4872:
	DBG BLOCK END
; Line 3544:	} 

	BLOCK END
	BLOCK 97

L_4873:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_4793:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_or$qp15@Optimizer@quad


global @occx86@asm_or$qp15@Optimizer@quad
@occx86@asm_or$qp15@Optimizer@quad:
; Line 3546:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#24.UI
	BLOCK END
	BLOCK 2

L_4879:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4881:
; Line 3547:	    if (q->atomic) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4883:
	T8(EAX).A =   _q:LINK(4).A
	CONDGO	L_4882:PC ; *(T8(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_4884:
; Line 3548:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4885:
; Line 3549:	        logicatomic(op_or, q); 

	T9(EAX).A =   _q:LINK(4).A
	PARM	T9(EAX).A
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@logicatomic$q8e_opcodep15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 3550:	        return; 

	GOTO	L_4880:PC
; Line 3551:	    } 

	BLOCK END
	BLOCK 8

L_4886:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_4887:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_4882:
	BLOCK END
	BLOCK 11

L_4888:
	DBG BLOCK END
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3552:	    enum e_opcode opa, opl, opr; 
; Line 3553:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

; Line 3553:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T10(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T10(EAX).A
	VAR START	apah
	T11(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T11(EAX).A
	VAR START	apll
	T12(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T12(EAX).A
	VAR START	aplh
	T13(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T13(EAX).A
	VAR START	aprl
	T14(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T14(EAX).A
	VAR START	aprh
	T15(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T15(EAX).A
; Line 3554:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T16(EAX).A =   #_aplh:LINK(-28).A
	PARM	T16(EAX).A
	T17(EAX).A =   #_apll:LINK(-24).A
	PARM	T17(EAX).A
	T18(EAX).A =   _q:LINK(4).A
	T19(EAX).A =   *(T18(EAX) + 4+0).A.A
	PARM	T19(EAX).A
	T20(EAX).A =   #_opl:LINK(-8).A
	PARM	T20(EAX).A
	T21(EAX).A =   _q:LINK(4).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3555:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T22(EAX).A =   #_aprh:LINK(-36).A
	PARM	T22(EAX).A
	T23(EAX).A =   #_aprl:LINK(-32).A
	PARM	T23(EAX).A
	T24(EAX).A =   _q:LINK(4).A
	T25(EAX).A =   *(T24(EAX) + 8+0).A.A
	PARM	T25(EAX).A
	T26(EAX).A =   #_opr:LINK(-12).A
	PARM	T26(EAX).A
	T27(EAX).A =   _q:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3556:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T28(EAX).A =   #_apah:LINK(-20).A
	PARM	T28(EAX).A
	T29(EAX).A =   #_apal:LINK(-16).A
	PARM	T29(EAX).A
	T30(EAX).A =   _q:LINK(4).A
	T31(EAX).A =   *(T30(EAX) + 40).A.A
	PARM	T31(EAX).A
	T32(EAX).A =   #_opa:LINK(-4).A
	PARM	T32(EAX).A
	T33(EAX).A =   _q:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4890:
; Line 3557:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T34(EAX).A =   _q:LINK(4).A
	T35(EAX).A =   *(T34(EAX) + 40).A.A
	T36(AL).C =   *(T35(EAX) + 19).A.C
	CONDGO	L_4962:PC ; T36(AL).C == #B.C
	BLOCK END
	BLOCK 13
	T37(EAX).A =   _q:LINK(4).A
	T38(EAX).A =   *(T37(EAX) + 40).A.A
	T39(EAX).I =   *(T38(EAX) + 19).A.C
	CONDGO	L_4889:PC ; T39(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 14

L_4962:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4891:
; Line 3558:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4892:
; Line 3559:	        if (equal_address(apal, apll) && equal_address(apah, aplh)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4894:
	T89(EAX).A =   _apll:LINK(-24).A
	PARM	T89(EAX).A
	T90(EAX).A =   _apal:LINK(-16).A
	PARM	T90(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T91(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4893:PC ; T91(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	T92(EAX).A =   _aplh:LINK(-28).A
	PARM	T92(EAX).A
	T93(EAX).A =   _apah:LINK(-20).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T94(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4893:PC ; T94(EAX).I == #0.C
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_4895:
; Line 3560:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_4896:
; Line 3561:	            func_axdx(op_or, apal, apah, aprl, aprh); 

	T95(EAX).A =   _aprh:LINK(-36).A
	PARM	T95(EAX).A
	T96(EAX).A =   _aprl:LINK(-32).A
	PARM	T96(EAX).A
	T97(EAX).A =   _apah:LINK(-20).A
	PARM	T97(EAX).A
	T98(EAX).A =   _apal:LINK(-16).A
	PARM	T98(EAX).A
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3562:	        } 

	BLOCK END
	BLOCK 22

L_4897:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_4899:
	DBG BLOCK END
	GOTO	L_4898:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_4900:
	BLOCK END
	BLOCK 26

L_4893:
; Line 3563:	        else if (equal_address(apal, aprl) && equal_address(apah, aprh)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_4902:
	T99(EAX).A =   _aprl:LINK(-32).A
	PARM	T99(EAX).A
	T100(EAX).A =   _apal:LINK(-16).A
	PARM	T100(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T101(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4901:PC ; T101(EAX).I == #0.C
	BLOCK END
	BLOCK 28
	T102(EAX).A =   _aprh:LINK(-36).A
	PARM	T102(EAX).A
	T103(EAX).A =   _apah:LINK(-20).A
	PARM	T103(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T104(EAX).I =   RV.T3(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4901:PC ; T104(EAX).I == #0.C
	BLOCK END
	BLOCK 29
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_4903:
; Line 3564:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_4904:
; Line 3565:	            func_axdx(op_or, apal, apah, apll, aplh); 

	T105(EAX).A =   _aplh:LINK(-28).A
	PARM	T105(EAX).A
	T106(EAX).A =   _apll:LINK(-24).A
	PARM	T106(EAX).A
	T107(EAX).A =   _apah:LINK(-20).A
	PARM	T107(EAX).A
	T108(EAX).A =   _apal:LINK(-16).A
	PARM	T108(EAX).A
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3566:	        } 

	BLOCK END
	BLOCK 32

L_4905:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_4907:
	DBG BLOCK END
	GOTO	L_4906:PC
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_4908:
	BLOCK END
	BLOCK 36

L_4901:
; Line 3567:	        else 

; Line 3568:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_4909:
; Line 3569:	            liveQualify(apal, apal, apah); 

	T109(EAX).A =   _apah:LINK(-20).A
	PARM	T109(EAX).A
	T110(EAX).A =   _apal:LINK(-16).A
	PARM	T110(EAX).A
	T111(EAX).A =   _apal:LINK(-16).A
	PARM	T111(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3570:	            liveQualify(apah, apal, apah); 

	T112(EAX).A =   _apah:LINK(-20).A
	PARM	T112(EAX).A
	T113(EAX).A =   _apal:LINK(-16).A
	PARM	T113(EAX).A
	T114(EAX).A =   _apah:LINK(-20).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3571:	            func_axdx_mov(op_or, apal, apah, apll, aplh, aprl, aprh); 

	T115(EAX).A =   _aprh:LINK(-36).A
	PARM	T115(EAX).A
	T116(EAX).A =   _aprl:LINK(-32).A
	PARM	T116(EAX).A
	T117(EAX).A =   _aplh:LINK(-28).A
	PARM	T117(EAX).A
	T118(EAX).A =   _apll:LINK(-24).A
	PARM	T118(EAX).A
	T119(EAX).A =   _apah:LINK(-20).A
	PARM	T119(EAX).A
	T120(EAX).A =   _apal:LINK(-16).A
	PARM	T120(EAX).A
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1:PC.UI
	PARMADJ	#1C.N
; Line 3572:	        } 

	BLOCK END
	BLOCK 38

L_4910:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_4911:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_4906:
	BLOCK END
	BLOCK 41

L_4912:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_4913:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_4898:
	BLOCK END
	BLOCK 44

L_4914:
	DBG BLOCK END
; Line 3573:	    } 

	BLOCK END
	BLOCK 45

L_4915:
	DBG BLOCK END
	BLOCK END
	BLOCK 46

L_4917:
	DBG BLOCK END
	GOTO	L_4916:PC
	BLOCK END
	BLOCK 47
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_4918:
	BLOCK END
	BLOCK 49

L_4889:
; Line 3574:	    else 

; Line 3575:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_4919:
; Line 3576:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_4921:
	T40(EAX).A =   _apll:LINK(-24).A
	PARM	T40(EAX).A
	T41(EAX).A =   _apal:LINK(-16).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T42(EAX).I =   RV.T4(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4920:PC ; T42(EAX).I == #0.C
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_4922:
; Line 3577:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_4923:
; Line 3578:	            gen_codes(op_or, q->ans->size, apal, aprl); 

	T43(EAX).A =   _aprl:LINK(-32).A
	PARM	T43(EAX).A
	T44(EAX).A =   _apal:LINK(-16).A
	PARM	T44(EAX).A
	T45(EAX).A =   _q:LINK(4).A
	T46(EAX).A =   *(T45(EAX) + 40).A.A
	T47(EAX).I =   *(T46(EAX) + 19).A.C
	PARM	T47(EAX).I
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3579:	        } 

	BLOCK END
	BLOCK 55

L_4924:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_4926:
	DBG BLOCK END
	GOTO	L_4925:PC
	BLOCK END
	BLOCK 57
	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_4927:
	BLOCK END
	BLOCK 59

L_4920:
; Line 3580:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_4929:
	T48(EAX).A =   _aprl:LINK(-32).A
	PARM	T48(EAX).A
	T49(EAX).A =   _apal:LINK(-16).A
	PARM	T49(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T50(EAX).I =   RV.T5(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4928:PC ; T50(EAX).I == #0.C
	BLOCK END
	BLOCK 61
	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_4930:
; Line 3581:	            gen_codes(op_or, q->ans->size, apal, apll); 

	T51(EAX).A =   _apll:LINK(-24).A
	PARM	T51(EAX).A
	T52(EAX).A =   _apal:LINK(-16).A
	PARM	T52(EAX).A
	T53(EAX).A =   _q:LINK(4).A
	T54(EAX).A =   *(T53(EAX) + 40).A.A
	T55(EAX).I =   *(T54(EAX) + 19).A.C
	PARM	T55(EAX).I
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 63

L_4932:
	DBG BLOCK END
	GOTO	L_4931:PC
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_4933:
	BLOCK END
	BLOCK 66

L_4928:
; Line 3582:	        else 

; Line 3583:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_4934:
; Line 3584:	            if (equal_address(apll, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_4936:
	T56(EAX).A =   _aprl:LINK(-32).A
	PARM	T56(EAX).A
	T57(EAX).A =   _apll:LINK(-24).A
	PARM	T57(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T58(EAX).I =   RV.T6(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4935:PC ; T58(EAX).I == #0.C
	BLOCK END
	BLOCK 69
	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_4937:
; Line 3585:	                apal->liveRegs = -1; 

	T59(EAX).A =   _apal:LINK(-16).A
	*(T59(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 71

L_4938:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_4935:
	BLOCK END
	BLOCK 73

L_4939:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_4941:
; Line 3586:	            if (samereg(apal, aprl)) 

	T60(EAX).A =   _aprl:LINK(-32).A
	PARM	T60(EAX).A
	T61(EAX).A =   _apal:LINK(-16).A
	PARM	T61(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T62(EAX).I =   RV.T7(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4940:PC ; T62(EAX).I == #0.C
	BLOCK END
	BLOCK 75
	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_4942:
; Line 3587:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_4943:
; Line 3588:	                liveQualify(apal, apal, 0); 

	T63(EAX).A =   #0.C
	PARM	T63(EAX).A
	T64(EAX).A =   _apal:LINK(-16).A
	PARM	T64(EAX).A
	T65(EAX).A =   _apal:LINK(-16).A
	PARM	T65(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3589:	                gen_codes(op_mov, q->ans->size, apal, aprl); 

	T66(EAX).A =   _aprl:LINK(-32).A
	PARM	T66(EAX).A
	T67(EAX).A =   _apal:LINK(-16).A
	PARM	T67(EAX).A
	T68(EAX).A =   _q:LINK(4).A
	T69(EAX).A =   *(T68(EAX) + 40).A.A
	T70(EAX).I =   *(T69(EAX) + 19).A.C
	PARM	T70(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3590:	                gen_codes(op_or, q->ans->size, apal, apll); 

	T71(EAX).A =   _apll:LINK(-24).A
	PARM	T71(EAX).A
	T72(EAX).A =   _apal:LINK(-16).A
	PARM	T72(EAX).A
	T73(EAX).A =   _q:LINK(4).A
	T74(EAX).A =   *(T73(EAX) + 40).A.A
	T75(EAX).I =   *(T74(EAX) + 19).A.C
	PARM	T75(EAX).I
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3591:	            } 

	BLOCK END
	BLOCK 78

L_4944:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_4946:
	DBG BLOCK END
	GOTO	L_4945:PC
	BLOCK END
	BLOCK 80
	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_4947:
	BLOCK END
	BLOCK 82

L_4940:
; Line 3592:	            else 

; Line 3593:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_4948:
; Line 3594:	                liveQualify(apal, apal, 0); 

	T76(EAX).A =   #0.C
	PARM	T76(EAX).A
	T77(EAX).A =   _apal:LINK(-16).A
	PARM	T77(EAX).A
	T78(EAX).A =   _apal:LINK(-16).A
	PARM	T78(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3595:	                gen_codes(op_mov, q->ans->size, apal, apll); 

	T79(EAX).A =   _apll:LINK(-24).A
	PARM	T79(EAX).A
	T80(EAX).A =   _apal:LINK(-16).A
	PARM	T80(EAX).A
	T81(EAX).A =   _q:LINK(4).A
	T82(EAX).A =   *(T81(EAX) + 40).A.A
	T83(EAX).I =   *(T82(EAX) + 19).A.C
	PARM	T83(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3596:	                gen_codes(op_or, q->ans->size, apal, aprl); 

	T84(EAX).A =   _aprl:LINK(-32).A
	PARM	T84(EAX).A
	T85(EAX).A =   _apal:LINK(-16).A
	PARM	T85(EAX).A
	T86(EAX).A =   _q:LINK(4).A
	T87(EAX).A =   *(T86(EAX) + 40).A.A
	T88(EAX).I =   *(T87(EAX) + 19).A.C
	PARM	T88(EAX).I
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3597:	            } 

	BLOCK END
	BLOCK 84

L_4949:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_4950:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_4945:
	BLOCK END
	BLOCK 87

L_4951:
	DBG BLOCK END
; Line 3598:	        } 

	BLOCK END
	BLOCK 88

L_4952:
	DBG BLOCK END
	BLOCK END
	BLOCK 89

L_4953:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_4931:
	BLOCK END
	BLOCK 91

L_4954:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_4955:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_4925:
	BLOCK END
	BLOCK 94

L_4956:
	DBG BLOCK END
; Line 3599:	    } 

	BLOCK END
	BLOCK 95

L_4957:
	DBG BLOCK END
	BLOCK END
	BLOCK 96

L_4958:
	DBG BLOCK END
	BLOCK END
	BLOCK 97

L_4916:
	BLOCK END
	BLOCK 98

L_4959:
	DBG BLOCK END
; Line 3600:	} 

	BLOCK END
	BLOCK 99

L_4960:
	DBG BLOCK END
	BLOCK END
	BLOCK 100

L_4880:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_eor$qp15@Optimizer@quad


global @occx86@asm_eor$qp15@Optimizer@quad
@occx86@asm_eor$qp15@Optimizer@quad:
; Line 3602:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#24.UI
	BLOCK END
	BLOCK 2

L_4966:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_4968:
; Line 3603:	    if (q->atomic) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_4970:
	T6(EAX).A =   _q:LINK(4).A
	CONDGO	L_4969:PC ; *(T6(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_4971:
; Line 3604:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_4972:
; Line 3605:	        logicatomic(op_xor, q); 

	T7(EAX).A =   _q:LINK(4).A
	PARM	T7(EAX).A
	PARM	#199.I
	TAG
	GOSUB	#@occx86@logicatomic$q8e_opcodep15@Optimizer@quad:PC.UI
	PARMADJ	#8.N
; Line 3606:	        return; 

	GOTO	L_4967:PC
; Line 3607:	    } 

	BLOCK END
	BLOCK 8

L_4973:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_4974:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_4969:
	BLOCK END
	BLOCK 11

L_4975:
	DBG BLOCK END
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	apal
; Line 3608:	    enum e_opcode opa, opl, opr; 
; Line 3609:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

; Line 3609:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T8(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T8(EAX).A
	VAR START	apah
	T9(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T9(EAX).A
	VAR START	apll
	T10(EAX).A =   #0.UI
	_apll:LINK(-24).A =   T10(EAX).A
	VAR START	aplh
	T11(EAX).A =   #0.UI
	_aplh:LINK(-28).A =   T11(EAX).A
	VAR START	aprl
	T12(EAX).A =   #0.UI
	_aprl:LINK(-32).A =   T12(EAX).A
	VAR START	aprh
	T13(EAX).A =   #0.UI
	_aprh:LINK(-36).A =   T13(EAX).A
; Line 3610:	    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T14(EAX).A =   #_aplh:LINK(-28).A
	PARM	T14(EAX).A
	T15(EAX).A =   #_apll:LINK(-24).A
	PARM	T15(EAX).A
	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 4+0).A.A
	PARM	T17(EAX).A
	T18(EAX).A =   #_opl:LINK(-8).A
	PARM	T18(EAX).A
	T19(EAX).A =   _q:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3611:	    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T20(EAX).A =   #_aprh:LINK(-36).A
	PARM	T20(EAX).A
	T21(EAX).A =   #_aprl:LINK(-32).A
	PARM	T21(EAX).A
	T22(EAX).A =   _q:LINK(4).A
	T23(EAX).A =   *(T22(EAX) + 8+0).A.A
	PARM	T23(EAX).A
	T24(EAX).A =   #_opr:LINK(-12).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3612:	    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T26(EAX).A =   #_apah:LINK(-20).A
	PARM	T26(EAX).A
	T27(EAX).A =   #_apal:LINK(-16).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	T29(EAX).A =   *(T28(EAX) + 40).A.A
	PARM	T29(EAX).A
	T30(EAX).A =   #_opa:LINK(-4).A
	PARM	T30(EAX).A
	T31(EAX).A =   _q:LINK(4).A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_4977:
; Line 3613:	    if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 40).A.A
	T34(AL).C =   *(T33(EAX) + 19).A.C
	CONDGO	L_5049:PC ; T34(AL).C == #B.C
	BLOCK END
	BLOCK 13
	T35(EAX).A =   _q:LINK(4).A
	T36(EAX).A =   *(T35(EAX) + 40).A.A
	T37(EAX).I =   *(T36(EAX) + 19).A.C
	CONDGO	L_4976:PC ; T37(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 14

L_5049:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_4978:
; Line 3614:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_4979:
; Line 3615:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_4981:
	T87(EAX).A =   _apll:LINK(-24).A
	PARM	T87(EAX).A
	T88(EAX).A =   _apal:LINK(-16).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T89(EAX).I =   RV.T0(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4980:PC ; T89(EAX).I == #0.C
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_4982:
; Line 3616:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_4983:
; Line 3617:	            func_axdx(op_xor, apal, apah, aprl, aprh); 

	T90(EAX).A =   _aprh:LINK(-36).A
	PARM	T90(EAX).A
	T91(EAX).A =   _aprl:LINK(-32).A
	PARM	T91(EAX).A
	T92(EAX).A =   _apah:LINK(-20).A
	PARM	T92(EAX).A
	T93(EAX).A =   _apal:LINK(-16).A
	PARM	T93(EAX).A
	PARM	#199.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3618:	        } 

	BLOCK END
	BLOCK 21

L_4984:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_4986:
	DBG BLOCK END
	GOTO	L_4985:PC
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_4987:
	BLOCK END
	BLOCK 25

L_4980:
; Line 3619:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_4989:
	T94(EAX).A =   _aprl:LINK(-32).A
	PARM	T94(EAX).A
	T95(EAX).A =   _apal:LINK(-16).A
	PARM	T95(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T96(EAX).I =   RV.T1(EAX).I
	PARMADJ	#8.N
	CONDGO	L_4988:PC ; T96(EAX).I == #0.C
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_4990:
; Line 3620:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_4991:
; Line 3621:	            func_axdx(op_xor, apal, apah, apll, aplh); 

	T97(EAX).A =   _aplh:LINK(-28).A
	PARM	T97(EAX).A
	T98(EAX).A =   _apll:LINK(-24).A
	PARM	T98(EAX).A
	T99(EAX).A =   _apah:LINK(-20).A
	PARM	T99(EAX).A
	T100(EAX).A =   _apal:LINK(-16).A
	PARM	T100(EAX).A
	PARM	#199.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3622:	        } 

	BLOCK END
	BLOCK 30

L_4992:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_4994:
	DBG BLOCK END
	GOTO	L_4993:PC
	BLOCK END
	BLOCK 32
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_4995:
	BLOCK END
	BLOCK 34

L_4988:
; Line 3623:	        else 

; Line 3624:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_4996:
; Line 3625:	            liveQualify(apal, apal, apah); 

	T101(EAX).A =   _apah:LINK(-20).A
	PARM	T101(EAX).A
	T102(EAX).A =   _apal:LINK(-16).A
	PARM	T102(EAX).A
	T103(EAX).A =   _apal:LINK(-16).A
	PARM	T103(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3626:	            liveQualify(apah, apal, apah); 

	T104(EAX).A =   _apah:LINK(-20).A
	PARM	T104(EAX).A
	T105(EAX).A =   _apal:LINK(-16).A
	PARM	T105(EAX).A
	T106(EAX).A =   _apah:LINK(-20).A
	PARM	T106(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3627:	            func_axdx_mov(op_xor, apal, apah, apll, aplh, aprl, aprh); 

	T107(EAX).A =   _aprh:LINK(-36).A
	PARM	T107(EAX).A
	T108(EAX).A =   _aprl:LINK(-32).A
	PARM	T108(EAX).A
	T109(EAX).A =   _aplh:LINK(-28).A
	PARM	T109(EAX).A
	T110(EAX).A =   _apll:LINK(-24).A
	PARM	T110(EAX).A
	T111(EAX).A =   _apah:LINK(-20).A
	PARM	T111(EAX).A
	T112(EAX).A =   _apal:LINK(-16).A
	PARM	T112(EAX).A
	PARM	#199.I
	TAG
	GOSUB	#@occx86@func_axdx_mov$q8e_opcodep5amodepn1pn1pn1pn1pn1:PC.UI
	PARMADJ	#1C.N
; Line 3628:	        } 

	BLOCK END
	BLOCK 36

L_4997:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_4998:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_4993:
	BLOCK END
	BLOCK 39

L_4999:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_5000:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_4985:
	BLOCK END
	BLOCK 42

L_5001:
	DBG BLOCK END
; Line 3629:	    } 

	BLOCK END
	BLOCK 43

L_5002:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_5004:
	DBG BLOCK END
	GOTO	L_5003:PC
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_5005:
	BLOCK END
	BLOCK 47

L_4976:
; Line 3630:	    else 

; Line 3631:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_5006:
; Line 3632:	        if (equal_address(apal, apll)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_5008:
	T38(EAX).A =   _apll:LINK(-24).A
	PARM	T38(EAX).A
	T39(EAX).A =   _apal:LINK(-16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T40(EAX).I =   RV.T2(EAX).I
	PARMADJ	#8.N
	CONDGO	L_5007:PC ; T40(EAX).I == #0.C
	BLOCK END
	BLOCK 50
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_5009:
; Line 3633:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_5010:
; Line 3634:	            gen_codes(op_xor, q->ans->size, apal, aprl); 

	T41(EAX).A =   _aprl:LINK(-32).A
	PARM	T41(EAX).A
	T42(EAX).A =   _apal:LINK(-16).A
	PARM	T42(EAX).A
	T43(EAX).A =   _q:LINK(4).A
	T44(EAX).A =   *(T43(EAX) + 40).A.A
	T45(EAX).I =   *(T44(EAX) + 19).A.C
	PARM	T45(EAX).I
	PARM	#199.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3635:	        } 

	BLOCK END
	BLOCK 53

L_5011:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_5013:
	DBG BLOCK END
	GOTO	L_5012:PC
	BLOCK END
	BLOCK 55
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_5014:
	BLOCK END
	BLOCK 57

L_5007:
; Line 3636:	        else if (equal_address(apal, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_5016:
	T46(EAX).A =   _aprl:LINK(-32).A
	PARM	T46(EAX).A
	T47(EAX).A =   _apal:LINK(-16).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T48(EAX).I =   RV.T3(EAX).I
	PARMADJ	#8.N
	CONDGO	L_5015:PC ; T48(EAX).I == #0.C
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_5017:
; Line 3637:	            gen_codes(op_xor, q->ans->size, apal, apll); 

	T49(EAX).A =   _apll:LINK(-24).A
	PARM	T49(EAX).A
	T50(EAX).A =   _apal:LINK(-16).A
	PARM	T50(EAX).A
	T51(EAX).A =   _q:LINK(4).A
	T52(EAX).A =   *(T51(EAX) + 40).A.A
	T53(EAX).I =   *(T52(EAX) + 19).A.C
	PARM	T53(EAX).I
	PARM	#199.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 61

L_5019:
	DBG BLOCK END
	GOTO	L_5018:PC
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_5020:
	BLOCK END
	BLOCK 64

L_5015:
; Line 3638:	        else 

; Line 3639:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_5021:
; Line 3640:	            if (equal_address(apll, aprl)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_5023:
	T54(EAX).A =   _aprl:LINK(-32).A
	PARM	T54(EAX).A
	T55(EAX).A =   _apll:LINK(-24).A
	PARM	T55(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T56(EAX).I =   RV.T4(EAX).I
	PARMADJ	#8.N
	CONDGO	L_5022:PC ; T56(EAX).I == #0.C
	BLOCK END
	BLOCK 67
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_5024:
; Line 3641:	                apal->liveRegs = -1; 

	T57(EAX).A =   _apal:LINK(-16).A
	*(T57(EAX) + 10).A.I =   #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 69

L_5025:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_5022:
	BLOCK END
	BLOCK 71

L_5026:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_5028:
; Line 3642:	            if (samereg(apal, aprl)) 

	T58(EAX).A =   _aprl:LINK(-32).A
	PARM	T58(EAX).A
	T59(EAX).A =   _apal:LINK(-16).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T60(EAX).I =   RV.T5(EAX).I
	PARMADJ	#8.N
	CONDGO	L_5027:PC ; T60(EAX).I == #0.C
	BLOCK END
	BLOCK 73
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_5029:
; Line 3643:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_5030:
; Line 3644:	                liveQualify(apal, apal, 0); 

	T61(EAX).A =   #0.C
	PARM	T61(EAX).A
	T62(EAX).A =   _apal:LINK(-16).A
	PARM	T62(EAX).A
	T63(EAX).A =   _apal:LINK(-16).A
	PARM	T63(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3645:	                gen_codes(op_mov, q->ans->size, apal, aprl); 

	T64(EAX).A =   _aprl:LINK(-32).A
	PARM	T64(EAX).A
	T65(EAX).A =   _apal:LINK(-16).A
	PARM	T65(EAX).A
	T66(EAX).A =   _q:LINK(4).A
	T67(EAX).A =   *(T66(EAX) + 40).A.A
	T68(EAX).I =   *(T67(EAX) + 19).A.C
	PARM	T68(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3646:	                gen_codes(op_xor, q->ans->size, apal, apll); 

	T69(EAX).A =   _apll:LINK(-24).A
	PARM	T69(EAX).A
	T70(EAX).A =   _apal:LINK(-16).A
	PARM	T70(EAX).A
	T71(EAX).A =   _q:LINK(4).A
	T72(EAX).A =   *(T71(EAX) + 40).A.A
	T73(EAX).I =   *(T72(EAX) + 19).A.C
	PARM	T73(EAX).I
	PARM	#199.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3647:	            } 

	BLOCK END
	BLOCK 76

L_5031:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_5033:
	DBG BLOCK END
	GOTO	L_5032:PC
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_5034:
	BLOCK END
	BLOCK 80

L_5027:
; Line 3648:	            else 

; Line 3649:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_5035:
; Line 3650:	                liveQualify(apal, apal, 0); 

	T74(EAX).A =   #0.C
	PARM	T74(EAX).A
	T75(EAX).A =   _apal:LINK(-16).A
	PARM	T75(EAX).A
	T76(EAX).A =   _apal:LINK(-16).A
	PARM	T76(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 3651:	                gen_codes(op_mov, q->ans->size, apal, apll); 

	T77(EAX).A =   _apll:LINK(-24).A
	PARM	T77(EAX).A
	T78(EAX).A =   _apal:LINK(-16).A
	PARM	T78(EAX).A
	T79(EAX).A =   _q:LINK(4).A
	T80(EAX).A =   *(T79(EAX) + 40).A.A
	T81(EAX).I =   *(T80(EAX) + 19).A.C
	PARM	T81(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3652:	                gen_codes(op_xor, q->ans->size, apal, aprl); 

	T82(EAX).A =   _aprl:LINK(-32).A
	PARM	T82(EAX).A
	T83(EAX).A =   _apal:LINK(-16).A
	PARM	T83(EAX).A
	T84(EAX).A =   _q:LINK(4).A
	T85(EAX).A =   *(T84(EAX) + 40).A.A
	T86(EAX).I =   *(T85(EAX) + 19).A.C
	PARM	T86(EAX).I
	PARM	#199.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3653:	            } 

	BLOCK END
	BLOCK 82

L_5036:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_5037:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_5032:
	BLOCK END
	BLOCK 85

L_5038:
	DBG BLOCK END
; Line 3654:	        } 

	BLOCK END
	BLOCK 86

L_5039:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_5040:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_5018:
	BLOCK END
	BLOCK 89

L_5041:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_5042:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_5012:
	BLOCK END
	BLOCK 92

L_5043:
	DBG BLOCK END
; Line 3655:	    } 

	BLOCK END
	BLOCK 93

L_5044:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_5045:
	DBG BLOCK END
	BLOCK END
	BLOCK 95

L_5003:
	BLOCK END
	BLOCK 96

L_5046:
	DBG BLOCK END
; Line 3656:	} 

	BLOCK END
	BLOCK 97

L_5047:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_4967:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setne$qp15@Optimizer@quad


global @occx86@asm_setne$qp15@Optimizer@quad
@occx86@asm_setne$qp15@Optimizer@quad:
; Line 3657:	void asm_setne(Optimizer::QUAD* q)   { gen_xset(q, op_setne, op_setne, op_setne); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5053:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5055:
	PARM	#168.I
	PARM	#168.I
	PARM	#168.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5056:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5054:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_sete$qp15@Optimizer@quad


global @occx86@asm_sete$qp15@Optimizer@quad
@occx86@asm_sete$qp15@Optimizer@quad:
; Line 3658:	void asm_sete(Optimizer::QUAD* q)   { gen_xset(q, op_sete, op_sete, op_sete); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5061:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5063:
	PARM	#15E.I
	PARM	#15E.I
	PARM	#15E.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5064:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5062:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setc$qp15@Optimizer@quad


global @occx86@asm_setc$qp15@Optimizer@quad
@occx86@asm_setc$qp15@Optimizer@quad:
; Line 3659:	void asm_setc(Optimizer::QUAD* q)   { gen_xset(q, op_setc, op_seta, op_setc); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5069:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5071:
	PARM	#15D.I
	PARM	#159.I
	PARM	#15D.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5072:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5070:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_seta$qp15@Optimizer@quad


global @occx86@asm_seta$qp15@Optimizer@quad
@occx86@asm_seta$qp15@Optimizer@quad:
; Line 3660:	void asm_seta(Optimizer::QUAD* q)   { gen_xset(q, op_seta, op_setc, op_seta); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5077:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5079:
	PARM	#159.I
	PARM	#15D.I
	PARM	#159.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5080:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5078:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setnc$qp15@Optimizer@quad


global @occx86@asm_setnc$qp15@Optimizer@quad
@occx86@asm_setnc$qp15@Optimizer@quad:
; Line 3661:	void asm_setnc(Optimizer::QUAD* q)   { gen_xset(q, op_setnc, op_setbe, op_setae); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5085:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5087:
	PARM	#15A.I
	PARM	#15C.I
	PARM	#167.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5088:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5086:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setbe$qp15@Optimizer@quad


global @occx86@asm_setbe$qp15@Optimizer@quad
@occx86@asm_setbe$qp15@Optimizer@quad:
; Line 3662:	void asm_setbe(Optimizer::QUAD* q)   { gen_xset(q, op_setbe, op_setnc, op_setbe); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5093:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5095:
	PARM	#15C.I
	PARM	#167.I
	PARM	#15C.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5096:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5094:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setl$qp15@Optimizer@quad


global @occx86@asm_setl$qp15@Optimizer@quad
@occx86@asm_setl$qp15@Optimizer@quad:
; Line 3663:	void asm_setl(Optimizer::QUAD* q)   { gen_xset(q, op_setl, op_setg, op_setc); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5101:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5103:
	PARM	#15D.I
	PARM	#15F.I
	PARM	#161.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5104:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5102:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setg$qp15@Optimizer@quad


global @occx86@asm_setg$qp15@Optimizer@quad
@occx86@asm_setg$qp15@Optimizer@quad:
; Line 3664:	void asm_setg(Optimizer::QUAD* q)   { gen_xset(q, op_setg, op_setl, op_seta); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5109:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5111:
	PARM	#159.I
	PARM	#161.I
	PARM	#15F.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5112:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5110:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setle$qp15@Optimizer@quad


global @occx86@asm_setle$qp15@Optimizer@quad
@occx86@asm_setle$qp15@Optimizer@quad:
; Line 3665:	void asm_setle(Optimizer::QUAD* q)   { gen_xset(q, op_setle, op_setge, op_setbe); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5117:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5119:
	PARM	#15C.I
	PARM	#160.I
	PARM	#162.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5120:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5118:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_setge$qp15@Optimizer@quad


global @occx86@asm_setge$qp15@Optimizer@quad
@occx86@asm_setge$qp15@Optimizer@quad:
; Line 3666:	void asm_setge(Optimizer::QUAD* q)   { gen_xset(q, op_setge, op_setle, op_setae); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_5125:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5127:
	PARM	#15A.I
	PARM	#162.I
	PARM	#160.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_xset$qp15@Optimizer@quad8e_opcoden1n1:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 4

L_5128:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_5126:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_assn$qp15@Optimizer@quad


global @occx86@asm_assn$qp15@Optimizer@quad
@occx86@asm_assn$qp15@Optimizer@quad:
; Line 3668:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#90.UI
	BLOCK END
	BLOCK 2

L_5138:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_5140:
; Line 3669:	    AMODE *apa = nullptr, *apa1 = nullptr, *apl = nullptr, *apl1 = nullptr; 

	VAR START	apa
	T92(EAX).A =   #0.UI
	_apa:LINK(-4).A =   T92(EAX).A
	VAR START	apa1
	T93(EAX).A =   #0.UI
	_apa1:LINK(-8).A =   T93(EAX).A
	VAR START	apl
	T94(EAX).A =   #0.UI
	_apl:LINK(-12).A =   T94(EAX).A
	VAR START	apl1
	T95(EAX).A =   #0.UI
	_apl1:LINK(-16).A =   T95(EAX).A
	VAR START	opa
	VAR START	opl
	VAR START	szl
	VAR START	sza
; Line 3672:	    int szl; 

	T96(EAX).A =   _q:LINK(4).A
	T97(EAX).A =   *(T96(EAX) + 40).A.A
	T98(EAX).I =   *(T97(EAX) + 19).A.C
	_sza:LINK(-32).I =   T98(EAX).I
	VAR START	bits
; Line 3674:	    int bits = q->ans->bits; 

	T99(EAX).A =   _q:LINK(4).A
	T100(EAX).A =   *(T99(EAX) + 40).A.A
	T101(EAX).I =   *(T100(EAX) + 1C).A.C
	_bits:LINK(-36).I =   T101(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_5142:
; Line 3675:	    if (sza < 0) 

	T102(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_5141:PC ; T102(EAX).I S>= #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_5143:
; Line 3676:	        sza = -sza; 

	T103(EAX).I =   _sza:LINK(-32).I
	T104(EAX).I =  - T103(EAX).I
	_sza:LINK(-32).I =   T104(EAX).I
	BLOCK END
	BLOCK 7

L_5144:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_5141:
	BLOCK END
	BLOCK 9

L_5145:
	DBG BLOCK END
; Line 3677:	    szl = sza; 

	T105(EAX).I =   _sza:LINK(-32).I
	_szl:LINK(-28).I =   T105(EAX).I
; Line 3678:	    q->ans->bits = 0; 

	T106(EAX).A =   _q:LINK(4).A
	T107(EAX).A =   *(T106(EAX) + 40).A.A
	*(T107(EAX) + 1C).A.C =   #0.C
; Line 3679:	    getAmodes(q, &opa, q->ans, &apa, &apa1); 

	T108(EAX).A =   #_apa1:LINK(-8).A
	PARM	T108(EAX).A
	T109(EAX).A =   #_apa:LINK(-4).A
	PARM	T109(EAX).A
	T110(EAX).A =   _q:LINK(4).A
	T111(EAX).A =   *(T110(EAX) + 40).A.A
	PARM	T111(EAX).A
	T112(EAX).A =   #_opa:LINK(-20).A
	PARM	T112(EAX).A
	T113(EAX).A =   _q:LINK(4).A
	PARM	T113(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3680:	    q->ans->bits = bits; 

	T114(CL).C =   _bits:LINK(-36).I
	T115(EAX).A =   _q:LINK(4).A
	T116(EAX).A =   *(T115(EAX) + 40).A.A
	*(T116(EAX) + 1C).A.C =   T114(CL).C
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_5147:
; Line 3681:	    if (q->dc.opcode == Optimizer::i_assn) 

	T117(EAX).A =   _q:LINK(4).A
	T118(EAX).I =   *(T117(EAX) + 0+0).A.I
	CONDGO	L_5146:PC ; T118(EAX).I != #37.I
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_5148:
; Line 3682:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_5149:
; Line 3683:	        szl = q->dc.left->size; 

	T119(EAX).A =   _q:LINK(4).A
	T120(EAX).A =   *(T119(EAX) + 4+0).A.A
	T121(EAX).I =   *(T120(EAX) + 19).A.C
	_szl:LINK(-28).I =   T121(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_5151:
; Line 3684:	        if (szl < 0) 

	T122(EAX).I =   _szl:LINK(-28).I
	CONDGO	L_5150:PC ; T122(EAX).I S>= #0.C
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_5152:
; Line 3685:	            szl = -szl; 

	T123(EAX).I =   _szl:LINK(-28).I
	T124(EAX).I =  - T123(EAX).I
	_szl:LINK(-28).I =   T124(EAX).I
	BLOCK END
	BLOCK 17

L_5153:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_5150:
	BLOCK END
	BLOCK 19

L_5154:
	DBG BLOCK END
; Line 3687:	        getAmodes(q, &opl, q->dc.left, &apl, &apl1); 

	T125(EAX).A =   #_apl1:LINK(-16).A
	PARM	T125(EAX).A
	T126(EAX).A =   #_apl:LINK(-12).A
	PARM	T126(EAX).A
	T127(EAX).A =   _q:LINK(4).A
	T128(EAX).A =   *(T127(EAX) + 4+0).A.A
	PARM	T128(EAX).A
	T129(EAX).A =   #_opl:LINK(-24).A
	PARM	T129(EAX).A
	T130(EAX).A =   _q:LINK(4).A
	PARM	T130(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 3688:	    } 

	BLOCK END
	BLOCK 20

L_5155:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_5157:
	DBG BLOCK END
	GOTO	L_5156:PC
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_5158:
	BLOCK END
	BLOCK 24

L_5146:
; Line 3689:	    else if (q->dc.opcode == Optimizer::i_icon) 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_5160:
	T131(EAX).A =   _q:LINK(4).A
	T132(EAX).I =   *(T131(EAX) + 0+0).A.I
	CONDGO	L_5159:PC ; T132(EAX).I != #4D.I
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_5161:
; Line 3690:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_5162:
; Line 3691:	        opl = op_mov; 

	_opl:LINK(-24).I =   #11D.I
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_5164:
; Line 3692:	        if (sza == ISZ_ULONGLONG) 

	T133(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_5163:PC ; T133(EAX).I != #B.C
	BLOCK END
	BLOCK 30
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_5165:
; Line 3693:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_5166:
; Line 3695:	            apl = aimmed(q->dc.v.i); 

	T134(EAX).A =   _q:LINK(4).A
	T135(EDX:EAX).ULL =   *(T134(EAX) + 0+C+0).A.UI
	PARM	T135(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T136(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	_apl:LINK(-12).A =   T136(EAX).A
; Line 3697:	            apl1 = aimmed((q->dc.v.i >> 32)); 

	T137(EAX).A =   _q:LINK(4).A
	T138(EAX).UI =   *(T137(EAX) + 0+C+0).A.UI
	T139(EAX).UI = T138(EAX).UI U>> #20.I
	T140(EDX:EAX).ULL =   T139(EAX).UI
	PARM	T140(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T141(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	_apl1:LINK(-16).A =   T141(EAX).A
; Line 3699:	            if (q->dc.i < 0) 

	BLOCK END
	BLOCK 33

L_5167:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_5169:
	DBG BLOCK END
	GOTO	L_5168:PC
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_5170:
	BLOCK END
	BLOCK 37

L_5163:
; Line 3700:	                apl1 = aimmed(-1); 
; Line 3701:	            else 

; Line 3701:	            else 

; Line 3702:	                apl1 = aimmed(0); 

	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_5171:
; Line 3704:	        } 

; Line 3705:	        else 

	T142(EAX).A =   _q:LINK(4).A
	T143(EDX:EAX).ULL =   *(T142(EAX) + 0+C+0).A.UI
	PARM	T143(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T144(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	_apl:LINK(-12).A =   T144(EAX).A
; Line 3706:	        { 

	BLOCK END
	BLOCK 39

L_5172:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_5173:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_5168:
	BLOCK END
	BLOCK 42

L_5174:
	DBG BLOCK END
; Line 3707:	            apl = aimmed(q->dc.v.i); 

	BLOCK END
	BLOCK 43

L_5175:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_5177:
	DBG BLOCK END
	GOTO	L_5176:PC
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_5178:
	BLOCK END
	BLOCK 47

L_5159:
; Line 3708:	        } 
; Line 3709:	    } 

; Line 3709:	    } 

	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_5180:
; Line 3710:	    else if (q->dc.opcode == Optimizer::i_fcon) 

	T145(EAX).A =   _q:LINK(4).A
	T146(EAX).I =   *(T145(EAX) + 0+0).A.I
	CONDGO	L_5179:PC ; T146(EAX).I != #4E.I
	BLOCK END
	BLOCK 49
	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_5181:
; Line 3711:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_5182:
; Line 3712:	        Optimizer::SimpleExpression* node = Optimizer::simpleExpressionNode(Optimizer::se_f, 0, 0); 

	VAR START	node
	T147(EAX).A =   #0.C
	PARM	T147(EAX).A
	T148(EAX).A =   #0.C
	PARM	T148(EAX).A
	PARM	#6.I
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T149(EAX).A =   RV.T3(EAX).A
	PARMADJ	#C.N
	_node:LINK(-144).A =   T149(EAX).A
; Line 3713:	        node->sizeFromType = ISZ_LDOUBLE; 

	T150(EAX).A =   _node:LINK(-144).A
	*(T150(EAX) + 34).A.I =   #14.I
; Line 3714:	        node->f = q->dc.v.f; 

	T151(EAX).A =   _q:LINK(4).A
	T152(EAX).A = T151(EAX).A + #0.A
	T153(EAX).A = T152(EAX).A + #C.A
	T154(EAX).A = T153(EAX).A + #4.A
	PARM	T154(EAX).A
	T155(EAX).A =   _node:LINK(-144).A
	T156(EAX).A = T155(EAX).A + #8.A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@FPF@$basn$qrx3FPF:PC.UI
	PARMADJ	#8.N
; Line 3715:	        apl = beLocalAllocate<AMODE>(); 

	T157(EAX).UI =   #1.C
	PARM	T157(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T158(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	_apl:LINK(-12).A =   T158(EAX).A
; Line 3716:	        apl->offset = node; 

	T159(ECX).A =   _node:LINK(-144).A
	T160(EAX).A =   _apl:LINK(-12).A
	*(T160(EAX) + C).A.A =   T159(ECX).A
; Line 3717:	        make_floatconst(apl); 

	T161(EAX).A =   _apl:LINK(-12).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@occx86@make_floatconst$qp5amode:PC.UI
	PARMADJ	#4.N
; Line 3718:	    } 

	BLOCK END
	BLOCK 52

L_5183:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_5185:
	DBG BLOCK END
	GOTO	L_5184:PC
	BLOCK END
	BLOCK 54
	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_5186:
	BLOCK END
	BLOCK 56

L_5179:
; Line 3719:	    else 

; Line 3720:	        diag("asm_assn: unknown opcode"); 

	PARM	#L_5133:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 57

L_5187:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_5184:
	BLOCK END
	BLOCK 59

L_5188:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_5189:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_5176:
	BLOCK END
	BLOCK 62

L_5190:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_5191:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_5156:
	BLOCK END
	BLOCK 65

L_5192:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_5194:
; Line 3721:	    if (sza == szl || q->dc.left->mode == Optimizer::i_immed) 

	T162(ECX).I =   _szl:LINK(-28).I
	T163(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_6180:PC ; T163(EAX).I == T162(ECX).I
	BLOCK END
	BLOCK 67
	T164(EAX).A =   _q:LINK(4).A
	T165(EAX).A =   *(T164(EAX) + 4+0).A.A
	T166(EAX).I =   *(T165(EAX) + 0).A.I
	CONDGO	L_5193:PC ; T166(EAX).I != #1.C
	BLOCK END
	BLOCK 68

L_6180:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_5195:
; Line 3722:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_5196:
; Line 3723:	        if (q->atomic && (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_5198:
	T790(EAX).A =   _q:LINK(4).A
	CONDGO	L_5197:PC ; *(T790(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 72
	T791(EAX).A =   _q:LINK(4).A
	T792(EAX).A =   *(T791(EAX) + 40).A.A
	T793(AL).C =   *(T792(EAX) + 19).A.C
	CONDGO	L_6181:PC ; T793(AL).C == #B.C
	BLOCK END
	BLOCK 73
	T794(EAX).A =   _q:LINK(4).A
	T795(EAX).A =   *(T794(EAX) + 40).A.A
	T796(EAX).I =   *(T795(EAX) + 19).A.C
	CONDGO	L_5197:PC ; T796(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 74

L_6181:
	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_5199:
; Line 3724:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_5200:
; Line 3725:	            int lab = 0; 

	VAR START	lab
	T797(EAX).I =   #0.C
	_lab:LINK(-100).I =   T797(EAX).I
	VAR START	regflagsa
; Line 3726:	            int regflagsa = makeregflags(apa); 

	T798(EAX).A =   _apa:LINK(-4).A
	PARM	T798(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T799(EAX).I =   RV.T5(EAX).I
	PARMADJ	#4.N
	_regflagsa:LINK(-104).I =   T799(EAX).I
	VAR START	regflagsl
; Line 3727:	            int regflagsl = makeregflags(apl); 

	T800(EAX).A =   _apl:LINK(-12).A
	PARM	T800(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T801(EAX).I =   RV.T6(EAX).I
	PARMADJ	#4.N
	_regflagsl:LINK(-108).I =   T801(EAX).I
	VAR START	regflags
; Line 3728:	            int regflags = regflagsa | regflagsl; 

	T802(ECX).I =   _regflagsa:LINK(-104).I
	T803(EAX).I =   _regflagsl:LINK(-108).I
	T804(EAX).I = T802(ECX).I | T803(EAX).I
	_regflags:LINK(-112).I =   T804(EAX).I
	VAR START	pushreg1
; Line 3729:	            bool pushreg1 = false, pushreg2 = false; 

	_pushreg1:LINK(-113).BOOL =   #0.BOOL
	VAR START	pushreg2
	_pushreg2:LINK(-114).BOOL =   #0.BOOL
	VAR START	reg1
; Line 3730:	            int reg1 = 0, reg2 = 0; 

	T805(EAX).I =   #0.C
	_reg1:LINK(-120).I =   T805(EAX).I
	VAR START	reg2
	T806(EAX).I =   #0.C
	_reg2:LINK(-124).I =   T806(EAX).I
	VAR START	used_mask
; Line 3731:	            int used_mask = (1 << EAX) | (1 << EBX) | (1 << ECX) | (1 << EDX); 

	_used_mask:LINK(-128).I =   #F.I
	VAR START	pushpair
; Line 3732:	            bool pushpair = false; 

	_pushpair:LINK(-129).BOOL =   #0.BOOL
	VAR START	aplhold
; Line 3733:	            AMODE *aplhold = apl1, *apllold = apl; 

	T807(EAX).A =   _apl1:LINK(-16).A
	_aplhold:LINK(-136).A =   T807(EAX).A
	VAR START	apllold
	T808(EAX).A =   _apl:LINK(-12).A
	_apllold:LINK(-140).A =   T808(EAX).A
; Line 3734:	            gen_codes(op_push, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T809(EAX).UI =   #1.C
	PARM	T809(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T810(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T810(EAX).A
	T811(EAX).UI =   #7.C
	PARM	T811(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3735:	            gen_codes(op_push, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T812(EAX).UI =   #3.C
	PARM	T812(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T813(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T813(EAX).A
	T814(EAX).UI =   #7.C
	PARM	T814(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3736:	            pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_5202:
; Line 3737:	            if (apa->mode != am_dreg) 

	T815(EAX).A =   _apa:LINK(-4).A
	T816(EAX).I =   *(T815(EAX) + 0).A.I
	CONDGO	L_5201:PC ; T816(EAX).I == #2.C
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_5203:
; Line 3738:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_5204:
; Line 3739:	                if (regflagsa & used_mask) 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_5206:
	T817(ECX).I =   _regflagsa:LINK(-104).I
	T818(EAX).I =   _used_mask:LINK(-128).I
	T819(EAX).I = T817(ECX).I & T818(EAX).I
	CONDGO	L_5205:PC ; T819(EAX).I == #0.C
	BLOCK END
	BLOCK 82
	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_5207:
; Line 3740:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 84

L_5208:
; Line 3741:	                    apa = atomic_lea(apl, apa, regflags | used_mask, reg1, pushreg1); 

	T820(EAX).A =   #_pushreg1:LINK(-113).A
	PARM	T820(EAX).A
	T821(EAX).A =   #_reg1:LINK(-120).A
	PARM	T821(EAX).A
	T822(ECX).I =   _regflags:LINK(-112).I
	T823(EAX).I =   _used_mask:LINK(-128).I
	T824(EAX).I = T822(ECX).I | T823(EAX).I
	PARM	T824(EAX).I
	T825(EAX).A =   _apa:LINK(-4).A
	PARM	T825(EAX).A
	T826(EAX).A =   _apl:LINK(-12).A
	PARM	T826(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T827(EAX).A =   RV.T9(EAX).A
	PARMADJ	#14.N
	_apa:LINK(-4).A =   T827(EAX).A
; Line 3742:	                    apa1 = nullptr; 

	_apa1:LINK(-8).A =   #0.A
; Line 3743:	                    used_mask |= 1 << reg1; 

	T828(EDX).I =   _used_mask:LINK(-128).I
	T830(ECX).I =   _reg1:LINK(-120).I
	T1347(EAX).I =   T830(ECX).I^
	T1353(ECX).I =   T1347(EAX).I^
	T831(EAX).I = #1.C << T1353(ECX).I
	T832(EAX).I = T828(EDX).I | T831(EAX).I
	_used_mask:LINK(-128).I =   T832(EAX).I
; Line 3744:	                } 

	BLOCK END
	BLOCK 85

L_5209:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_5210:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_5205:
	BLOCK END
	BLOCK 88

L_5211:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 89

L_5213:
; Line 3745:	                if (!apa1) 

	T833(EAX).A =   _apa1:LINK(-8).A
	CONDGO	L_5212:PC ; T833(EAX).A != #0.A
	BLOCK END
	BLOCK 90
	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_5214:
; Line 3746:	                    apa1 = offsetToHigh(apl); 

	T834(EAX).A =   _apl:LINK(-12).A
	PARM	T834(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T835(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	_apa1:LINK(-8).A =   T835(EAX).A
	BLOCK END
	BLOCK 92

L_5215:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_5212:
	BLOCK END
	BLOCK 94

L_5216:
	DBG BLOCK END
; Line 3747:	                gen_codes(op_push, ISZ_UINT, apa1, nullptr); 

	PARM	#0.UI
	T836(EAX).A =   _apa1:LINK(-8).A
	PARM	T836(EAX).A
	T837(EAX).UI =   #7.C
	PARM	T837(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3748:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 3749:	                gen_codes(op_push, ISZ_UINT, apa, nullptr); 

	PARM	#0.UI
	T838(EAX).A =   _apa:LINK(-4).A
	PARM	T838(EAX).A
	T839(EAX).UI =   #7.C
	PARM	T839(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3750:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 3751:	            } 

	BLOCK END
	BLOCK 95

L_5217:
	DBG BLOCK END
	BLOCK END
	BLOCK 96

L_5219:
	DBG BLOCK END
	GOTO	L_5218:PC
	BLOCK END
	BLOCK 97
	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_5220:
	BLOCK END
	BLOCK 99

L_5201:
; Line 3752:	            else 

; Line 3753:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_5221:
; Line 3754:	                if (regflagsl & used_mask) 

	DBG BLOCK START
	BLOCK END
	BLOCK 101

L_5223:
	T840(ECX).I =   _regflagsl:LINK(-108).I
	T841(EAX).I =   _used_mask:LINK(-128).I
	T842(EAX).I = T840(ECX).I & T841(EAX).I
	CONDGO	L_5222:PC ; T842(EAX).I == #0.C
	BLOCK END
	BLOCK 102
	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_5224:
; Line 3755:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_5225:
; Line 3756:	                    apl = atomic_lea(apl, apl, regflags | used_mask, reg2, pushreg2); 

	T843(EAX).A =   #_pushreg2:LINK(-114).A
	PARM	T843(EAX).A
	T844(EAX).A =   #_reg2:LINK(-124).A
	PARM	T844(EAX).A
	T845(ECX).I =   _regflags:LINK(-112).I
	T846(EAX).I =   _used_mask:LINK(-128).I
	T847(EAX).I = T845(ECX).I | T846(EAX).I
	PARM	T847(EAX).I
	T848(EAX).A =   _apl:LINK(-12).A
	PARM	T848(EAX).A
	T849(EAX).A =   _apl:LINK(-12).A
	PARM	T849(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T850(EAX).A =   RV.T11(EAX).A
	PARMADJ	#14.N
	_apl:LINK(-12).A =   T850(EAX).A
; Line 3757:	                    apl1 = nullptr; 

	_apl1:LINK(-16).A =   #0.A
; Line 3758:	                    used_mask |= 1 << reg2; 

	T851(EDX).I =   _used_mask:LINK(-128).I
	T853(ECX).I =   _reg2:LINK(-124).I
	T1348(EAX).I =   T853(ECX).I^
	T1354(ECX).I =   T1348(EAX).I^
	T854(EAX).I = #1.C << T1354(ECX).I
	T855(EAX).I = T851(EDX).I | T854(EAX).I
	_used_mask:LINK(-128).I =   T855(EAX).I
; Line 3759:	                } 

	BLOCK END
	BLOCK 105

L_5226:
	DBG BLOCK END
	BLOCK END
	BLOCK 106

L_5227:
	DBG BLOCK END
	BLOCK END
	BLOCK 107

L_5222:
	BLOCK END
	BLOCK 108

L_5228:
	DBG BLOCK END
; Line 3760:	            } 

	BLOCK END
	BLOCK 109

L_5229:
	DBG BLOCK END
	BLOCK END
	BLOCK 110

L_5230:
	DBG BLOCK END
	BLOCK END
	BLOCK 111

L_5218:
	BLOCK END
	BLOCK 112

L_5231:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_5233:
; Line 3761:	            if (apl->mode == am_xmmreg) 

	T856(EAX).A =   _apl:LINK(-12).A
	T857(EAX).I =   *(T856(EAX) + 0).A.I
	CONDGO	L_5232:PC ; T857(EAX).I != #A.I
	BLOCK END
	BLOCK 114
	DBG BLOCK START
	BLOCK END
	BLOCK 115

L_5234:
; Line 3762:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_5235:
; Line 3763:	                gen_code(op_sub, makedreg(ESP), aimmed(8)); 

	T858(EDX:EAX).ULL =   #8.I
	PARM	T858(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T859(EAX).A =   RV.T12(EAX).A
	PARMADJ	#8.N
	PARM	T859(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T860(EAX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	PARM	T860(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3764:	                pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
; Line 3765:	                gen_code_sse(op_movsd, make_stack(0), apl); 

	T861(EAX).A =   _apl:LINK(-12).A
	PARM	T861(EAX).A
	T862(EAX).UI =   #0.C
	PARM	T862(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T863(EAX).A =   RV.T14(EAX).A
	PARMADJ	#4.N
	PARM	T863(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3766:	            } 

	BLOCK END
	BLOCK 117

L_5236:
	DBG BLOCK END
	BLOCK END
	BLOCK 118

L_5238:
	DBG BLOCK END
	GOTO	L_5237:PC
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_5239:
	BLOCK END
	BLOCK 121

L_5232:
; Line 3767:	            else 

; Line 3768:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 122

L_5240:
; Line 3769:	                if (!apl1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 123

L_5242:
	T864(EAX).A =   _apl1:LINK(-16).A
	CONDGO	L_5241:PC ; T864(EAX).A != #0.A
	BLOCK END
	BLOCK 124
	DBG BLOCK START
	BLOCK END
	BLOCK 125

L_5243:
; Line 3770:	                    apl1 = offsetToHigh(apl); 

	T865(EAX).A =   _apl:LINK(-12).A
	PARM	T865(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T866(EAX).A =   RV.T15(EAX).A
	PARMADJ	#4.N
	_apl1:LINK(-16).A =   T866(EAX).A
	BLOCK END
	BLOCK 126

L_5244:
	DBG BLOCK END
	BLOCK END
	BLOCK 127

L_5241:
	BLOCK END
	BLOCK 128

L_5245:
	DBG BLOCK END
; Line 3771:	                gen_codes(op_push, ISZ_UINT, apl1, nullptr); 

	PARM	#0.UI
	T867(EAX).A =   _apl1:LINK(-16).A
	PARM	T867(EAX).A
	T868(EAX).UI =   #7.C
	PARM	T868(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3772:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 3773:	                gen_codes(op_push, ISZ_UINT, apl, nullptr); 

	PARM	#0.UI
	T869(EAX).A =   _apl:LINK(-12).A
	PARM	T869(EAX).A
	T870(EAX).UI =   #7.C
	PARM	T870(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3774:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 3775:	            } 

	BLOCK END
	BLOCK 129

L_5246:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_5247:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_5237:
	BLOCK END
	BLOCK 132

L_5248:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_5250:
; Line 3776:	            if (apa->mode == am_dreg) 

	T871(EAX).A =   _apa:LINK(-4).A
	T872(EAX).I =   *(T871(EAX) + 0).A.I
	CONDGO	L_5249:PC ; T872(EAX).I != #2.C
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_5251:
; Line 3777:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_5252:
; Line 3778:	                gen_codes(op_mov, ISZ_UINT, makedreg(EAX), make_stack(-0)); 

	T873(EAX).UI =   #0.C
	PARM	T873(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T874(EAX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	PARM	T874(EAX).A
	T875(EAX).UI =   #0.C
	PARM	T875(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T876(EAX).A =   RV.T17(EAX).A
	PARMADJ	#4.N
	PARM	T876(EAX).A
	T877(EAX).UI =   #7.C
	PARM	T877(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3779:	                gen_codes(op_mov, ISZ_UINT, makedreg(EDX), make_stack(-4)); 

	PARM	#FFFFFFFFFFFFFFFC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T878(EAX).A =   RV.T18(EAX).A
	PARMADJ	#4.N
	PARM	T878(EAX).A
	T879(EAX).UI =   #2.C
	PARM	T879(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T880(EAX).A =   RV.T19(EAX).A
	PARMADJ	#4.N
	PARM	T880(EAX).A
	T881(EAX).UI =   #7.C
	PARM	T881(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3780:	                oa_gen_label(lab = beGetLabel); 

	T882(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-100).I =   T882(EAX).I
	T883(EAX).I =   _lab:LINK(-100).I
	PARM	T883(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 3781:	                gen_codes(op_mov, ISZ_UINT, makedreg(EBX), makedreg(EAX)); 

	T884(EAX).UI =   #0.C
	PARM	T884(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T885(EAX).A =   RV.T20(EAX).A
	PARMADJ	#4.N
	PARM	T885(EAX).A
	T886(EAX).UI =   #3.C
	PARM	T886(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T887(EAX).A =   RV.T21(EAX).A
	PARMADJ	#4.N
	PARM	T887(EAX).A
	T888(EAX).UI =   #7.C
	PARM	T888(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3782:	                gen_codes(op_mov, ISZ_UINT, makedreg(ECX), makedreg(EDX)); 

	T889(EAX).UI =   #2.C
	PARM	T889(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T890(EAX).A =   RV.T22(EAX).A
	PARMADJ	#4.N
	PARM	T890(EAX).A
	T891(EAX).UI =   #1.C
	PARM	T891(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T892(EAX).A =   RV.T23(EAX).A
	PARMADJ	#4.N
	PARM	T892(EAX).A
	T893(EAX).UI =   #7.C
	PARM	T893(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3783:	            } 

	BLOCK END
	BLOCK 137

L_5253:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_5255:
	DBG BLOCK END
	GOTO	L_5254:PC
	BLOCK END
	BLOCK 139
	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_5256:
	BLOCK END
	BLOCK 141

L_5249:
; Line 3784:	            else 

; Line 3785:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 142

L_5257:
; Line 3786:	                gen_codes(op_mov, ISZ_UINT, makedreg(EAX), make_stack(-8)); 

	PARM	#FFFFFFFFFFFFFFF8.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T894(EAX).A =   RV.T24(EAX).A
	PARMADJ	#4.N
	PARM	T894(EAX).A
	T895(EAX).UI =   #0.C
	PARM	T895(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T896(EAX).A =   RV.T25(EAX).A
	PARMADJ	#4.N
	PARM	T896(EAX).A
	T897(EAX).UI =   #7.C
	PARM	T897(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3787:	                gen_codes(op_mov, ISZ_UINT, makedreg(EDX), make_stack(-12)); 

	PARM	#FFFFFFFFFFFFFFF4.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T898(EAX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	PARM	T898(EAX).A
	T899(EAX).UI =   #2.C
	PARM	T899(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T900(EAX).A =   RV.T27(EAX).A
	PARMADJ	#4.N
	PARM	T900(EAX).A
	T901(EAX).UI =   #7.C
	PARM	T901(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3788:	                oa_gen_label(lab = beGetLabel); 

	T902(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-100).I =   T902(EAX).I
	T903(EAX).I =   _lab:LINK(-100).I
	PARM	T903(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 3789:	                gen_codes(op_mov, ISZ_UINT, makedreg(EBX), make_stack(-0)); 

	T904(EAX).UI =   #0.C
	PARM	T904(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T905(EAX).A =   RV.T28(EAX).A
	PARMADJ	#4.N
	PARM	T905(EAX).A
	T906(EAX).UI =   #3.C
	PARM	T906(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T907(EAX).A =   RV.T29(EAX).A
	PARMADJ	#4.N
	PARM	T907(EAX).A
	T908(EAX).UI =   #7.C
	PARM	T908(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3790:	                gen_codes(op_mov, ISZ_UINT, makedreg(ECX), make_stack(-4)); 

	PARM	#FFFFFFFFFFFFFFFC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T909(EAX).A =   RV.T30(EAX).A
	PARMADJ	#4.N
	PARM	T909(EAX).A
	T910(EAX).UI =   #1.C
	PARM	T910(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T911(EAX).A =   RV.T31(EAX).A
	PARMADJ	#4.N
	PARM	T911(EAX).A
	T912(EAX).UI =   #7.C
	PARM	T912(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3791:	            } 

	BLOCK END
	BLOCK 143

L_5258:
	DBG BLOCK END
	BLOCK END
	BLOCK 144

L_5259:
	DBG BLOCK END
	BLOCK END
	BLOCK 145

L_5254:
	BLOCK END
	BLOCK 146

L_5260:
	DBG BLOCK END
; Line 3792:	            gen_codes(op_cmpxchg8b, ISZ_NONE, apa->mode == am_dreg ? apl : apa, nullptr); 

	PARM	#0.UI
	T913(EAX).A =   _apa:LINK(-4).A
	T914(EAX).I =   *(T913(EAX) + 0).A.I
	CONDGO	L_6182:PC ; T914(EAX).I != #2.C
	BLOCK END
	BLOCK 147
	T916(EAX).A =   _apl:LINK(-12).A
	GOTO	L_6183:PC
	BLOCK END
	BLOCK 148

L_6182:
	T917(EAX).A =   _apa:LINK(-4).A
	T916(EAX).A =   T917(EAX).A
	BLOCK END
	BLOCK 149

L_6183:
	PARM	T916(EAX).A
	T918(EAX).UI =   #0.C
	PARM	T918(EAX).UI
	PARM	#5E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3793:	            gen_code(op_jne, make_label(lab), NULL); 

	T919(EAX).A =   #0.C
	PARM	T919(EAX).A
	T920(EAX).I =   _lab:LINK(-100).I
	PARM	T920(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T921(EAX).A =   RV.T32(EAX).A
	PARMADJ	#4.N
	PARM	T921(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_5262:
; Line 3794:	            if (apa->mode == am_dreg) 

	T922(EAX).A =   _apa:LINK(-4).A
	T923(EAX).I =   *(T922(EAX) + 0).A.I
	CONDGO	L_5261:PC ; T923(EAX).I != #2.C
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_5263:
; Line 3795:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_5264:
; Line 3796:	                gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T924(EDX:EAX).ULL =   #8.I
	PARM	T924(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T925(EAX).A =   RV.T33(EAX).A
	PARMADJ	#8.N
	PARM	T925(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T926(EAX).A =   RV.T34(EAX).A
	PARMADJ	#4.N
	PARM	T926(EAX).A
	T927(EAX).UI =   #7.C
	PARM	T927(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3797:	                pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 3798:	            } 

	BLOCK END
	BLOCK 154

L_5265:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_5267:
	DBG BLOCK END
	GOTO	L_5266:PC
	BLOCK END
	BLOCK 156
	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_5268:
	BLOCK END
	BLOCK 158

L_5261:
; Line 3799:	            else 

; Line 3800:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 159

L_5269:
; Line 3801:	                gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(16)); 

	T928(EDX:EAX).ULL =   #10.I
	PARM	T928(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T929(EAX).A =   RV.T35(EAX).A
	PARMADJ	#8.N
	PARM	T929(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T930(EAX).A =   RV.T36(EAX).A
	PARMADJ	#4.N
	PARM	T930(EAX).A
	T931(EAX).UI =   #7.C
	PARM	T931(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3802:	                pushlevel -= 16; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #10.I
; Line 3803:	            } 

	BLOCK END
	BLOCK 160

L_5270:
	DBG BLOCK END
	BLOCK END
	BLOCK 161

L_5271:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_5266:
	BLOCK END
	BLOCK 163

L_5272:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 164

L_5274:
; Line 3805:	            if (pushreg2) 

	T932(AL).BOOL =   _pushreg2:LINK(-114).BOOL
	CONDGO	L_5273:PC ; T932(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 165
	DBG BLOCK START
	BLOCK END
	BLOCK 166

L_5275:
; Line 3806:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_5276:
; Line 3807:	                gen_codes(op_pop, ISZ_UINT, makedreg(reg2), nullptr); 

	PARM	#0.UI
	T933(EAX).I =   _reg2:LINK(-124).I
	PARM	T933(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T934(EAX).A =   RV.T37(EAX).A
	PARMADJ	#4.N
	PARM	T934(EAX).A
	T935(EAX).UI =   #7.C
	PARM	T935(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3808:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 3809:	            } 

	BLOCK END
	BLOCK 168

L_5277:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_5278:
	DBG BLOCK END
	BLOCK END
	BLOCK 170

L_5273:
	BLOCK END
	BLOCK 171

L_5279:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_5281:
; Line 3810:	            if (pushreg1) 

	T936(AL).BOOL =   _pushreg1:LINK(-113).BOOL
	CONDGO	L_5280:PC ; T936(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_5282:
; Line 3811:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_5283:
; Line 3812:	                gen_codes(op_pop, ISZ_UINT, makedreg(reg1), nullptr); 

	PARM	#0.UI
	T937(EAX).I =   _reg1:LINK(-120).I
	PARM	T937(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T938(EAX).A =   RV.T38(EAX).A
	PARMADJ	#4.N
	PARM	T938(EAX).A
	T939(EAX).UI =   #7.C
	PARM	T939(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3813:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 3814:	            } 

	BLOCK END
	BLOCK 176

L_5284:
	DBG BLOCK END
	BLOCK END
	BLOCK 177

L_5286:
	DBG BLOCK END
	GOTO	L_5285:PC
	BLOCK END
	BLOCK 178
	DBG BLOCK START
	BLOCK END
	BLOCK 179

L_5287:
	BLOCK END
	BLOCK 180

L_5280:
; Line 3815:	            else if (pushpair) 

	DBG BLOCK START
	BLOCK END
	BLOCK 181

L_5289:
	T940(AL).BOOL =   _pushpair:LINK(-129).BOOL
	CONDGO	L_5288:PC ; T940(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 182
	DBG BLOCK START
	BLOCK END
	BLOCK 183

L_5290:
; Line 3816:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 184

L_5291:
; Line 3817:	                gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T941(EDX:EAX).ULL =   #8.I
	PARM	T941(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T942(EAX).A =   RV.T39(EAX).A
	PARMADJ	#8.N
	PARM	T942(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T943(EAX).A =   RV.T40(EAX).A
	PARMADJ	#4.N
	PARM	T943(EAX).A
	T944(EAX).UI =   #7.C
	PARM	T944(EAX).UI
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3818:	                pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 3819:	            } 

	BLOCK END
	BLOCK 185

L_5292:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_5293:
	DBG BLOCK END
	BLOCK END
	BLOCK 187

L_5288:
	BLOCK END
	BLOCK 188

L_5294:
	DBG BLOCK END
	BLOCK END
	BLOCK 189

L_5295:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_5285:
	BLOCK END
	BLOCK 191

L_5296:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 192

L_5298:
; Line 3820:	            if (apa->preg != EBX && (!apa1 || apa1->preg != EBX)) 

	T945(EAX).A =   _apa:LINK(-4).A
	T946(AL).C =   *(T945(EAX) + 4).A.C
	CONDGO	L_5297:PC ; T946(AL).C == #3.C
	BLOCK END
	BLOCK 193
	T947(EAX).A =   _apa1:LINK(-8).A
	CONDGO	L_6184:PC ; T947(EAX).A == #0.A
	BLOCK END
	BLOCK 194
	T948(EAX).A =   _apa1:LINK(-8).A
	T949(AL).C =   *(T948(EAX) + 4).A.C
	CONDGO	L_5297:PC ; T949(AL).C == #3.C
	BLOCK END
	BLOCK 195

L_6184:
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_5299:
; Line 3821:	                gen_codes(op_pop, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T950(EAX).UI =   #3.C
	PARM	T950(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T951(EAX).A =   RV.T41(EAX).A
	PARMADJ	#4.N
	PARM	T951(EAX).A
	T952(EAX).UI =   #7.C
	PARM	T952(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 197

L_5301:
	DBG BLOCK END
	GOTO	L_5300:PC
	BLOCK END
	BLOCK 198
	DBG BLOCK START
	BLOCK END
	BLOCK 199

L_5302:
	BLOCK END
	BLOCK 200

L_5297:
; Line 3822:	            else 

; Line 3823:	                gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T953(EDX:EAX).ULL =   #4.I
	PARM	T953(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T954(EAX).A =   RV.T42(EAX).A
	PARMADJ	#8.N
	PARM	T954(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T955(EAX).A =   RV.T43(EAX).A
	PARMADJ	#4.N
	PARM	T955(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 201

L_5303:
	DBG BLOCK END
	BLOCK END
	BLOCK 202

L_5300:
	BLOCK END
	BLOCK 203

L_5304:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_5306:
; Line 3824:	            if (apa->preg != ECX && (!apa1 || apa1->preg != ECX)) 

	T956(EAX).A =   _apa:LINK(-4).A
	T957(AL).C =   *(T956(EAX) + 4).A.C
	CONDGO	L_5305:PC ; T957(AL).C == #1.C
	BLOCK END
	BLOCK 205
	T958(EAX).A =   _apa1:LINK(-8).A
	CONDGO	L_6185:PC ; T958(EAX).A == #0.A
	BLOCK END
	BLOCK 206
	T959(EAX).A =   _apa1:LINK(-8).A
	T960(AL).C =   *(T959(EAX) + 4).A.C
	CONDGO	L_5305:PC ; T960(AL).C == #1.C
	BLOCK END
	BLOCK 207

L_6185:
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_5307:
; Line 3825:	                gen_codes(op_pop, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T961(EAX).UI =   #1.C
	PARM	T961(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T962(EAX).A =   RV.T44(EAX).A
	PARMADJ	#4.N
	PARM	T962(EAX).A
	T963(EAX).UI =   #7.C
	PARM	T963(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 209

L_5309:
	DBG BLOCK END
	GOTO	L_5308:PC
	BLOCK END
	BLOCK 210
	DBG BLOCK START
	BLOCK END
	BLOCK 211

L_5310:
	BLOCK END
	BLOCK 212

L_5305:
; Line 3826:	            else 

; Line 3827:	                gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T964(EDX:EAX).ULL =   #4.I
	PARM	T964(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T965(EAX).A =   RV.T45(EAX).A
	PARMADJ	#8.N
	PARM	T965(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T966(EAX).A =   RV.T46(EAX).A
	PARMADJ	#4.N
	PARM	T966(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 213

L_5311:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_5308:
	BLOCK END
	BLOCK 215

L_5312:
	DBG BLOCK END
; Line 3828:	            pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 3829:	        } 

	BLOCK END
	BLOCK 216

L_5313:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_5315:
	DBG BLOCK END
	GOTO	L_5314:PC
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_5316:
	BLOCK END
	BLOCK 220

L_5197:
; Line 3830:	        else if (q->atomic && (q->ans->mode != Optimizer::i_direct || q->ans->offset->type != Optimizer::se_tempref)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_5318:
	T967(EAX).A =   _q:LINK(4).A
	CONDGO	L_5317:PC ; *(T967(EAX) + B8){22:1}.A.I == #0.C
	BLOCK END
	BLOCK 222
	T968(EAX).A =   _q:LINK(4).A
	T969(EAX).A =   *(T968(EAX) + 40).A.A
	T970(EAX).I =   *(T969(EAX) + 0).A.I
	CONDGO	L_6186:PC ; T970(EAX).I != #2.C
	BLOCK END
	BLOCK 223
	T971(EAX).A =   _q:LINK(4).A
	T972(EAX).A =   *(T971(EAX) + 40).A.A
	T973(EAX).A =   *(T972(EAX) + 4).A.A
	T974(EAX).I =   *(T973(EAX) + 0).A.I
	CONDGO	L_5317:PC ; T974(EAX).I == #12.C
	BLOCK END
	BLOCK 224

L_6186:
	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_5319:
; Line 3831:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 226

L_5320:
; Line 3833:	            gen_code(op_xchg, apa, apl); 

	T975(EAX).A =   _apl:LINK(-12).A
	PARM	T975(EAX).A
	T976(EAX).A =   _apa:LINK(-4).A
	PARM	T976(EAX).A
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3834:	        } 

	BLOCK END
	BLOCK 227

L_5321:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_5323:
	DBG BLOCK END
	GOTO	L_5322:PC
	BLOCK END
	BLOCK 229
	DBG BLOCK START
	BLOCK END
	BLOCK 230

L_5324:
	BLOCK END
	BLOCK 231

L_5317:
; Line 3835:	        else if (q->ans->retval && q->ans->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 232

L_5326:
	T977(EAX).A =   _q:LINK(4).A
	T978(EAX).A =   *(T977(EAX) + 40).A.A
	CONDGO	L_5325:PC ; *(T978(EAX) + 20){2:1}.A.UC == #0.UC
	BLOCK END
	BLOCK 233
	T979(EAX).A =   _q:LINK(4).A
	T980(EAX).A =   *(T979(EAX) + 40).A.A
	T981(EAX).I =   *(T980(EAX) + 19).A.C
	CONDGO	L_5325:PC ; T981(EAX).I S< #12.C
	BLOCK END
	BLOCK 234
	DBG BLOCK START
	BLOCK END
	BLOCK 235

L_5327:
; Line 3836:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 236

L_5328:
; Line 3837:	            if (Optimizer::fltexp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 237

L_5330:
	T982(EAX).A =   @Optimizer@fltexp:RAM.A
	CONDGO	L_5329:PC ; T982(EAX).A == #0.A
	BLOCK END
	BLOCK 238
	DBG BLOCK START
	BLOCK END
	BLOCK 239

L_5331:
; Line 3838:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_5332:
; Line 3839:	                AMODE* ap = make_offset(Optimizer::fltexp); 

	VAR START	ap
	T983(EAX).A =   @Optimizer@fltexp:RAM.A
	PARM	T983(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T984(EAX).A =   RV.T47(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-88).A =   T984(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_5334:
; Line 3840:	                if (q->ans->size >= ISZ_CFLOAT) 

	T985(EAX).A =   _q:LINK(4).A
	T986(EAX).A =   *(T985(EAX) + 40).A.A
	T987(EAX).I =   *(T986(EAX) + 19).A.C
	CONDGO	L_5333:PC ; T987(EAX).I S< #18.C
	BLOCK END
	BLOCK 242
	DBG BLOCK START
	BLOCK END
	BLOCK 243

L_5335:
; Line 3841:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 244

L_5336:
; Line 3842:	                    int sz = 8; 

	VAR START	sz
	_sz:LINK(-92).I =   #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_5338:
; Line 3843:	                    if (q->ans->size == ISZ_CFLOAT) 

	T988(EAX).A =   _q:LINK(4).A
	T989(EAX).A =   *(T988(EAX) + 40).A.A
	T990(AL).C =   *(T989(EAX) + 19).A.C
	CONDGO	L_5337:PC ; T990(AL).C != #18.C
	BLOCK END
	BLOCK 246
	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_5339:
; Line 3844:	                        sz = 4; 

	_sz:LINK(-92).I =   #4.I
	BLOCK END
	BLOCK 248

L_5340:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_5337:
	BLOCK END
	BLOCK 250

L_5341:
	DBG BLOCK END
	VAR START	ap1
; Line 3845:	                    AMODE* ap1 = make_offset(Optimizer::simpleExpressionNode(Optimizer::se_add, Optimizer::fltexp, 
; Line 3846:	                                                                             Optimizer::simpleIntNode(Optimizer::se_i, sz))); 

; Line 3846:	                                                                             Optimizer::simpleIntNode(Optimizer::se_i, sz))); 

	T991(EDX:EAX).ULL =   _sz:LINK(-92).I
	PARM	T991(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T992(EAX).A =   RV.T48(EAX).A
	PARMADJ	#C.N
	PARM	T992(EAX).A
	T993(EAX).A =   @Optimizer@fltexp:RAM.A
	PARM	T993(EAX).A
	T994(EAX).UI =   #1.C
	PARM	T994(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T995(EAX).A =   RV.T49(EAX).A
	PARMADJ	#C.N
	PARM	T995(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T996(EAX).A =   RV.T50(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-96).A =   T996(EAX).A
; Line 3847:	                    apa = moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T997(EAX).A =   _q:LINK(4).A
	T998(EAX).A =   *(T997(EAX) + 4+0).A.A
	T999(EAX).I =   *(T998(EAX) + 19).A.C
	PARM	T999(EAX).I
	T1000(EAX).A =   _apl:LINK(-12).A
	PARM	T1000(EAX).A
	T1001(EAX).A =   _q:LINK(4).A
	T1002(EAX).A =   *(T1001(EAX) + 40).A.A
	T1003(EAX).I =   *(T1002(EAX) + 19).A.C
	PARM	T1003(EAX).I
	T1004(EAX).A =   _apa:LINK(-4).A
	PARM	T1004(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	T1005(EAX).A =   RV.T51(EAX).A
	PARMADJ	#10.N
	_apa:LINK(-4).A =   T1005(EAX).A
; Line 3848:	                    apa1 = moveFP(apa1, q->ans->size, apl1, q->dc.left->size); 

	T1006(EAX).A =   _q:LINK(4).A
	T1007(EAX).A =   *(T1006(EAX) + 4+0).A.A
	T1008(EAX).I =   *(T1007(EAX) + 19).A.C
	PARM	T1008(EAX).I
	T1009(EAX).A =   _apl1:LINK(-16).A
	PARM	T1009(EAX).A
	T1010(EAX).A =   _q:LINK(4).A
	T1011(EAX).A =   *(T1010(EAX) + 40).A.A
	T1012(EAX).I =   *(T1011(EAX) + 19).A.C
	PARM	T1012(EAX).I
	T1013(EAX).A =   _apa1:LINK(-8).A
	PARM	T1013(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	T1014(EAX).A =   RV.T52(EAX).A
	PARMADJ	#10.N
	_apa1:LINK(-8).A =   T1014(EAX).A
; Line 3849:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, ap, apa); 

	T1015(EAX).A =   _apa:LINK(-4).A
	PARM	T1015(EAX).A
	T1016(EAX).A =   _ap:LINK(-88).A
	PARM	T1016(EAX).A
	T1017(EAX).A =   _q:LINK(4).A
	T1018(EAX).A =   *(T1017(EAX) + 40).A.A
	T1019(EAX).I =   *(T1018(EAX) + 19).A.C
	PARM	T1019(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3850:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, ap1, apa1); 

	T1020(EAX).A =   _apa1:LINK(-8).A
	PARM	T1020(EAX).A
	T1021(EAX).A =   _ap1:LINK(-96).A
	PARM	T1021(EAX).A
	T1022(EAX).A =   _q:LINK(4).A
	T1023(EAX).A =   *(T1022(EAX) + 40).A.A
	T1024(EAX).I =   *(T1023(EAX) + 19).A.C
	PARM	T1024(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3851:	                    ap1->length = ap->length = q->ans->size - ISZ_CFLOAT + ISZ_FLOAT; 

	T1025(EAX).A =   _q:LINK(4).A
	T1026(EAX).A =   *(T1025(EAX) + 40).A.A
	T1027(EAX).I =   *(T1026(EAX) + 19).A.C
	T1028(EAX).I = #FFFFFFFFFFFFFFFA.I + T1027(EAX).I
	T1029(CL).C =   T1028(EAX).I
	T1030(EAX).A =   _ap:LINK(-88).A
	*(T1030(EAX) + 8).A.C =   T1029(CL).C
	T1031(CL).C =   *(T1030(EAX) + 8).A.C
	T1032(EAX).A =   _ap1:LINK(-96).A
	*(T1032(EAX) + 8).A.C =   T1031(CL).C
; Line 3852:	                    gen_codef(op_fld, ap1, NULL); 

	T1033(EAX).A =   #0.C
	PARM	T1033(EAX).A
	T1034(EAX).A =   _ap1:LINK(-96).A
	PARM	T1034(EAX).A
	PARM	#98.I
	TAG
	GOSUB	#@occx86@gen_codef$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3853:	                    gen_codef(op_fld, ap, NULL); 

	T1035(EAX).A =   #0.C
	PARM	T1035(EAX).A
	T1036(EAX).A =   _ap:LINK(-88).A
	PARM	T1036(EAX).A
	PARM	#98.I
	TAG
	GOSUB	#@occx86@gen_codef$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3854:	                } 

	BLOCK END
	BLOCK 251

L_5342:
	DBG BLOCK END
	BLOCK END
	BLOCK 252

L_5344:
	DBG BLOCK END
	GOTO	L_5343:PC
	BLOCK END
	BLOCK 253
	DBG BLOCK START
	BLOCK END
	BLOCK 254

L_5345:
	BLOCK END
	BLOCK 255

L_5333:
; Line 3855:	                else 

; Line 3856:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 256

L_5346:
; Line 3857:	                    apa = moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T1037(EAX).A =   _q:LINK(4).A
	T1038(EAX).A =   *(T1037(EAX) + 4+0).A.A
	T1039(EAX).I =   *(T1038(EAX) + 19).A.C
	PARM	T1039(EAX).I
	T1040(EAX).A =   _apl:LINK(-12).A
	PARM	T1040(EAX).A
	T1041(EAX).A =   _q:LINK(4).A
	T1042(EAX).A =   *(T1041(EAX) + 40).A.A
	T1043(EAX).I =   *(T1042(EAX) + 19).A.C
	PARM	T1043(EAX).I
	T1044(EAX).A =   _apa:LINK(-4).A
	PARM	T1044(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	T1045(EAX).A =   RV.T53(EAX).A
	PARMADJ	#10.N
	_apa:LINK(-4).A =   T1045(EAX).A
; Line 3858:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, ap, apa); 

	T1046(EAX).A =   _apa:LINK(-4).A
	PARM	T1046(EAX).A
	T1047(EAX).A =   _ap:LINK(-88).A
	PARM	T1047(EAX).A
	T1048(EAX).A =   _q:LINK(4).A
	T1049(EAX).A =   *(T1048(EAX) + 40).A.A
	T1050(EAX).I =   *(T1049(EAX) + 19).A.C
	PARM	T1050(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3859:	                    ap->length = q->ans->size >= ISZ_IFLOAT ? q->ans->size - ISZ_IFLOAT + ISZ_FLOAT : q->ans->size; 

	T1051(EAX).A =   _q:LINK(4).A
	T1052(EAX).A =   *(T1051(EAX) + 40).A.A
	T1053(EAX).I =   *(T1052(EAX) + 19).A.C
	CONDGO	L_6187:PC ; T1053(EAX).I S< #15.I
	BLOCK END
	BLOCK 257
	T1054(EAX).A =   _q:LINK(4).A
	T1055(EAX).A =   *(T1054(EAX) + 40).A.A
	T1056(EAX).I =   *(T1055(EAX) + 19).A.C
	T1058(EAX).I = #FFFFFFFFFFFFFFFD.I + T1056(EAX).I
	GOTO	L_6188:PC
	BLOCK END
	BLOCK 258

L_6187:
	T1059(EAX).A =   _q:LINK(4).A
	T1060(EAX).A =   *(T1059(EAX) + 40).A.A
	T1061(EAX).I =   *(T1060(EAX) + 19).A.C
	T1058(EAX).I =   T1061(EAX).I
	BLOCK END
	BLOCK 259

L_6188:
	T1062(CL).C =   T1058(EAX).I
	T1063(EAX).A =   _ap:LINK(-88).A
	*(T1063(EAX) + 8).A.C =   T1062(CL).C
; Line 3860:	                    gen_codef(op_fld, ap, NULL); 

	T1064(EAX).A =   #0.C
	PARM	T1064(EAX).A
	T1065(EAX).A =   _ap:LINK(-88).A
	PARM	T1065(EAX).A
	PARM	#98.I
	TAG
	GOSUB	#@occx86@gen_codef$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3861:	                } 

	BLOCK END
	BLOCK 260

L_5347:
	DBG BLOCK END
	BLOCK END
	BLOCK 261

L_5348:
	DBG BLOCK END
	BLOCK END
	BLOCK 262

L_5343:
	BLOCK END
	BLOCK 263

L_5349:
	DBG BLOCK END
; Line 3862:	            } 

	BLOCK END
	BLOCK 264

L_5350:
	DBG BLOCK END
	BLOCK END
	BLOCK 265

L_5352:
	DBG BLOCK END
	GOTO	L_5351:PC
	BLOCK END
	BLOCK 266
	DBG BLOCK START
	BLOCK END
	BLOCK 267

L_5353:
	BLOCK END
	BLOCK 268

L_5329:
; Line 3863:	            else 

; Line 3864:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 269

L_5354:
; Line 3865:	                diag("asm_assn: no float store area"); 

	PARM	#L_5134:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 3866:	            } 

	BLOCK END
	BLOCK 270

L_5355:
	DBG BLOCK END
	BLOCK END
	BLOCK 271

L_5356:
	DBG BLOCK END
	BLOCK END
	BLOCK 272

L_5351:
	BLOCK END
	BLOCK 273

L_5357:
	DBG BLOCK END
; Line 3867:	        } 

	BLOCK END
	BLOCK 274

L_5358:
	DBG BLOCK END
	BLOCK END
	BLOCK 275

L_5360:
	DBG BLOCK END
	GOTO	L_5359:PC
	BLOCK END
	BLOCK 276
	DBG BLOCK START
	BLOCK END
	BLOCK 277

L_5361:
	BLOCK END
	BLOCK 278

L_5325:
; Line 3868:	        else if (q->dc.left->retval && q->dc.left->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 279

L_5363:
	T1066(EAX).A =   _q:LINK(4).A
	T1067(EAX).A =   *(T1066(EAX) + 4+0).A.A
	CONDGO	L_5362:PC ; *(T1067(EAX) + 20){2:1}.A.UC == #0.UC
	BLOCK END
	BLOCK 280
	T1068(EAX).A =   _q:LINK(4).A
	T1069(EAX).A =   *(T1068(EAX) + 4+0).A.A
	T1070(EAX).I =   *(T1069(EAX) + 19).A.C
	CONDGO	L_5362:PC ; T1070(EAX).I S< #12.C
	BLOCK END
	BLOCK 281
	DBG BLOCK START
	BLOCK END
	BLOCK 282

L_5364:
; Line 3869:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 283

L_5365:
; Line 3870:	            if (q->dc.left->altretval) 

	DBG BLOCK START
	BLOCK END
	BLOCK 284

L_5367:
	T1071(EAX).A =   _q:LINK(4).A
	T1072(EAX).A =   *(T1071(EAX) + 4+0).A.A
	CONDGO	L_5366:PC ; *(T1072(EAX) + 20){3:1}.A.UC == #0.UC
	BLOCK END
	BLOCK 285
	DBG BLOCK START
	BLOCK END
	BLOCK 286

L_5368:
; Line 3871:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 287

L_5369:
; Line 3872:	                moveFP(apa, q->ans->size, makeSSE(0), q->dc.left->size); 

	T1073(EAX).A =   _q:LINK(4).A
	T1074(EAX).A =   *(T1073(EAX) + 4+0).A.A
	T1075(EAX).I =   *(T1074(EAX) + 19).A.C
	PARM	T1075(EAX).I
	T1076(EAX).UI =   #0.C
	PARM	T1076(EAX).UI
	TAG
	GOSUB	#@occx86@makeSSE$qi:PC.UI
	T1077(EAX).A =   RV.T54(EAX).A
	PARMADJ	#4.N
	PARM	T1077(EAX).A
	T1078(EAX).A =   _q:LINK(4).A
	T1079(EAX).A =   *(T1078(EAX) + 40).A.A
	T1080(EAX).I =   *(T1079(EAX) + 19).A.C
	PARM	T1080(EAX).I
	T1081(EAX).A =   _apa:LINK(-4).A
	PARM	T1081(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3873:	            } 

	BLOCK END
	BLOCK 288

L_5370:
	DBG BLOCK END
	BLOCK END
	BLOCK 289

L_5372:
	DBG BLOCK END
	GOTO	L_5371:PC
	BLOCK END
	BLOCK 290
	DBG BLOCK START
	BLOCK END
	BLOCK 291

L_5373:
	BLOCK END
	BLOCK 292

L_5366:
; Line 3874:	            else 

; Line 3875:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 293

L_5374:
; Line 3876:	                if (Optimizer::fltexp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 294

L_5376:
	T1082(EAX).A =   @Optimizer@fltexp:RAM.A
	CONDGO	L_5375:PC ; T1082(EAX).A == #0.A
	BLOCK END
	BLOCK 295
	DBG BLOCK START
	BLOCK END
	BLOCK 296

L_5377:
; Line 3877:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 297

L_5378:
; Line 3878:	                    AMODE* ap = make_offset(Optimizer::fltexp); 

	VAR START	ap
	T1083(EAX).A =   @Optimizer@fltexp:RAM.A
	PARM	T1083(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T1084(EAX).A =   RV.T55(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-76).A =   T1084(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 298

L_5380:
; Line 3879:	                    if (q->ans->size >= ISZ_CFLOAT) 

	T1085(EAX).A =   _q:LINK(4).A
	T1086(EAX).A =   *(T1085(EAX) + 40).A.A
	T1087(EAX).I =   *(T1086(EAX) + 19).A.C
	CONDGO	L_5379:PC ; T1087(EAX).I S< #18.C
	BLOCK END
	BLOCK 299
	DBG BLOCK START
	BLOCK END
	BLOCK 300

L_5381:
; Line 3880:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 301

L_5382:
; Line 3881:	                        int sz = 8; 

	VAR START	sz
	_sz:LINK(-80).I =   #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 302

L_5384:
; Line 3882:	                        if (q->ans->size == ISZ_CFLOAT) 

	T1088(EAX).A =   _q:LINK(4).A
	T1089(EAX).A =   *(T1088(EAX) + 40).A.A
	T1090(AL).C =   *(T1089(EAX) + 19).A.C
	CONDGO	L_5383:PC ; T1090(AL).C != #18.C
	BLOCK END
	BLOCK 303
	DBG BLOCK START
	BLOCK END
	BLOCK 304

L_5385:
; Line 3883:	                            sz = 4; 

	_sz:LINK(-80).I =   #4.I
	BLOCK END
	BLOCK 305

L_5386:
	DBG BLOCK END
	BLOCK END
	BLOCK 306

L_5383:
	BLOCK END
	BLOCK 307

L_5387:
	DBG BLOCK END
	VAR START	ap1
; Line 3884:	                        AMODE* ap1 = make_offset(Optimizer::simpleExpressionNode(Optimizer::se_add, Optimizer::fltexp, 
; Line 3885:	                                                                                 Optimizer::simpleIntNode(Optimizer::se_i, sz))); 

; Line 3885:	                                                                                 Optimizer::simpleIntNode(Optimizer::se_i, sz))); 

	T1091(EDX:EAX).ULL =   _sz:LINK(-80).I
	PARM	T1091(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T1092(EAX).A =   RV.T56(EAX).A
	PARMADJ	#C.N
	PARM	T1092(EAX).A
	T1093(EAX).A =   @Optimizer@fltexp:RAM.A
	PARM	T1093(EAX).A
	T1094(EAX).UI =   #1.C
	PARM	T1094(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T1095(EAX).A =   RV.T57(EAX).A
	PARMADJ	#C.N
	PARM	T1095(EAX).A
	TAG
	GOSUB	#@occx86@make_offset$qp27@Optimizer@SimpleExpression:PC.UI
	T1096(EAX).A =   RV.T58(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-84).A =   T1096(EAX).A
; Line 3886:	                        ap1->length = ap->length = q->ans->size - ISZ_CFLOAT + ISZ_FLOAT; 

	T1097(EAX).A =   _q:LINK(4).A
	T1098(EAX).A =   *(T1097(EAX) + 40).A.A
	T1099(EAX).I =   *(T1098(EAX) + 19).A.C
	T1100(EAX).I = #FFFFFFFFFFFFFFFA.I + T1099(EAX).I
	T1101(CL).C =   T1100(EAX).I
	T1102(EAX).A =   _ap:LINK(-76).A
	*(T1102(EAX) + 8).A.C =   T1101(CL).C
	T1103(CL).C =   *(T1102(EAX) + 8).A.C
	T1104(EAX).A =   _ap1:LINK(-84).A
	*(T1104(EAX) + 8).A.C =   T1103(CL).C
; Line 3887:	                        gen_codef(op_fstp, ap, NULL); 

	T1105(EAX).A =   #0.C
	PARM	T1105(EAX).A
	T1106(EAX).A =   _ap:LINK(-76).A
	PARM	T1106(EAX).A
	PARM	#B7.I
	TAG
	GOSUB	#@occx86@gen_codef$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3888:	                        gen_codef(op_fstp, ap1, NULL); 

	T1107(EAX).A =   #0.C
	PARM	T1107(EAX).A
	T1108(EAX).A =   _ap1:LINK(-84).A
	PARM	T1108(EAX).A
	PARM	#B7.I
	TAG
	GOSUB	#@occx86@gen_codef$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3889:	                        ap1->length = ap->length = 0; 

	T1109(EAX).A =   _ap:LINK(-76).A
	*(T1109(EAX) + 8).A.C =   #0.C
	T1110(CL).C =   *(T1109(EAX) + 8).A.C
	T1111(EAX).A =   _ap1:LINK(-84).A
	*(T1111(EAX) + 8).A.C =   T1110(CL).C
; Line 3890:	                        gen_code_sse(op_movss, op_movsd, q->ans->size, apa, ap); 

	T1112(EAX).A =   _ap:LINK(-76).A
	PARM	T1112(EAX).A
	T1113(EAX).A =   _apa:LINK(-4).A
	PARM	T1113(EAX).A
	T1114(EAX).A =   _q:LINK(4).A
	T1115(EAX).A =   *(T1114(EAX) + 40).A.A
	T1116(EAX).I =   *(T1115(EAX) + 19).A.C
	PARM	T1116(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3891:	                        gen_code_sse(op_movss, op_movsd, q->ans->size, apa1, ap1); 

	T1117(EAX).A =   _ap1:LINK(-84).A
	PARM	T1117(EAX).A
	T1118(EAX).A =   _apa1:LINK(-8).A
	PARM	T1118(EAX).A
	T1119(EAX).A =   _q:LINK(4).A
	T1120(EAX).A =   *(T1119(EAX) + 40).A.A
	T1121(EAX).I =   *(T1120(EAX) + 19).A.C
	PARM	T1121(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3892:	                        ap1->length = ap->length = q->ans->size - ISZ_CFLOAT + ISZ_FLOAT; 

	T1122(EAX).A =   _q:LINK(4).A
	T1123(EAX).A =   *(T1122(EAX) + 40).A.A
	T1124(EAX).I =   *(T1123(EAX) + 19).A.C
	T1125(EAX).I = #FFFFFFFFFFFFFFFA.I + T1124(EAX).I
	T1126(CL).C =   T1125(EAX).I
	T1127(EAX).A =   _ap:LINK(-76).A
	*(T1127(EAX) + 8).A.C =   T1126(CL).C
	T1128(CL).C =   *(T1127(EAX) + 8).A.C
	T1129(EAX).A =   _ap1:LINK(-84).A
	*(T1129(EAX) + 8).A.C =   T1128(CL).C
; Line 3893:	                    } 

	BLOCK END
	BLOCK 308

L_5388:
	DBG BLOCK END
	BLOCK END
	BLOCK 309

L_5390:
	DBG BLOCK END
	GOTO	L_5389:PC
	BLOCK END
	BLOCK 310
	DBG BLOCK START
	BLOCK END
	BLOCK 311

L_5391:
	BLOCK END
	BLOCK 312

L_5379:
; Line 3894:	                    else 

; Line 3895:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 313

L_5392:
; Line 3896:	                        ap->length = q->ans->size >= ISZ_IFLOAT ? q->ans->size - ISZ_IFLOAT + ISZ_FLOAT : q->ans->size; 

	T1130(EAX).A =   _q:LINK(4).A
	T1131(EAX).A =   *(T1130(EAX) + 40).A.A
	T1132(EAX).I =   *(T1131(EAX) + 19).A.C
	CONDGO	L_6189:PC ; T1132(EAX).I S< #15.I
	BLOCK END
	BLOCK 314
	T1133(EAX).A =   _q:LINK(4).A
	T1134(EAX).A =   *(T1133(EAX) + 40).A.A
	T1135(EAX).I =   *(T1134(EAX) + 19).A.C
	T1137(EAX).I = #FFFFFFFFFFFFFFFD.I + T1135(EAX).I
	GOTO	L_6190:PC
	BLOCK END
	BLOCK 315

L_6189:
	T1138(EAX).A =   _q:LINK(4).A
	T1139(EAX).A =   *(T1138(EAX) + 40).A.A
	T1140(EAX).I =   *(T1139(EAX) + 19).A.C
	T1137(EAX).I =   T1140(EAX).I
	BLOCK END
	BLOCK 316

L_6190:
	T1141(CL).C =   T1137(EAX).I
	T1142(EAX).A =   _ap:LINK(-76).A
	*(T1142(EAX) + 8).A.C =   T1141(CL).C
; Line 3897:	                        gen_codef(op_fstp, ap, NULL); 

	T1143(EAX).A =   #0.C
	PARM	T1143(EAX).A
	T1144(EAX).A =   _ap:LINK(-76).A
	PARM	T1144(EAX).A
	PARM	#B7.I
	TAG
	GOSUB	#@occx86@gen_codef$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 3898:	                        ap->length = 0; 

	T1145(EAX).A =   _ap:LINK(-76).A
	*(T1145(EAX) + 8).A.C =   #0.C
; Line 3899:	                        gen_code_sse(op_movss, op_movsd, q->ans->size, apa, ap); 

	T1146(EAX).A =   _ap:LINK(-76).A
	PARM	T1146(EAX).A
	T1147(EAX).A =   _apa:LINK(-4).A
	PARM	T1147(EAX).A
	T1148(EAX).A =   _q:LINK(4).A
	T1149(EAX).A =   *(T1148(EAX) + 40).A.A
	T1150(EAX).I =   *(T1149(EAX) + 19).A.C
	PARM	T1150(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 3900:	                    } 

	BLOCK END
	BLOCK 317

L_5393:
	DBG BLOCK END
	BLOCK END
	BLOCK 318

L_5394:
	DBG BLOCK END
	BLOCK END
	BLOCK 319

L_5389:
	BLOCK END
	BLOCK 320

L_5395:
	DBG BLOCK END
; Line 3901:	                } 

	BLOCK END
	BLOCK 321

L_5396:
	DBG BLOCK END
	BLOCK END
	BLOCK 322

L_5398:
	DBG BLOCK END
	GOTO	L_5397:PC
	BLOCK END
	BLOCK 323
	DBG BLOCK START
	BLOCK END
	BLOCK 324

L_5399:
	BLOCK END
	BLOCK 325

L_5375:
; Line 3902:	                else 

; Line 3903:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 326

L_5400:
; Line 3904:	                    diag("asm_assn: no float store area"); 

	PARM	#L_5134:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 3905:	                } 

	BLOCK END
	BLOCK 327

L_5401:
	DBG BLOCK END
	BLOCK END
	BLOCK 328

L_5402:
	DBG BLOCK END
	BLOCK END
	BLOCK 329

L_5397:
	BLOCK END
	BLOCK 330

L_5403:
	DBG BLOCK END
; Line 3906:	            } 

	BLOCK END
	BLOCK 331

L_5404:
	DBG BLOCK END
	BLOCK END
	BLOCK 332

L_5405:
	DBG BLOCK END
	BLOCK END
	BLOCK 333

L_5371:
	BLOCK END
	BLOCK 334

L_5406:
	DBG BLOCK END
; Line 3907:	        } 

	BLOCK END
	BLOCK 335

L_5407:
	DBG BLOCK END
	BLOCK END
	BLOCK 336

L_5409:
	DBG BLOCK END
	GOTO	L_5408:PC
	BLOCK END
	BLOCK 337
	DBG BLOCK START
	BLOCK END
	BLOCK 338

L_5410:
	BLOCK END
	BLOCK 339

L_5362:
; Line 3908:	        else if (q->ans->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 340

L_5412:
	T1151(EAX).A =   _q:LINK(4).A
	T1152(EAX).A =   *(T1151(EAX) + 40).A.A
	T1153(EAX).I =   *(T1152(EAX) + 19).A.C
	CONDGO	L_5411:PC ; T1153(EAX).I S< #18.I
	BLOCK END
	BLOCK 341
	DBG BLOCK START
	BLOCK END
	BLOCK 342

L_5413:
; Line 3909:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 343

L_5414:
; Line 3910:	            if (q->dc.left->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 344

L_5416:
	T1154(EAX).A =   _q:LINK(4).A
	T1155(EAX).A =   *(T1154(EAX) + 4+0).A.A
	T1156(EAX).I =   *(T1155(EAX) + 19).A.C
	CONDGO	L_5415:PC ; T1156(EAX).I S< #18.I
	BLOCK END
	BLOCK 345
	DBG BLOCK START
	BLOCK END
	BLOCK 346

L_5417:
; Line 3911:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 347

L_5418:
; Line 3912:	                moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T1157(EAX).A =   _q:LINK(4).A
	T1158(EAX).A =   *(T1157(EAX) + 4+0).A.A
	T1159(EAX).I =   *(T1158(EAX) + 19).A.C
	PARM	T1159(EAX).I
	T1160(EAX).A =   _apl:LINK(-12).A
	PARM	T1160(EAX).A
	T1161(EAX).A =   _q:LINK(4).A
	T1162(EAX).A =   *(T1161(EAX) + 40).A.A
	T1163(EAX).I =   *(T1162(EAX) + 19).A.C
	PARM	T1163(EAX).I
	T1164(EAX).A =   _apa:LINK(-4).A
	PARM	T1164(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3913:	                moveFP(apa1, q->ans->size, apl1, q->dc.left->size); 

	T1165(EAX).A =   _q:LINK(4).A
	T1166(EAX).A =   *(T1165(EAX) + 4+0).A.A
	T1167(EAX).I =   *(T1166(EAX) + 19).A.C
	PARM	T1167(EAX).I
	T1168(EAX).A =   _apl1:LINK(-16).A
	PARM	T1168(EAX).A
	T1169(EAX).A =   _q:LINK(4).A
	T1170(EAX).A =   *(T1169(EAX) + 40).A.A
	T1171(EAX).I =   *(T1170(EAX) + 19).A.C
	PARM	T1171(EAX).I
	T1172(EAX).A =   _apa1:LINK(-8).A
	PARM	T1172(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3914:	            } 

	BLOCK END
	BLOCK 348

L_5419:
	DBG BLOCK END
	BLOCK END
	BLOCK 349

L_5421:
	DBG BLOCK END
	GOTO	L_5420:PC
	BLOCK END
	BLOCK 350
	DBG BLOCK START
	BLOCK END
	BLOCK 351

L_5422:
	BLOCK END
	BLOCK 352

L_5415:
; Line 3915:	            else 

; Line 3916:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 353

L_5423:
; Line 3917:	                if (q->dc.left->size >= ISZ_IFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 354

L_5425:
	T1173(EAX).A =   _q:LINK(4).A
	T1174(EAX).A =   *(T1173(EAX) + 4+0).A.A
	T1175(EAX).I =   *(T1174(EAX) + 19).A.C
	CONDGO	L_5424:PC ; T1175(EAX).I S< #15.I
	BLOCK END
	BLOCK 355
	DBG BLOCK START
	BLOCK END
	BLOCK 356

L_5426:
; Line 3918:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 357

L_5427:
; Line 3919:	                    moveFP(apa1, q->ans->size, apl, q->dc.left->size); 

	T1176(EAX).A =   _q:LINK(4).A
	T1177(EAX).A =   *(T1176(EAX) + 4+0).A.A
	T1178(EAX).I =   *(T1177(EAX) + 19).A.C
	PARM	T1178(EAX).I
	T1179(EAX).A =   _apl:LINK(-12).A
	PARM	T1179(EAX).A
	T1180(EAX).A =   _q:LINK(4).A
	T1181(EAX).A =   *(T1180(EAX) + 40).A.A
	T1182(EAX).I =   *(T1181(EAX) + 19).A.C
	PARM	T1182(EAX).I
	T1183(EAX).A =   _apa1:LINK(-8).A
	PARM	T1183(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3920:	                    moveFP(apa, q->ans->size, floatzero(apl1), q->dc.left->size); 

	T1184(EAX).A =   _q:LINK(4).A
	T1185(EAX).A =   *(T1184(EAX) + 4+0).A.A
	T1186(EAX).I =   *(T1185(EAX) + 19).A.C
	PARM	T1186(EAX).I
	T1187(EAX).A =   _apl1:LINK(-16).A
	PARM	T1187(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T1188(EAX).A =   RV.T59(EAX).A
	PARMADJ	#4.N
	PARM	T1188(EAX).A
	T1189(EAX).A =   _q:LINK(4).A
	T1190(EAX).A =   *(T1189(EAX) + 40).A.A
	T1191(EAX).I =   *(T1190(EAX) + 19).A.C
	PARM	T1191(EAX).I
	T1192(EAX).A =   _apa:LINK(-4).A
	PARM	T1192(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3921:	                } 

	BLOCK END
	BLOCK 358

L_5428:
	DBG BLOCK END
	BLOCK END
	BLOCK 359

L_5430:
	DBG BLOCK END
	GOTO	L_5429:PC
	BLOCK END
	BLOCK 360
	DBG BLOCK START
	BLOCK END
	BLOCK 361

L_5431:
	BLOCK END
	BLOCK 362

L_5424:
; Line 3922:	                else 

; Line 3923:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 363

L_5432:
; Line 3924:	                    moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T1193(EAX).A =   _q:LINK(4).A
	T1194(EAX).A =   *(T1193(EAX) + 4+0).A.A
	T1195(EAX).I =   *(T1194(EAX) + 19).A.C
	PARM	T1195(EAX).I
	T1196(EAX).A =   _apl:LINK(-12).A
	PARM	T1196(EAX).A
	T1197(EAX).A =   _q:LINK(4).A
	T1198(EAX).A =   *(T1197(EAX) + 40).A.A
	T1199(EAX).I =   *(T1198(EAX) + 19).A.C
	PARM	T1199(EAX).I
	T1200(EAX).A =   _apa:LINK(-4).A
	PARM	T1200(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3925:	                    moveFP(apa1, q->ans->size, floatzero(apa1), q->dc.left->size); 

	T1201(EAX).A =   _q:LINK(4).A
	T1202(EAX).A =   *(T1201(EAX) + 4+0).A.A
	T1203(EAX).I =   *(T1202(EAX) + 19).A.C
	PARM	T1203(EAX).I
	T1204(EAX).A =   _apa1:LINK(-8).A
	PARM	T1204(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T1205(EAX).A =   RV.T60(EAX).A
	PARMADJ	#4.N
	PARM	T1205(EAX).A
	T1206(EAX).A =   _q:LINK(4).A
	T1207(EAX).A =   *(T1206(EAX) + 40).A.A
	T1208(EAX).I =   *(T1207(EAX) + 19).A.C
	PARM	T1208(EAX).I
	T1209(EAX).A =   _apa1:LINK(-8).A
	PARM	T1209(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3926:	                } 

	BLOCK END
	BLOCK 364

L_5433:
	DBG BLOCK END
	BLOCK END
	BLOCK 365

L_5434:
	DBG BLOCK END
	BLOCK END
	BLOCK 366

L_5429:
	BLOCK END
	BLOCK 367

L_5435:
	DBG BLOCK END
; Line 3927:	            } 

	BLOCK END
	BLOCK 368

L_5436:
	DBG BLOCK END
	BLOCK END
	BLOCK 369

L_5437:
	DBG BLOCK END
	BLOCK END
	BLOCK 370

L_5420:
	BLOCK END
	BLOCK 371

L_5438:
	DBG BLOCK END
; Line 3928:	        } 

	BLOCK END
	BLOCK 372

L_5439:
	DBG BLOCK END
	BLOCK END
	BLOCK 373

L_5441:
	DBG BLOCK END
	GOTO	L_5440:PC
	BLOCK END
	BLOCK 374
	DBG BLOCK START
	BLOCK END
	BLOCK 375

L_5442:
	BLOCK END
	BLOCK 376

L_5411:
; Line 3929:	        else if (q->ans->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 377

L_5444:
	T1210(EAX).A =   _q:LINK(4).A
	T1211(EAX).A =   *(T1210(EAX) + 40).A.A
	T1212(EAX).I =   *(T1211(EAX) + 19).A.C
	CONDGO	L_5443:PC ; T1212(EAX).I S< #12.C
	BLOCK END
	BLOCK 378
	DBG BLOCK START
	BLOCK END
	BLOCK 379

L_5445:
; Line 3930:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 380

L_5446:
; Line 3931:	            moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T1213(EAX).A =   _q:LINK(4).A
	T1214(EAX).A =   *(T1213(EAX) + 4+0).A.A
	T1215(EAX).I =   *(T1214(EAX) + 19).A.C
	PARM	T1215(EAX).I
	T1216(EAX).A =   _apl:LINK(-12).A
	PARM	T1216(EAX).A
	T1217(EAX).A =   _q:LINK(4).A
	T1218(EAX).A =   *(T1217(EAX) + 40).A.A
	T1219(EAX).I =   *(T1218(EAX) + 19).A.C
	PARM	T1219(EAX).I
	T1220(EAX).A =   _apa:LINK(-4).A
	PARM	T1220(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 3932:	        } 

	BLOCK END
	BLOCK 381

L_5447:
	DBG BLOCK END
	BLOCK END
	BLOCK 382

L_5449:
	DBG BLOCK END
	GOTO	L_5448:PC
	BLOCK END
	BLOCK 383
	DBG BLOCK START
	BLOCK END
	BLOCK 384

L_5450:
	BLOCK END
	BLOCK 385

L_5443:
; Line 3933:	        else if (sza == ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 386

L_5452:
	T1221(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_5451:PC ; T1221(EAX).I != #B.C
	BLOCK END
	BLOCK 387
	DBG BLOCK START
	BLOCK END
	BLOCK 388

L_5453:
; Line 3934:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 389

L_5454:
; Line 3935:	            if (!apl1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 390

L_5456:
	T1222(EAX).A =   _apl1:LINK(-16).A
	CONDGO	L_5455:PC ; T1222(EAX).A != #0.A
	BLOCK END
	BLOCK 391
	DBG BLOCK START
	BLOCK END
	BLOCK 392

L_5457:
; Line 3936:	                apl1 = aimmed(0); 

	T1223(EDX:EAX).ULL =   #0.C
	PARM	T1223(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T1224(EAX).A =   RV.T61(EAX).A
	PARMADJ	#8.N
	_apl1:LINK(-16).A =   T1224(EAX).A
	BLOCK END
	BLOCK 393

L_5458:
	DBG BLOCK END
	BLOCK END
	BLOCK 394

L_5455:
	BLOCK END
	BLOCK 395

L_5459:
	DBG BLOCK END
; Line 3937:	            func_axdx(op_mov, apa, apa1, apl, apl1); 

	T1225(EAX).A =   _apl1:LINK(-16).A
	PARM	T1225(EAX).A
	T1226(EAX).A =   _apl:LINK(-12).A
	PARM	T1226(EAX).A
	T1227(EAX).A =   _apa1:LINK(-8).A
	PARM	T1227(EAX).A
	T1228(EAX).A =   _apa:LINK(-4).A
	PARM	T1228(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@func_axdx$q8e_opcodep5amodepn1pn1pn1:PC.UI
	PARMADJ	#14.N
; Line 3938:	        } 

	BLOCK END
	BLOCK 396

L_5460:
	DBG BLOCK END
	BLOCK END
	BLOCK 397

L_5462:
	DBG BLOCK END
	GOTO	L_5461:PC
	BLOCK END
	BLOCK 398
	DBG BLOCK START
	BLOCK END
	BLOCK 399

L_5463:
	BLOCK END
	BLOCK 400

L_5451:
; Line 3939:	        else 

; Line 3940:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 401

L_5464:
; Line 3941:	            if (q->ans->bits) 

	DBG BLOCK START
	BLOCK END
	BLOCK 402

L_5466:
	T1229(EAX).A =   _q:LINK(4).A
	T1230(EAX).A =   *(T1229(EAX) + 40).A.A
	T1231(AL).C =   *(T1230(EAX) + 1C).A.C
	CONDGO	L_5465:PC ; T1231(AL).C == #0.C
	BLOCK END
	BLOCK 403
	DBG BLOCK START
	BLOCK END
	BLOCK 404

L_5467:
; Line 3942:	                bit_store(apa, apl, q->ans->size, q->ans->bits, q->ans->startbit); 

	T1232(EAX).A =   _q:LINK(4).A
	T1233(EAX).A =   *(T1232(EAX) + 40).A.A
	T1234(EAX).I =   *(T1233(EAX) + 1B).A.C
	PARM	T1234(EAX).I
	T1235(EAX).A =   _q:LINK(4).A
	T1236(EAX).A =   *(T1235(EAX) + 40).A.A
	T1237(EAX).I =   *(T1236(EAX) + 1C).A.C
	PARM	T1237(EAX).I
	T1238(EAX).A =   _q:LINK(4).A
	T1239(EAX).A =   *(T1238(EAX) + 40).A.A
	T1240(EAX).I =   *(T1239(EAX) + 19).A.C
	PARM	T1240(EAX).I
	T1241(EAX).A =   _apl:LINK(-12).A
	PARM	T1241(EAX).A
	T1242(EAX).A =   _apa:LINK(-4).A
	PARM	T1242(EAX).A
	TAG
	GOSUB	#@occx86@bit_store$qp5amodepn0iii:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 405

L_5469:
	DBG BLOCK END
	GOTO	L_5468:PC
	BLOCK END
	BLOCK 406
	DBG BLOCK START
	BLOCK END
	BLOCK 407

L_5470:
	BLOCK END
	BLOCK 408

L_5465:
; Line 3943:	            else 

; Line 3944:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 409

L_5471:
; Line 3945:	                if (sza < szl) 

	DBG BLOCK START
	BLOCK END
	BLOCK 410

L_5473:
	T1243(ECX).I =   _szl:LINK(-28).I
	T1244(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_5472:PC ; T1244(EAX).I S>= T1243(ECX).I
	BLOCK END
	BLOCK 411
	DBG BLOCK START
	BLOCK END
	BLOCK 412

L_5474:
; Line 3946:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 413

L_5475:
; Line 3947:	                    if (q->ans->size == ISZ_BOOLEAN) 

	DBG BLOCK START
	BLOCK END
	BLOCK 414

L_5477:
	T1245(EAX).A =   _q:LINK(4).A
	T1246(EAX).A =   *(T1245(EAX) + 40).A.A
	T1247(AL).C =   *(T1246(EAX) + 19).A.C
	CONDGO	L_5476:PC ; T1247(AL).C != #2.C
	BLOCK END
	BLOCK 415
	DBG BLOCK START
	BLOCK END
	BLOCK 416

L_5478:
; Line 3948:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 417

L_5479:
; Line 3949:	                        gen_codes(opl, q->dc.left->size, apa, apl); 

	T1248(EAX).A =   _apl:LINK(-12).A
	PARM	T1248(EAX).A
	T1249(EAX).A =   _apa:LINK(-4).A
	PARM	T1249(EAX).A
	T1250(EAX).A =   _q:LINK(4).A
	T1251(EAX).A =   *(T1250(EAX) + 4+0).A.A
	T1252(EAX).I =   *(T1251(EAX) + 19).A.C
	PARM	T1252(EAX).I
	T1253(EAX).I =   _opl:LINK(-24).I
	PARM	T1253(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3950:	                        gen_codes(op_cmp, q->dc.left->size, apa, aimmed(0)); 

	T1254(EDX:EAX).ULL =   #0.C
	PARM	T1254(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T1255(EAX).A =   RV.T62(EAX).A
	PARMADJ	#8.N
	PARM	T1255(EAX).A
	T1256(EAX).A =   _apa:LINK(-4).A
	PARM	T1256(EAX).A
	T1257(EAX).A =   _q:LINK(4).A
	T1258(EAX).A =   *(T1257(EAX) + 4+0).A.A
	T1259(EAX).I =   *(T1258(EAX) + 19).A.C
	PARM	T1259(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3951:	                        gen_codes(op_setne, q->ans->size, apa, nullptr); 

	PARM	#0.UI
	T1260(EAX).A =   _apa:LINK(-4).A
	PARM	T1260(EAX).A
	T1261(EAX).A =   _q:LINK(4).A
	T1262(EAX).A =   *(T1261(EAX) + 40).A.A
	T1263(EAX).I =   *(T1262(EAX) + 19).A.C
	PARM	T1263(EAX).I
	PARM	#168.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3952:	                    } 

	BLOCK END
	BLOCK 418

L_5480:
	DBG BLOCK END
	BLOCK END
	BLOCK 419

L_5482:
	DBG BLOCK END
	GOTO	L_5481:PC
	BLOCK END
	BLOCK 420
	DBG BLOCK START
	BLOCK END
	BLOCK 421

L_5483:
	BLOCK END
	BLOCK 422

L_5476:
; Line 3953:	                    else if (szl == ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 423

L_5485:
	T1264(EAX).I =   _szl:LINK(-28).I
	CONDGO	L_5484:PC ; T1264(EAX).I != #B.C
	BLOCK END
	BLOCK 424
	DBG BLOCK START
	BLOCK END
	BLOCK 425

L_5486:
; Line 3954:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 426

L_5487:
; Line 3955:	                        gen_codes(opl, q->ans->size, apa, apl); 

	T1265(EAX).A =   _apl:LINK(-12).A
	PARM	T1265(EAX).A
	T1266(EAX).A =   _apa:LINK(-4).A
	PARM	T1266(EAX).A
	T1267(EAX).A =   _q:LINK(4).A
	T1268(EAX).A =   *(T1267(EAX) + 40).A.A
	T1269(EAX).I =   *(T1268(EAX) + 19).A.C
	PARM	T1269(EAX).I
	T1270(EAX).I =   _opl:LINK(-24).I
	PARM	T1270(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3956:	                    } 

	BLOCK END
	BLOCK 427

L_5488:
	DBG BLOCK END
	BLOCK END
	BLOCK 428

L_5490:
	DBG BLOCK END
	GOTO	L_5489:PC
	BLOCK END
	BLOCK 429
	DBG BLOCK START
	BLOCK END
	BLOCK 430

L_5491:
	BLOCK END
	BLOCK 431

L_5484:
; Line 3957:	                    else 

; Line 3958:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 432

L_5492:
; Line 3959:	                        gen_codes(opl, q->dc.left->size, apa, apl); 

	T1271(EAX).A =   _apl:LINK(-12).A
	PARM	T1271(EAX).A
	T1272(EAX).A =   _apa:LINK(-4).A
	PARM	T1272(EAX).A
	T1273(EAX).A =   _q:LINK(4).A
	T1274(EAX).A =   *(T1273(EAX) + 4+0).A.A
	T1275(EAX).I =   *(T1274(EAX) + 19).A.C
	PARM	T1275(EAX).I
	T1276(EAX).I =   _opl:LINK(-24).I
	PARM	T1276(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3960:	                    } 

	BLOCK END
	BLOCK 433

L_5493:
	DBG BLOCK END
	BLOCK END
	BLOCK 434

L_5494:
	DBG BLOCK END
	BLOCK END
	BLOCK 435

L_5489:
	BLOCK END
	BLOCK 436

L_5495:
	DBG BLOCK END
	BLOCK END
	BLOCK 437

L_5496:
	DBG BLOCK END
	BLOCK END
	BLOCK 438

L_5481:
	BLOCK END
	BLOCK 439

L_5497:
	DBG BLOCK END
; Line 3961:	                } 

	BLOCK END
	BLOCK 440

L_5498:
	DBG BLOCK END
	BLOCK END
	BLOCK 441

L_5500:
	DBG BLOCK END
	GOTO	L_5499:PC
	BLOCK END
	BLOCK 442
	DBG BLOCK START
	BLOCK END
	BLOCK 443

L_5501:
	BLOCK END
	BLOCK 444

L_5472:
; Line 3962:	                else 

; Line 3963:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 445

L_5502:
; Line 3964:	                    gen_codes(opl, q->ans->size, apa, apl); 

	T1277(EAX).A =   _apl:LINK(-12).A
	PARM	T1277(EAX).A
	T1278(EAX).A =   _apa:LINK(-4).A
	PARM	T1278(EAX).A
	T1279(EAX).A =   _q:LINK(4).A
	T1280(EAX).A =   *(T1279(EAX) + 40).A.A
	T1281(EAX).I =   *(T1280(EAX) + 19).A.C
	PARM	T1281(EAX).I
	T1282(EAX).I =   _opl:LINK(-24).I
	PARM	T1282(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3965:	                } 

	BLOCK END
	BLOCK 446

L_5503:
	DBG BLOCK END
	BLOCK END
	BLOCK 447

L_5504:
	DBG BLOCK END
	BLOCK END
	BLOCK 448

L_5499:
	BLOCK END
	BLOCK 449

L_5505:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 450

L_5507:
; Line 3966:	                if (q->dc.opcode == Optimizer::i_assn && q->dc.left->bits) 

	T1283(EAX).A =   _q:LINK(4).A
	T1284(EAX).I =   *(T1283(EAX) + 0+0).A.I
	CONDGO	L_5506:PC ; T1284(EAX).I != #37.I
	BLOCK END
	BLOCK 451
	T1285(EAX).A =   _q:LINK(4).A
	T1286(EAX).A =   *(T1285(EAX) + 4+0).A.A
	T1287(AL).C =   *(T1286(EAX) + 1C).A.C
	CONDGO	L_5506:PC ; T1287(AL).C == #0.C
	BLOCK END
	BLOCK 452
	DBG BLOCK START
	BLOCK END
	BLOCK 453

L_5508:
; Line 3967:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 454

L_5509:
; Line 3968:	                    int max; 

	VAR START	max
	DBG BLOCK START
	BLOCK END
	BLOCK 455

L_5511:
	DBG BLOCK END
; Line 3969:	                    switch (sza) 

	T1288(EAX).I =   _sza:LINK(-32).I
	COSWITCH(T1288(EAX).I,#7.UI,#8.UI,L_5527:PC)
	SWBRANCH(#3.UI,L_5513:PC)
	SWBRANCH(#4.UI,L_5515:PC)
	SWBRANCH(#5.UI,L_5519:PC)
	SWBRANCH(#6.UI,L_5517:PC)
	SWBRANCH(#7.UI,L_5521:PC)
	SWBRANCH(#9.UI,L_5523:PC)
	SWBRANCH(#A.UI,L_5525:PC)
; Line 3970:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 456

L_5512:
	BLOCK END
	BLOCK 457

L_5513:
	DBG BLOCK START
; Line 3972:	                            max = 8; 

	_max:LINK(-72).I =   #8.I
; Line 3973:	                            break; 

	GOTO	L_5510:PC
	BLOCK END
	BLOCK 458
	DBG BLOCK END
	BLOCK END
	BLOCK 459

L_5515:
	BLOCK END
	BLOCK 460

L_5517:
	BLOCK END
	BLOCK 461

L_5519:
	DBG BLOCK START
; Line 3974:	                        case ISZ_USHORT: 
; Line 3975:	                        case ISZ_U16: 

; Line 3975:	                        case ISZ_U16: 

	_max:LINK(-72).I =   #10.I
; Line 3976:	                        case ISZ_WCHAR: 
; Line 3977:	                            max = 16; 

; Line 3977:	                            max = 16; 

	GOTO	L_5510:PC
	BLOCK END
	BLOCK 462
	DBG BLOCK END
	BLOCK END
	BLOCK 463

L_5521:
	BLOCK END
	BLOCK 464

L_5523:
	BLOCK END
	BLOCK 465

L_5525:
	DBG BLOCK START
	DBG BLOCK END
	BLOCK END
	BLOCK 466

L_5527:
	DBG BLOCK START
; Line 3978:	                            break; 
; Line 3979:	                        case ISZ_UINT: 

; Line 3979:	                        case ISZ_UINT: 

	_max:LINK(-72).I =   #20.I
; Line 3980:	                        case ISZ_ULONG: 
; Line 3981:	                        case ISZ_U32: 

; Line 3981:	                        case ISZ_U32: 

	BLOCK END
	BLOCK 467

L_5528:
	DBG BLOCK END
	BLOCK END
	BLOCK 468

L_5510:
	BLOCK END
	BLOCK 469

L_5529:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 470

L_5531:
; Line 3983:	                            max = 32; 
; Line 3988:	                        diag("asm_assn: Expected register in bit processing"); 
; Line 3989:	                    if (q->dc.left->size < 0) 

; Line 3984:	                            break; 

	T1289(EAX).A =   _apa:LINK(-4).A
	T1290(EAX).I =   *(T1289(EAX) + 0).A.I
	CONDGO	L_5530:PC ; T1290(EAX).I == #2.C
	BLOCK END
	BLOCK 471
	DBG BLOCK START
	BLOCK END
	BLOCK 472

L_5532:
; Line 3985:	                    } 

	PARM	#L_5135:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 473

L_5533:
	DBG BLOCK END
	BLOCK END
	BLOCK 474

L_5530:
	BLOCK END
	BLOCK 475

L_5534:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 476

L_5536:
; Line 3987:	                    if (apa->mode != am_dreg) 

	T1291(EAX).A =   _q:LINK(4).A
	T1292(EAX).A =   *(T1291(EAX) + 4+0).A.A
	T1293(EAX).I =   *(T1292(EAX) + 19).A.C
	CONDGO	L_5535:PC ; T1293(EAX).I S>= #0.C
	BLOCK END
	BLOCK 477
	DBG BLOCK START
	BLOCK END
	BLOCK 478

L_5537:
; Line 3990:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 479

L_5538:
; Line 3991:	                        gen_codes(op_shl, q->ans->size, apa, aimmed(max - q->dc.left->startbit - q->dc.left->bits)); 

	T1294(ECX).I =   _max:LINK(-72).I
	T1295(EAX).A =   _q:LINK(4).A
	T1296(EAX).A =   *(T1295(EAX) + 4+0).A.A
	T1297(EAX).I =   *(T1296(EAX) + 1B).A.C
	T1298(ECX).I = T1294(ECX).I - T1297(EAX).I
	T1299(EAX).A =   _q:LINK(4).A
	T1300(EAX).A =   *(T1299(EAX) + 4+0).A.A
	T1301(EAX).I =   *(T1300(EAX) + 1C).A.C
	T1302(EAX).I = T1298(ECX).I - T1301(EAX).I
	T1303(EDX:EAX).ULL =   T1302(EAX).I
	PARM	T1303(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T1304(EAX).A =   RV.T63(EAX).A
	PARMADJ	#8.N
	PARM	T1304(EAX).A
	T1305(EAX).A =   _apa:LINK(-4).A
	PARM	T1305(EAX).A
	T1306(EAX).A =   _q:LINK(4).A
	T1307(EAX).A =   *(T1306(EAX) + 40).A.A
	T1308(EAX).I =   *(T1307(EAX) + 19).A.C
	PARM	T1308(EAX).I
	PARM	#179.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3992:	                        gen_codes(op_sar, q->ans->size, apa, aimmed(max - q->dc.left->bits)); 

	T1309(ECX).I =   _max:LINK(-72).I
	T1310(EAX).A =   _q:LINK(4).A
	T1311(EAX).A =   *(T1310(EAX) + 4+0).A.A
	T1312(EAX).I =   *(T1311(EAX) + 1C).A.C
	T1313(EAX).I = T1309(ECX).I - T1312(EAX).I
	T1314(EDX:EAX).ULL =   T1313(EAX).I
	PARM	T1314(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T1315(EAX).A =   RV.T64(EAX).A
	PARMADJ	#8.N
	PARM	T1315(EAX).A
	T1316(EAX).A =   _apa:LINK(-4).A
	PARM	T1316(EAX).A
	T1317(EAX).A =   _q:LINK(4).A
	T1318(EAX).A =   *(T1317(EAX) + 40).A.A
	T1319(EAX).I =   *(T1318(EAX) + 19).A.C
	PARM	T1319(EAX).I
	PARM	#152.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 3993:	                    } 

	BLOCK END
	BLOCK 480

L_5539:
	DBG BLOCK END
	BLOCK END
	BLOCK 481

L_5541:
	DBG BLOCK END
	GOTO	L_5540:PC
	BLOCK END
	BLOCK 482
	DBG BLOCK START
	BLOCK END
	BLOCK 483

L_5542:
	BLOCK END
	BLOCK 484

L_5535:
; Line 3994:	                    else 

; Line 3995:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 485

L_5543:
; Line 3996:	                        if (q->dc.left->startbit) 

	DBG BLOCK START
	BLOCK END
	BLOCK 486

L_5545:
	T1320(EAX).A =   _q:LINK(4).A
	T1321(EAX).A =   *(T1320(EAX) + 4+0).A.A
	T1322(AL).C =   *(T1321(EAX) + 1B).A.C
	CONDGO	L_5544:PC ; T1322(AL).C == #0.C
	BLOCK END
	BLOCK 487
	DBG BLOCK START
	BLOCK END
	BLOCK 488

L_5546:
; Line 3997:	                            gen_codes(op_shr, q->ans->size, apa, aimmed(q->dc.left->startbit)); 

	T1323(EAX).A =   _q:LINK(4).A
	T1324(EAX).A =   *(T1323(EAX) + 4+0).A.A
	T1325(EDX:EAX).ULL =   *(T1324(EAX) + 1B).A.C
	PARM	T1325(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T1326(EAX).A =   RV.T65(EAX).A
	PARMADJ	#8.N
	PARM	T1326(EAX).A
	T1327(EAX).A =   _apa:LINK(-4).A
	PARM	T1327(EAX).A
	T1328(EAX).A =   _q:LINK(4).A
	T1329(EAX).A =   *(T1328(EAX) + 40).A.A
	T1330(EAX).I =   *(T1329(EAX) + 19).A.C
	PARM	T1330(EAX).I
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 489

L_5547:
	DBG BLOCK END
	BLOCK END
	BLOCK 490

L_5544:
	BLOCK END
	BLOCK 491

L_5548:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 492

L_5550:
; Line 3998:	                        if (q->dc.left->bits < max) 

	T1331(ECX).I =   _max:LINK(-72).I
	T1332(EAX).A =   _q:LINK(4).A
	T1333(EAX).A =   *(T1332(EAX) + 4+0).A.A
	T1334(EAX).I =   *(T1333(EAX) + 1C).A.C
	CONDGO	L_5549:PC ; T1334(EAX).I S>= T1331(ECX).I
	BLOCK END
	BLOCK 493
	DBG BLOCK START
	BLOCK END
	BLOCK 494

L_5551:
; Line 3999:	                            gen_codes(op_and, q->ans->size, apa, aimmed((1 << q->dc.left->bits) - 1)); 

	T1335(EAX).A =   _q:LINK(4).A
	T1336(EAX).A =   *(T1335(EAX) + 4+0).A.A
	T1338(CL).C =   *(T1336(EAX) + 1C).A.C
	T1349(AL).C =   T1338(CL).C^
	T1355(CL).C =   T1349(AL).C^
	T1339(EAX).I = #1.C << T1355(CL).C
	T1340(EAX).I = T1339(EAX).I - #1.C
	T1341(EDX:EAX).ULL =   T1340(EAX).I
	PARM	T1341(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T1342(EAX).A =   RV.T66(EAX).A
	PARMADJ	#8.N
	PARM	T1342(EAX).A
	T1343(EAX).A =   _apa:LINK(-4).A
	PARM	T1343(EAX).A
	T1344(EAX).A =   _q:LINK(4).A
	T1345(EAX).A =   *(T1344(EAX) + 40).A.A
	T1346(EAX).I =   *(T1345(EAX) + 19).A.C
	PARM	T1346(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 495

L_5552:
	DBG BLOCK END
	BLOCK END
	BLOCK 496

L_5549:
	BLOCK END
	BLOCK 497

L_5553:
	DBG BLOCK END
; Line 4000:	                    } 

	BLOCK END
	BLOCK 498

L_5554:
	DBG BLOCK END
	BLOCK END
	BLOCK 499

L_5555:
	DBG BLOCK END
	BLOCK END
	BLOCK 500

L_5540:
	BLOCK END
	BLOCK 501

L_5556:
	DBG BLOCK END
; Line 4001:	                } 

	BLOCK END
	BLOCK 502

L_5557:
	DBG BLOCK END
	BLOCK END
	BLOCK 503

L_5558:
	DBG BLOCK END
	BLOCK END
	BLOCK 504

L_5506:
	BLOCK END
	BLOCK 505

L_5559:
	DBG BLOCK END
; Line 4002:	            } 

	BLOCK END
	BLOCK 506

L_5560:
	DBG BLOCK END
	BLOCK END
	BLOCK 507

L_5561:
	DBG BLOCK END
	BLOCK END
	BLOCK 508

L_5468:
	BLOCK END
	BLOCK 509

L_5562:
	DBG BLOCK END
; Line 4003:	        } 

	BLOCK END
	BLOCK 510

L_5563:
	DBG BLOCK END
	BLOCK END
	BLOCK 511

L_5564:
	DBG BLOCK END
	BLOCK END
	BLOCK 512

L_5461:
	BLOCK END
	BLOCK 513

L_5565:
	DBG BLOCK END
	BLOCK END
	BLOCK 514

L_5566:
	DBG BLOCK END
	BLOCK END
	BLOCK 515

L_5448:
	BLOCK END
	BLOCK 516

L_5567:
	DBG BLOCK END
	BLOCK END
	BLOCK 517

L_5568:
	DBG BLOCK END
	BLOCK END
	BLOCK 518

L_5440:
	BLOCK END
	BLOCK 519

L_5569:
	DBG BLOCK END
	BLOCK END
	BLOCK 520

L_5570:
	DBG BLOCK END
	BLOCK END
	BLOCK 521

L_5408:
	BLOCK END
	BLOCK 522

L_5571:
	DBG BLOCK END
	BLOCK END
	BLOCK 523

L_5572:
	DBG BLOCK END
	BLOCK END
	BLOCK 524

L_5359:
	BLOCK END
	BLOCK 525

L_5573:
	DBG BLOCK END
	BLOCK END
	BLOCK 526

L_5574:
	DBG BLOCK END
	BLOCK END
	BLOCK 527

L_5322:
	BLOCK END
	BLOCK 528

L_5575:
	DBG BLOCK END
	BLOCK END
	BLOCK 529

L_5576:
	DBG BLOCK END
	BLOCK END
	BLOCK 530

L_5314:
	BLOCK END
	BLOCK 531

L_5577:
	DBG BLOCK END
; Line 4004:	    } 

	BLOCK END
	BLOCK 532

L_5578:
	DBG BLOCK END
	BLOCK END
	BLOCK 533

L_5580:
	DBG BLOCK END
	GOTO	L_5579:PC
	BLOCK END
	BLOCK 534
	DBG BLOCK START
	BLOCK END
	BLOCK 535

L_5581:
	BLOCK END
	BLOCK 536

L_5193:
; Line 4005:	    else if (sza < szl) 

	DBG BLOCK START
	BLOCK END
	BLOCK 537

L_5583:
	T167(ECX).I =   _szl:LINK(-28).I
	T168(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_5582:PC ; T168(EAX).I S>= T167(ECX).I
	BLOCK END
	BLOCK 538
	DBG BLOCK START
	BLOCK END
	BLOCK 539

L_5584:
; Line 4006:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 540

L_5585:
; Line 4007:	        if (q->dc.left->size == ISZ_ADDR) 

	DBG BLOCK START
	BLOCK END
	BLOCK 541

L_5587:
	T169(EAX).A =   _q:LINK(4).A
	T170(EAX).A =   *(T169(EAX) + 4+0).A.A
	T171(AL).C =   *(T170(EAX) + 19).A.C
	CONDGO	L_5586:PC ; T171(AL).C != #C.C
	BLOCK END
	BLOCK 542
	DBG BLOCK START
	BLOCK END
	BLOCK 543

L_5588:
	DBG BLOCK START
	BLOCK END
	BLOCK 544

L_5590:
; Line 4008:	            if (q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG) 

	T172(EAX).A =   _q:LINK(4).A
	T173(EAX).A =   *(T172(EAX) + 40).A.A
	T174(AL).C =   *(T173(EAX) + 19).A.C
	CONDGO	L_6191:PC ; T174(AL).C == #B.C
	BLOCK END
	BLOCK 545
	T175(EAX).A =   _q:LINK(4).A
	T176(EAX).A =   *(T175(EAX) + 40).A.A
	T177(EAX).I =   *(T176(EAX) + 19).A.C
	CONDGO	L_5589:PC ; T177(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 546

L_6191:
	DBG BLOCK START
	BLOCK END
	BLOCK 547

L_5591:
; Line 4009:	                goto addrupjn; 

	GOTO	L_5592:PC
	BLOCK END
	BLOCK 548

L_5593:
	DBG BLOCK END
	BLOCK END
	BLOCK 549

L_5589:
	BLOCK END
	BLOCK 550

L_5594:
	DBG BLOCK END
	BLOCK END
	BLOCK 551

L_5595:
	DBG BLOCK END
	BLOCK END
	BLOCK 552

L_5586:
	BLOCK END
	BLOCK 553

L_5596:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 554

L_5598:
; Line 4010:	        if (q->ans->size == ISZ_BOOLEAN) 

	T178(EAX).A =   _q:LINK(4).A
	T179(EAX).A =   *(T178(EAX) + 40).A.A
	T180(AL).C =   *(T179(EAX) + 19).A.C
	CONDGO	L_5597:PC ; T180(AL).C != #2.C
	BLOCK END
	BLOCK 555
	DBG BLOCK START
	BLOCK END
	BLOCK 556

L_5599:
; Line 4012:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 557

L_5600:
; Line 4013:	            int ulbl = beGetLabel; 

	VAR START	ulbl
	T181(EAX).I =   @Optimizer@nextLabel:RAM.I
	_ulbl:LINK(-60).I =   T181(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	DBG BLOCK START
	BLOCK END
	BLOCK 558

L_5602:
; Line 4014:	            if (q->dc.left->size >= ISZ_CFLOAT) 

	T182(EAX).A =   _q:LINK(4).A
	T183(EAX).A =   *(T182(EAX) + 4+0).A.A
	T184(EAX).I =   *(T183(EAX) + 19).A.C
	CONDGO	L_5601:PC ; T184(EAX).I S< #18.I
	BLOCK END
	BLOCK 559
	DBG BLOCK START
	BLOCK END
	BLOCK 560

L_5603:
; Line 4015:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 561

L_5604:
; Line 4017:	                int lbl1 = beGetLabel; 

	VAR START	lbl1
	T185(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lbl1:LINK(-64).I =   T185(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	VAR START	apz
; Line 4018:	                AMODE* apz; 
; Line 4019:	                gen_code_sse(op_ucomiss, op_ucomisd, q->dc.left->size, apl, apz = floatzero(apl)); 

; Line 4019:	                gen_code_sse(op_ucomiss, op_ucomisd, q->dc.left->size, apl, apz = floatzero(apl)); 

	T186(EAX).A =   _apl:LINK(-12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T187(EAX).A =   RV.T67(EAX).A
	PARMADJ	#4.N
	_apz:LINK(-68).A =   T187(EAX).A
	T188(EAX).A =   _apz:LINK(-68).A
	PARM	T188(EAX).A
	T189(EAX).A =   _apl:LINK(-12).A
	PARM	T189(EAX).A
	T190(EAX).A =   _q:LINK(4).A
	T191(EAX).A =   *(T190(EAX) + 4+0).A.A
	T192(EAX).I =   *(T191(EAX) + 19).A.C
	PARM	T192(EAX).I
	PARM	#259.I
	PARM	#25A.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4020:	                zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4021:	                gen_code(op_jnz, make_label(lbl1), NULL); 

	T193(EAX).A =   #0.C
	PARM	T193(EAX).A
	T194(EAX).I =   _lbl1:LINK(-64).I
	PARM	T194(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T195(EAX).A =   RV.T68(EAX).A
	PARMADJ	#4.N
	PARM	T195(EAX).A
	PARM	#FC.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4022:	                gen_code_sse(op_ucomiss, op_ucomisd, q->dc.left->size, apl1, apz); 

	T196(EAX).A =   _apz:LINK(-68).A
	PARM	T196(EAX).A
	T197(EAX).A =   _apl1:LINK(-16).A
	PARM	T197(EAX).A
	T198(EAX).A =   _q:LINK(4).A
	T199(EAX).A =   *(T198(EAX) + 4+0).A.A
	T200(EAX).I =   *(T199(EAX) + 19).A.C
	PARM	T200(EAX).I
	PARM	#259.I
	PARM	#25A.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4023:	                oa_gen_label(lbl1); 

	T201(EAX).I =   _lbl1:LINK(-64).I
	PARM	T201(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 4024:	                gen_code(op_setne, apa, NULL); 

	T202(EAX).A =   #0.C
	PARM	T202(EAX).A
	T203(EAX).A =   _apa:LINK(-4).A
	PARM	T203(EAX).A
	PARM	#168.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4025:	                gen_codes(op_and, ISZ_UINT, apa, aimmed(1)); 

	T204(EDX:EAX).ULL =   #1.C
	PARM	T204(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T205(EAX).A =   RV.T69(EAX).A
	PARMADJ	#8.N
	PARM	T205(EAX).A
	T206(EAX).A =   _apa:LINK(-4).A
	PARM	T206(EAX).A
	T207(EAX).UI =   #7.C
	PARM	T207(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4026:	            } 

	BLOCK END
	BLOCK 562

L_5605:
	DBG BLOCK END
	BLOCK END
	BLOCK 563

L_5607:
	DBG BLOCK END
	GOTO	L_5606:PC
	BLOCK END
	BLOCK 564
	DBG BLOCK START
	BLOCK END
	BLOCK 565

L_5608:
	BLOCK END
	BLOCK 566

L_5601:
; Line 4027:	            else if (q->dc.left->size >= ISZ_IFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 567

L_5610:
	T208(EAX).A =   _q:LINK(4).A
	T209(EAX).A =   *(T208(EAX) + 4+0).A.A
	T210(EAX).I =   *(T209(EAX) + 19).A.C
	CONDGO	L_5609:PC ; T210(EAX).I S< #15.I
	BLOCK END
	BLOCK 568
	DBG BLOCK START
	BLOCK END
	BLOCK 569

L_5611:
; Line 4028:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 570

L_5612:
; Line 4029:	                gen_code_sse(op_ucomiss, op_ucomisd, q->dc.left->size, apl, floatzero(apl)); 

	T211(EAX).A =   _apl:LINK(-12).A
	PARM	T211(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T212(EAX).A =   RV.T70(EAX).A
	PARMADJ	#4.N
	PARM	T212(EAX).A
	T213(EAX).A =   _apl:LINK(-12).A
	PARM	T213(EAX).A
	T214(EAX).A =   _q:LINK(4).A
	T215(EAX).A =   *(T214(EAX) + 4+0).A.A
	T216(EAX).I =   *(T215(EAX) + 19).A.C
	PARM	T216(EAX).I
	PARM	#259.I
	PARM	#25A.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4030:	                zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4031:	                gen_code(op_setne, apa, NULL); 

	T217(EAX).A =   #0.C
	PARM	T217(EAX).A
	T218(EAX).A =   _apa:LINK(-4).A
	PARM	T218(EAX).A
	PARM	#168.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4032:	                gen_codes(op_and, ISZ_UINT, apa, aimmed(1)); 

	T219(EDX:EAX).ULL =   #1.C
	PARM	T219(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T220(EAX).A =   RV.T71(EAX).A
	PARMADJ	#8.N
	PARM	T220(EAX).A
	T221(EAX).A =   _apa:LINK(-4).A
	PARM	T221(EAX).A
	T222(EAX).UI =   #7.C
	PARM	T222(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4033:	            } 

	BLOCK END
	BLOCK 571

L_5613:
	DBG BLOCK END
	BLOCK END
	BLOCK 572

L_5615:
	DBG BLOCK END
	GOTO	L_5614:PC
	BLOCK END
	BLOCK 573
	DBG BLOCK START
	BLOCK END
	BLOCK 574

L_5616:
	BLOCK END
	BLOCK 575

L_5609:
; Line 4034:	            else if (q->dc.left->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 576

L_5618:
	T223(EAX).A =   _q:LINK(4).A
	T224(EAX).A =   *(T223(EAX) + 4+0).A.A
	T225(EAX).I =   *(T224(EAX) + 19).A.C
	CONDGO	L_5617:PC ; T225(EAX).I S< #12.C
	BLOCK END
	BLOCK 577
	DBG BLOCK START
	BLOCK END
	BLOCK 578

L_5619:
; Line 4035:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 579

L_5620:
; Line 4036:	                gen_code_sse(op_ucomiss, op_ucomisd, q->dc.left->size, apl, floatzero(apl)); 

	T226(EAX).A =   _apl:LINK(-12).A
	PARM	T226(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T227(EAX).A =   RV.T72(EAX).A
	PARMADJ	#4.N
	PARM	T227(EAX).A
	T228(EAX).A =   _apl:LINK(-12).A
	PARM	T228(EAX).A
	T229(EAX).A =   _q:LINK(4).A
	T230(EAX).A =   *(T229(EAX) + 4+0).A.A
	T231(EAX).I =   *(T230(EAX) + 19).A.C
	PARM	T231(EAX).I
	PARM	#259.I
	PARM	#25A.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4037:	                zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4038:	                gen_code(op_setne, apa, NULL); 

	T232(EAX).A =   #0.C
	PARM	T232(EAX).A
	T233(EAX).A =   _apa:LINK(-4).A
	PARM	T233(EAX).A
	PARM	#168.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4039:	                gen_codes(op_and, ISZ_UINT, apa, aimmed(1)); 

	T234(EDX:EAX).ULL =   #1.C
	PARM	T234(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T235(EAX).A =   RV.T73(EAX).A
	PARMADJ	#8.N
	PARM	T235(EAX).A
	T236(EAX).A =   _apa:LINK(-4).A
	PARM	T236(EAX).A
	T237(EAX).UI =   #7.C
	PARM	T237(EAX).UI
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4040:	            } 

	BLOCK END
	BLOCK 580

L_5621:
	DBG BLOCK END
	BLOCK END
	BLOCK 581

L_5623:
	DBG BLOCK END
	GOTO	L_5622:PC
	BLOCK END
	BLOCK 582
	DBG BLOCK START
	BLOCK END
	BLOCK 583

L_5624:
	BLOCK END
	BLOCK 584

L_5617:
; Line 4041:	            else if (q->dc.left->size == ISZ_ULONGLONG || q->dc.left->size == -ISZ_ULONGLONG) 

	DBG BLOCK START
	BLOCK END
	BLOCK 585

L_5626:
	T238(EAX).A =   _q:LINK(4).A
	T239(EAX).A =   *(T238(EAX) + 4+0).A.A
	T240(AL).C =   *(T239(EAX) + 19).A.C
	CONDGO	L_6192:PC ; T240(AL).C == #B.C
	BLOCK END
	BLOCK 586
	T241(EAX).A =   _q:LINK(4).A
	T242(EAX).A =   *(T241(EAX) + 4+0).A.A
	T243(EAX).I =   *(T242(EAX) + 19).A.C
	CONDGO	L_5625:PC ; T243(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 587

L_6192:
	DBG BLOCK START
	BLOCK END
	BLOCK 588

L_5627:
; Line 4042:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 589

L_5628:
; Line 4043:	                if (apl->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 590

L_5630:
	T250(EAX).A =   _apl:LINK(-12).A
	T251(EAX).I =   *(T250(EAX) + 0).A.I
	CONDGO	L_5629:PC ; T251(EAX).I != #2.C
	BLOCK END
	BLOCK 591
	DBG BLOCK START
	BLOCK END
	BLOCK 592

L_5631:
; Line 4044:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 593

L_5632:
; Line 4045:	                    if (apl->preg == apa->preg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 594

L_5634:
	T252(EAX).A =   _apa:LINK(-4).A
	T253(ECX).I =   *(T252(EAX) + 4).A.C
	T254(EAX).A =   _apl:LINK(-12).A
	T255(EAX).I =   *(T254(EAX) + 4).A.C
	CONDGO	L_5633:PC ; T255(EAX).I != T253(ECX).I
	BLOCK END
	BLOCK 595
	DBG BLOCK START
	BLOCK END
	BLOCK 596

L_5635:
; Line 4046:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 597

L_5636:
; Line 4047:	                        gen_codes(op_or, ISZ_UINT, apa, apl1); 

	T256(EAX).A =   _apl1:LINK(-16).A
	PARM	T256(EAX).A
	T257(EAX).A =   _apa:LINK(-4).A
	PARM	T257(EAX).A
	T258(EAX).UI =   #7.C
	PARM	T258(EAX).UI
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4048:	                    } 

	BLOCK END
	BLOCK 598

L_5637:
	DBG BLOCK END
	BLOCK END
	BLOCK 599

L_5639:
	DBG BLOCK END
	GOTO	L_5638:PC
	BLOCK END
	BLOCK 600
	DBG BLOCK START
	BLOCK END
	BLOCK 601

L_5640:
	BLOCK END
	BLOCK 602

L_5633:
; Line 4049:	                    else if (apl1->preg == apa->preg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 603

L_5642:
	T259(EAX).A =   _apa:LINK(-4).A
	T260(ECX).I =   *(T259(EAX) + 4).A.C
	T261(EAX).A =   _apl1:LINK(-16).A
	T262(EAX).I =   *(T261(EAX) + 4).A.C
	CONDGO	L_5641:PC ; T262(EAX).I != T260(ECX).I
	BLOCK END
	BLOCK 604
	DBG BLOCK START
	BLOCK END
	BLOCK 605

L_5643:
; Line 4050:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 606

L_5644:
; Line 4051:	                        gen_codes(op_or, ISZ_UINT, apa, apl); 

	T263(EAX).A =   _apl:LINK(-12).A
	PARM	T263(EAX).A
	T264(EAX).A =   _apa:LINK(-4).A
	PARM	T264(EAX).A
	T265(EAX).UI =   #7.C
	PARM	T265(EAX).UI
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4052:	                    } 

	BLOCK END
	BLOCK 607

L_5645:
	DBG BLOCK END
	BLOCK END
	BLOCK 608

L_5647:
	DBG BLOCK END
	GOTO	L_5646:PC
	BLOCK END
	BLOCK 609
	DBG BLOCK START
	BLOCK END
	BLOCK 610

L_5648:
	BLOCK END
	BLOCK 611

L_5641:
; Line 4053:	                    else 

; Line 4054:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 612

L_5649:
; Line 4055:	                        gen_codes(op_mov, ISZ_UINT, apa, apl); 

	T266(EAX).A =   _apl:LINK(-12).A
	PARM	T266(EAX).A
	T267(EAX).A =   _apa:LINK(-4).A
	PARM	T267(EAX).A
	T268(EAX).UI =   #7.C
	PARM	T268(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4056:	                        gen_codes(op_or, ISZ_UINT, apa, apl1); 

	T269(EAX).A =   _apl1:LINK(-16).A
	PARM	T269(EAX).A
	T270(EAX).A =   _apa:LINK(-4).A
	PARM	T270(EAX).A
	T271(EAX).UI =   #7.C
	PARM	T271(EAX).UI
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4057:	                    } 

	BLOCK END
	BLOCK 613

L_5650:
	DBG BLOCK END
	BLOCK END
	BLOCK 614

L_5651:
	DBG BLOCK END
	BLOCK END
	BLOCK 615

L_5646:
	BLOCK END
	BLOCK 616

L_5652:
	DBG BLOCK END
	BLOCK END
	BLOCK 617

L_5653:
	DBG BLOCK END
	BLOCK END
	BLOCK 618

L_5638:
	BLOCK END
	BLOCK 619

L_5654:
	DBG BLOCK END
; Line 4058:	                } 

	BLOCK END
	BLOCK 620

L_5655:
	DBG BLOCK END
	BLOCK END
	BLOCK 621

L_5657:
	DBG BLOCK END
	GOTO	L_5656:PC
	BLOCK END
	BLOCK 622
	DBG BLOCK START
	BLOCK END
	BLOCK 623

L_5658:
	BLOCK END
	BLOCK 624

L_5629:
; Line 4059:	                else if ((apl->mode == am_indispscale && (apl->preg == apa->preg || apl->sreg == apa->preg)) || 

	DBG BLOCK START
	BLOCK END
	BLOCK 625

L_5660:
; Line 4060:	                         (apl->mode == am_indisp && apl->preg == apa->preg)) 

	T272(EAX).A =   _apl:LINK(-12).A
	T273(EAX).I =   *(T272(EAX) + 0).A.I
	CONDGO	L_6194:PC ; T273(EAX).I != #D.I
	BLOCK END
	BLOCK 626
	T274(EAX).A =   _apa:LINK(-4).A
	T275(ECX).I =   *(T274(EAX) + 4).A.C
	T276(EAX).A =   _apl:LINK(-12).A
	T277(EAX).I =   *(T276(EAX) + 4).A.C
	CONDGO	L_6193:PC ; T277(EAX).I == T275(ECX).I
	BLOCK END
	BLOCK 627
	T278(EAX).A =   _apa:LINK(-4).A
	T279(ECX).I =   *(T278(EAX) + 4).A.C
	T280(EAX).A =   _apl:LINK(-12).A
	T281(EAX).I =   *(T280(EAX) + 5).A.C
	CONDGO	L_6193:PC ; T281(EAX).I == T279(ECX).I
	BLOCK END
	BLOCK 628

L_6194:
	T282(EAX).A =   _apl:LINK(-12).A
	T283(EAX).I =   *(T282(EAX) + 0).A.I
	CONDGO	L_5659:PC ; T283(EAX).I != #C.C
	BLOCK END
	BLOCK 629
	T284(EAX).A =   _apa:LINK(-4).A
	T285(ECX).I =   *(T284(EAX) + 4).A.C
	T286(EAX).A =   _apl:LINK(-12).A
	T287(EAX).I =   *(T286(EAX) + 4).A.C
	CONDGO	L_5659:PC ; T287(EAX).I != T285(ECX).I
	BLOCK END
	BLOCK 630

L_6193:
	DBG BLOCK START
	BLOCK END
	BLOCK 631

L_5661:
; Line 4061:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 632

L_5662:
; Line 4062:	                    gen_codes(op_push, ISZ_UINT, apl1, NULL); 

	T294(EAX).A =   #0.C
	PARM	T294(EAX).A
	T295(EAX).A =   _apl1:LINK(-16).A
	PARM	T295(EAX).A
	T296(EAX).UI =   #7.C
	PARM	T296(EAX).UI
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4063:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 4064:	                    gen_codes(op_mov, ISZ_UINT, apa, apl); 

	T297(EAX).A =   _apl:LINK(-12).A
	PARM	T297(EAX).A
	T298(EAX).A =   _apa:LINK(-4).A
	PARM	T298(EAX).A
	T299(EAX).UI =   #7.C
	PARM	T299(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4065:	                    gen_codes(op_or, ISZ_UINT, apa, make_stack(0)); 

	T300(EAX).UI =   #0.C
	PARM	T300(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T301(EAX).A =   RV.T74(EAX).A
	PARMADJ	#4.N
	PARM	T301(EAX).A
	T302(EAX).A =   _apa:LINK(-4).A
	PARM	T302(EAX).A
	T303(EAX).UI =   #7.C
	PARM	T303(EAX).UI
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4066:	                    gen_codes(op_pop, ISZ_UINT, apa, NULL); 

	T304(EAX).A =   #0.C
	PARM	T304(EAX).A
	T305(EAX).A =   _apa:LINK(-4).A
	PARM	T305(EAX).A
	T306(EAX).UI =   #7.C
	PARM	T306(EAX).UI
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4067:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 4068:	                } 

	BLOCK END
	BLOCK 633

L_5663:
	DBG BLOCK END
	BLOCK END
	BLOCK 634

L_5665:
	DBG BLOCK END
	GOTO	L_5664:PC
	BLOCK END
	BLOCK 635
	DBG BLOCK START
	BLOCK END
	BLOCK 636

L_5666:
	BLOCK END
	BLOCK 637

L_5659:
; Line 4069:	                else 

; Line 4070:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 638

L_5667:
; Line 4071:	                    gen_codes(op_mov, ISZ_UINT, apa, apl); 

	T288(EAX).A =   _apl:LINK(-12).A
	PARM	T288(EAX).A
	T289(EAX).A =   _apa:LINK(-4).A
	PARM	T289(EAX).A
	T290(EAX).UI =   #7.C
	PARM	T290(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4072:	                    gen_codes(op_or, ISZ_UINT, apa, apl1); 

	T291(EAX).A =   _apl1:LINK(-16).A
	PARM	T291(EAX).A
	T292(EAX).A =   _apa:LINK(-4).A
	PARM	T292(EAX).A
	T293(EAX).UI =   #7.C
	PARM	T293(EAX).UI
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4073:	                } 

	BLOCK END
	BLOCK 639

L_5668:
	DBG BLOCK END
	BLOCK END
	BLOCK 640

L_5669:
	DBG BLOCK END
	BLOCK END
	BLOCK 641

L_5664:
	BLOCK END
	BLOCK 642

L_5670:
	DBG BLOCK END
	BLOCK END
	BLOCK 643

L_5671:
	DBG BLOCK END
	BLOCK END
	BLOCK 644

L_5656:
	BLOCK END
	BLOCK 645

L_5672:
	DBG BLOCK END
; Line 4074:	            } 

	BLOCK END
	BLOCK 646

L_5673:
	DBG BLOCK END
	BLOCK END
	BLOCK 647

L_5675:
	DBG BLOCK END
	GOTO	L_5674:PC
	BLOCK END
	BLOCK 648
	DBG BLOCK START
	BLOCK END
	BLOCK 649

L_5676:
	BLOCK END
	BLOCK 650

L_5625:
; Line 4075:	            else 

; Line 4076:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 651

L_5677:
; Line 4077:	                gen_codes(op_cmp, q->dc.left->size, apl, aimmed(0)); 

	T244(EDX:EAX).ULL =   #0.C
	PARM	T244(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T245(EAX).A =   RV.T75(EAX).A
	PARMADJ	#8.N
	PARM	T245(EAX).A
	T246(EAX).A =   _apl:LINK(-12).A
	PARM	T246(EAX).A
	T247(EAX).A =   _q:LINK(4).A
	T248(EAX).A =   *(T247(EAX) + 4+0).A.A
	T249(EAX).I =   *(T248(EAX) + 19).A.C
	PARM	T249(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4078:	            } 

	BLOCK END
	BLOCK 652

L_5678:
	DBG BLOCK END
	BLOCK END
	BLOCK 653

L_5679:
	DBG BLOCK END
	BLOCK END
	BLOCK 654

L_5674:
	BLOCK END
	BLOCK 655

L_5680:
	DBG BLOCK END
	BLOCK END
	BLOCK 656

L_5681:
	DBG BLOCK END
	BLOCK END
	BLOCK 657

L_5622:
	BLOCK END
	BLOCK 658

L_5682:
	DBG BLOCK END
	BLOCK END
	BLOCK 659

L_5683:
	DBG BLOCK END
	BLOCK END
	BLOCK 660

L_5614:
	BLOCK END
	BLOCK 661

L_5684:
	DBG BLOCK END
	BLOCK END
	BLOCK 662

L_5685:
	DBG BLOCK END
	BLOCK END
	BLOCK 663

L_5606:
	BLOCK END
	BLOCK 664

L_5686:
	DBG BLOCK END
; Line 4079:	            gen_codes(op_setne, ISZ_UCHAR, apa, 0); 

	T307(EAX).A =   #0.C
	PARM	T307(EAX).A
	T308(EAX).A =   _apa:LINK(-4).A
	PARM	T308(EAX).A
	T309(EAX).UI =   #3.C
	PARM	T309(EAX).UI
	PARM	#168.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4080:	        } 

	BLOCK END
	BLOCK 665

L_5687:
	DBG BLOCK END
	BLOCK END
	BLOCK 666

L_5689:
	DBG BLOCK END
	GOTO	L_5688:PC
	BLOCK END
	BLOCK 667
	DBG BLOCK START
	BLOCK END
	BLOCK 668

L_5690:
	BLOCK END
	BLOCK 669

L_5597:
; Line 4081:	        else if (q->dc.left->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 670

L_5692:
	T310(EAX).A =   _q:LINK(4).A
	T311(EAX).A =   *(T310(EAX) + 4+0).A.A
	T312(EAX).I =   *(T311(EAX) + 19).A.C
	CONDGO	L_5691:PC ; T312(EAX).I S< #18.I
	BLOCK END
	BLOCK 671
	DBG BLOCK START
	BLOCK END
	BLOCK 672

L_5693:
; Line 4082:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 673

L_5694:
; Line 4083:	            if (q->ans->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 674

L_5696:
	T313(EAX).A =   _q:LINK(4).A
	T314(EAX).A =   *(T313(EAX) + 40).A.A
	T315(EAX).I =   *(T314(EAX) + 19).A.C
	CONDGO	L_5695:PC ; T315(EAX).I S< #18.I
	BLOCK END
	BLOCK 675
	DBG BLOCK START
	BLOCK END
	BLOCK 676

L_5697:
; Line 4084:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 677

L_5698:
; Line 4085:	                moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T316(EAX).A =   _q:LINK(4).A
	T317(EAX).A =   *(T316(EAX) + 4+0).A.A
	T318(EAX).I =   *(T317(EAX) + 19).A.C
	PARM	T318(EAX).I
	T319(EAX).A =   _apl:LINK(-12).A
	PARM	T319(EAX).A
	T320(EAX).A =   _q:LINK(4).A
	T321(EAX).A =   *(T320(EAX) + 40).A.A
	T322(EAX).I =   *(T321(EAX) + 19).A.C
	PARM	T322(EAX).I
	T323(EAX).A =   _apa:LINK(-4).A
	PARM	T323(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4086:	                moveFP(apa1, q->ans->size, apl1, q->dc.left->size); 

	T324(EAX).A =   _q:LINK(4).A
	T325(EAX).A =   *(T324(EAX) + 4+0).A.A
	T326(EAX).I =   *(T325(EAX) + 19).A.C
	PARM	T326(EAX).I
	T327(EAX).A =   _apl1:LINK(-16).A
	PARM	T327(EAX).A
	T328(EAX).A =   _q:LINK(4).A
	T329(EAX).A =   *(T328(EAX) + 40).A.A
	T330(EAX).I =   *(T329(EAX) + 19).A.C
	PARM	T330(EAX).I
	T331(EAX).A =   _apa1:LINK(-8).A
	PARM	T331(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4087:	            } 

	BLOCK END
	BLOCK 678

L_5699:
	DBG BLOCK END
	BLOCK END
	BLOCK 679

L_5701:
	DBG BLOCK END
	GOTO	L_5700:PC
	BLOCK END
	BLOCK 680
	DBG BLOCK START
	BLOCK END
	BLOCK 681

L_5702:
	BLOCK END
	BLOCK 682

L_5695:
; Line 4088:	            else if (q->ans->size >= ISZ_IFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 683

L_5704:
	T332(EAX).A =   _q:LINK(4).A
	T333(EAX).A =   *(T332(EAX) + 40).A.A
	T334(EAX).I =   *(T333(EAX) + 19).A.C
	CONDGO	L_5703:PC ; T334(EAX).I S< #15.I
	BLOCK END
	BLOCK 684
	DBG BLOCK START
	BLOCK END
	BLOCK 685

L_5705:
; Line 4089:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 686

L_5706:
; Line 4090:	                moveFP(apa, q->ans->size, apl1, q->dc.left->size); 

	T335(EAX).A =   _q:LINK(4).A
	T336(EAX).A =   *(T335(EAX) + 4+0).A.A
	T337(EAX).I =   *(T336(EAX) + 19).A.C
	PARM	T337(EAX).I
	T338(EAX).A =   _apl1:LINK(-16).A
	PARM	T338(EAX).A
	T339(EAX).A =   _q:LINK(4).A
	T340(EAX).A =   *(T339(EAX) + 40).A.A
	T341(EAX).I =   *(T340(EAX) + 19).A.C
	PARM	T341(EAX).I
	T342(EAX).A =   _apa:LINK(-4).A
	PARM	T342(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4091:	            } 

	BLOCK END
	BLOCK 687

L_5707:
	DBG BLOCK END
	BLOCK END
	BLOCK 688

L_5709:
	DBG BLOCK END
	GOTO	L_5708:PC
	BLOCK END
	BLOCK 689
	DBG BLOCK START
	BLOCK END
	BLOCK 690

L_5710:
	BLOCK END
	BLOCK 691

L_5703:
; Line 4092:	            else if (q->ans->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 692

L_5712:
	T343(EAX).A =   _q:LINK(4).A
	T344(EAX).A =   *(T343(EAX) + 40).A.A
	T345(EAX).I =   *(T344(EAX) + 19).A.C
	CONDGO	L_5711:PC ; T345(EAX).I S< #12.C
	BLOCK END
	BLOCK 693
	DBG BLOCK START
	BLOCK END
	BLOCK 694

L_5713:
; Line 4093:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 695

L_5714:
; Line 4094:	                moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T346(EAX).A =   _q:LINK(4).A
	T347(EAX).A =   *(T346(EAX) + 4+0).A.A
	T348(EAX).I =   *(T347(EAX) + 19).A.C
	PARM	T348(EAX).I
	T349(EAX).A =   _apl:LINK(-12).A
	PARM	T349(EAX).A
	T350(EAX).A =   _q:LINK(4).A
	T351(EAX).A =   *(T350(EAX) + 40).A.A
	T352(EAX).I =   *(T351(EAX) + 19).A.C
	PARM	T352(EAX).I
	T353(EAX).A =   _apa:LINK(-4).A
	PARM	T353(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4095:	            } 

	BLOCK END
	BLOCK 696

L_5715:
	DBG BLOCK END
	BLOCK END
	BLOCK 697

L_5717:
	DBG BLOCK END
	GOTO	L_5716:PC
	BLOCK END
	BLOCK 698
	DBG BLOCK START
	BLOCK END
	BLOCK 699

L_5718:
	BLOCK END
	BLOCK 700

L_5711:
; Line 4096:	            else 

; Line 4097:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 701

L_5719:
; Line 4098:	                apa->length = ISZ_UINT; 

	T354(EAX).A =   _apa:LINK(-4).A
	*(T354(EAX) + 8).A.C =   #7.C
; Line 4099:	                gen_code_sse(op_cvttss2si, op_cvttsd2si, q->dc.left->size, apa, apl); 

	T355(EAX).A =   _apl:LINK(-12).A
	PARM	T355(EAX).A
	T356(EAX).A =   _apa:LINK(-4).A
	PARM	T356(EAX).A
	T357(EAX).A =   _q:LINK(4).A
	T358(EAX).A =   *(T357(EAX) + 4+0).A.A
	T359(EAX).I =   *(T358(EAX) + 19).A.C
	PARM	T359(EAX).I
	PARM	#1C3.I
	PARM	#1C4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4100:	            } 

	BLOCK END
	BLOCK 702

L_5720:
	DBG BLOCK END
	BLOCK END
	BLOCK 703

L_5721:
	DBG BLOCK END
	BLOCK END
	BLOCK 704

L_5716:
	BLOCK END
	BLOCK 705

L_5722:
	DBG BLOCK END
	BLOCK END
	BLOCK 706

L_5723:
	DBG BLOCK END
	BLOCK END
	BLOCK 707

L_5708:
	BLOCK END
	BLOCK 708

L_5724:
	DBG BLOCK END
	BLOCK END
	BLOCK 709

L_5725:
	DBG BLOCK END
	BLOCK END
	BLOCK 710

L_5700:
	BLOCK END
	BLOCK 711

L_5726:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 712

L_5727:
	DBG BLOCK END
	BLOCK END
	BLOCK 713

L_5729:
	DBG BLOCK END
	GOTO	L_5728:PC
	BLOCK END
	BLOCK 714
	DBG BLOCK START
	BLOCK END
	BLOCK 715

L_5730:
	BLOCK END
	BLOCK 716

L_5691:
; Line 4102:	        else if (q->dc.left->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 717

L_5732:
	T360(EAX).A =   _q:LINK(4).A
	T361(EAX).A =   *(T360(EAX) + 4+0).A.A
	T362(EAX).I =   *(T361(EAX) + 19).A.C
	CONDGO	L_5731:PC ; T362(EAX).I S< #12.C
	BLOCK END
	BLOCK 718
	DBG BLOCK START
	BLOCK END
	BLOCK 719

L_5733:
; Line 4103:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 720

L_5734:
; Line 4104:	            moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T363(EAX).A =   _q:LINK(4).A
	T364(EAX).A =   *(T363(EAX) + 4+0).A.A
	T365(EAX).I =   *(T364(EAX) + 19).A.C
	PARM	T365(EAX).I
	T366(EAX).A =   _apl:LINK(-12).A
	PARM	T366(EAX).A
	T367(EAX).A =   _q:LINK(4).A
	T368(EAX).A =   *(T367(EAX) + 40).A.A
	T369(EAX).I =   *(T368(EAX) + 19).A.C
	PARM	T369(EAX).I
	T370(EAX).A =   _apa:LINK(-4).A
	PARM	T370(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4105:	        } 

	BLOCK END
	BLOCK 721

L_5735:
	DBG BLOCK END
	BLOCK END
	BLOCK 722

L_5737:
	DBG BLOCK END
	GOTO	L_5736:PC
	BLOCK END
	BLOCK 723
	DBG BLOCK START
	BLOCK END
	BLOCK 724

L_5738:
	BLOCK END
	BLOCK 725

L_5731:
; Line 4106:	        else 

; Line 4107:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 726

L_5739:
; Line 4108:	            int size; 

	VAR START	size
	BLOCK END
	BLOCK 727

L_5740:
; Line 4118:	        addrdnjn: 
; Line 4119:	            size = q->ans->size; 

; Line 4119:	            size = q->ans->size; 

	T371(EAX).A =   _q:LINK(4).A
	T372(EAX).A =   *(T371(EAX) + 40).A.A
	T373(EAX).I =   *(T372(EAX) + 19).A.C
	_size:LINK(-52).I =   T373(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 728

L_5742:
; Line 4120:	            if (apa->mode == am_dreg && apl->mode == am_dreg) 

	T374(EAX).A =   _apa:LINK(-4).A
	T375(EAX).I =   *(T374(EAX) + 0).A.I
	CONDGO	L_5741:PC ; T375(EAX).I != #2.C
	BLOCK END
	BLOCK 729
	T376(EAX).A =   _apl:LINK(-12).A
	T377(EAX).I =   *(T376(EAX) + 0).A.I
	CONDGO	L_5741:PC ; T377(EAX).I != #2.C
	BLOCK END
	BLOCK 730
	DBG BLOCK START
	BLOCK END
	BLOCK 731

L_5743:
; Line 4121:	                size = ISZ_UINT; 

	T378(EAX).I =   #7.C
	_size:LINK(-52).I =   T378(EAX).I
	BLOCK END
	BLOCK 732

L_5745:
	DBG BLOCK END
	GOTO	L_5744:PC
	BLOCK END
	BLOCK 733
	DBG BLOCK START
	BLOCK END
	BLOCK 734

L_5746:
	BLOCK END
	BLOCK 735

L_5741:
; Line 4122:	            else if (size <= ISZ_UCHAR && apl->mode == am_dreg && apl->preg > EBX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 736

L_5748:
	T379(EAX).I =   _size:LINK(-52).I
	CONDGO	L_5747:PC ; T379(EAX).I S> #3.C
	BLOCK END
	BLOCK 737
	T380(EAX).A =   _apl:LINK(-12).A
	T381(EAX).I =   *(T380(EAX) + 0).A.I
	CONDGO	L_5747:PC ; T381(EAX).I != #2.C
	BLOCK END
	BLOCK 738
	T382(EAX).A =   _apl:LINK(-12).A
	T383(EAX).I =   *(T382(EAX) + 4).A.C
	CONDGO	L_5747:PC ; T383(EAX).I S<= #3.C
	BLOCK END
	BLOCK 739
	DBG BLOCK START
	BLOCK END
	BLOCK 740

L_5749:
; Line 4123:	                diag("asm_assn: Conversion of invalid reg to byte"); 

	PARM	#L_5136:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 741

L_5750:
	DBG BLOCK END
	BLOCK END
	BLOCK 742

L_5747:
	BLOCK END
	BLOCK 743

L_5751:
	DBG BLOCK END
	BLOCK END
	BLOCK 744

L_5752:
	DBG BLOCK END
	BLOCK END
	BLOCK 745

L_5744:
	BLOCK END
	BLOCK 746

L_5753:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 747

L_5755:
; Line 4124:	            if (q->ans->bits) 

	T384(EAX).A =   _q:LINK(4).A
	T385(EAX).A =   *(T384(EAX) + 40).A.A
	T386(AL).C =   *(T385(EAX) + 1C).A.C
	CONDGO	L_5754:PC ; T386(AL).C == #0.C
	BLOCK END
	BLOCK 748
	DBG BLOCK START
	BLOCK END
	BLOCK 749

L_5756:
; Line 4125:	                bit_store(apa, apl, q->ans->size, q->ans->bits, q->ans->startbit); 

	T387(EAX).A =   _q:LINK(4).A
	T388(EAX).A =   *(T387(EAX) + 40).A.A
	T389(EAX).I =   *(T388(EAX) + 1B).A.C
	PARM	T389(EAX).I
	T390(EAX).A =   _q:LINK(4).A
	T391(EAX).A =   *(T390(EAX) + 40).A.A
	T392(EAX).I =   *(T391(EAX) + 1C).A.C
	PARM	T392(EAX).I
	T393(EAX).A =   _q:LINK(4).A
	T394(EAX).A =   *(T393(EAX) + 40).A.A
	T395(EAX).I =   *(T394(EAX) + 19).A.C
	PARM	T395(EAX).I
	T396(EAX).A =   _apl:LINK(-12).A
	PARM	T396(EAX).A
	T397(EAX).A =   _apa:LINK(-4).A
	PARM	T397(EAX).A
	TAG
	GOSUB	#@occx86@bit_store$qp5amodepn0iii:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 750

L_5758:
	DBG BLOCK END
	GOTO	L_5757:PC
	BLOCK END
	BLOCK 751
	DBG BLOCK START
	BLOCK END
	BLOCK 752

L_5759:
	BLOCK END
	BLOCK 753

L_5754:
; Line 4126:	            else 

; Line 4127:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 754

L_5760:
; Line 4128:	                if (q->dc.opcode == Optimizer::i_assn && q->dc.left->bits) 

	DBG BLOCK START
	BLOCK END
	BLOCK 755

L_5762:
	T398(EAX).A =   _q:LINK(4).A
	T399(EAX).I =   *(T398(EAX) + 0+0).A.I
	CONDGO	L_5761:PC ; T399(EAX).I != #37.I
	BLOCK END
	BLOCK 756
	T400(EAX).A =   _q:LINK(4).A
	T401(EAX).A =   *(T400(EAX) + 4+0).A.A
	T402(AL).C =   *(T401(EAX) + 1C).A.C
	CONDGO	L_5761:PC ; T402(AL).C == #0.C
	BLOCK END
	BLOCK 757
	DBG BLOCK START
	BLOCK END
	BLOCK 758

L_5763:
; Line 4129:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 759

L_5764:
; Line 4130:	                    int max; 

	VAR START	max
	DBG BLOCK START
	BLOCK END
	BLOCK 760

L_5766:
	DBG BLOCK END
; Line 4131:	                    switch (szl) 

	T403(EAX).I =   _szl:LINK(-28).I
	COSWITCH(T403(EAX).I,#7.UI,#8.UI,L_5782:PC)
	SWBRANCH(#3.UI,L_5768:PC)
	SWBRANCH(#4.UI,L_5770:PC)
	SWBRANCH(#5.UI,L_5774:PC)
	SWBRANCH(#6.UI,L_5772:PC)
	SWBRANCH(#7.UI,L_5776:PC)
	SWBRANCH(#9.UI,L_5778:PC)
	SWBRANCH(#A.UI,L_5780:PC)
; Line 4132:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 761

L_5767:
	BLOCK END
	BLOCK 762

L_5768:
	DBG BLOCK START
; Line 4134:	                            max = 8; 

	_max:LINK(-56).I =   #8.I
; Line 4135:	                            break; 

	GOTO	L_5765:PC
	BLOCK END
	BLOCK 763
	DBG BLOCK END
	BLOCK END
	BLOCK 764

L_5770:
	BLOCK END
	BLOCK 765

L_5772:
	BLOCK END
	BLOCK 766

L_5774:
	DBG BLOCK START
; Line 4136:	                        case ISZ_USHORT: 
; Line 4137:	                        case ISZ_U16: 

; Line 4137:	                        case ISZ_U16: 

	_max:LINK(-56).I =   #10.I
; Line 4138:	                        case ISZ_WCHAR: 
; Line 4139:	                            max = 16; 

; Line 4139:	                            max = 16; 

	GOTO	L_5765:PC
	BLOCK END
	BLOCK 767
	DBG BLOCK END
	BLOCK END
	BLOCK 768

L_5776:
	BLOCK END
	BLOCK 769

L_5778:
	BLOCK END
	BLOCK 770

L_5780:
	DBG BLOCK START
	DBG BLOCK END
	BLOCK END
	BLOCK 771

L_5782:
	DBG BLOCK START
; Line 4140:	                            break; 
; Line 4141:	                        case ISZ_UINT: 

; Line 4141:	                        case ISZ_UINT: 

	_max:LINK(-56).I =   #20.I
; Line 4142:	                        case ISZ_ULONG: 
; Line 4143:	                        case ISZ_U32: 

; Line 4143:	                        case ISZ_U32: 

	BLOCK END
	BLOCK 772

L_5783:
	DBG BLOCK END
	BLOCK END
	BLOCK 773

L_5765:
	BLOCK END
	BLOCK 774

L_5784:
	DBG BLOCK END
; Line 4145:	                            max = 32; 
; Line 4146:	                            break; 

; Line 4146:	                            break; 

	T404(EAX).A =   #0.C
	PARM	T404(EAX).A
	T405(EAX).A =   _apa:LINK(-4).A
	PARM	T405(EAX).A
	T406(EAX).A =   _apa:LINK(-4).A
	PARM	T406(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 4147:	                    } 
; Line 4148:	                    liveQualify(apa, apa, 0); 

; Line 4148:	                    liveQualify(apa, apa, 0); 

	T407(EAX).A =   _apl:LINK(-12).A
	PARM	T407(EAX).A
	T408(EAX).A =   _apa:LINK(-4).A
	PARM	T408(EAX).A
	T409(EAX).I =   _size:LINK(-52).I
	PARM	T409(EAX).I
	T410(EAX).I =   _opl:LINK(-24).I
	PARM	T410(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 775

L_5786:
; Line 4149:	                    gen_codes(opl, size, apa, apl); 
; Line 4152:	                        diag("asm_assn: Expected register in bit processing"); 

	T411(EAX).A =   _apa:LINK(-4).A
	T412(EAX).I =   *(T411(EAX) + 0).A.I
	CONDGO	L_5785:PC ; T412(EAX).I == #2.C
	BLOCK END
	BLOCK 776
	DBG BLOCK START
	BLOCK END
	BLOCK 777

L_5787:
; Line 4151:	                    if (apa->mode != am_dreg) 

	PARM	#L_5135:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 778

L_5788:
	DBG BLOCK END
	BLOCK END
	BLOCK 779

L_5785:
	BLOCK END
	BLOCK 780

L_5789:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 781

L_5791:
; Line 4153:	                    if (q->dc.left->startbit) 

	T413(EAX).A =   _q:LINK(4).A
	T414(EAX).A =   *(T413(EAX) + 4+0).A.A
	T415(AL).C =   *(T414(EAX) + 1B).A.C
	CONDGO	L_5790:PC ; T415(AL).C == #0.C
	BLOCK END
	BLOCK 782
	DBG BLOCK START
	BLOCK END
	BLOCK 783

L_5792:
; Line 4154:	                        gen_codes(op_shr, q->ans->size, apa, aimmed(q->dc.left->startbit)); 

	T416(EAX).A =   _q:LINK(4).A
	T417(EAX).A =   *(T416(EAX) + 4+0).A.A
	T418(EDX:EAX).ULL =   *(T417(EAX) + 1B).A.C
	PARM	T418(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T419(EAX).A =   RV.T76(EAX).A
	PARMADJ	#8.N
	PARM	T419(EAX).A
	T420(EAX).A =   _apa:LINK(-4).A
	PARM	T420(EAX).A
	T421(EAX).A =   _q:LINK(4).A
	T422(EAX).A =   *(T421(EAX) + 40).A.A
	T423(EAX).I =   *(T422(EAX) + 19).A.C
	PARM	T423(EAX).I
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 784

L_5793:
	DBG BLOCK END
	BLOCK END
	BLOCK 785

L_5790:
	BLOCK END
	BLOCK 786

L_5794:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 787

L_5796:
; Line 4155:	                    if (q->dc.left->bits < max) 

	T424(ECX).I =   _max:LINK(-56).I
	T425(EAX).A =   _q:LINK(4).A
	T426(EAX).A =   *(T425(EAX) + 4+0).A.A
	T427(EAX).I =   *(T426(EAX) + 1C).A.C
	CONDGO	L_5795:PC ; T427(EAX).I S>= T424(ECX).I
	BLOCK END
	BLOCK 788
	DBG BLOCK START
	BLOCK END
	BLOCK 789

L_5797:
; Line 4156:	                        gen_codes(op_and, q->ans->size, apa, aimmed((1 << q->dc.left->bits) - 1)); 

	T428(EAX).A =   _q:LINK(4).A
	T429(EAX).A =   *(T428(EAX) + 4+0).A.A
	T431(CL).C =   *(T429(EAX) + 1C).A.C
	T1350(AL).C =   T431(CL).C^
	T1356(CL).C =   T1350(AL).C^
	T432(EAX).I = #1.C << T1356(CL).C
	T433(EAX).I = T432(EAX).I - #1.C
	T434(EDX:EAX).ULL =   T433(EAX).I
	PARM	T434(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T435(EAX).A =   RV.T77(EAX).A
	PARMADJ	#8.N
	PARM	T435(EAX).A
	T436(EAX).A =   _apa:LINK(-4).A
	PARM	T436(EAX).A
	T437(EAX).A =   _q:LINK(4).A
	T438(EAX).A =   *(T437(EAX) + 40).A.A
	T439(EAX).I =   *(T438(EAX) + 19).A.C
	PARM	T439(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 790

L_5798:
	DBG BLOCK END
	BLOCK END
	BLOCK 791

L_5795:
	BLOCK END
	BLOCK 792

L_5799:
	DBG BLOCK END
; Line 4157:	                } 

	BLOCK END
	BLOCK 793

L_5800:
	DBG BLOCK END
	BLOCK END
	BLOCK 794

L_5802:
	DBG BLOCK END
	GOTO	L_5801:PC
	BLOCK END
	BLOCK 795
	DBG BLOCK START
	BLOCK END
	BLOCK 796

L_5803:
	BLOCK END
	BLOCK 797

L_5761:
; Line 4158:	                else 

; Line 4159:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 798

L_5804:
; Line 4160:	                    gen_codes(opl, size, apa, apl); 

	T440(EAX).A =   _apl:LINK(-12).A
	PARM	T440(EAX).A
	T441(EAX).A =   _apa:LINK(-4).A
	PARM	T441(EAX).A
	T442(EAX).I =   _size:LINK(-52).I
	PARM	T442(EAX).I
	T443(EAX).I =   _opl:LINK(-24).I
	PARM	T443(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4161:	                } 

	BLOCK END
	BLOCK 799

L_5805:
	DBG BLOCK END
	BLOCK END
	BLOCK 800

L_5806:
	DBG BLOCK END
	BLOCK END
	BLOCK 801

L_5801:
	BLOCK END
	BLOCK 802

L_5807:
	DBG BLOCK END
; Line 4162:	            } 

	BLOCK END
	BLOCK 803

L_5808:
	DBG BLOCK END
	BLOCK END
	BLOCK 804

L_5809:
	DBG BLOCK END
	BLOCK END
	BLOCK 805

L_5757:
	BLOCK END
	BLOCK 806

L_5810:
	DBG BLOCK END
; Line 4163:	        } 

	BLOCK END
	BLOCK 807

L_5811:
	DBG BLOCK END
	BLOCK END
	BLOCK 808

L_5812:
	DBG BLOCK END
	BLOCK END
	BLOCK 809

L_5736:
	BLOCK END
	BLOCK 810

L_5813:
	DBG BLOCK END
	BLOCK END
	BLOCK 811

L_5814:
	DBG BLOCK END
	BLOCK END
	BLOCK 812

L_5728:
	BLOCK END
	BLOCK 813

L_5815:
	DBG BLOCK END
	BLOCK END
	BLOCK 814

L_5816:
	DBG BLOCK END
	BLOCK END
	BLOCK 815

L_5688:
	BLOCK END
	BLOCK 816

L_5817:
	DBG BLOCK END
; Line 4164:	    } 

	BLOCK END
	BLOCK 817

L_5818:
	DBG BLOCK END
	BLOCK END
	BLOCK 818

L_5820:
	DBG BLOCK END
	GOTO	L_5819:PC
	BLOCK END
	BLOCK 819
	DBG BLOCK START
	BLOCK END
	BLOCK 820

L_5821:
	BLOCK END
	BLOCK 821

L_5582:
; Line 4165:	    else   

; Line 4166:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 822

L_5822:
; Line 4167:	        if (q->ans->size == ISZ_ADDR) 

	DBG BLOCK START
	BLOCK END
	BLOCK 823

L_5824:
	T444(EAX).A =   _q:LINK(4).A
	T445(EAX).A =   *(T444(EAX) + 40).A.A
	T446(AL).C =   *(T445(EAX) + 19).A.C
	CONDGO	L_5823:PC ; T446(AL).C != #C.C
	BLOCK END
	BLOCK 824
	DBG BLOCK START
	BLOCK END
	BLOCK 825

L_5825:
	DBG BLOCK START
	BLOCK END
	BLOCK 826

L_5827:
; Line 4168:	            if (q->dc.left->size == ISZ_ULONGLONG || q->dc.left->size == -ISZ_ULONGLONG) 

	T447(EAX).A =   _q:LINK(4).A
	T448(EAX).A =   *(T447(EAX) + 4+0).A.A
	T449(AL).C =   *(T448(EAX) + 19).A.C
	CONDGO	L_6195:PC ; T449(AL).C == #B.C
	BLOCK END
	BLOCK 827
	T450(EAX).A =   _q:LINK(4).A
	T451(EAX).A =   *(T450(EAX) + 4+0).A.A
	T452(EAX).I =   *(T451(EAX) + 19).A.C
	CONDGO	L_5826:PC ; T452(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 828

L_6195:
	DBG BLOCK START
	BLOCK END
	BLOCK 829

L_5828:
; Line 4169:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 830

L_5829:
; Line 4170:	                goto addrdnjn; 

	GOTO	L_5740:PC
	BLOCK END
	BLOCK 831

L_5830:
	DBG BLOCK END
	BLOCK END
	BLOCK 832

L_5831:
	DBG BLOCK END
	BLOCK END
	BLOCK 833

L_5826:
	BLOCK END
	BLOCK 834

L_5832:
	DBG BLOCK END
	BLOCK END
	BLOCK 835

L_5833:
	DBG BLOCK END
	BLOCK END
	BLOCK 836

L_5823:
	BLOCK END
	BLOCK 837

L_5834:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 838

L_5836:
; Line 4172:	        if (q->ans->size >= ISZ_FLOAT) 

	T453(EAX).A =   _q:LINK(4).A
	T454(EAX).A =   *(T453(EAX) + 40).A.A
	T455(EAX).I =   *(T454(EAX) + 19).A.C
	CONDGO	L_5835:PC ; T455(EAX).I S< #12.C
	BLOCK END
	BLOCK 839
	DBG BLOCK START
	BLOCK END
	BLOCK 840

L_5837:
; Line 4173:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 841

L_5838:
; Line 4174:	            if (q->dc.left->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 842

L_5840:
	T456(EAX).A =   _q:LINK(4).A
	T457(EAX).A =   *(T456(EAX) + 4+0).A.A
	T458(EAX).I =   *(T457(EAX) + 19).A.C
	CONDGO	L_5839:PC ; T458(EAX).I S< #18.I
	BLOCK END
	BLOCK 843
	DBG BLOCK START
	BLOCK END
	BLOCK 844

L_5841:
; Line 4175:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 845

L_5842:
; Line 4176:	                moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T459(EAX).A =   _q:LINK(4).A
	T460(EAX).A =   *(T459(EAX) + 4+0).A.A
	T461(EAX).I =   *(T460(EAX) + 19).A.C
	PARM	T461(EAX).I
	T462(EAX).A =   _apl:LINK(-12).A
	PARM	T462(EAX).A
	T463(EAX).A =   _q:LINK(4).A
	T464(EAX).A =   *(T463(EAX) + 40).A.A
	T465(EAX).I =   *(T464(EAX) + 19).A.C
	PARM	T465(EAX).I
	T466(EAX).A =   _apa:LINK(-4).A
	PARM	T466(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4177:	                moveFP(apa1, q->ans->size, apl1, q->dc.left->size); 

	T467(EAX).A =   _q:LINK(4).A
	T468(EAX).A =   *(T467(EAX) + 4+0).A.A
	T469(EAX).I =   *(T468(EAX) + 19).A.C
	PARM	T469(EAX).I
	T470(EAX).A =   _apl1:LINK(-16).A
	PARM	T470(EAX).A
	T471(EAX).A =   _q:LINK(4).A
	T472(EAX).A =   *(T471(EAX) + 40).A.A
	T473(EAX).I =   *(T472(EAX) + 19).A.C
	PARM	T473(EAX).I
	T474(EAX).A =   _apa1:LINK(-8).A
	PARM	T474(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4178:	            } 

	BLOCK END
	BLOCK 846

L_5843:
	DBG BLOCK END
	BLOCK END
	BLOCK 847

L_5845:
	DBG BLOCK END
	GOTO	L_5844:PC
	BLOCK END
	BLOCK 848
	DBG BLOCK START
	BLOCK END
	BLOCK 849

L_5846:
	BLOCK END
	BLOCK 850

L_5839:
; Line 4179:	            else if (q->dc.left->size >= ISZ_IFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 851

L_5848:
	T475(EAX).A =   _q:LINK(4).A
	T476(EAX).A =   *(T475(EAX) + 4+0).A.A
	T477(EAX).I =   *(T476(EAX) + 19).A.C
	CONDGO	L_5847:PC ; T477(EAX).I S< #15.I
	BLOCK END
	BLOCK 852
	DBG BLOCK START
	BLOCK END
	BLOCK 853

L_5849:
; Line 4180:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 854

L_5850:
; Line 4181:	                if (q->ans->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 855

L_5852:
	T478(EAX).A =   _q:LINK(4).A
	T479(EAX).A =   *(T478(EAX) + 40).A.A
	T480(EAX).I =   *(T479(EAX) + 19).A.C
	CONDGO	L_5851:PC ; T480(EAX).I S< #18.I
	BLOCK END
	BLOCK 856
	DBG BLOCK START
	BLOCK END
	BLOCK 857

L_5853:
; Line 4182:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 858

L_5854:
; Line 4183:	                    moveFP(apa1, q->ans->size, apl, q->dc.left->size); 

	T481(EAX).A =   _q:LINK(4).A
	T482(EAX).A =   *(T481(EAX) + 4+0).A.A
	T483(EAX).I =   *(T482(EAX) + 19).A.C
	PARM	T483(EAX).I
	T484(EAX).A =   _apl:LINK(-12).A
	PARM	T484(EAX).A
	T485(EAX).A =   _q:LINK(4).A
	T486(EAX).A =   *(T485(EAX) + 40).A.A
	T487(EAX).I =   *(T486(EAX) + 19).A.C
	PARM	T487(EAX).I
	T488(EAX).A =   _apa1:LINK(-8).A
	PARM	T488(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4184:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apa, floatzero(apl)); 

	T489(EAX).A =   _apl:LINK(-12).A
	PARM	T489(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T490(EAX).A =   RV.T78(EAX).A
	PARMADJ	#4.N
	PARM	T490(EAX).A
	T491(EAX).A =   _apa:LINK(-4).A
	PARM	T491(EAX).A
	T492(EAX).A =   _q:LINK(4).A
	T493(EAX).A =   *(T492(EAX) + 40).A.A
	T494(EAX).I =   *(T493(EAX) + 19).A.C
	PARM	T494(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4185:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4186:	                } 

	BLOCK END
	BLOCK 859

L_5855:
	DBG BLOCK END
	BLOCK END
	BLOCK 860

L_5857:
	DBG BLOCK END
	GOTO	L_5856:PC
	BLOCK END
	BLOCK 861
	DBG BLOCK START
	BLOCK END
	BLOCK 862

L_5858:
	BLOCK END
	BLOCK 863

L_5851:
; Line 4187:	                else 

; Line 4188:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 864

L_5859:
; Line 4189:	                    moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T495(EAX).A =   _q:LINK(4).A
	T496(EAX).A =   *(T495(EAX) + 4+0).A.A
	T497(EAX).I =   *(T496(EAX) + 19).A.C
	PARM	T497(EAX).I
	T498(EAX).A =   _apl:LINK(-12).A
	PARM	T498(EAX).A
	T499(EAX).A =   _q:LINK(4).A
	T500(EAX).A =   *(T499(EAX) + 40).A.A
	T501(EAX).I =   *(T500(EAX) + 19).A.C
	PARM	T501(EAX).I
	T502(EAX).A =   _apa:LINK(-4).A
	PARM	T502(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4190:	                } 

	BLOCK END
	BLOCK 865

L_5860:
	DBG BLOCK END
	BLOCK END
	BLOCK 866

L_5861:
	DBG BLOCK END
	BLOCK END
	BLOCK 867

L_5856:
	BLOCK END
	BLOCK 868

L_5862:
	DBG BLOCK END
; Line 4191:	            } 

	BLOCK END
	BLOCK 869

L_5863:
	DBG BLOCK END
	BLOCK END
	BLOCK 870

L_5865:
	DBG BLOCK END
	GOTO	L_5864:PC
	BLOCK END
	BLOCK 871
	DBG BLOCK START
	BLOCK END
	BLOCK 872

L_5866:
	BLOCK END
	BLOCK 873

L_5847:
; Line 4192:	            else if (q->dc.left->size >= ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 874

L_5868:
	T503(EAX).A =   _q:LINK(4).A
	T504(EAX).A =   *(T503(EAX) + 4+0).A.A
	T505(EAX).I =   *(T504(EAX) + 19).A.C
	CONDGO	L_5867:PC ; T505(EAX).I S< #12.C
	BLOCK END
	BLOCK 875
	DBG BLOCK START
	BLOCK END
	BLOCK 876

L_5869:
; Line 4193:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 877

L_5870:
; Line 4194:	                if (q->ans->size >= ISZ_CFLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 878

L_5872:
	T506(EAX).A =   _q:LINK(4).A
	T507(EAX).A =   *(T506(EAX) + 40).A.A
	T508(EAX).I =   *(T507(EAX) + 19).A.C
	CONDGO	L_5871:PC ; T508(EAX).I S< #18.I
	BLOCK END
	BLOCK 879
	DBG BLOCK START
	BLOCK END
	BLOCK 880

L_5873:
; Line 4195:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 881

L_5874:
; Line 4196:	                    moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T509(EAX).A =   _q:LINK(4).A
	T510(EAX).A =   *(T509(EAX) + 4+0).A.A
	T511(EAX).I =   *(T510(EAX) + 19).A.C
	PARM	T511(EAX).I
	T512(EAX).A =   _apl:LINK(-12).A
	PARM	T512(EAX).A
	T513(EAX).A =   _q:LINK(4).A
	T514(EAX).A =   *(T513(EAX) + 40).A.A
	T515(EAX).I =   *(T514(EAX) + 19).A.C
	PARM	T515(EAX).I
	T516(EAX).A =   _apa:LINK(-4).A
	PARM	T516(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4197:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apa1, floatzero(apl)); 

	T517(EAX).A =   _apl:LINK(-12).A
	PARM	T517(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T518(EAX).A =   RV.T79(EAX).A
	PARMADJ	#4.N
	PARM	T518(EAX).A
	T519(EAX).A =   _apa1:LINK(-8).A
	PARM	T519(EAX).A
	T520(EAX).A =   _q:LINK(4).A
	T521(EAX).A =   *(T520(EAX) + 40).A.A
	T522(EAX).I =   *(T521(EAX) + 19).A.C
	PARM	T522(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4198:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4199:	                } 

	BLOCK END
	BLOCK 882

L_5875:
	DBG BLOCK END
	BLOCK END
	BLOCK 883

L_5877:
	DBG BLOCK END
	GOTO	L_5876:PC
	BLOCK END
	BLOCK 884
	DBG BLOCK START
	BLOCK END
	BLOCK 885

L_5878:
	BLOCK END
	BLOCK 886

L_5871:
; Line 4200:	                else 

; Line 4201:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 887

L_5879:
; Line 4202:	                    moveFP(apa, q->ans->size, apl, q->dc.left->size); 

	T523(EAX).A =   _q:LINK(4).A
	T524(EAX).A =   *(T523(EAX) + 4+0).A.A
	T525(EAX).I =   *(T524(EAX) + 19).A.C
	PARM	T525(EAX).I
	T526(EAX).A =   _apl:LINK(-12).A
	PARM	T526(EAX).A
	T527(EAX).A =   _q:LINK(4).A
	T528(EAX).A =   *(T527(EAX) + 40).A.A
	T529(EAX).I =   *(T528(EAX) + 19).A.C
	PARM	T529(EAX).I
	T530(EAX).A =   _apa:LINK(-4).A
	PARM	T530(EAX).A
	TAG
	GOSUB	#@occx86@moveFP$qp5amodeipn0i:PC.UI
	PARMADJ	#10.N
; Line 4203:	                } 

	BLOCK END
	BLOCK 888

L_5880:
	DBG BLOCK END
	BLOCK END
	BLOCK 889

L_5881:
	DBG BLOCK END
	BLOCK END
	BLOCK 890

L_5876:
	BLOCK END
	BLOCK 891

L_5882:
	DBG BLOCK END
; Line 4204:	            } 

	BLOCK END
	BLOCK 892

L_5883:
	DBG BLOCK END
	BLOCK END
	BLOCK 893

L_5885:
	DBG BLOCK END
	GOTO	L_5884:PC
	BLOCK END
	BLOCK 894
	DBG BLOCK START
	BLOCK END
	BLOCK 895

L_5886:
	BLOCK END
	BLOCK 896

L_5867:
; Line 4205:	            else if (q->dc.left->size == ISZ_ULONGLONG || q->dc.left->size == -ISZ_ULONGLONG || q->dc.left->size == ISZ_ULONG || 

	DBG BLOCK START
	BLOCK END
	BLOCK 897

L_5888:
; Line 4206:	                     q->dc.left->size == ISZ_UINT) 

	T531(EAX).A =   _q:LINK(4).A
	T532(EAX).A =   *(T531(EAX) + 4+0).A.A
	T533(AL).C =   *(T532(EAX) + 19).A.C
	CONDGO	L_6196:PC ; T533(AL).C == #B.C
	BLOCK END
	BLOCK 898
	T534(EAX).A =   _q:LINK(4).A
	T535(EAX).A =   *(T534(EAX) + 4+0).A.A
	T536(EAX).I =   *(T535(EAX) + 19).A.C
	CONDGO	L_6196:PC ; T536(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 899
	T537(EAX).A =   _q:LINK(4).A
	T538(EAX).A =   *(T537(EAX) + 4+0).A.A
	T539(AL).C =   *(T538(EAX) + 19).A.C
	CONDGO	L_6196:PC ; T539(AL).C == #9.C
	BLOCK END
	BLOCK 900
	T540(EAX).A =   _q:LINK(4).A
	T541(EAX).A =   *(T540(EAX) + 4+0).A.A
	T542(AL).C =   *(T541(EAX) + 19).A.C
	CONDGO	L_5887:PC ; T542(AL).C != #7.C
	BLOCK END
	BLOCK 901

L_6196:
	DBG BLOCK START
	BLOCK END
	BLOCK 902

L_5889:
; Line 4207:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 903

L_5890:
; Line 4208:	                diag("asm_assn: untranslated conversion from long or longlong"); 

	PARM	#L_5137:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 4209:	            } 

	BLOCK END
	BLOCK 904

L_5891:
	DBG BLOCK END
	BLOCK END
	BLOCK 905

L_5893:
	DBG BLOCK END
	GOTO	L_5892:PC
	BLOCK END
	BLOCK 906
	DBG BLOCK START
	BLOCK END
	BLOCK 907

L_5894:
	BLOCK END
	BLOCK 908

L_5887:
; Line 4210:	            else 

; Line 4211:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 909

L_5895:
; Line 4212:	                if (q->ans->size >= ISZ_IFLOAT && q->ans->size <= ISZ_ILDOUBLE) 

	DBG BLOCK START
	BLOCK END
	BLOCK 910

L_5897:
	T543(EAX).A =   _q:LINK(4).A
	T544(EAX).A =   *(T543(EAX) + 40).A.A
	T545(EAX).I =   *(T544(EAX) + 19).A.C
	CONDGO	L_5896:PC ; T545(EAX).I S< #15.I
	BLOCK END
	BLOCK 911
	T546(EAX).A =   _q:LINK(4).A
	T547(EAX).A =   *(T546(EAX) + 40).A.A
	T548(EAX).I =   *(T547(EAX) + 19).A.C
	CONDGO	L_5896:PC ; T548(EAX).I S> #17.I
	BLOCK END
	BLOCK 912
	DBG BLOCK START
	BLOCK END
	BLOCK 913

L_5898:
; Line 4213:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 914

L_5899:
; Line 4214:	                    gen_code_sse(op_movss, op_movsd, q->ans->size, apa, floatzero(apl)); 

	T549(EAX).A =   _apl:LINK(-12).A
	PARM	T549(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T550(EAX).A =   RV.T80(EAX).A
	PARMADJ	#4.N
	PARM	T550(EAX).A
	T551(EAX).A =   _apa:LINK(-4).A
	PARM	T551(EAX).A
	T552(EAX).A =   _q:LINK(4).A
	T553(EAX).A =   *(T552(EAX) + 40).A.A
	T554(EAX).I =   *(T553(EAX) + 19).A.C
	PARM	T554(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4215:	                    zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4216:	                } 

	BLOCK END
	BLOCK 915

L_5900:
	DBG BLOCK END
	BLOCK END
	BLOCK 916

L_5902:
	DBG BLOCK END
	GOTO	L_5901:PC
	BLOCK END
	BLOCK 917
	DBG BLOCK START
	BLOCK END
	BLOCK 918

L_5903:
	BLOCK END
	BLOCK 919

L_5896:
; Line 4217:	                else 

; Line 4218:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 920

L_5904:
; Line 4219:	                    if (q->dc.left->size != -ISZ_ULONG && q->dc.left->size != -ISZ_UINT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 921

L_5906:
	T555(EAX).A =   _q:LINK(4).A
	T556(EAX).A =   *(T555(EAX) + 4+0).A.A
	T557(EAX).I =   *(T556(EAX) + 19).A.C
	CONDGO	L_5905:PC ; T557(EAX).I == #FFFFFFFFFFFFFFF7.I
	BLOCK END
	BLOCK 922
	T558(EAX).A =   _q:LINK(4).A
	T559(EAX).A =   *(T558(EAX) + 4+0).A.A
	T560(EAX).I =   *(T559(EAX) + 19).A.C
	CONDGO	L_5905:PC ; T560(EAX).I == #FFFFFFFFFFFFFFF9.I
	BLOCK END
	BLOCK 923
	DBG BLOCK START
	BLOCK END
	BLOCK 924

L_5907:
; Line 4220:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 925

L_5908:
; Line 4221:	                        AMODE* ap = makedreg(ECX); 

	VAR START	ap
	T561(EAX).UI =   #1.C
	PARM	T561(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T562(EAX).A =   RV.T81(EAX).A
	PARMADJ	#4.N
	_ap:LINK(-48).A =   T562(EAX).A
; Line 4222:	                        ap->liveRegs = q->liveRegs; 

	T563(EAX).A =   _q:LINK(4).A
	T564(ECX).I =   *(T563(EAX) + 48).A.ULL
	T565(EAX).A =   _ap:LINK(-48).A
	*(T565(EAX) + 10).A.I =   T564(ECX).I
; Line 4223:	                        gen_codes(op_push, ISZ_UINT, ap, 0); 

	T566(EAX).A =   #0.C
	PARM	T566(EAX).A
	T567(EAX).A =   _ap:LINK(-48).A
	PARM	T567(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4224:	                        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
	DBG BLOCK START
	BLOCK END
	BLOCK 926

L_5910:
	DBG BLOCK END
; Line 4225:	                        switch (q->dc.left->size) 

	T568(EAX).A =   _q:LINK(4).A
	T569(EAX).A =   *(T568(EAX) + 4+0).A.A
	T570(AL).C =   *(T569(EAX) + 19).A.C
	COSWITCH(T570(AL).C,#6.UI,#A.UI,L_5924:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFC.UI,L_5922:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFD.UI,L_5916:PC)
	SWBRANCH(#2.UI,L_5912:PC)
	SWBRANCH(#3.UI,L_5914:PC)
	SWBRANCH(#4.UI,L_5918:PC)
	SWBRANCH(#5.UI,L_5920:PC)
; Line 4226:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 927

L_5911:
	BLOCK END
	BLOCK 928

L_5912:
	DBG BLOCK START
; Line 4228:	                                gen_codes(op_mov, ISZ_UINT, ap, apl); 

	T571(EAX).A =   _apl:LINK(-12).A
	PARM	T571(EAX).A
	T572(EAX).A =   _ap:LINK(-48).A
	PARM	T572(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4229:	                                gen_codes(op_and, ISZ_UINT, ap, aimmed(1)); 

	T573(EDX:EAX).ULL =   #1.C
	PARM	T573(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T574(EAX).A =   RV.T82(EAX).A
	PARMADJ	#8.N
	PARM	T574(EAX).A
	T575(EAX).A =   _ap:LINK(-48).A
	PARM	T575(EAX).A
	PARM	#7.I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4230:	                                break; 

	GOTO	L_5909:PC
	BLOCK END
	BLOCK 929
	DBG BLOCK END
	BLOCK END
	BLOCK 930

L_5914:
	DBG BLOCK START
; Line 4231:	                            case ISZ_UCHAR: 
; Line 4232:	                                do_movzx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

; Line 4232:	                                do_movzx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

	T576(EAX).A =   _apl:LINK(-12).A
	PARM	T576(EAX).A
	T577(EAX).A =   _ap:LINK(-48).A
	PARM	T577(EAX).A
	T578(EAX).UI =   #3.C
	PARM	T578(EAX).UI
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4233:	                                break; 

	GOTO	L_5909:PC
	BLOCK END
	BLOCK 931
	DBG BLOCK END
	BLOCK END
	BLOCK 932

L_5916:
	DBG BLOCK START
; Line 4234:	                            case -ISZ_UCHAR: 
; Line 4235:	                                do_movsx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

; Line 4235:	                                do_movsx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

	T579(EAX).A =   _apl:LINK(-12).A
	PARM	T579(EAX).A
	T580(EAX).A =   _ap:LINK(-48).A
	PARM	T580(EAX).A
	T581(EAX).UI =   #3.C
	PARM	T581(EAX).UI
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4236:	                                break; 

	GOTO	L_5909:PC
	BLOCK END
	BLOCK 933
	DBG BLOCK END
	BLOCK END
	BLOCK 934

L_5918:
	BLOCK END
	BLOCK 935

L_5920:
	DBG BLOCK START
; Line 4237:	                            case ISZ_USHORT: 
; Line 4238:	                            case ISZ_WCHAR: 

; Line 4238:	                            case ISZ_WCHAR: 

	T582(EAX).A =   _apl:LINK(-12).A
	PARM	T582(EAX).A
	T583(EAX).A =   _ap:LINK(-48).A
	PARM	T583(EAX).A
	PARM	#4.I
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4239:	                                do_movzx(ISZ_UINT, ISZ_USHORT, ap, apl); 
; Line 4240:	                                break; 

; Line 4240:	                                break; 

	GOTO	L_5909:PC
	BLOCK END
	BLOCK 936
	DBG BLOCK END
	BLOCK END
	BLOCK 937

L_5922:
	DBG BLOCK START
; Line 4241:	                            case -ISZ_USHORT: 
; Line 4242:	                                do_movsx(ISZ_UINT, ISZ_USHORT, ap, apl); 

; Line 4242:	                                do_movsx(ISZ_UINT, ISZ_USHORT, ap, apl); 

	T584(EAX).A =   _apl:LINK(-12).A
	PARM	T584(EAX).A
	T585(EAX).A =   _ap:LINK(-48).A
	PARM	T585(EAX).A
	PARM	#4.I
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4243:	                                break; 

	GOTO	L_5909:PC
	BLOCK END
	BLOCK 938
	DBG BLOCK END
	BLOCK END
	BLOCK 939

L_5924:
	DBG BLOCK START
; Line 4244:	                            default: 
; Line 4245:	                                break; 

; Line 4245:	                                break; 

	BLOCK END
	BLOCK 940

L_5925:
	DBG BLOCK END
	BLOCK END
	BLOCK 941

L_5909:
	BLOCK END
	BLOCK 942

L_5926:
	DBG BLOCK END
; Line 4247:	                        gen_code_sse(op_cvtsi2ss, op_cvtsi2sd, q->ans->size, apa, ap); 

	T586(EAX).A =   _ap:LINK(-48).A
	PARM	T586(EAX).A
	T587(EAX).A =   _apa:LINK(-4).A
	PARM	T587(EAX).A
	T588(EAX).A =   _q:LINK(4).A
	T589(EAX).A =   *(T588(EAX) + 40).A.A
	T590(EAX).I =   *(T589(EAX) + 19).A.C
	PARM	T590(EAX).I
	PARM	#1BB.I
	PARM	#1BC.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4248:	                        gen_codes(op_pop, ISZ_UINT, ap, 0); 

	T591(EAX).A =   #0.C
	PARM	T591(EAX).A
	T592(EAX).A =   _ap:LINK(-48).A
	PARM	T592(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4249:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 4250:	                    } 

	BLOCK END
	BLOCK 943

L_5927:
	DBG BLOCK END
	BLOCK END
	BLOCK 944

L_5929:
	DBG BLOCK END
	GOTO	L_5928:PC
	BLOCK END
	BLOCK 945
	DBG BLOCK START
	BLOCK END
	BLOCK 946

L_5930:
	BLOCK END
	BLOCK 947

L_5905:
; Line 4251:	                    else 

; Line 4252:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 948

L_5931:
; Line 4253:	                        gen_code_sse(op_cvtsi2ss, op_cvtsi2sd, q->ans->size, apa, apl); 

	T593(EAX).A =   _apl:LINK(-12).A
	PARM	T593(EAX).A
	T594(EAX).A =   _apa:LINK(-4).A
	PARM	T594(EAX).A
	T595(EAX).A =   _q:LINK(4).A
	T596(EAX).A =   *(T595(EAX) + 40).A.A
	T597(EAX).I =   *(T596(EAX) + 19).A.C
	PARM	T597(EAX).I
	PARM	#1BB.I
	PARM	#1BC.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4254:	                    } 

	BLOCK END
	BLOCK 949

L_5932:
	DBG BLOCK END
	BLOCK END
	BLOCK 950

L_5933:
	DBG BLOCK END
	BLOCK END
	BLOCK 951

L_5928:
	BLOCK END
	BLOCK 952

L_5934:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 953

L_5936:
; Line 4255:	                    if (q->ans->size >= ISZ_CFLOAT) 

	T598(EAX).A =   _q:LINK(4).A
	T599(EAX).A =   *(T598(EAX) + 40).A.A
	T600(EAX).I =   *(T599(EAX) + 19).A.C
	CONDGO	L_5935:PC ; T600(EAX).I S< #18.I
	BLOCK END
	BLOCK 954
	DBG BLOCK START
	BLOCK END
	BLOCK 955

L_5937:
; Line 4256:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 956

L_5938:
; Line 4257:	                        gen_code_sse(op_movss, op_movsd, q->ans->size, apa1, floatzero(apl)); 

	T601(EAX).A =   _apl:LINK(-12).A
	PARM	T601(EAX).A
	TAG
	GOSUB	#@occx86@floatzero$qp5amode:PC.UI
	T602(EAX).A =   RV.T83(EAX).A
	PARMADJ	#4.N
	PARM	T602(EAX).A
	T603(EAX).A =   _apa1:LINK(-8).A
	PARM	T603(EAX).A
	T604(EAX).A =   _q:LINK(4).A
	T605(EAX).A =   *(T604(EAX) + 40).A.A
	T606(EAX).I =   *(T605(EAX) + 19).A.C
	PARM	T606(EAX).I
	PARM	#122.I
	PARM	#1F4.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qiiip5amodepn0:PC.UI
	PARMADJ	#14.N
; Line 4258:	                        zerocleanup(); 

	TAG
	GOSUB	#@occx86@zerocleanup$qv:PC.UI
	PARMADJ	#0.N
; Line 4259:	                    } 

	BLOCK END
	BLOCK 957

L_5939:
	DBG BLOCK END
	BLOCK END
	BLOCK 958

L_5940:
	DBG BLOCK END
	BLOCK END
	BLOCK 959

L_5935:
	BLOCK END
	BLOCK 960

L_5941:
	DBG BLOCK END
; Line 4260:	                } 

	BLOCK END
	BLOCK 961

L_5942:
	DBG BLOCK END
	BLOCK END
	BLOCK 962

L_5943:
	DBG BLOCK END
	BLOCK END
	BLOCK 963

L_5901:
	BLOCK END
	BLOCK 964

L_5944:
	DBG BLOCK END
; Line 4261:	            } 

	BLOCK END
	BLOCK 965

L_5945:
	DBG BLOCK END
	BLOCK END
	BLOCK 966

L_5946:
	DBG BLOCK END
	BLOCK END
	BLOCK 967

L_5892:
	BLOCK END
	BLOCK 968

L_5947:
	DBG BLOCK END
	BLOCK END
	BLOCK 969

L_5948:
	DBG BLOCK END
	BLOCK END
	BLOCK 970

L_5884:
	BLOCK END
	BLOCK 971

L_5949:
	DBG BLOCK END
	BLOCK END
	BLOCK 972

L_5950:
	DBG BLOCK END
	BLOCK END
	BLOCK 973

L_5864:
	BLOCK END
	BLOCK 974

L_5951:
	DBG BLOCK END
	BLOCK END
	BLOCK 975

L_5952:
	DBG BLOCK END
	BLOCK END
	BLOCK 976

L_5844:
	BLOCK END
	BLOCK 977

L_5953:
	DBG BLOCK END
; Line 4262:	        } 

	BLOCK END
	BLOCK 978

L_5954:
	DBG BLOCK END
	BLOCK END
	BLOCK 979

L_5956:
	DBG BLOCK END
	GOTO	L_5955:PC
	BLOCK END
	BLOCK 980
	DBG BLOCK START
	BLOCK END
	BLOCK 981

L_5957:
	BLOCK END
	BLOCK 982

L_5835:
; Line 4263:	        else 

; Line 4264:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 983

L_5958:
; Line 4265:	            AMODE* ap; 

	VAR START	ap
	BLOCK END
	BLOCK 984

L_5592:
; Line 4266:	        addrupjn: 
; Line 4267:	            ap = apa; 

; Line 4267:	            ap = apa; 

	T607(EAX).A =   _apa:LINK(-4).A
	_ap:LINK(-40).A =   T607(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 985

L_5960:
; Line 4268:	            if (apa1) 

	T608(EAX).A =   _apa1:LINK(-8).A
	CONDGO	L_5959:PC ; T608(EAX).A == #0.A
	BLOCK END
	BLOCK 986
	DBG BLOCK START
	BLOCK END
	BLOCK 987

L_5961:
; Line 4269:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 988

L_5962:
; Line 4270:	                liveQualify(apa1, apa, apa1); 

	T609(EAX).A =   _apa1:LINK(-8).A
	PARM	T609(EAX).A
	T610(EAX).A =   _apa:LINK(-4).A
	PARM	T610(EAX).A
	T611(EAX).A =   _apa1:LINK(-8).A
	PARM	T611(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 4271:	                liveQualify(apa, apa, apa1); 

	T612(EAX).A =   _apa1:LINK(-8).A
	PARM	T612(EAX).A
	T613(EAX).A =   _apa:LINK(-4).A
	PARM	T613(EAX).A
	T614(EAX).A =   _apa:LINK(-4).A
	PARM	T614(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 4272:	            } 

	BLOCK END
	BLOCK 989

L_5963:
	DBG BLOCK END
	BLOCK END
	BLOCK 990

L_5964:
	DBG BLOCK END
	BLOCK END
	BLOCK 991

L_5959:
	BLOCK END
	BLOCK 992

L_5965:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 993

L_5967:
; Line 4273:	            if (ap->mode != am_dreg) 

	T615(EAX).A =   _ap:LINK(-40).A
	T616(EAX).I =   *(T615(EAX) + 0).A.I
	CONDGO	L_5966:PC ; T616(EAX).I == #2.C
	BLOCK END
	BLOCK 994
	DBG BLOCK START
	BLOCK END
	BLOCK 995

L_5968:
; Line 4274:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 996

L_5969:
; Line 4275:	                ap = apl; 

	T617(EAX).A =   _apl:LINK(-12).A
	_ap:LINK(-40).A =   T617(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 997

L_5971:
; Line 4276:	                if (apa1) 

	T618(EAX).A =   _apa1:LINK(-8).A
	CONDGO	L_5970:PC ; T618(EAX).A == #0.A
	BLOCK END
	BLOCK 998
	DBG BLOCK START
	BLOCK END
	BLOCK 999

L_5972:
; Line 4277:	                    liveQualify(apl, apa, apa1); 

	T619(EAX).A =   _apa1:LINK(-8).A
	PARM	T619(EAX).A
	T620(EAX).A =   _apa:LINK(-4).A
	PARM	T620(EAX).A
	T621(EAX).A =   _apl:LINK(-12).A
	PARM	T621(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 1000

L_5973:
	DBG BLOCK END
	BLOCK END
	BLOCK 1001

L_5970:
	BLOCK END
	BLOCK 1002

L_5974:
	DBG BLOCK END
; Line 4278:	            } 

	BLOCK END
	BLOCK 1003

L_5975:
	DBG BLOCK END
	BLOCK END
	BLOCK 1004

L_5976:
	DBG BLOCK END
	BLOCK END
	BLOCK 1005

L_5966:
	BLOCK END
	BLOCK 1006

L_5977:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1007

L_5979:
; Line 4279:	            if (szl <= ISZ_ULONG || szl == ISZ_ADDR) 

	T622(EAX).I =   _szl:LINK(-28).I
	CONDGO	L_6197:PC ; T622(EAX).I S<= #9.I
	BLOCK END
	BLOCK 1008
	T623(EAX).I =   _szl:LINK(-28).I
	CONDGO	L_5978:PC ; T623(EAX).I != #C.I
	BLOCK END
	BLOCK 1009

L_6197:
	DBG BLOCK START
	BLOCK END
	BLOCK 1010

L_5980:
; Line 4280:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1011

L_5981:
; Line 4281:	                switch (q->dc.left->size) 

	DBG BLOCK START
	BLOCK END
	BLOCK 1012

L_5983:
	DBG BLOCK END
	T624(EAX).A =   _q:LINK(4).A
	T625(EAX).A =   *(T624(EAX) + 4+0).A.A
	T626(AL).C =   *(T625(EAX) + 19).A.C
	COSWITCH(T626(AL).C,#D.UI,#16.UI,L_6065:PC)
	SWBRANCH(#FFFFFFFFFFFFFFF7.UI,L_6019:PC)
	SWBRANCH(#FFFFFFFFFFFFFFF9.UI,L_6015:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFC.UI,L_6009:PC)
	SWBRANCH(#FFFFFFFFFFFFFFFD.UI,L_6001:PC)
	SWBRANCH(#2.UI,L_5985:PC)
	SWBRANCH(#3.UI,L_5999:PC)
	SWBRANCH(#4.UI,L_6003:PC)
	SWBRANCH(#5.UI,L_6007:PC)
	SWBRANCH(#6.UI,L_6005:PC)
	SWBRANCH(#7.UI,L_6013:PC)
	SWBRANCH(#9.UI,L_6017:PC)
	SWBRANCH(#A.UI,L_6011:PC)
	SWBRANCH(#C.UI,L_6021:PC)
; Line 4282:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1013

L_5984:
	BLOCK END
	BLOCK 1014

L_5985:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 1015

L_5988:
; Line 4284:	                        if (ap->preg <= EBX) 

	T627(EAX).A =   _ap:LINK(-40).A
	T628(EAX).I =   *(T627(EAX) + 4).A.C
	CONDGO	L_5987:PC ; T628(EAX).I S> #3.C
	BLOCK END
	BLOCK 1016
	DBG BLOCK START
	BLOCK END
	BLOCK 1017

L_5989:
; Line 4285:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1018

L_5990:
; Line 4286:	                            gen_codes(op_mov, ISZ_UCHAR, ap, apl); 

	T629(EAX).A =   _apl:LINK(-12).A
	PARM	T629(EAX).A
	T630(EAX).A =   _ap:LINK(-40).A
	PARM	T630(EAX).A
	T631(EAX).UI =   #3.C
	PARM	T631(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4287:	                            gen_codes(op_and, ISZ_UINT, ap, aimmed(1)); 

	T632(EDX:EAX).ULL =   #1.C
	PARM	T632(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T633(EAX).A =   RV.T84(EAX).A
	PARMADJ	#8.N
	PARM	T633(EAX).A
	T634(EAX).A =   _ap:LINK(-40).A
	PARM	T634(EAX).A
	PARM	#7.I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4288:	                        } 

	BLOCK END
	BLOCK 1019

L_5991:
	DBG BLOCK END
	BLOCK END
	BLOCK 1020

L_5993:
	DBG BLOCK END
	GOTO	L_5992:PC
	BLOCK END
	BLOCK 1021
	DBG BLOCK START
	BLOCK END
	BLOCK 1022

L_5994:
	BLOCK END
	BLOCK 1023

L_5987:
; Line 4289:	                        else 

; Line 4290:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1024

L_5995:
; Line 4291:	                            gen_codes(op_mov, ISZ_USHORT, ap, apl); 

	T635(EAX).A =   _apl:LINK(-12).A
	PARM	T635(EAX).A
	T636(EAX).A =   _ap:LINK(-40).A
	PARM	T636(EAX).A
	PARM	#4.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4292:	                            gen_codes(op_and, ISZ_UINT, ap, aimmed(1)); 

	T637(EDX:EAX).ULL =   #1.C
	PARM	T637(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T638(EAX).A =   RV.T85(EAX).A
	PARMADJ	#8.N
	PARM	T638(EAX).A
	T639(EAX).A =   _ap:LINK(-40).A
	PARM	T639(EAX).A
	PARM	#7.I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4293:	                        } 

	BLOCK END
	BLOCK 1025

L_5996:
	DBG BLOCK END
	BLOCK END
	BLOCK 1026

L_5997:
	DBG BLOCK END
	BLOCK END
	BLOCK 1027

L_5992:
	BLOCK END
	BLOCK 1028

L_5998:
	DBG BLOCK END
; Line 4294:	                        break; 

	GOTO	L_5982:PC
	BLOCK END
	BLOCK 1029
	DBG BLOCK END
	BLOCK END
	BLOCK 1030

L_5999:
	DBG BLOCK START
; Line 4295:	                    case ISZ_UCHAR: 
; Line 4296:	                        do_movzx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

; Line 4296:	                        do_movzx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

	T640(EAX).A =   _apl:LINK(-12).A
	PARM	T640(EAX).A
	T641(EAX).A =   _ap:LINK(-40).A
	PARM	T641(EAX).A
	T642(EAX).UI =   #3.C
	PARM	T642(EAX).UI
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4297:	                        break; 

	GOTO	L_5982:PC
	BLOCK END
	BLOCK 1031
	DBG BLOCK END
	BLOCK END
	BLOCK 1032

L_6001:
	DBG BLOCK START
; Line 4298:	                    case -ISZ_UCHAR: 
; Line 4299:	                        do_movsx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

; Line 4299:	                        do_movsx(ISZ_UINT, ISZ_UCHAR, ap, apl); 

	T643(EAX).A =   _apl:LINK(-12).A
	PARM	T643(EAX).A
	T644(EAX).A =   _ap:LINK(-40).A
	PARM	T644(EAX).A
	T645(EAX).UI =   #3.C
	PARM	T645(EAX).UI
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4300:	                        break; 

	GOTO	L_5982:PC
	BLOCK END
	BLOCK 1033
	DBG BLOCK END
	BLOCK END
	BLOCK 1034

L_6003:
	BLOCK END
	BLOCK 1035

L_6005:
	BLOCK END
	BLOCK 1036

L_6007:
	DBG BLOCK START
; Line 4301:	                    case ISZ_USHORT: 
; Line 4302:	                    case ISZ_U16: 

; Line 4302:	                    case ISZ_U16: 

	T646(EAX).A =   _apl:LINK(-12).A
	PARM	T646(EAX).A
	T647(EAX).A =   _ap:LINK(-40).A
	PARM	T647(EAX).A
	PARM	#4.I
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movzx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4303:	                    case ISZ_WCHAR: 
; Line 4304:	                        do_movzx(ISZ_UINT, ISZ_USHORT, ap, apl); 

; Line 4304:	                        do_movzx(ISZ_UINT, ISZ_USHORT, ap, apl); 

	GOTO	L_5982:PC
	BLOCK END
	BLOCK 1037
	DBG BLOCK END
	BLOCK END
	BLOCK 1038

L_6009:
	DBG BLOCK START
; Line 4305:	                        break; 
; Line 4306:	                    case -ISZ_USHORT: 

; Line 4306:	                    case -ISZ_USHORT: 

	T648(EAX).A =   _apl:LINK(-12).A
	PARM	T648(EAX).A
	T649(EAX).A =   _ap:LINK(-40).A
	PARM	T649(EAX).A
	PARM	#4.I
	PARM	#7.I
	TAG
	GOSUB	#@occx86@do_movsx$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4307:	                        do_movsx(ISZ_UINT, ISZ_USHORT, ap, apl); 
; Line 4308:	                        break; 

; Line 4308:	                        break; 

	GOTO	L_5982:PC
	BLOCK END
	BLOCK 1039
	DBG BLOCK END
	BLOCK END
	BLOCK 1040

L_6011:
	BLOCK END
	BLOCK 1041

L_6013:
	BLOCK END
	BLOCK 1042

L_6015:
	BLOCK END
	BLOCK 1043

L_6017:
	BLOCK END
	BLOCK 1044

L_6019:
	BLOCK END
	BLOCK 1045

L_6021:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 1046

L_6024:
; Line 4309:	                    case ISZ_U32: 
; Line 4316:	                        { 
; Line 4317:	                            if (q->ans->bits) 

; Line 4310:	                    case ISZ_UINT: 

	T650(ECX).A =   _apa:LINK(-4).A
	T651(EAX).A =   _ap:LINK(-40).A
	CONDGO	L_6023:PC ; T651(EAX).A != T650(ECX).A
	BLOCK END
	BLOCK 1047
	DBG BLOCK START
	BLOCK END
	BLOCK 1048

L_6025:
; Line 4311:	                    case -ISZ_UINT: 
; Line 4312:	                    case ISZ_ULONG: 

; Line 4312:	                    case ISZ_ULONG: 

	DBG BLOCK START
	BLOCK END
	BLOCK 1049

L_6026:
; Line 4313:	                    case -ISZ_ULONG: 

	DBG BLOCK START
	BLOCK END
	BLOCK 1050

L_6028:
; Line 4314:	                    case ISZ_ADDR: 
; Line 4315:	                        if (ap == apa) 

; Line 4315:	                        if (ap == apa) 

	T652(EAX).A =   _q:LINK(4).A
	T653(EAX).A =   *(T652(EAX) + 40).A.A
	T654(AL).C =   *(T653(EAX) + 1C).A.C
	CONDGO	L_6027:PC ; T654(AL).C == #0.C
	BLOCK END
	BLOCK 1051
	DBG BLOCK START
	BLOCK END
	BLOCK 1052

L_6029:
; Line 4318:	                                bit_store(ap, apl, q->ans->size, q->ans->bits, q->ans->startbit); 

	T655(EAX).A =   _q:LINK(4).A
	T656(EAX).A =   *(T655(EAX) + 40).A.A
	T657(EAX).I =   *(T656(EAX) + 1B).A.C
	PARM	T657(EAX).I
	T658(EAX).A =   _q:LINK(4).A
	T659(EAX).A =   *(T658(EAX) + 40).A.A
	T660(EAX).I =   *(T659(EAX) + 1C).A.C
	PARM	T660(EAX).I
	T661(EAX).A =   _q:LINK(4).A
	T662(EAX).A =   *(T661(EAX) + 40).A.A
	T663(EAX).I =   *(T662(EAX) + 19).A.C
	PARM	T663(EAX).I
	T664(EAX).A =   _apl:LINK(-12).A
	PARM	T664(EAX).A
	T665(EAX).A =   _ap:LINK(-40).A
	PARM	T665(EAX).A
	TAG
	GOSUB	#@occx86@bit_store$qp5amodepn0iii:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 1053

L_6031:
	DBG BLOCK END
	GOTO	L_6030:PC
	BLOCK END
	BLOCK 1054
	DBG BLOCK START
	BLOCK END
	BLOCK 1055

L_6032:
	BLOCK END
	BLOCK 1056

L_6027:
; Line 4319:	                            else 

; Line 4320:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1057

L_6033:
; Line 4321:	                                gen_codes(op_mov, ISZ_UINT, ap, apl); 

	T666(EAX).A =   _apl:LINK(-12).A
	PARM	T666(EAX).A
	T667(EAX).A =   _ap:LINK(-40).A
	PARM	T667(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 1058

L_6035:
; Line 4322:	                                if (q->dc.opcode == Optimizer::i_assn && q->dc.left->bits) 

	T668(EAX).A =   _q:LINK(4).A
	T669(EAX).I =   *(T668(EAX) + 0+0).A.I
	CONDGO	L_6034:PC ; T669(EAX).I != #37.I
	BLOCK END
	BLOCK 1059
	T670(EAX).A =   _q:LINK(4).A
	T671(EAX).A =   *(T670(EAX) + 4+0).A.A
	T672(AL).C =   *(T671(EAX) + 1C).A.C
	CONDGO	L_6034:PC ; T672(AL).C == #0.C
	BLOCK END
	BLOCK 1060
	DBG BLOCK START
	BLOCK END
	BLOCK 1061

L_6036:
; Line 4323:	                                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1062

L_6037:
; Line 4325:	                                    if (apa->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 1063

L_6039:
	T673(EAX).A =   _apa:LINK(-4).A
	T674(EAX).I =   *(T673(EAX) + 0).A.I
	CONDGO	L_6038:PC ; T674(EAX).I == #2.C
	BLOCK END
	BLOCK 1064
	DBG BLOCK START
	BLOCK END
	BLOCK 1065

L_6040:
; Line 4326:	                                        diag("asm_assn: Expected register in bit processing"); 

	PARM	#L_5135:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 1066

L_6041:
	DBG BLOCK END
	BLOCK END
	BLOCK 1067

L_6038:
	BLOCK END
	BLOCK 1068

L_6042:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1069

L_6044:
; Line 4327:	                                    if (q->dc.left->startbit) 

	T675(EAX).A =   _q:LINK(4).A
	T676(EAX).A =   *(T675(EAX) + 4+0).A.A
	T677(AL).C =   *(T676(EAX) + 1B).A.C
	CONDGO	L_6043:PC ; T677(AL).C == #0.C
	BLOCK END
	BLOCK 1070
	DBG BLOCK START
	BLOCK END
	BLOCK 1071

L_6045:
; Line 4328:	                                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1072

L_6046:
; Line 4329:	                                        liveQualify(apa, apa, 0); 

	T678(EAX).A =   #0.C
	PARM	T678(EAX).A
	T679(EAX).A =   _apa:LINK(-4).A
	PARM	T679(EAX).A
	T680(EAX).A =   _apa:LINK(-4).A
	PARM	T680(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 4330:	                                        gen_codes(op_shr, q->ans->size, apa, aimmed(q->dc.left->startbit)); 

	T681(EAX).A =   _q:LINK(4).A
	T682(EAX).A =   *(T681(EAX) + 4+0).A.A
	T683(EDX:EAX).ULL =   *(T682(EAX) + 1B).A.C
	PARM	T683(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T684(EAX).A =   RV.T86(EAX).A
	PARMADJ	#8.N
	PARM	T684(EAX).A
	T685(EAX).A =   _apa:LINK(-4).A
	PARM	T685(EAX).A
	T686(EAX).A =   _q:LINK(4).A
	T687(EAX).A =   *(T686(EAX) + 40).A.A
	T688(EAX).I =   *(T687(EAX) + 19).A.C
	PARM	T688(EAX).I
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4331:	                                    } 

	BLOCK END
	BLOCK 1073

L_6047:
	DBG BLOCK END
	BLOCK END
	BLOCK 1074

L_6048:
	DBG BLOCK END
	BLOCK END
	BLOCK 1075

L_6043:
	BLOCK END
	BLOCK 1076

L_6049:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1077

L_6051:
; Line 4332:	                                    if (q->dc.left->bits < 32) 

	T689(EAX).A =   _q:LINK(4).A
	T690(EAX).A =   *(T689(EAX) + 4+0).A.A
	T691(EAX).I =   *(T690(EAX) + 1C).A.C
	CONDGO	L_6050:PC ; T691(EAX).I S>= #20.I
	BLOCK END
	BLOCK 1078
	DBG BLOCK START
	BLOCK END
	BLOCK 1079

L_6052:
; Line 4333:	                                        gen_codes(op_and, q->ans->size, apa, aimmed((1 << q->dc.left->bits) - 1)); 

	T692(EAX).A =   _q:LINK(4).A
	T693(EAX).A =   *(T692(EAX) + 4+0).A.A
	T695(CL).C =   *(T693(EAX) + 1C).A.C
	T1351(AL).C =   T695(CL).C^
	T1357(CL).C =   T1351(AL).C^
	T696(EAX).I = #1.C << T1357(CL).C
	T697(EAX).I = T696(EAX).I - #1.C
	T698(EDX:EAX).ULL =   T697(EAX).I
	PARM	T698(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T699(EAX).A =   RV.T87(EAX).A
	PARMADJ	#8.N
	PARM	T699(EAX).A
	T700(EAX).A =   _apa:LINK(-4).A
	PARM	T700(EAX).A
	T701(EAX).A =   _q:LINK(4).A
	T702(EAX).A =   *(T701(EAX) + 40).A.A
	T703(EAX).I =   *(T702(EAX) + 19).A.C
	PARM	T703(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 1080

L_6053:
	DBG BLOCK END
	BLOCK END
	BLOCK 1081

L_6050:
	BLOCK END
	BLOCK 1082

L_6054:
	DBG BLOCK END
; Line 4334:	                                } 

	BLOCK END
	BLOCK 1083

L_6055:
	DBG BLOCK END
	BLOCK END
	BLOCK 1084

L_6056:
	DBG BLOCK END
	BLOCK END
	BLOCK 1085

L_6034:
	BLOCK END
	BLOCK 1086

L_6057:
	DBG BLOCK END
; Line 4335:	                            } 

	BLOCK END
	BLOCK 1087

L_6058:
	DBG BLOCK END
	BLOCK END
	BLOCK 1088

L_6059:
	DBG BLOCK END
	BLOCK END
	BLOCK 1089

L_6030:
	BLOCK END
	BLOCK 1090

L_6060:
	DBG BLOCK END
; Line 4336:	                        } 

	BLOCK END
	BLOCK 1091

L_6061:
	DBG BLOCK END
	BLOCK END
	BLOCK 1092

L_6062:
	DBG BLOCK END
	BLOCK END
	BLOCK 1093

L_6023:
	BLOCK END
	BLOCK 1094

L_6063:
	DBG BLOCK END
; Line 4337:	                        break; 

	BLOCK END
	BLOCK 1095

L_6064:
	DBG BLOCK END
	BLOCK END
	BLOCK 1096

L_6065:
	BLOCK END
	BLOCK 1097

L_5982:
	BLOCK END
	BLOCK 1098

L_6066:
	DBG BLOCK END
; Line 4339:	            } 

	BLOCK END
	BLOCK 1099

L_6067:
	DBG BLOCK END
	BLOCK END
	BLOCK 1100

L_6068:
	DBG BLOCK END
	BLOCK END
	BLOCK 1101

L_5978:
	BLOCK END
	BLOCK 1102

L_6069:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1103

L_6071:
; Line 4340:	            if (ap != apa) 

	T704(ECX).A =   _apa:LINK(-4).A
	T705(EAX).A =   _ap:LINK(-40).A
	CONDGO	L_6070:PC ; T705(EAX).A == T704(ECX).A
	BLOCK END
	BLOCK 1104
	DBG BLOCK START
	BLOCK END
	BLOCK 1105

L_6072:
; Line 4341:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1106

L_6073:
; Line 4342:	                if (q->ans->bits) 

	DBG BLOCK START
	BLOCK END
	BLOCK 1107

L_6075:
	T706(EAX).A =   _q:LINK(4).A
	T707(EAX).A =   *(T706(EAX) + 40).A.A
	T708(AL).C =   *(T707(EAX) + 1C).A.C
	CONDGO	L_6074:PC ; T708(AL).C == #0.C
	BLOCK END
	BLOCK 1108
	DBG BLOCK START
	BLOCK END
	BLOCK 1109

L_6076:
; Line 4343:	                    bit_store(ap, apl, q->ans->size, q->ans->bits, q->ans->startbit); 

	T709(EAX).A =   _q:LINK(4).A
	T710(EAX).A =   *(T709(EAX) + 40).A.A
	T711(EAX).I =   *(T710(EAX) + 1B).A.C
	PARM	T711(EAX).I
	T712(EAX).A =   _q:LINK(4).A
	T713(EAX).A =   *(T712(EAX) + 40).A.A
	T714(EAX).I =   *(T713(EAX) + 1C).A.C
	PARM	T714(EAX).I
	T715(EAX).A =   _q:LINK(4).A
	T716(EAX).A =   *(T715(EAX) + 40).A.A
	T717(EAX).I =   *(T716(EAX) + 19).A.C
	PARM	T717(EAX).I
	T718(EAX).A =   _apl:LINK(-12).A
	PARM	T718(EAX).A
	T719(EAX).A =   _ap:LINK(-40).A
	PARM	T719(EAX).A
	TAG
	GOSUB	#@occx86@bit_store$qp5amodepn0iii:PC.UI
	PARMADJ	#14.N
	BLOCK END
	BLOCK 1110

L_6078:
	DBG BLOCK END
	GOTO	L_6077:PC
	BLOCK END
	BLOCK 1111
	DBG BLOCK START
	BLOCK END
	BLOCK 1112

L_6079:
	BLOCK END
	BLOCK 1113

L_6074:
; Line 4344:	                else 

; Line 4345:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1114

L_6080:
; Line 4346:	                    gen_codes(op_mov, ISZ_UINT, apa, ap); 

	T720(EAX).A =   _ap:LINK(-40).A
	PARM	T720(EAX).A
	T721(EAX).A =   _apa:LINK(-4).A
	PARM	T721(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4347:	                    peep_tail->oper1->liveRegs = q->liveRegs; 

	T722(EAX).A =   _q:LINK(4).A
	T723(ECX).I =   *(T722(EAX) + 48).A.ULL
	T724(EAX).A =   @occx86@peep_tail:RAM.A
	T725(EAX).A =   *(T724(EAX) + C).A.A
	*(T725(EAX) + 10).A.I =   T723(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 1115

L_6082:
; Line 4348:	                    if (q->dc.opcode == Optimizer::i_assn && q->dc.left->bits) 

	T726(EAX).A =   _q:LINK(4).A
	T727(EAX).I =   *(T726(EAX) + 0+0).A.I
	CONDGO	L_6081:PC ; T727(EAX).I != #37.I
	BLOCK END
	BLOCK 1116
	T728(EAX).A =   _q:LINK(4).A
	T729(EAX).A =   *(T728(EAX) + 4+0).A.A
	T730(AL).C =   *(T729(EAX) + 1C).A.C
	CONDGO	L_6081:PC ; T730(AL).C == #0.C
	BLOCK END
	BLOCK 1117
	DBG BLOCK START
	BLOCK END
	BLOCK 1118

L_6083:
; Line 4349:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1119

L_6084:
; Line 4350:	                        int max; 

	VAR START	max
	DBG BLOCK START
	BLOCK END
	BLOCK 1120

L_6086:
	DBG BLOCK END
; Line 4351:	                        switch (szl) 

	T731(EAX).I =   _szl:LINK(-28).I
	COSWITCH(T731(EAX).I,#8.UI,#A.UI,L_6104:PC)
	SWBRANCH(#3.UI,L_6088:PC)
	SWBRANCH(#4.UI,L_6090:PC)
	SWBRANCH(#5.UI,L_6094:PC)
	SWBRANCH(#6.UI,L_6092:PC)
	SWBRANCH(#7.UI,L_6096:PC)
	SWBRANCH(#9.UI,L_6098:PC)
	SWBRANCH(#A.UI,L_6100:PC)
	SWBRANCH(#C.UI,L_6102:PC)
; Line 4352:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1121

L_6087:
	BLOCK END
	BLOCK 1122

L_6088:
	DBG BLOCK START
; Line 4354:	                                max = 8; 

	_max:LINK(-44).I =   #8.I
; Line 4355:	                                break; 

	GOTO	L_6085:PC
	BLOCK END
	BLOCK 1123
	DBG BLOCK END
	BLOCK END
	BLOCK 1124

L_6090:
	BLOCK END
	BLOCK 1125

L_6092:
	BLOCK END
	BLOCK 1126

L_6094:
	DBG BLOCK START
; Line 4356:	                            case ISZ_USHORT: 
; Line 4357:	                            case ISZ_U16: 

; Line 4357:	                            case ISZ_U16: 

	_max:LINK(-44).I =   #10.I
; Line 4358:	                            case ISZ_WCHAR: 
; Line 4359:	                                max = 16; 

; Line 4359:	                                max = 16; 

	GOTO	L_6085:PC
	BLOCK END
	BLOCK 1127
	DBG BLOCK END
	BLOCK END
	BLOCK 1128

L_6096:
	BLOCK END
	BLOCK 1129

L_6098:
	BLOCK END
	BLOCK 1130

L_6100:
	BLOCK END
	BLOCK 1131

L_6102:
	DBG BLOCK START
	DBG BLOCK END
	BLOCK END
	BLOCK 1132

L_6104:
	DBG BLOCK START
; Line 4360:	                                break; 
; Line 4361:	                            case ISZ_UINT: 

; Line 4361:	                            case ISZ_UINT: 

	_max:LINK(-44).I =   #20.I
; Line 4362:	                            case ISZ_ULONG: 
; Line 4363:	                            case ISZ_U32: 

; Line 4363:	                            case ISZ_U32: 

	BLOCK END
	BLOCK 1133

L_6105:
	DBG BLOCK END
	BLOCK END
	BLOCK 1134

L_6085:
	BLOCK END
	BLOCK 1135

L_6106:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1136

L_6108:
; Line 4365:	                            default: 
; Line 4371:	                            diag("asm_assn: Expected register in bit processing"); 
; Line 4372:	                        if (q->dc.left->startbit) 

; Line 4366:	                                max = 32; 

	T732(EAX).A =   _apa:LINK(-4).A
	T733(EAX).I =   *(T732(EAX) + 0).A.I
	CONDGO	L_6107:PC ; T733(EAX).I == #2.C
	BLOCK END
	BLOCK 1137
	DBG BLOCK START
	BLOCK END
	BLOCK 1138

L_6109:
; Line 4367:	                                break; 
; Line 4368:	                        } 

; Line 4368:	                        } 

	PARM	#L_5135:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 1139

L_6110:
	DBG BLOCK END
	BLOCK END
	BLOCK 1140

L_6107:
	BLOCK END
	BLOCK 1141

L_6111:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1142

L_6113:
; Line 4370:	                        if (apa->mode != am_dreg) 

	T734(EAX).A =   _q:LINK(4).A
	T735(EAX).A =   *(T734(EAX) + 4+0).A.A
	T736(AL).C =   *(T735(EAX) + 1B).A.C
	CONDGO	L_6112:PC ; T736(AL).C == #0.C
	BLOCK END
	BLOCK 1143
	DBG BLOCK START
	BLOCK END
	BLOCK 1144

L_6114:
; Line 4373:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1145

L_6115:
; Line 4374:	                            liveQualify(apa, apa, 0); 

	T737(EAX).A =   #0.C
	PARM	T737(EAX).A
	T738(EAX).A =   _apa:LINK(-4).A
	PARM	T738(EAX).A
	T739(EAX).A =   _apa:LINK(-4).A
	PARM	T739(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 4375:	                            gen_codes(op_shr, q->ans->size, apa, aimmed(q->dc.left->startbit)); 

	T740(EAX).A =   _q:LINK(4).A
	T741(EAX).A =   *(T740(EAX) + 4+0).A.A
	T742(EDX:EAX).ULL =   *(T741(EAX) + 1B).A.C
	PARM	T742(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T743(EAX).A =   RV.T88(EAX).A
	PARMADJ	#8.N
	PARM	T743(EAX).A
	T744(EAX).A =   _apa:LINK(-4).A
	PARM	T744(EAX).A
	T745(EAX).A =   _q:LINK(4).A
	T746(EAX).A =   *(T745(EAX) + 40).A.A
	T747(EAX).I =   *(T746(EAX) + 19).A.C
	PARM	T747(EAX).I
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4376:	                        } 

	BLOCK END
	BLOCK 1146

L_6116:
	DBG BLOCK END
	BLOCK END
	BLOCK 1147

L_6117:
	DBG BLOCK END
	BLOCK END
	BLOCK 1148

L_6112:
	BLOCK END
	BLOCK 1149

L_6118:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1150

L_6120:
; Line 4377:	                        if (q->dc.left->bits < max) 

	T748(ECX).I =   _max:LINK(-44).I
	T749(EAX).A =   _q:LINK(4).A
	T750(EAX).A =   *(T749(EAX) + 4+0).A.A
	T751(EAX).I =   *(T750(EAX) + 1C).A.C
	CONDGO	L_6119:PC ; T751(EAX).I S>= T748(ECX).I
	BLOCK END
	BLOCK 1151
	DBG BLOCK START
	BLOCK END
	BLOCK 1152

L_6121:
; Line 4378:	                            gen_codes(op_and, q->ans->size, apa, aimmed((1 << q->dc.left->bits) - 1)); 

	T752(EAX).A =   _q:LINK(4).A
	T753(EAX).A =   *(T752(EAX) + 4+0).A.A
	T755(CL).C =   *(T753(EAX) + 1C).A.C
	T1352(AL).C =   T755(CL).C^
	T1358(CL).C =   T1352(AL).C^
	T756(EAX).I = #1.C << T1358(CL).C
	T757(EAX).I = T756(EAX).I - #1.C
	T758(EDX:EAX).ULL =   T757(EAX).I
	PARM	T758(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T759(EAX).A =   RV.T89(EAX).A
	PARMADJ	#8.N
	PARM	T759(EAX).A
	T760(EAX).A =   _apa:LINK(-4).A
	PARM	T760(EAX).A
	T761(EAX).A =   _q:LINK(4).A
	T762(EAX).A =   *(T761(EAX) + 40).A.A
	T763(EAX).I =   *(T762(EAX) + 19).A.C
	PARM	T763(EAX).I
	PARM	#26.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 1153

L_6122:
	DBG BLOCK END
	BLOCK END
	BLOCK 1154

L_6119:
	BLOCK END
	BLOCK 1155

L_6123:
	DBG BLOCK END
; Line 4379:	                    } 

	BLOCK END
	BLOCK 1156

L_6124:
	DBG BLOCK END
	BLOCK END
	BLOCK 1157

L_6125:
	DBG BLOCK END
	BLOCK END
	BLOCK 1158

L_6081:
	BLOCK END
	BLOCK 1159

L_6126:
	DBG BLOCK END
; Line 4380:	                } 

	BLOCK END
	BLOCK 1160

L_6127:
	DBG BLOCK END
	BLOCK END
	BLOCK 1161

L_6128:
	DBG BLOCK END
	BLOCK END
	BLOCK 1162

L_6077:
	BLOCK END
	BLOCK 1163

L_6129:
	DBG BLOCK END
; Line 4381:	            } 

	BLOCK END
	BLOCK 1164

L_6130:
	DBG BLOCK END
	BLOCK END
	BLOCK 1165

L_6131:
	DBG BLOCK END
	BLOCK END
	BLOCK 1166

L_6070:
	BLOCK END
	BLOCK 1167

L_6132:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 1168

L_6134:
; Line 4382:	            if (sza == ISZ_ULONGLONG) 

	T764(EAX).I =   _sza:LINK(-32).I
	CONDGO	L_6133:PC ; T764(EAX).I != #B.C
	BLOCK END
	BLOCK 1169
	DBG BLOCK START
	BLOCK END
	BLOCK 1170

L_6135:
; Line 4383:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1171

L_6136:
; Line 4384:	                if (q->dc.left->size < 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 1172

L_6138:
	T765(EAX).A =   _q:LINK(4).A
	T766(EAX).A =   *(T765(EAX) + 4+0).A.A
	T767(EAX).I =   *(T766(EAX) + 19).A.C
	CONDGO	L_6137:PC ; T767(EAX).I S>= #0.C
	BLOCK END
	BLOCK 1173
	DBG BLOCK START
	BLOCK END
	BLOCK 1174

L_6139:
; Line 4385:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1175

L_6140:
; Line 4386:	                    if (apa1->mode == am_dreg && apa->mode == am_dreg && apa1->preg == EDX && apa->preg == EAX) 

	DBG BLOCK START
	BLOCK END
	BLOCK 1176

L_6142:
	T768(EAX).A =   _apa1:LINK(-8).A
	T769(EAX).I =   *(T768(EAX) + 0).A.I
	CONDGO	L_6141:PC ; T769(EAX).I != #2.C
	BLOCK END
	BLOCK 1177
	T770(EAX).A =   _apa:LINK(-4).A
	T771(EAX).I =   *(T770(EAX) + 0).A.I
	CONDGO	L_6141:PC ; T771(EAX).I != #2.C
	BLOCK END
	BLOCK 1178
	T772(EAX).A =   _apa1:LINK(-8).A
	T773(AL).C =   *(T772(EAX) + 4).A.C
	CONDGO	L_6141:PC ; T773(AL).C != #2.C
	BLOCK END
	BLOCK 1179
	T774(EAX).A =   _apa:LINK(-4).A
	T775(AL).C =   *(T774(EAX) + 4).A.C
	CONDGO	L_6141:PC ; T775(AL).C != #0.C
	BLOCK END
	BLOCK 1180
	DBG BLOCK START
	BLOCK END
	BLOCK 1181

L_6143:
; Line 4387:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1182

L_6144:
; Line 4388:	                        gen_code(op_cdq, NULL, NULL); 

	T776(EAX).A =   #0.C
	PARM	T776(EAX).A
	T777(EAX).A =   #0.C
	PARM	T777(EAX).A
	PARM	#32.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4389:	                    } 

	BLOCK END
	BLOCK 1183

L_6145:
	DBG BLOCK END
	BLOCK END
	BLOCK 1184

L_6147:
	DBG BLOCK END
	GOTO	L_6146:PC
	BLOCK END
	BLOCK 1185
	DBG BLOCK START
	BLOCK END
	BLOCK 1186

L_6148:
	BLOCK END
	BLOCK 1187

L_6141:
; Line 4390:	                    else 

; Line 4391:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 1188

L_6149:
; Line 4392:	                        gen_codes(op_mov, ISZ_UINT, apa1, apa); 

	T778(EAX).A =   _apa:LINK(-4).A
	PARM	T778(EAX).A
	T779(EAX).A =   _apa1:LINK(-8).A
	PARM	T779(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4393:	                        gen_codes(op_sar, ISZ_UINT, apa1, aimmed(31)); 

	T780(EDX:EAX).ULL =   #1F.I
	PARM	T780(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T781(EAX).A =   RV.T90(EAX).A
	PARMADJ	#8.N
	PARM	T781(EAX).A
	T782(EAX).A =   _apa1:LINK(-8).A
	PARM	T782(EAX).A
	PARM	#7.I
	PARM	#152.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4394:	                    } 

	BLOCK END
	BLOCK 1189

L_6150:
	DBG BLOCK END
	BLOCK END
	BLOCK 1190

L_6151:
	DBG BLOCK END
	BLOCK END
	BLOCK 1191

L_6146:
	BLOCK END
	BLOCK 1192

L_6152:
	DBG BLOCK END
; Line 4395:	                } 

	BLOCK END
	BLOCK 1193

L_6153:
	DBG BLOCK END
	BLOCK END
	BLOCK 1194

L_6155:
	DBG BLOCK END
	GOTO	L_6154:PC
	BLOCK END
	BLOCK 1195
	DBG BLOCK START
	BLOCK END
	BLOCK 1196

L_6156:
	BLOCK END
	BLOCK 1197

L_6137:
; Line 4396:	                else if (apa->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 1198

L_6158:
	T783(EAX).A =   _apa:LINK(-4).A
	T784(EAX).I =   *(T783(EAX) + 0).A.I
	CONDGO	L_6157:PC ; T784(EAX).I != #2.I
	BLOCK END
	BLOCK 1199
	DBG BLOCK START
	BLOCK END
	BLOCK 1200

L_6159:
; Line 4397:	                    gen_codes(op_sub, ISZ_UINT, apa1, apa1); 

	T785(EAX).A =   _apa1:LINK(-8).A
	PARM	T785(EAX).A
	T786(EAX).A =   _apa1:LINK(-8).A
	PARM	T786(EAX).A
	PARM	#7.I
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 1201

L_6161:
	DBG BLOCK END
	GOTO	L_6160:PC
	BLOCK END
	BLOCK 1202
	DBG BLOCK START
	BLOCK END
	BLOCK 1203

L_6162:
	BLOCK END
	BLOCK 1204

L_6157:
; Line 4398:	                else 

; Line 4399:	                    gen_codes(op_mov, ISZ_UINT, apa1, aimmed(0)); 

	T787(EDX:EAX).ULL =   #0.C
	PARM	T787(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T788(EAX).A =   RV.T91(EAX).A
	PARMADJ	#8.N
	PARM	T788(EAX).A
	T789(EAX).A =   _apa1:LINK(-8).A
	PARM	T789(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 1205

L_6163:
	DBG BLOCK END
	BLOCK END
	BLOCK 1206

L_6160:
	BLOCK END
	BLOCK 1207

L_6164:
	DBG BLOCK END
	BLOCK END
	BLOCK 1208

L_6165:
	DBG BLOCK END
	BLOCK END
	BLOCK 1209

L_6154:
	BLOCK END
	BLOCK 1210

L_6166:
	DBG BLOCK END
; Line 4400:	            } 

	BLOCK END
	BLOCK 1211

L_6167:
	DBG BLOCK END
	BLOCK END
	BLOCK 1212

L_6168:
	DBG BLOCK END
	BLOCK END
	BLOCK 1213

L_6133:
	BLOCK END
	BLOCK 1214

L_6169:
	DBG BLOCK END
; Line 4401:	        } 

	BLOCK END
	BLOCK 1215

L_6170:
	DBG BLOCK END
	BLOCK END
	BLOCK 1216

L_6171:
	DBG BLOCK END
	BLOCK END
	BLOCK 1217

L_5955:
	BLOCK END
	BLOCK 1218

L_6172:
	DBG BLOCK END
; Line 4402:	    } 

	BLOCK END
	BLOCK 1219

L_6173:
	DBG BLOCK END
	BLOCK END
	BLOCK 1220

L_6174:
	DBG BLOCK END
	BLOCK END
	BLOCK 1221

L_5819:
	BLOCK END
	BLOCK 1222

L_6175:
	DBG BLOCK END
	BLOCK END
	BLOCK 1223

L_6176:
	DBG BLOCK END
	BLOCK END
	BLOCK 1224

L_5579:
	BLOCK END
	BLOCK 1225

L_6177:
	DBG BLOCK END
; Line 4403:	} 

	BLOCK END
	BLOCK 1226

L_6178:
	DBG BLOCK END
	BLOCK END
	BLOCK 1227

L_5139:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_genword$qp15@Optimizer@quad


global @occx86@asm_genword$qp15@Optimizer@quad
@occx86@asm_genword$qp15@Optimizer@quad:
; Line 4405:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6201:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6203:
; Line 4406:	    gen_code(op_genword, aimmed(q->dc.left->offset->i), 0); 

	T1(EAX).A =   #0.C
	PARM	T1(EAX).A
	T2(EAX).A =   _q:LINK(4).A
	T3(EAX).A =   *(T2(EAX) + 4+0).A.A
	T4(EAX).A =   *(T3(EAX) + 4).A.A
	T5(EDX:EAX).ULL =   *(T4(EAX) + 8).A.LL
	PARM	T5(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T6(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T6(EAX).A
	PARM	#C.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4407:	} 

	BLOCK END
	BLOCK 4

L_6204:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6202:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_coswitch$qp15@Optimizer@quad


global @occx86@asm_coswitch$qp15@Optimizer@quad
@occx86@asm_coswitch$qp15@Optimizer@quad:
; Line 4410:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#4.UI
	BLOCK END
	BLOCK 2

L_6209:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6211:
; Line 4411:	    enum e_opcode op; 

	VAR START	op
; Line 4412:	    switch_deflab = q->dc.v.label; 

	T5(EAX).A =   _q:LINK(4).A
	T6(EAX).I =   *(T5(EAX) + 0+C+0).A.L
	@occx86@switch_deflab:RAM.I =   T6(EAX).I
; Line 4413:	    switch_range = q->dc.right->offset->i; 

	T7(EAX).A =   _q:LINK(4).A
	T8(EAX).A =   *(T7(EAX) + 8+0).A.A
	T9(EAX).A =   *(T8(EAX) + 4).A.A
	T10(EDX:EAX).LL =   *(T9(EAX) + 8).A.LL
	@occx86@switch_range:RAM.LL =   T10(EDX:EAX).LL
; Line 4414:	    switch_case_max = switch_case_count = q->ans->offset->i; 

	T11(EAX).A =   _q:LINK(4).A
	T12(EAX).A =   *(T11(EAX) + 40).A.A
	T13(EAX).A =   *(T12(EAX) + 4).A.A
	T14(EDX:EAX).LL =   *(T13(EAX) + 8).A.LL
	@occx86@switch_case_count:RAM.LL =   T14(EDX:EAX).LL
	T15(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	@occx86@switch_case_max:RAM.LL =   T15(EDX:EAX).LL
; Line 4415:	    switch_ip = q->dc.left; 

	T16(EAX).A =   _q:LINK(4).A
	T17(EAX).A =   *(T16(EAX) + 4+0).A.A
	@occx86@switch_ip:RAM.A =   T17(EAX).A
; Line 4416:	    getAmodes(q, &op, switch_ip, &switch_apl, &switch_aph); 

	PARM	#@occx86@switch_aph:RAM.A
	PARM	#@occx86@switch_apl:RAM.A
	T18(EAX).A =   @occx86@switch_ip:RAM.A
	PARM	T18(EAX).A
	T19(EAX).A =   #_op:LINK(-4).A
	PARM	T19(EAX).A
	T20(EAX).A =   _q:LINK(4).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 4417:	    switch_live = 0; 

	T21(EAX).I =   #0.C
	@occx86@switch_live:RAM.I =   T21(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_6213:
; Line 4418:	    if (switch_apl->mode == am_dreg) 

	T22(EAX).A =   @occx86@switch_apl:RAM.A
	T23(EAX).I =   *(T22(EAX) + 0).A.I
	CONDGO	L_6212:PC ; T23(EAX).I != #2.I
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_6214:
; Line 4419:	        switch_live |= 1 << switch_apl->preg; 

	T24(EDX).I =   @occx86@switch_live:RAM.I
	T25(EAX).A =   @occx86@switch_apl:RAM.A
	T27(CL).C =   *(T25(EAX) + 4).A.C
	T78(AL).C =   T27(CL).C^
	T80(CL).C =   T78(AL).C^
	T28(EAX).I = #1.C << T80(CL).C
	T29(EAX).I = T24(EDX).I | T28(EAX).I
	@occx86@switch_live:RAM.I =   T29(EAX).I
	BLOCK END
	BLOCK 7

L_6215:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_6212:
	BLOCK END
	BLOCK 9

L_6216:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_6218:
; Line 4420:	    if (switch_aph && switch_aph->mode == am_dreg) 

	T30(EAX).A =   @occx86@switch_aph:RAM.A
	CONDGO	L_6217:PC ; T30(EAX).A == #0.A
	BLOCK END
	BLOCK 11
	T31(EAX).A =   @occx86@switch_aph:RAM.A
	T32(EAX).I =   *(T31(EAX) + 0).A.I
	CONDGO	L_6217:PC ; T32(EAX).I != #2.I
	BLOCK END
	BLOCK 12
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_6219:
; Line 4421:	        switch_live |= 1 << switch_aph->preg; 

	T33(EDX).I =   @occx86@switch_live:RAM.I
	T34(EAX).A =   @occx86@switch_aph:RAM.A
	T36(CL).C =   *(T34(EAX) + 4).A.C
	T79(AL).C =   T36(CL).C^
	T81(CL).C =   T79(AL).C^
	T37(EAX).I = #1.C << T81(CL).C
	T38(EAX).I = T33(EDX).I | T37(EAX).I
	@occx86@switch_live:RAM.I =   T38(EAX).I
	BLOCK END
	BLOCK 14

L_6220:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_6217:
	BLOCK END
	BLOCK 16

L_6221:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_6223:
; Line 4422:	    if (switch_ip->size == ISZ_ULONGLONG || switch_ip->size == -ISZ_ULONGLONG || switch_case_max <= 5) 

	T39(EAX).A =   @occx86@switch_ip:RAM.A
	T40(AL).C =   *(T39(EAX) + 19).A.C
	CONDGO	L_6253:PC ; T40(AL).C == #B.C
	BLOCK END
	BLOCK 18
	T41(EAX).A =   @occx86@switch_ip:RAM.A
	T42(EAX).I =   *(T41(EAX) + 19).A.C
	CONDGO	L_6253:PC ; T42(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 19
	T43(EDX:EAX).LL =   @occx86@switch_case_max:RAM.LL
	CONDGO	L_6222:PC ; T43(EDX:EAX).LL S> #5.LL
	BLOCK END
	BLOCK 20

L_6253:
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_6224:
; Line 4423:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_6225:
; Line 4424:	        switch_mode = swm_enumerate; 

	T77(EAX).I =   #0.C
	@occx86@switch_mode:RAM.I =   T77(EAX).I
; Line 4425:	    } 

	BLOCK END
	BLOCK 23

L_6226:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_6228:
	DBG BLOCK END
	GOTO	L_6227:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_6229:
	BLOCK END
	BLOCK 27

L_6222:
; Line 4426:	    else if (switch_case_max * 10 / switch_range > 8) 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_6231:
	T44(EDX:EAX).LL =   @occx86@switch_case_max:RAM.LL
	PARM	#A.LL
	PARM	T44(EDX:EAX).LL
	GOSUB	#__LXMUL:PC.N
	PARMADJ	#0.N
	T47(EDX:EAX).LL =   RV.T3(EDX:EAX).LL
	T46(EBX:ESI).LL =   @occx86@switch_range:RAM.LL
	PARM	T46(EBX:ESI).LL
	PARM	T47(EDX:EAX).LL
	GOSUB	#__LXDIVS:PC.N
	PARMADJ	#0.N
	T49(EDX:EAX).LL =   RV.T4(EDX:EAX).LL
	CONDGO	L_6230:PC ; T49(EDX:EAX).LL S<= #8.LL
	BLOCK END
	BLOCK 29
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_6232:
; Line 4427:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_6233:
; Line 4428:	        switch_mode = swm_compactstart; 

	T50(EAX).I =   #1.C
	@occx86@switch_mode:RAM.I =   T50(EAX).I
; Line 4429:	    } 

	BLOCK END
	BLOCK 32

L_6234:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_6236:
	DBG BLOCK END
	GOTO	L_6235:PC
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_6237:
	BLOCK END
	BLOCK 36

L_6230:
; Line 4430:	    else 

; Line 4431:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_6238:
; Line 4432:	        switch_mode = swm_tree; 

	T51(EAX).I =   #3.C
	@occx86@switch_mode:RAM.I =   T51(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_6240:
; Line 4433:	        if (!switchTreeLabelCount || switchTreeLabelCount < switch_case_max) 

	T52(EAX).I =   @occx86@switchTreeLabelCount:RAM.I
	CONDGO	L_6254:PC ; T52(EAX).I == #0.C
	BLOCK END
	BLOCK 39
	T53(EBX:ESI).LL =   @occx86@switch_case_max:RAM.LL
	T54(EDX:EAX).LL =   @occx86@switchTreeLabelCount:RAM.I
	CONDGO	L_6239:PC ; T54(EDX:EAX).LL S>= T53(EBX:ESI).LL
	BLOCK END
	BLOCK 40

L_6254:
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_6241:
; Line 4434:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_6242:
; Line 4435:	            free(switchTreeCases); 

	T55(EAX).A =   @occx86@switchTreeCases:RAM.A
	PARM	T55(EAX).A
	TAG
	GOSUB	#_free:PC.UI
	PARMADJ	#4.N
; Line 4436:	            free(switchTreeLabels); 

	T56(EAX).A =   @occx86@switchTreeLabels:RAM.A
	PARM	T56(EAX).A
	TAG
	GOSUB	#_free:PC.UI
	PARMADJ	#4.N
; Line 4437:	            free(switchTreeBranchLabels); 

	T57(EAX).A =   @occx86@switchTreeBranchLabels:RAM.A
	PARM	T57(EAX).A
	TAG
	GOSUB	#_free:PC.UI
	PARMADJ	#4.N
; Line 4438:	            switchTreeLabelCount = (switch_case_max + 1024) & ~1023; 

	T58(EDX:EAX).LL =   @occx86@switch_case_max:RAM.LL
	T59(EDX:EAX).LL = T58(EDX:EAX).LL + #400.LL
	T60(EDX:EAX).LL = T59(EDX:EAX).LL & #FFFFFFFFFFFFFC00.LL
	T61(EAX).I =   T60(EDX:EAX).LL
	@occx86@switchTreeLabelCount:RAM.I =   T61(EAX).I
; Line 4439:	            switchTreeCases = (long long*)calloc(switchTreeLabelCount, sizeof(long long)); 

	T62(EAX).UI =   #8.I
	PARM	T62(EAX).UI
	T63(EAX).UI =   @occx86@switchTreeLabelCount:RAM.I
	PARM	T63(EAX).UI
	TAG
	GOSUB	#_calloc:PC.UI
	T64(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	@occx86@switchTreeCases:RAM.A =   T64(EAX).A
; Line 4440:	            switchTreeLabels = (int*)calloc(switchTreeLabelCount, sizeof(int)); 

	T65(EAX).UI =   #4.I
	PARM	T65(EAX).UI
	T66(EAX).UI =   @occx86@switchTreeLabelCount:RAM.I
	PARM	T66(EAX).UI
	TAG
	GOSUB	#_calloc:PC.UI
	T67(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	@occx86@switchTreeLabels:RAM.A =   T67(EAX).A
; Line 4441:	            switchTreeBranchLabels = (int*)calloc(switchTreeLabelCount, sizeof(int)); 

	T68(EAX).UI =   #4.I
	PARM	T68(EAX).UI
	T69(EAX).UI =   @occx86@switchTreeLabelCount:RAM.I
	PARM	T69(EAX).UI
	TAG
	GOSUB	#_calloc:PC.UI
	T70(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	@occx86@switchTreeBranchLabels:RAM.A =   T70(EAX).A
; Line 4442:	        } 

	BLOCK END
	BLOCK 43

L_6243:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_6244:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_6239:
	BLOCK END
	BLOCK 46

L_6245:
	DBG BLOCK END
; Line 4443:	        switchTreePos = 0; 

	T71(EAX).I =   #0.C
	@occx86@switchTreePos:RAM.I =   T71(EAX).I
; Line 4444:	        memset(switchTreeBranchLabels, 0, sizeof(int) * switch_case_max); 

	T72(EDX:EAX).LL =   @occx86@switch_case_max:RAM.LL
	T73(EDX:EAX).LL = T72(EDX:EAX).LL << #2.I
	T74(EAX).UI =   T73(EDX:EAX).LL
	PARM	T74(EAX).UI
	T75(EAX).UI =   #0.C
	PARM	T75(EAX).UI
	T76(EAX).A =   @occx86@switchTreeBranchLabels:RAM.A
	PARM	T76(EAX).A
	TAG
	GOSUB	#_memset:PC.UI
	PARMADJ	#C.N
; Line 4445:	    } 

	BLOCK END
	BLOCK 47

L_6246:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_6247:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_6235:
	BLOCK END
	BLOCK 50

L_6248:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_6249:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_6227:
	BLOCK END
	BLOCK 53

L_6250:
	DBG BLOCK END
; Line 4446:	} 

	BLOCK END
	BLOCK 54

L_6251:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_6210:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_swbranch$qp15@Optimizer@quad


global @occx86@asm_swbranch$qp15@Optimizer@quad
@occx86@asm_swbranch$qp15@Optimizer@quad:
; Line 4448:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#10.UI
	BLOCK END
	BLOCK 2

L_6258:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6260:
; Line 4449:	    unsigned long long swcase = q->dc.left->offset->i; 

	VAR START	swcase
	T6(EAX).A =   _q:LINK(4).A
	T7(EAX).A =   *(T6(EAX) + 4+0).A.A
	T8(EAX).A =   *(T7(EAX) + 4).A.A
	T9(EDX:EAX).ULL =   *(T8(EAX) + 8).A.LL
	_swcase:LINK(-8).ULL =   T9(EDX:EAX).ULL
	VAR START	lab
; Line 4450:	    int lab = q->dc.v.label; 

	T10(EAX).A =   _q:LINK(4).A
	T11(EAX).I =   *(T10(EAX) + 0+C+0).A.L
	_lab:LINK(-12).I =   T11(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_6262:
; Line 4451:	    if (switch_case_count == 0) 

	T12(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	CONDGO	L_6261:PC ; T12(EDX:EAX).LL != #0.LL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_6263:
; Line 4452:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_6264:
; Line 4454:	        return; 

	GOTO	L_6259:PC
; Line 4455:	    } 

	BLOCK END
	BLOCK 8

L_6265:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_6266:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_6261:
	BLOCK END
	BLOCK 11

L_6267:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_6269:
; Line 4457:	    if (switch_mode == swm_compactstart) 

	T13(EAX).I =   @occx86@switch_mode:RAM.I
	CONDGO	L_6268:PC ; T13(EAX).I != #1.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_6270:
; Line 4458:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_6271:
; Line 4459:	        compactSwitchHeader(swcase); 

	T14(EDX:EAX).LL =   _swcase:LINK(-8).ULL
	PARM	T14(EDX:EAX).LL
	TAG
	GOSUB	#@occx86@compactSwitchHeader$qL:PC.UI
	PARMADJ	#8.N
; Line 4460:	    } 

	BLOCK END
	BLOCK 16

L_6272:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_6273:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_6268:
	BLOCK END
	BLOCK 19

L_6274:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_6276:
	DBG BLOCK END
; Line 4461:	    switch (switch_mode) 

	T15(EAX).I =   @occx86@switch_mode:RAM.I
	COSWITCH(T15(EAX).I,#4.UI,#4.UI,L_6280:PC)
	SWBRANCH(#0.UI,L_6278:PC)
	SWBRANCH(#1.UI,L_6311:PC)
	SWBRANCH(#2.UI,L_6300:PC)
	SWBRANCH(#3.UI,L_6313:PC)
; Line 4462:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_6277:
	BLOCK END
	BLOCK 22

L_6278:
	DBG BLOCK START
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_6280:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_6282:
; Line 4464:	        default: 
; Line 4465:	            if (switch_ip->size == ISZ_ULONGLONG || switch_ip->size == -ISZ_ULONGLONG) 

; Line 4465:	            if (switch_ip->size == ISZ_ULONGLONG || switch_ip->size == -ISZ_ULONGLONG) 

	T16(EAX).A =   @occx86@switch_ip:RAM.A
	T17(AL).C =   *(T16(EAX) + 19).A.C
	CONDGO	L_6324:PC ; T17(AL).C == #B.C
	BLOCK END
	BLOCK 25
	T18(EAX).A =   @occx86@switch_ip:RAM.A
	T19(EAX).I =   *(T18(EAX) + 19).A.C
	CONDGO	L_6281:PC ; T19(EAX).I != #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 26

L_6324:
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_6283:
; Line 4466:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_6284:
; Line 4467:	                int nxlab = beGetLabel; 

	VAR START	nxlab
	T29(EAX).I =   @Optimizer@nextLabel:RAM.I
	_nxlab:LINK(-16).I =   T29(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 4468:	                gen_codes(op_cmp, ISZ_UINT, switch_apl, aimmed(swcase)); 

	T30(EDX:EAX).ULL =   _swcase:LINK(-8).ULL
	PARM	T30(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T31(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T31(EAX).A
	T32(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T32(EAX).A
	PARM	#7.I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4469:	                gen_branch(op_jne, nxlab); 

	T33(EAX).I =   _nxlab:LINK(-16).I
	PARM	T33(EAX).I
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 4470:	                peep_tail->oper1->liveRegs = switch_live; 

	T34(ECX).I =   @occx86@switch_live:RAM.I
	T35(EAX).A =   @occx86@peep_tail:RAM.A
	T36(EAX).A =   *(T35(EAX) + C).A.A
	*(T36(EAX) + 10).A.I =   T34(ECX).I
; Line 4472:	                gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed(swcase >> 32)); 

	T37(EDX:EAX).ULL =   _swcase:LINK(-8).ULL
	T38(EDX:EAX).ULL = T37(EDX:EAX).ULL U>> #20.I
	PARM	T38(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T39(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	PARM	T39(EAX).A
	T40(EAX).A =   @occx86@switch_aph:RAM.A
	PARM	T40(EAX).A
	PARM	#7.I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4474:	                if (switch_ip->size < 0 && swcase < 0) 
; Line 4475:	                    gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed(-1)); 

; Line 4475:	                    gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed(-1)); 

	T41(EAX).I =   _lab:LINK(-12).I
	PARM	T41(EAX).I
	PARM	#E9.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 4476:	                else 
; Line 4477:	                    gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed(0)); 

; Line 4477:	                    gen_codes(op_cmp, ISZ_UINT, switch_aph, aimmed(0)); 

	T42(ECX).I =   @occx86@switch_live:RAM.I
	T43(EAX).A =   @occx86@peep_tail:RAM.A
	T44(EAX).A =   *(T43(EAX) + C).A.A
	*(T44(EAX) + 10).A.I =   T42(ECX).I
; Line 4479:	                gen_branch(op_je, lab); 
; Line 4480:	                peep_tail->oper1->liveRegs = switch_live; 

; Line 4480:	                peep_tail->oper1->liveRegs = switch_live; 

	T45(EAX).I =   _nxlab:LINK(-16).I
	PARM	T45(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 4481:	                oa_gen_label(nxlab); 

	BLOCK END
	BLOCK 29

L_6285:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_6287:
	DBG BLOCK END
	GOTO	L_6286:PC
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_6288:
	BLOCK END
	BLOCK 33

L_6281:
; Line 4482:	            } 
; Line 4483:	            else 

; Line 4483:	            else 

; Line 4484:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_6289:
; Line 4485:	                gen_codes(op_cmp, switch_ip->size, switch_apl, aimmed(swcase)); 

	T20(EDX:EAX).ULL =   _swcase:LINK(-8).ULL
	PARM	T20(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T21(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T21(EAX).A
	T22(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T22(EAX).A
	T23(EAX).A =   @occx86@switch_ip:RAM.A
	T24(EAX).I =   *(T23(EAX) + 19).A.C
	PARM	T24(EAX).I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4486:	                gen_branch(op_je, lab); 

	T25(EAX).I =   _lab:LINK(-12).I
	PARM	T25(EAX).I
	PARM	#E9.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 4487:	                peep_tail->oper1->liveRegs = switch_live; 

	T26(ECX).I =   @occx86@switch_live:RAM.I
	T27(EAX).A =   @occx86@peep_tail:RAM.A
	T28(EAX).A =   *(T27(EAX) + C).A.A
	*(T28(EAX) + 10).A.I =   T26(ECX).I
; Line 4488:	            } 

	BLOCK END
	BLOCK 35

L_6290:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_6291:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_6286:
	BLOCK END
	BLOCK 38

L_6292:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_6294:
; Line 4489:	            if (--switch_case_count == 0) 

	T46(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	T47(EDX:EAX).LL = T46(EDX:EAX).LL - #1.LL
	@occx86@switch_case_count:RAM.LL =   T47(EDX:EAX).LL
	T48(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	CONDGO	L_6293:PC ; T48(EDX:EAX).LL != #0.LL
	BLOCK END
	BLOCK 40
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_6295:
; Line 4490:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_6296:
; Line 4491:	                gen_branch(op_jmp, switch_deflab); 

	T49(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T49(EAX).I
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_branch$qii:PC.UI
	PARMADJ	#8.N
; Line 4492:	                peep_tail->oper1->liveRegs = switch_live; 

	T50(ECX).I =   @occx86@switch_live:RAM.I
	T51(EAX).A =   @occx86@peep_tail:RAM.A
	T52(EAX).A =   *(T51(EAX) + C).A.A
	*(T52(EAX) + 10).A.I =   T50(ECX).I
; Line 4493:	            } 

	BLOCK END
	BLOCK 43

L_6297:
	DBG BLOCK END
	BLOCK END
	BLOCK 44

L_6298:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_6293:
	BLOCK END
	BLOCK 46

L_6299:
	DBG BLOCK END
; Line 4494:	            break; 

	GOTO	L_6275:PC
	BLOCK END
	BLOCK 47
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_6300:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_6305:
	GOTO	L_6304:PC
	BLOCK END
	BLOCK 50

L_6302:
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_6306:
; Line 4497:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_6307:
; Line 4498:	                gen_codes(op_dd, 0, make_label(switch_deflab), 0); 

	T55(EAX).A =   #0.C
	PARM	T55(EAX).A
	T56(EAX).I =   @occx86@switch_deflab:RAM.I
	PARM	T56(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T57(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T57(EAX).A
	T58(EAX).UI =   #0.C
	PARM	T58(EAX).UI
	PARM	#D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4499:	                switch_lastcase++; 

	@occx86@switch_lastcase:RAM.I = @occx86@switch_lastcase:RAM.I + #1.C
; Line 4500:	            } 

	BLOCK END
	BLOCK 53

L_6308:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_6309:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_6304:
; Line 4496:	            while (switch_lastcase < swcase) 

	T53(EBX:ESI).ULL =   _swcase:LINK(-8).ULL
	T54(EDX:EAX).ULL =   @occx86@switch_lastcase:RAM.I
	CONDGO	L_6302:PC ; T54(EDX:EAX).ULL U< T53(EBX:ESI).ULL
	BLOCK END
	BLOCK 56

L_6303:
	BLOCK END
	BLOCK 57

L_6310:
	DBG BLOCK END
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_6311:
	DBG BLOCK START
; Line 4501:	        case swm_compactstart: 
; Line 4502:	            gen_codes(op_dd, 0, make_label(lab), 0); 

; Line 4502:	            gen_codes(op_dd, 0, make_label(lab), 0); 

	T59(EAX).A =   #0.C
	PARM	T59(EAX).A
	T60(EAX).I =   _lab:LINK(-12).I
	PARM	T60(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T61(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T61(EAX).A
	T62(EAX).UI =   #0.C
	PARM	T62(EAX).UI
	PARM	#D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4503:	            switch_lastcase = swcase + 1; 

	T63(EDX:EAX).ULL =   _swcase:LINK(-8).ULL
	T64(EDX:EAX).ULL = T63(EDX:EAX).ULL + #1.ULL
	T65(EAX).I =   T64(EDX:EAX).ULL
	@occx86@switch_lastcase:RAM.I =   T65(EAX).I
; Line 4504:	            switch_mode = swm_compact; 

	@occx86@switch_mode:RAM.I =   #2.I
; Line 4505:	            --switch_case_count; 

	T66(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	T67(EDX:EAX).LL = T66(EDX:EAX).LL - #1.LL
	@occx86@switch_case_count:RAM.LL =   T67(EDX:EAX).LL
; Line 4506:	            break; 

	GOTO	L_6275:PC
	BLOCK END
	BLOCK 59
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_6313:
	DBG BLOCK START
; Line 4507:	        case swm_tree: 
; Line 4508:	            liveQualify(switch_apl, switch_apl, switch_aph); 

; Line 4508:	            liveQualify(switch_apl, switch_apl, switch_aph); 

	T68(EAX).A =   @occx86@switch_aph:RAM.A
	PARM	T68(EAX).A
	T69(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T69(EAX).A
	T70(EAX).A =   @occx86@switch_apl:RAM.A
	PARM	T70(EAX).A
	TAG
	GOSUB	#@occx86@liveQualify$qp5amodepn0pn0:PC.UI
	PARMADJ	#C.N
; Line 4509:	            switchTreeCases[switchTreePos] = swcase; 

	T71(EBX:ESI).LL =   _swcase:LINK(-8).ULL
	T72(ECX).A =   @occx86@switchTreeCases:RAM.A
	T73(EAX).I =   @occx86@switchTreePos:RAM.I
	*(T72(ECX) + T73(EAX) * 8).A.LL =   T71(EBX:ESI).LL
; Line 4510:	            switchTreeLabels[switchTreePos++] = lab; 

	T74(EDX).I =   _lab:LINK(-12).I
	T75(ECX).A =   @occx86@switchTreeLabels:RAM.A
	T76(EAX).I =   @occx86@switchTreePos:RAM.I
	*(T75(ECX) + T76(EAX) * 4).A.I =   T74(EDX).I
	@occx86@switchTreePos:RAM.I = @occx86@switchTreePos:RAM.I + #1.C
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_6316:
; Line 4512:	            if (--switch_case_count == 0) 

	T77(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	T78(EDX:EAX).LL = T77(EDX:EAX).LL - #1.LL
	@occx86@switch_case_count:RAM.LL =   T78(EDX:EAX).LL
	T79(EDX:EAX).LL =   @occx86@switch_case_count:RAM.LL
	CONDGO	L_6315:PC ; T79(EDX:EAX).LL != #0.LL
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_6317:
; Line 4513:	                bingen(0, switch_case_max / 2, switch_case_max); 

	T80(EAX).I =   @occx86@switch_case_max:RAM.LL
	PARM	T80(EAX).I
	T82(EDX:EAX).LL =   @occx86@switch_case_max:RAM.LL
	PARM	#2.LL
	PARM	T82(EDX:EAX).LL
	GOSUB	#__LXDIVS:PC.N
	PARMADJ	#0.N
	T83(EDX:EAX).LL =   RV.T5(EDX:EAX).LL
	T84(EAX).I =   T83(EDX:EAX).LL
	PARM	T84(EAX).I
	T85(EAX).UI =   #0.C
	PARM	T85(EAX).UI
	TAG
	GOSUB	#@occx86@bingen$qiii:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 64

L_6318:
	DBG BLOCK END
	BLOCK END
	BLOCK 65

L_6315:
	BLOCK END
	BLOCK 66

L_6319:
	DBG BLOCK END
; Line 4515:	            break; 

	BLOCK END
	BLOCK 67

L_6320:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_6275:
	BLOCK END
	BLOCK 69

L_6321:
	DBG BLOCK END
; Line 4517:	} 

	BLOCK END
	BLOCK 70

L_6322:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_6259:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_dc$qp15@Optimizer@quad


global @occx86@asm_dc$qp15@Optimizer@quad
@occx86@asm_dc$qp15@Optimizer@quad:
; Line 4518:	void asm_dc(Optimizer::QUAD* q)   { (void)q; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6328:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6330:
	BLOCK END
	BLOCK 4

L_6331:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6329:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_assnblock$qp15@Optimizer@quad


global @occx86@asm_assnblock$qp15@Optimizer@quad
@occx86@asm_assnblock$qp15@Optimizer@quad:
; Line 4520:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#40.UI
	BLOCK END
	BLOCK 2

L_6336:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6338:
; Line 4521:	    int n = q->ans->offset->i; 

	VAR START	n
	T22(EAX).A =   _q:LINK(4).A
	T23(EAX).A =   *(T22(EAX) + 40).A.A
	T24(EAX).A =   *(T23(EAX) + 4).A.A
	T25(EAX).I =   *(T24(EAX) + 8).A.LL
	_n:LINK(-4).I =   T25(EAX).I
	VAR START	apl
; Line 4522:	    AMODE *apl = nullptr, *aph = nullptr, *apal = nullptr, *apah = nullptr; 

	T26(EAX).A =   #0.UI
	_apl:LINK(-8).A =   T26(EAX).A
	VAR START	aph
	T27(EAX).A =   #0.UI
	_aph:LINK(-12).A =   T27(EAX).A
	VAR START	apal
	T28(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T28(EAX).A
	VAR START	apah
	T29(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T29(EAX).A
	VAR START	op
	VAR START	opa
	VAR START	ofs
	VAR START	ofsa
; Line 4524:	    Optimizer::SimpleExpression *ofs, *ofsa; 

	T30(EAX).A =   #_aph:LINK(-12).A
	PARM	T30(EAX).A
	T31(EAX).A =   #_apl:LINK(-8).A
	PARM	T31(EAX).A
	T32(EAX).A =   _q:LINK(4).A
	T33(EAX).A =   *(T32(EAX) + 8+0).A.A
	PARM	T33(EAX).A
	T34(EAX).A =   #_op:LINK(-24).A
	PARM	T34(EAX).A
	T35(EAX).A =   _q:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 4527:	    getAmodes(q, &opa, q->dc.left, &apal, &apah); 

	T36(EAX).A =   #_apah:LINK(-20).A
	PARM	T36(EAX).A
	T37(EAX).A =   #_apal:LINK(-16).A
	PARM	T37(EAX).A
	T38(EAX).A =   _q:LINK(4).A
	T39(EAX).A =   *(T38(EAX) + 4+0).A.A
	PARM	T39(EAX).A
	T40(EAX).A =   #_opa:LINK(-28).A
	PARM	T40(EAX).A
	T41(EAX).A =   _q:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 4529:	    ofs = apl->offset; 

	T42(EAX).A =   _apl:LINK(-8).A
	T43(EAX).A =   *(T42(EAX) + C).A.A
	_ofs:LINK(-32).A =   T43(EAX).A
; Line 4530:	    ofsa = apal->offset; 

	T44(EAX).A =   _apal:LINK(-16).A
	T45(EAX).A =   *(T44(EAX) + C).A.A
	_ofsa:LINK(-36).A =   T45(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_6340:
; Line 4531:	    if (q->dc.right->mode == Optimizer::i_immed) 

	T46(EAX).A =   _q:LINK(4).A
	T47(EAX).A =   *(T46(EAX) + 8+0).A.A
	T48(EAX).I =   *(T47(EAX) + 0).A.I
	CONDGO	L_6339:PC ; T48(EAX).I != #1.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_6341:
; Line 4532:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_6342:
; Line 4533:	        op = op_lea; 

	_op:LINK(-24).I =   #106.I
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_6344:
; Line 4534:	        if (ofs->type == Optimizer::se_auto) 

	T49(EAX).A =   _ofs:LINK(-32).A
	T50(EAX).I =   *(T49(EAX) + 0).A.I
	CONDGO	L_6343:PC ; T50(EAX).I != #B.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_6345:
; Line 4535:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_6346:
; Line 4536:	            if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_6348:
	T51(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_6347:PC ; T51(EAX).I == #0.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_6349:
; Line 4537:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_6350:
; Line 4538:	                apl->preg = ESP; 

	T52(EAX).A =   _apl:LINK(-8).A
	*(T52(EAX) + 4).A.C =   #4.C
; Line 4539:	            } 

	BLOCK END
	BLOCK 16

L_6351:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_6353:
	DBG BLOCK END
	GOTO	L_6352:PC
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_6354:
	BLOCK END
	BLOCK 20

L_6347:
; Line 4540:	            else 

; Line 4541:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_6355:
; Line 4542:	                apl->preg = EBP; 

	T53(EAX).A =   _apl:LINK(-8).A
	*(T53(EAX) + 4).A.C =   #5.C
; Line 4543:	            } 

	BLOCK END
	BLOCK 22

L_6356:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_6357:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_6352:
	BLOCK END
	BLOCK 25

L_6358:
	DBG BLOCK END
; Line 4544:	            apl->mode = am_indisp; 

	T54(EAX).A =   _apl:LINK(-8).A
	*(T54(EAX) + 0).A.I =   #C.I
; Line 4545:	        } 

	BLOCK END
	BLOCK 26

L_6359:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_6361:
	DBG BLOCK END
	GOTO	L_6360:PC
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_6362:
	BLOCK END
	BLOCK 30

L_6343:
; Line 4546:	        else 

; Line 4547:	            apl->mode = am_direct; 

	T55(EAX).A =   _apl:LINK(-8).A
	*(T55(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 31

L_6363:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_6360:
	BLOCK END
	BLOCK 33

L_6364:
	DBG BLOCK END
; Line 4548:	    } 

	BLOCK END
	BLOCK 34

L_6365:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_6366:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_6339:
	BLOCK END
	BLOCK 37

L_6367:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_6369:
; Line 4549:	    if (q->dc.left->mode == Optimizer::i_immed) 

	T56(EAX).A =   _q:LINK(4).A
	T57(EAX).A =   *(T56(EAX) + 4+0).A.A
	T58(EAX).I =   *(T57(EAX) + 0).A.I
	CONDGO	L_6368:PC ; T58(EAX).I != #1.C
	BLOCK END
	BLOCK 39
	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_6370:
; Line 4550:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_6371:
; Line 4551:	        opa = op_lea; 

	_opa:LINK(-28).I =   #106.I
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_6373:
; Line 4552:	        if (ofsa->type == Optimizer::se_auto) 

	T59(EAX).A =   _ofsa:LINK(-36).A
	T60(EAX).I =   *(T59(EAX) + 0).A.I
	CONDGO	L_6372:PC ; T60(EAX).I != #B.C
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_6374:
; Line 4553:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_6375:
; Line 4554:	            if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_6377:
	T61(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_6376:PC ; T61(EAX).I == #0.C
	BLOCK END
	BLOCK 47
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_6378:
; Line 4555:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_6379:
; Line 4556:	                apal->preg = ESP; 

	T62(EAX).A =   _apal:LINK(-16).A
	*(T62(EAX) + 4).A.C =   #4.C
; Line 4557:	            } 

	BLOCK END
	BLOCK 50

L_6380:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_6382:
	DBG BLOCK END
	GOTO	L_6381:PC
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_6383:
	BLOCK END
	BLOCK 54

L_6376:
; Line 4558:	            else 

; Line 4559:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_6384:
; Line 4560:	                apal->preg = EBP; 

	T63(EAX).A =   _apal:LINK(-16).A
	*(T63(EAX) + 4).A.C =   #5.C
; Line 4561:	            } 

	BLOCK END
	BLOCK 56

L_6385:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_6386:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_6381:
	BLOCK END
	BLOCK 59

L_6387:
	DBG BLOCK END
; Line 4562:	            apal->mode = am_indisp; 

	T64(EAX).A =   _apal:LINK(-16).A
	*(T64(EAX) + 0).A.I =   #C.I
; Line 4563:	        } 

	BLOCK END
	BLOCK 60

L_6388:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_6390:
	DBG BLOCK END
	GOTO	L_6389:PC
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_6391:
	BLOCK END
	BLOCK 64

L_6372:
; Line 4564:	        else 

; Line 4565:	            apal->mode = am_direct; 

	T65(EAX).A =   _apal:LINK(-16).A
	*(T65(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 65

L_6392:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_6389:
	BLOCK END
	BLOCK 67

L_6393:
	DBG BLOCK END
; Line 4566:	    } 

	BLOCK END
	BLOCK 68

L_6394:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_6395:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_6368:
	BLOCK END
	BLOCK 71

L_6396:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_6398:
; Line 4568:	    if (n <= 24 && (q->dc.right->mode == Optimizer::i_immed || apl->mode == am_dreg) && 
; Line 4569:	        (q->dc.left->mode == Optimizer::i_immed || apal->mode == am_dreg)) 

; Line 4569:	        (q->dc.left->mode == Optimizer::i_immed || apal->mode == am_dreg)) 

	T66(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6397:PC ; T66(EAX).I S> #18.I
	BLOCK END
	BLOCK 73
	T67(EAX).A =   _q:LINK(4).A
	T68(EAX).A =   *(T67(EAX) + 8+0).A.A
	T69(EAX).I =   *(T68(EAX) + 0).A.I
	CONDGO	L_6544:PC ; T69(EAX).I == #1.C
	BLOCK END
	BLOCK 74
	T70(EAX).A =   _apl:LINK(-8).A
	T71(EAX).I =   *(T70(EAX) + 0).A.I
	CONDGO	L_6397:PC ; T71(EAX).I != #2.I
	BLOCK END
	BLOCK 75

L_6544:
	T72(EAX).A =   _q:LINK(4).A
	T73(EAX).A =   *(T72(EAX) + 4+0).A.A
	T74(EAX).I =   *(T73(EAX) + 0).A.I
	CONDGO	L_6545:PC ; T74(EAX).I == #1.C
	BLOCK END
	BLOCK 76
	T75(EAX).A =   _apal:LINK(-16).A
	T76(EAX).I =   *(T75(EAX) + 0).A.I
	CONDGO	L_6397:PC ; T76(EAX).I != #2.I
	BLOCK END
	BLOCK 77

L_6545:
	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_6399:
; Line 4570:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_6400:
; Line 4571:	        AMODE* ax; 

	VAR START	ax
	VAR START	reg
; Line 4572:	        int reg = -1; 

	_reg:LINK(-56).I =   #FFFFFFFFFFFFFFFF.I
	VAR START	i
	VAR START	push
; Line 4573:	        int i; 
; Line 4574:	        int push = false; 

; Line 4574:	        int push = false; 

	T77(EAX).I =   #0.C
	_push:LINK(-64).I =   T77(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_6402:
; Line 4575:	        if (apl->mode == am_dreg) 

	T78(EAX).A =   _apl:LINK(-8).A
	T79(EAX).I =   *(T78(EAX) + 0).A.I
	CONDGO	L_6401:PC ; T79(EAX).I != #2.I
	BLOCK END
	BLOCK 81
	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_6403:
; Line 4576:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_6404:
; Line 4577:	            apl->mode = am_indisp; 

	T80(EAX).A =   _apl:LINK(-8).A
	*(T80(EAX) + 0).A.I =   #C.I
; Line 4578:	            ofs = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T81(EDX:EAX).ULL =   #0.C
	PARM	T81(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T82(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	_ofs:LINK(-32).A =   T82(EAX).A
; Line 4579:	        } 

	BLOCK END
	BLOCK 84

L_6405:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_6406:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_6401:
	BLOCK END
	BLOCK 87

L_6407:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_6409:
; Line 4580:	        if (apal->mode == am_dreg) 

	T83(EAX).A =   _apal:LINK(-16).A
	T84(EAX).I =   *(T83(EAX) + 0).A.I
	CONDGO	L_6408:PC ; T84(EAX).I != #2.I
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_6410:
; Line 4581:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_6411:
; Line 4582:	            apal->mode = am_indisp; 

	T85(EAX).A =   _apal:LINK(-16).A
	*(T85(EAX) + 0).A.I =   #C.I
; Line 4583:	            ofsa = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T86(EDX:EAX).ULL =   #0.C
	PARM	T86(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T87(EAX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	_ofsa:LINK(-36).A =   T87(EAX).A
; Line 4584:	        } 

	BLOCK END
	BLOCK 92

L_6412:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_6413:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_6408:
	BLOCK END
	BLOCK 95

L_6414:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_6419:
; Line 4585:	        for (i = 0; i < 4; i++) 

	T88(EAX).I =   #0.C
	_i:LINK(-60).I =   T88(EAX).I
	GOTO	L_6416:PC
	BLOCK END
	BLOCK 97

L_6415:
	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_6420:
; Line 4586:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_6421:
; Line 4587:	            if (Optimizer::chosenAssembler->arch->regMap[i][0] < 3 && !(q->liveRegs & ((unsigned long long)1 << i))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_6423:
	T90(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T91(EAX).A =   *(T90(EAX) + 44).A.A
	T92(ECX).A =   *(T91(EAX) + 58).A.A
	T93(EAX).I =   _i:LINK(-60).I
	T94(EAX).I =   *(T92(ECX) + T93(EAX) * 8).A.I
	CONDGO	L_6422:PC ; T94(EAX).I S>= #3.C
	BLOCK END
	BLOCK 101
	T95(EAX).A =   _q:LINK(4).A
	T96(EBX:ESI).ULL =   *(T95(EAX) + 48).A.ULL
	T98(EAX).I =   _i:LINK(-60).I
	PARM	T98(EAX).I
	PARM	#1.ULL
	GOSUB	#__LXSHL:PC.N
	PARMADJ	#0.N
	T99(EDX:EAX).ULL =   RV.T21(EDX:EAX).ULL
	T100(EDX:EAX).ULL = T96(EBX:ESI).ULL & T99(EDX:EAX).ULL
	CONDGO	L_6422:PC ; T100(EDX:EAX).ULL != #0.ULL
	BLOCK END
	BLOCK 102
	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_6424:
; Line 4588:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_6425:
; Line 4589:	                if ((apl->mode != am_indisp || apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0]) && 

	DBG BLOCK START
	BLOCK END
	BLOCK 105

L_6427:
; Line 4590:	                    (apl->mode != am_indispscale || (apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0] && 
; Line 4595:	                { 

	T101(EAX).A =   _apl:LINK(-8).A
	T102(EAX).I =   *(T101(EAX) + 0).A.I
	CONDGO	L_6546:PC ; T102(EAX).I != #C.I
	BLOCK END
	BLOCK 106
	T103(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T104(EAX).A =   *(T103(EAX) + 44).A.A
	T105(ECX).A =   *(T104(EAX) + 58).A.A
	T106(EAX).I =   _i:LINK(-60).I
	T107(ECX).I =   *(T105(ECX) + T106(EAX) * 8).A.I
	T108(EAX).A =   _apl:LINK(-8).A
	T109(EAX).I =   *(T108(EAX) + 4).A.C
	CONDGO	L_6426:PC ; T109(EAX).I == T107(ECX).I
	BLOCK END
	BLOCK 107

L_6546:
	T110(EAX).A =   _apl:LINK(-8).A
	T111(EAX).I =   *(T110(EAX) + 0).A.I
	CONDGO	L_6547:PC ; T111(EAX).I != #D.I
	BLOCK END
	BLOCK 108
	T112(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T113(EAX).A =   *(T112(EAX) + 44).A.A
	T114(ECX).A =   *(T113(EAX) + 58).A.A
	T115(EAX).I =   _i:LINK(-60).I
	T116(ECX).I =   *(T114(ECX) + T115(EAX) * 8).A.I
	T117(EAX).A =   _apl:LINK(-8).A
	T118(EAX).I =   *(T117(EAX) + 4).A.C
	CONDGO	L_6426:PC ; T118(EAX).I == T116(ECX).I
	BLOCK END
	BLOCK 109
	T119(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T120(EAX).A =   *(T119(EAX) + 44).A.A
	T121(ECX).A =   *(T120(EAX) + 58).A.A
	T122(EAX).I =   _i:LINK(-60).I
	T123(ECX).I =   *(T121(ECX) + T122(EAX) * 8).A.I
	T124(EAX).A =   _apl:LINK(-8).A
	T125(EAX).I =   *(T124(EAX) + 5).A.C
	CONDGO	L_6426:PC ; T125(EAX).I == T123(ECX).I
	BLOCK END
	BLOCK 110

L_6547:
	T126(EAX).A =   _apal:LINK(-16).A
	T127(EAX).I =   *(T126(EAX) + 0).A.I
	CONDGO	L_6548:PC ; T127(EAX).I != #C.I
	BLOCK END
	BLOCK 111
	T128(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T129(EAX).A =   *(T128(EAX) + 44).A.A
	T130(ECX).A =   *(T129(EAX) + 58).A.A
	T131(EAX).I =   _i:LINK(-60).I
	T132(ECX).I =   *(T130(ECX) + T131(EAX) * 8).A.I
	T133(EAX).A =   _apal:LINK(-16).A
	T134(EAX).I =   *(T133(EAX) + 4).A.C
	CONDGO	L_6426:PC ; T134(EAX).I == T132(ECX).I
	BLOCK END
	BLOCK 112

L_6548:
	T135(EAX).A =   _apal:LINK(-16).A
	T136(EAX).I =   *(T135(EAX) + 0).A.I
	CONDGO	L_6549:PC ; T136(EAX).I != #D.I
	BLOCK END
	BLOCK 113
	T137(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T138(EAX).A =   *(T137(EAX) + 44).A.A
	T139(ECX).A =   *(T138(EAX) + 58).A.A
	T140(EAX).I =   _i:LINK(-60).I
	T141(ECX).I =   *(T139(ECX) + T140(EAX) * 8).A.I
	T142(EAX).A =   _apal:LINK(-16).A
	T143(EAX).I =   *(T142(EAX) + 4).A.C
	CONDGO	L_6426:PC ; T143(EAX).I == T141(ECX).I
	BLOCK END
	BLOCK 114
	T144(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T145(EAX).A =   *(T144(EAX) + 44).A.A
	T146(ECX).A =   *(T145(EAX) + 58).A.A
	T147(EAX).I =   _i:LINK(-60).I
	T148(ECX).I =   *(T146(ECX) + T147(EAX) * 8).A.I
	T149(EAX).A =   _apal:LINK(-16).A
	T150(EAX).I =   *(T149(EAX) + 5).A.C
	CONDGO	L_6426:PC ; T150(EAX).I == T148(ECX).I
	BLOCK END
	BLOCK 115

L_6549:
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_6428:
; Line 4594:	                                                      apal->sreg != Optimizer::chosenAssembler->arch->regMap[i][0]))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_6429:
; Line 4596:	                    reg = Optimizer::chosenAssembler->arch->regMap[i][0]; 

	T151(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T152(EAX).A =   *(T151(EAX) + 44).A.A
	T153(ECX).A =   *(T152(EAX) + 58).A.A
	T154(EAX).I =   _i:LINK(-60).I
	T155(EAX).I =   *(T153(ECX) + T154(EAX) * 8).A.I
	_reg:LINK(-56).I =   T155(EAX).I
; Line 4597:	                    break; 

	GOTO	L_6417:PC
	BLOCK END
	BLOCK 118

L_6430:
	DBG BLOCK END
	BLOCK END
	BLOCK 119

L_6431:
	DBG BLOCK END
	BLOCK END
	BLOCK 120

L_6426:
	BLOCK END
	BLOCK 121

L_6432:
	DBG BLOCK END
; Line 4599:	            } 

	BLOCK END
	BLOCK 122

L_6433:
	DBG BLOCK END
	BLOCK END
	BLOCK 123

L_6434:
	DBG BLOCK END
	BLOCK END
	BLOCK 124

L_6422:
	BLOCK END
	BLOCK 125

L_6435:
	DBG BLOCK END
; Line 4600:	        } 

	BLOCK END
	BLOCK 126

L_6436:
	DBG BLOCK END
	BLOCK END
	BLOCK 127

L_6437:
	DBG BLOCK END
	BLOCK END
	BLOCK 128

L_6418:
	_i:LINK(-60).I = _i:LINK(-60).I + #1.C
	BLOCK END
	BLOCK 129

L_6416:
	T89(EAX).I =   _i:LINK(-60).I
	CONDGO	L_6415:PC ; T89(EAX).I S< #4.I
	BLOCK END
	BLOCK 130

L_6417:
	BLOCK END
	BLOCK 131

L_6438:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 132

L_6440:
; Line 4601:	        if (reg == -1) 

	T156(EAX).I =   _reg:LINK(-56).I
	CONDGO	L_6439:PC ; T156(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 133
	DBG BLOCK START
	BLOCK END
	BLOCK 134

L_6441:
; Line 4602:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_6442:
; Line 4603:	            for (i = 0; i < 6; i++) 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_6447:
	T157(EAX).I =   #0.C
	_i:LINK(-60).I =   T157(EAX).I
	GOTO	L_6444:PC
	BLOCK END
	BLOCK 137

L_6443:
	DBG BLOCK START
	BLOCK END
	BLOCK 138

L_6448:
; Line 4604:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 139

L_6449:
; Line 4605:	                if ((apl->mode != am_indisp || apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0]) && 

	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_6451:
; Line 4606:	                    (apal->mode != am_indispscale || (apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0] && 
; Line 4611:	                { 

	T159(EAX).A =   _apl:LINK(-8).A
	T160(EAX).I =   *(T159(EAX) + 0).A.I
	CONDGO	L_6550:PC ; T160(EAX).I != #C.I
	BLOCK END
	BLOCK 141
	T161(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T162(EAX).A =   *(T161(EAX) + 44).A.A
	T163(ECX).A =   *(T162(EAX) + 58).A.A
	T164(EAX).I =   _i:LINK(-60).I
	T165(ECX).I =   *(T163(ECX) + T164(EAX) * 8).A.I
	T166(EAX).A =   _apl:LINK(-8).A
	T167(EAX).I =   *(T166(EAX) + 4).A.C
	CONDGO	L_6450:PC ; T167(EAX).I == T165(ECX).I
	BLOCK END
	BLOCK 142

L_6550:
	T168(EAX).A =   _apal:LINK(-16).A
	T169(EAX).I =   *(T168(EAX) + 0).A.I
	CONDGO	L_6551:PC ; T169(EAX).I != #D.I
	BLOCK END
	BLOCK 143
	T170(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T171(EAX).A =   *(T170(EAX) + 44).A.A
	T172(ECX).A =   *(T171(EAX) + 58).A.A
	T173(EAX).I =   _i:LINK(-60).I
	T174(ECX).I =   *(T172(ECX) + T173(EAX) * 8).A.I
	T175(EAX).A =   _apl:LINK(-8).A
	T176(EAX).I =   *(T175(EAX) + 4).A.C
	CONDGO	L_6450:PC ; T176(EAX).I == T174(ECX).I
	BLOCK END
	BLOCK 144
	T177(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T178(EAX).A =   *(T177(EAX) + 44).A.A
	T179(ECX).A =   *(T178(EAX) + 58).A.A
	T180(EAX).I =   _i:LINK(-60).I
	T181(ECX).I =   *(T179(ECX) + T180(EAX) * 8).A.I
	T182(EAX).A =   _apl:LINK(-8).A
	T183(EAX).I =   *(T182(EAX) + 5).A.C
	CONDGO	L_6450:PC ; T183(EAX).I == T181(ECX).I
	BLOCK END
	BLOCK 145

L_6551:
	T184(EAX).A =   _apal:LINK(-16).A
	T185(EAX).I =   *(T184(EAX) + 0).A.I
	CONDGO	L_6552:PC ; T185(EAX).I != #C.I
	BLOCK END
	BLOCK 146
	T186(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T187(EAX).A =   *(T186(EAX) + 44).A.A
	T188(ECX).A =   *(T187(EAX) + 58).A.A
	T189(EAX).I =   _i:LINK(-60).I
	T190(ECX).I =   *(T188(ECX) + T189(EAX) * 8).A.I
	T191(EAX).A =   _apal:LINK(-16).A
	T192(EAX).I =   *(T191(EAX) + 4).A.C
	CONDGO	L_6450:PC ; T192(EAX).I == T190(ECX).I
	BLOCK END
	BLOCK 147

L_6552:
	T193(EAX).A =   _apal:LINK(-16).A
	T194(EAX).I =   *(T193(EAX) + 0).A.I
	CONDGO	L_6553:PC ; T194(EAX).I != #D.I
	BLOCK END
	BLOCK 148
	T195(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T196(EAX).A =   *(T195(EAX) + 44).A.A
	T197(ECX).A =   *(T196(EAX) + 58).A.A
	T198(EAX).I =   _i:LINK(-60).I
	T199(ECX).I =   *(T197(ECX) + T198(EAX) * 8).A.I
	T200(EAX).A =   _apal:LINK(-16).A
	T201(EAX).I =   *(T200(EAX) + 4).A.C
	CONDGO	L_6450:PC ; T201(EAX).I == T199(ECX).I
	BLOCK END
	BLOCK 149
	T202(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T203(EAX).A =   *(T202(EAX) + 44).A.A
	T204(ECX).A =   *(T203(EAX) + 58).A.A
	T205(EAX).I =   _i:LINK(-60).I
	T206(ECX).I =   *(T204(ECX) + T205(EAX) * 8).A.I
	T207(EAX).A =   _apal:LINK(-16).A
	T208(EAX).I =   *(T207(EAX) + 5).A.C
	CONDGO	L_6450:PC ; T208(EAX).I == T206(ECX).I
	BLOCK END
	BLOCK 150

L_6553:
	DBG BLOCK START
	BLOCK END
	BLOCK 151

L_6452:
; Line 4610:	                                                      apal->sreg != Optimizer::chosenAssembler->arch->regMap[i][0]))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_6453:
; Line 4612:	                    reg = Optimizer::chosenAssembler->arch->regMap[i][0]; 

	T209(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T210(EAX).A =   *(T209(EAX) + 44).A.A
	T211(ECX).A =   *(T210(EAX) + 58).A.A
	T212(EAX).I =   _i:LINK(-60).I
	T213(EAX).I =   *(T211(ECX) + T212(EAX) * 8).A.I
	_reg:LINK(-56).I =   T213(EAX).I
; Line 4613:	                    push = true; 

	T214(EAX).I =   #1.C
	_push:LINK(-64).I =   T214(EAX).I
; Line 4614:	                    break; 

	GOTO	L_6445:PC
	BLOCK END
	BLOCK 153

L_6454:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_6455:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_6450:
	BLOCK END
	BLOCK 156

L_6456:
	DBG BLOCK END
; Line 4616:	            } 

	BLOCK END
	BLOCK 157

L_6457:
	DBG BLOCK END
	BLOCK END
	BLOCK 158

L_6458:
	DBG BLOCK END
	BLOCK END
	BLOCK 159

L_6446:
	_i:LINK(-60).I = _i:LINK(-60).I + #1.C
	BLOCK END
	BLOCK 160

L_6444:
	T158(EAX).I =   _i:LINK(-60).I
	CONDGO	L_6443:PC ; T158(EAX).I S< #6.I
	BLOCK END
	BLOCK 161

L_6445:
	BLOCK END
	BLOCK 162

L_6459:
	DBG BLOCK END
; Line 4617:	        } 

	BLOCK END
	BLOCK 163

L_6460:
	DBG BLOCK END
	BLOCK END
	BLOCK 164

L_6461:
	DBG BLOCK END
	BLOCK END
	BLOCK 165

L_6439:
	BLOCK END
	BLOCK 166

L_6462:
	DBG BLOCK END
; Line 4618:	        ax = makedreg(reg); 

	T215(EAX).I =   _reg:LINK(-56).I
	PARM	T215(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T216(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_ax:LINK(-52).A =   T216(EAX).A
; Line 4619:	        ax->liveRegs = q->liveRegs; 

	T217(EAX).A =   _q:LINK(4).A
	T218(ECX).I =   *(T217(EAX) + 48).A.ULL
	T219(EAX).A =   _ax:LINK(-52).A
	*(T219(EAX) + 10).A.I =   T218(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_6464:
; Line 4620:	        if (push) 

	T220(EAX).I =   _push:LINK(-64).I
	CONDGO	L_6463:PC ; T220(EAX).I == #0.C
	BLOCK END
	BLOCK 168
	DBG BLOCK START
	BLOCK END
	BLOCK 169

L_6465:
; Line 4621:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 170

L_6466:
; Line 4622:	            gen_codes(op_push, ISZ_UINT, ax, 0); 

	T221(EAX).A =   #0.C
	PARM	T221(EAX).A
	T222(EAX).A =   _ax:LINK(-52).A
	PARM	T222(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4623:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 4624:	        } 

	BLOCK END
	BLOCK 171

L_6467:
	DBG BLOCK END
	BLOCK END
	BLOCK 172

L_6468:
	DBG BLOCK END
	BLOCK END
	BLOCK 173

L_6463:
	BLOCK END
	BLOCK 174

L_6469:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_6471:
; Line 4625:	        if (n & 1) 

	T223(EAX).I =   _n:LINK(-4).I
	T224(EAX).I = T223(EAX).I & #1.C
	CONDGO	L_6470:PC ; T224(EAX).I == #0.C
	BLOCK END
	BLOCK 176
	DBG BLOCK START
	BLOCK END
	BLOCK 177

L_6472:
; Line 4626:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_6473:
; Line 4627:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

	T225(EAX).I =   _n:LINK(-4).I
	T226(EAX).I = T225(EAX).I - #1.C
	T227(EDX:EAX).ULL =   T226(EAX).I
	PARM	T227(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T228(EAX).A =   RV.T3(EAX).A
	PARMADJ	#C.N
	PARM	T228(EAX).A
	T229(EAX).A =   _ofs:LINK(-32).A
	PARM	T229(EAX).A
	T230(EAX).UI =   #1.C
	PARM	T230(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T231(ECX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	T232(EAX).A =   _apl:LINK(-8).A
	*(T232(EAX) + C).A.A =   T231(ECX).A
; Line 4628:	            apal->offset = 
; Line 4629:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

; Line 4629:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

	T233(EAX).I =   _n:LINK(-4).I
	T234(EAX).I = T233(EAX).I - #1.C
	T235(EDX:EAX).ULL =   T234(EAX).I
	PARM	T235(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T236(EAX).A =   RV.T5(EAX).A
	PARMADJ	#C.N
	PARM	T236(EAX).A
	T237(EAX).A =   _ofsa:LINK(-36).A
	PARM	T237(EAX).A
	T238(EAX).UI =   #1.C
	PARM	T238(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T239(ECX).A =   RV.T6(EAX).A
	PARMADJ	#C.N
	T240(EAX).A =   _apal:LINK(-16).A
	*(T240(EAX) + C).A.A =   T239(ECX).A
; Line 4630:	            gen_codes(op_mov, ISZ_UCHAR, ax, apl); 

	T241(EAX).A =   _apl:LINK(-8).A
	PARM	T241(EAX).A
	T242(EAX).A =   _ax:LINK(-52).A
	PARM	T242(EAX).A
	T243(EAX).UI =   #3.C
	PARM	T243(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4631:	            gen_codes(op_mov, ISZ_UCHAR, apal, ax); 

	T244(EAX).A =   _ax:LINK(-52).A
	PARM	T244(EAX).A
	T245(EAX).A =   _apal:LINK(-16).A
	PARM	T245(EAX).A
	T246(EAX).UI =   #3.C
	PARM	T246(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4632:	            n--; 

	_n:LINK(-4).I = _n:LINK(-4).I - #1.C
; Line 4633:	        } 

	BLOCK END
	BLOCK 179

L_6474:
	DBG BLOCK END
	BLOCK END
	BLOCK 180

L_6475:
	DBG BLOCK END
	BLOCK END
	BLOCK 181

L_6470:
	BLOCK END
	BLOCK 182

L_6476:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 183

L_6478:
; Line 4634:	        if (n & 2) 

	T247(EAX).I =   _n:LINK(-4).I
	T248(EAX).I = T247(EAX).I & #2.I
	CONDGO	L_6477:PC ; T248(EAX).I == #0.C
	BLOCK END
	BLOCK 184
	DBG BLOCK START
	BLOCK END
	BLOCK 185

L_6479:
; Line 4635:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 186

L_6480:
; Line 4636:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

	T249(EAX).I =   _n:LINK(-4).I
	T250(EAX).I = T249(EAX).I - #2.I
	T251(EDX:EAX).ULL =   T250(EAX).I
	PARM	T251(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T252(EAX).A =   RV.T7(EAX).A
	PARMADJ	#C.N
	PARM	T252(EAX).A
	T253(EAX).A =   _ofs:LINK(-32).A
	PARM	T253(EAX).A
	T254(EAX).UI =   #1.C
	PARM	T254(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T255(ECX).A =   RV.T8(EAX).A
	PARMADJ	#C.N
	T256(EAX).A =   _apl:LINK(-8).A
	*(T256(EAX) + C).A.A =   T255(ECX).A
; Line 4637:	            apal->offset = 
; Line 4638:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

; Line 4638:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

	T257(EAX).I =   _n:LINK(-4).I
	T258(EAX).I = T257(EAX).I - #2.I
	T259(EDX:EAX).ULL =   T258(EAX).I
	PARM	T259(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T260(EAX).A =   RV.T9(EAX).A
	PARMADJ	#C.N
	PARM	T260(EAX).A
	T261(EAX).A =   _ofsa:LINK(-36).A
	PARM	T261(EAX).A
	T262(EAX).UI =   #1.C
	PARM	T262(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T263(ECX).A =   RV.T10(EAX).A
	PARMADJ	#C.N
	T264(EAX).A =   _apal:LINK(-16).A
	*(T264(EAX) + C).A.A =   T263(ECX).A
; Line 4639:	            gen_codes(op_mov, ISZ_USHORT, ax, apl); 

	T265(EAX).A =   _apl:LINK(-8).A
	PARM	T265(EAX).A
	T266(EAX).A =   _ax:LINK(-52).A
	PARM	T266(EAX).A
	PARM	#4.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4640:	            gen_codes(op_mov, ISZ_USHORT, apal, ax); 

	T267(EAX).A =   _ax:LINK(-52).A
	PARM	T267(EAX).A
	T268(EAX).A =   _apal:LINK(-16).A
	PARM	T268(EAX).A
	PARM	#4.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4641:	            n -= 2; 

	_n:LINK(-4).I = _n:LINK(-4).I - #2.I
; Line 4642:	        } 

	BLOCK END
	BLOCK 187

L_6481:
	DBG BLOCK END
	BLOCK END
	BLOCK 188

L_6482:
	DBG BLOCK END
	BLOCK END
	BLOCK 189

L_6477:
	BLOCK END
	BLOCK 190

L_6483:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 191

L_6487:
	GOTO	L_6486:PC
	BLOCK END
	BLOCK 192

L_6484:
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_6488:
; Line 4645:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 194

L_6489:
; Line 4646:	            n -= 4; 

	_n:LINK(-4).I = _n:LINK(-4).I - #4.I
; Line 4647:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n)); 

	T270(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T270(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T271(EAX).A =   RV.T11(EAX).A
	PARMADJ	#C.N
	PARM	T271(EAX).A
	T272(EAX).A =   _ofs:LINK(-32).A
	PARM	T272(EAX).A
	T273(EAX).UI =   #1.C
	PARM	T273(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T274(ECX).A =   RV.T12(EAX).A
	PARMADJ	#C.N
	T275(EAX).A =   _apl:LINK(-8).A
	*(T275(EAX) + C).A.A =   T274(ECX).A
; Line 4648:	            apal->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n)); 

	T276(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T276(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T277(EAX).A =   RV.T13(EAX).A
	PARMADJ	#C.N
	PARM	T277(EAX).A
	T278(EAX).A =   _ofsa:LINK(-36).A
	PARM	T278(EAX).A
	T279(EAX).UI =   #1.C
	PARM	T279(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T280(ECX).A =   RV.T14(EAX).A
	PARMADJ	#C.N
	T281(EAX).A =   _apal:LINK(-16).A
	*(T281(EAX) + C).A.A =   T280(ECX).A
; Line 4649:	            gen_codes(op_mov, ISZ_UINT, ax, apl); 

	T282(EAX).A =   _apl:LINK(-8).A
	PARM	T282(EAX).A
	T283(EAX).A =   _ax:LINK(-52).A
	PARM	T283(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4650:	            gen_codes(op_mov, ISZ_UINT, apal, ax); 

	T284(EAX).A =   _ax:LINK(-52).A
	PARM	T284(EAX).A
	T285(EAX).A =   _apal:LINK(-16).A
	PARM	T285(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4651:	        } 

	BLOCK END
	BLOCK 195

L_6490:
	DBG BLOCK END
	BLOCK END
	BLOCK 196

L_6491:
	DBG BLOCK END
	BLOCK END
	BLOCK 197

L_6486:
; Line 4644:	        while (n > 0) 

	T269(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6484:PC ; T269(EAX).I S> #0.C
	BLOCK END
	BLOCK 198

L_6485:
	BLOCK END
	BLOCK 199

L_6492:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 200

L_6494:
; Line 4652:	        if (push) 

	T286(EAX).I =   _push:LINK(-64).I
	CONDGO	L_6493:PC ; T286(EAX).I == #0.C
	BLOCK END
	BLOCK 201
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_6495:
; Line 4653:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 203

L_6496:
; Line 4654:	            gen_codes(op_pop, ISZ_UINT, ax, 0); 

	T287(EAX).A =   #0.C
	PARM	T287(EAX).A
	T288(EAX).A =   _ax:LINK(-52).A
	PARM	T288(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4655:	            pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 4656:	        } 

	BLOCK END
	BLOCK 204

L_6497:
	DBG BLOCK END
	BLOCK END
	BLOCK 205

L_6498:
	DBG BLOCK END
	BLOCK END
	BLOCK 206

L_6493:
	BLOCK END
	BLOCK 207

L_6499:
	DBG BLOCK END
; Line 4657:	    } 

	BLOCK END
	BLOCK 208

L_6500:
	DBG BLOCK END
	BLOCK END
	BLOCK 209

L_6502:
	DBG BLOCK END
	GOTO	L_6501:PC
	BLOCK END
	BLOCK 210
	DBG BLOCK START
	BLOCK END
	BLOCK 211

L_6503:
	BLOCK END
	BLOCK 212

L_6397:
; Line 4658:	    else 

; Line 4659:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 213

L_6504:
; Line 4660:	        AMODE* cx = makedreg(ECX); 

	VAR START	cx
	T289(EAX).UI =   #1.C
	PARM	T289(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T290(EAX).A =   RV.T15(EAX).A
	PARMADJ	#4.N
	_cx:LINK(-40).A =   T290(EAX).A
	VAR START	di
; Line 4661:	        AMODE* di = makedreg(EDI); 

	PARM	#7.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T291(EAX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	_di:LINK(-44).A =   T291(EAX).A
	VAR START	si
; Line 4662:	        AMODE* si = makedreg(ESI); 

	PARM	#6.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T292(EAX).A =   RV.T17(EAX).A
	PARMADJ	#4.N
	_si:LINK(-48).A =   T292(EAX).A
; Line 4663:	        cx->liveRegs = q->liveRegs; 

	T293(EAX).A =   _q:LINK(4).A
	T294(ECX).I =   *(T293(EAX) + 48).A.ULL
	T295(EAX).A =   _cx:LINK(-40).A
	*(T295(EAX) + 10).A.I =   T294(ECX).I
; Line 4664:	        di->liveRegs = q->liveRegs; 

	T296(EAX).A =   _q:LINK(4).A
	T297(ECX).I =   *(T296(EAX) + 48).A.ULL
	T298(EAX).A =   _di:LINK(-44).A
	*(T298(EAX) + 10).A.I =   T297(ECX).I
; Line 4665:	        si->liveRegs = q->liveRegs; 

	T299(EAX).A =   _q:LINK(4).A
	T300(ECX).I =   *(T299(EAX) + 48).A.ULL
	T301(EAX).A =   _si:LINK(-48).A
	*(T301(EAX) + 10).A.I =   T300(ECX).I
; Line 4666:	        gen_codes(op_push, ISZ_UINT, di, 0); 

	T302(EAX).A =   #0.C
	PARM	T302(EAX).A
	T303(EAX).A =   _di:LINK(-44).A
	PARM	T303(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4667:	        gen_codes(op_push, ISZ_UINT, si, 0); 

	T304(EAX).A =   #0.C
	PARM	T304(EAX).A
	T305(EAX).A =   _si:LINK(-48).A
	PARM	T305(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4668:	        gen_codes(op_push, ISZ_UINT, cx, 0); 

	T306(EAX).A =   #0.C
	PARM	T306(EAX).A
	T307(EAX).A =   _cx:LINK(-40).A
	PARM	T307(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4669:	        pushlevel += 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #C.I
	DBG BLOCK START
	BLOCK END
	BLOCK 214

L_6506:
; Line 4670:	        if (samereg(di, apl)) 

	T308(EAX).A =   _apl:LINK(-8).A
	PARM	T308(EAX).A
	T309(EAX).A =   _di:LINK(-44).A
	PARM	T309(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T310(EAX).I =   RV.T18(EAX).I
	PARMADJ	#8.N
	CONDGO	L_6505:PC ; T310(EAX).I == #0.C
	BLOCK END
	BLOCK 215
	DBG BLOCK START
	BLOCK END
	BLOCK 216

L_6507:
; Line 4671:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 217

L_6508:
; Line 4672:	            if (samereg(si, apal)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 218

L_6510:
	T311(EAX).A =   _apal:LINK(-16).A
	PARM	T311(EAX).A
	T312(EAX).A =   _si:LINK(-48).A
	PARM	T312(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T313(EAX).I =   RV.T19(EAX).I
	PARMADJ	#8.N
	CONDGO	L_6509:PC ; T313(EAX).I == #0.C
	BLOCK END
	BLOCK 219
	DBG BLOCK START
	BLOCK END
	BLOCK 220

L_6511:
; Line 4673:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_6512:
; Line 4674:	                gen_codes(op, ISZ_UINT, cx, apl); 

	T314(EAX).A =   _apl:LINK(-8).A
	PARM	T314(EAX).A
	T315(EAX).A =   _cx:LINK(-40).A
	PARM	T315(EAX).A
	PARM	#7.I
	T316(EAX).I =   _op:LINK(-24).I
	PARM	T316(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4675:	                gen_codes(opa, ISZ_UINT, di, apal); 

	T317(EAX).A =   _apal:LINK(-16).A
	PARM	T317(EAX).A
	T318(EAX).A =   _di:LINK(-44).A
	PARM	T318(EAX).A
	PARM	#7.I
	T319(EAX).I =   _opa:LINK(-28).I
	PARM	T319(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4676:	                gen_codes(op_mov, ISZ_UINT, si, cx); 

	T320(EAX).A =   _cx:LINK(-40).A
	PARM	T320(EAX).A
	T321(EAX).A =   _si:LINK(-48).A
	PARM	T321(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4677:	            } 

	BLOCK END
	BLOCK 222

L_6513:
	DBG BLOCK END
	BLOCK END
	BLOCK 223

L_6515:
	DBG BLOCK END
	GOTO	L_6514:PC
	BLOCK END
	BLOCK 224
	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_6516:
	BLOCK END
	BLOCK 226

L_6509:
; Line 4678:	            else 

; Line 4679:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 227

L_6517:
; Line 4680:	                gen_codes(op, ISZ_UINT, si, apl); 

	T322(EAX).A =   _apl:LINK(-8).A
	PARM	T322(EAX).A
	T323(EAX).A =   _si:LINK(-48).A
	PARM	T323(EAX).A
	PARM	#7.I
	T324(EAX).I =   _op:LINK(-24).I
	PARM	T324(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4681:	                gen_codes(opa, ISZ_UINT, di, apal); 

	T325(EAX).A =   _apal:LINK(-16).A
	PARM	T325(EAX).A
	T326(EAX).A =   _di:LINK(-44).A
	PARM	T326(EAX).A
	PARM	#7.I
	T327(EAX).I =   _opa:LINK(-28).I
	PARM	T327(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4682:	            } 

	BLOCK END
	BLOCK 228

L_6518:
	DBG BLOCK END
	BLOCK END
	BLOCK 229

L_6519:
	DBG BLOCK END
	BLOCK END
	BLOCK 230

L_6514:
	BLOCK END
	BLOCK 231

L_6520:
	DBG BLOCK END
; Line 4683:	        } 

	BLOCK END
	BLOCK 232

L_6521:
	DBG BLOCK END
	BLOCK END
	BLOCK 233

L_6523:
	DBG BLOCK END
	GOTO	L_6522:PC
	BLOCK END
	BLOCK 234
	DBG BLOCK START
	BLOCK END
	BLOCK 235

L_6524:
	BLOCK END
	BLOCK 236

L_6505:
; Line 4684:	        else 

; Line 4685:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 237

L_6525:
; Line 4686:	            gen_codes(opa, ISZ_UINT, di, apal); 

	T328(EAX).A =   _apal:LINK(-16).A
	PARM	T328(EAX).A
	T329(EAX).A =   _di:LINK(-44).A
	PARM	T329(EAX).A
	PARM	#7.I
	T330(EAX).I =   _opa:LINK(-28).I
	PARM	T330(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4687:	            gen_codes(op, ISZ_UINT, si, apl); 

	T331(EAX).A =   _apl:LINK(-8).A
	PARM	T331(EAX).A
	T332(EAX).A =   _si:LINK(-48).A
	PARM	T332(EAX).A
	PARM	#7.I
	T333(EAX).I =   _op:LINK(-24).I
	PARM	T333(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4688:	        } 

	BLOCK END
	BLOCK 238

L_6526:
	DBG BLOCK END
	BLOCK END
	BLOCK 239

L_6527:
	DBG BLOCK END
	BLOCK END
	BLOCK 240

L_6522:
	BLOCK END
	BLOCK 241

L_6528:
	DBG BLOCK END
; Line 4689:	        gen_codes(op_mov, ISZ_UINT, cx, aimmed(n / 4)); 

	T334(ECX).I =   _n:LINK(-4).I
	T335(EAX).I = T334(ECX).I S>> #1.UI
	T336(EAX).I = T335(EAX).I U>> #1E.UI
	T337(EAX).I = T336(EAX).I + T334(ECX).I
	T338(EAX).I = T337(EAX).I S>> #2.UI
	T339(EDX:EAX).ULL =   T338(EAX).I
	PARM	T339(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T340(EAX).A =   RV.T20(EAX).A
	PARMADJ	#8.N
	PARM	T340(EAX).A
	T341(EAX).A =   _cx:LINK(-40).A
	PARM	T341(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4690:	        gen_code(op_cld, 0, 0); 

	T342(EAX).A =   #0.C
	PARM	T342(EAX).A
	T343(EAX).A =   #0.C
	PARM	T343(EAX).A
	PARM	#35.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4691:	        gen_code(op_rep, 0, 0); 

	T344(EAX).A =   #0.C
	PARM	T344(EAX).A
	T345(EAX).A =   #0.C
	PARM	T345(EAX).A
	PARM	#272.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4692:	        gen_code(op_movsd, 0, 0); 

	T346(EAX).A =   #0.C
	PARM	T346(EAX).A
	T347(EAX).A =   #0.C
	PARM	T347(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 242

L_6530:
; Line 4693:	        if (n & 2) 

	T348(EAX).I =   _n:LINK(-4).I
	T349(EAX).I = T348(EAX).I & #2.I
	CONDGO	L_6529:PC ; T349(EAX).I == #0.C
	BLOCK END
	BLOCK 243
	DBG BLOCK START
	BLOCK END
	BLOCK 244

L_6531:
; Line 4694:	            gen_code(op_movsw, 0, 0); 

	T350(EAX).A =   #0.C
	PARM	T350(EAX).A
	T351(EAX).A =   #0.C
	PARM	T351(EAX).A
	PARM	#121.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 245

L_6532:
	DBG BLOCK END
	BLOCK END
	BLOCK 246

L_6529:
	BLOCK END
	BLOCK 247

L_6533:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 248

L_6535:
; Line 4695:	        if (n & 1) 

	T352(EAX).I =   _n:LINK(-4).I
	T353(EAX).I = T352(EAX).I & #1.C
	CONDGO	L_6534:PC ; T353(EAX).I == #0.C
	BLOCK END
	BLOCK 249
	DBG BLOCK START
	BLOCK END
	BLOCK 250

L_6536:
; Line 4696:	            gen_code(op_movsb, 0, 0); 

	T354(EAX).A =   #0.C
	PARM	T354(EAX).A
	T355(EAX).A =   #0.C
	PARM	T355(EAX).A
	PARM	#120.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 251

L_6537:
	DBG BLOCK END
	BLOCK END
	BLOCK 252

L_6534:
	BLOCK END
	BLOCK 253

L_6538:
	DBG BLOCK END
; Line 4697:	        gen_codes(op_pop, ISZ_UINT, cx, 0); 

	T356(EAX).A =   #0.C
	PARM	T356(EAX).A
	T357(EAX).A =   _cx:LINK(-40).A
	PARM	T357(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4698:	        gen_codes(op_pop, ISZ_UINT, si, 0); 

	T358(EAX).A =   #0.C
	PARM	T358(EAX).A
	T359(EAX).A =   _si:LINK(-48).A
	PARM	T359(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4699:	        gen_codes(op_pop, ISZ_UINT, di, 0); 

	T360(EAX).A =   #0.C
	PARM	T360(EAX).A
	T361(EAX).A =   _di:LINK(-44).A
	PARM	T361(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4700:	        pushlevel -= 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #C.I
; Line 4701:	    } 

	BLOCK END
	BLOCK 254

L_6539:
	DBG BLOCK END
	BLOCK END
	BLOCK 255

L_6540:
	DBG BLOCK END
	BLOCK END
	BLOCK 256

L_6501:
	BLOCK END
	BLOCK 257

L_6541:
	DBG BLOCK END
; Line 4702:	} 

	BLOCK END
	BLOCK 258

L_6542:
	DBG BLOCK END
	BLOCK END
	BLOCK 259

L_6337:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_clrblock$qp15@Optimizer@quad


global @occx86@asm_clrblock$qp15@Optimizer@quad
@occx86@asm_clrblock$qp15@Optimizer@quad:
; Line 4704:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#2C.UI
	BLOCK END
	BLOCK 2

L_6557:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6559:
; Line 4705:	    int n = q->dc.right->offset->i; 

	VAR START	n
	T15(EAX).A =   _q:LINK(4).A
	T16(EAX).A =   *(T15(EAX) + 8+0).A.A
	T17(EAX).A =   *(T16(EAX) + 4).A.A
	T18(EAX).I =   *(T17(EAX) + 8).A.LL
	_n:LINK(-4).I =   T18(EAX).I
	VAR START	apl
; Line 4706:	    AMODE *apl = nullptr, *aph = nullptr; 

	T19(EAX).A =   #0.UI
	_apl:LINK(-8).A =   T19(EAX).A
	VAR START	aph
	T20(EAX).A =   #0.UI
	_aph:LINK(-12).A =   T20(EAX).A
	VAR START	aprl
; Line 4707:	    AMODE *aprl = nullptr, *aprh = nullptr; 

	T21(EAX).A =   #0.UI
	_aprl:LINK(-16).A =   T21(EAX).A
	VAR START	aprh
	T22(EAX).A =   #0.UI
	_aprh:LINK(-20).A =   T22(EAX).A
	VAR START	op
	VAR START	opr
	VAR START	ofs
; Line 4709:	    Optimizer::SimpleExpression* ofs; 

	T23(EAX).A =   #_aprh:LINK(-20).A
	PARM	T23(EAX).A
	T24(EAX).A =   #_aprl:LINK(-16).A
	PARM	T24(EAX).A
	T25(EAX).A =   _q:LINK(4).A
	T26(EAX).A =   *(T25(EAX) + 8+0).A.A
	PARM	T26(EAX).A
	T27(EAX).A =   #_opr:LINK(-28).A
	PARM	T27(EAX).A
	T28(EAX).A =   _q:LINK(4).A
	PARM	T28(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 4712:	    getAmodes(q, &op, q->dc.left, &apl, &aph); 

	T29(EAX).A =   #_aph:LINK(-12).A
	PARM	T29(EAX).A
	T30(EAX).A =   #_apl:LINK(-8).A
	PARM	T30(EAX).A
	T31(EAX).A =   _q:LINK(4).A
	T32(EAX).A =   *(T31(EAX) + 4+0).A.A
	PARM	T32(EAX).A
	T33(EAX).A =   #_op:LINK(-24).A
	PARM	T33(EAX).A
	T34(EAX).A =   _q:LINK(4).A
	PARM	T34(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_6561:
; Line 4713:	    if (q->dc.right->mode != Optimizer::i_immed) 

	T35(EAX).A =   _q:LINK(4).A
	T36(EAX).A =   *(T35(EAX) + 8+0).A.A
	T37(EAX).I =   *(T36(EAX) + 0).A.I
	CONDGO	L_6560:PC ; T37(EAX).I == #1.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_6562:
; Line 4714:	        n = INT_MAX; 

	_n:LINK(-4).I =   #7FFFFFFF.I
	BLOCK END
	BLOCK 7

L_6563:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_6560:
	BLOCK END
	BLOCK 9

L_6564:
	DBG BLOCK END
; Line 4716:	    ofs = apl->offset; 

	T38(EAX).A =   _apl:LINK(-8).A
	T39(EAX).A =   *(T38(EAX) + C).A.A
	_ofs:LINK(-32).A =   T39(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_6566:
; Line 4717:	    if (q->dc.left->mode == Optimizer::i_immed) 

	T40(EAX).A =   _q:LINK(4).A
	T41(EAX).A =   *(T40(EAX) + 4+0).A.A
	T42(EAX).I =   *(T41(EAX) + 0).A.I
	CONDGO	L_6565:PC ; T42(EAX).I != #1.C
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_6567:
; Line 4718:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_6568:
; Line 4719:	        op = op_lea; 

	_op:LINK(-24).I =   #106.I
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_6570:
; Line 4720:	        if (ofs->type == Optimizer::se_auto) 

	T43(EAX).A =   _ofs:LINK(-32).A
	T44(EAX).I =   *(T43(EAX) + 0).A.I
	CONDGO	L_6569:PC ; T44(EAX).I != #B.C
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_6571:
; Line 4721:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_6572:
; Line 4722:	            if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_6574:
	T45(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_6573:PC ; T45(EAX).I == #0.C
	BLOCK END
	BLOCK 19
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_6575:
; Line 4723:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_6576:
; Line 4724:	                apl->preg = ESP; 

	T46(EAX).A =   _apl:LINK(-8).A
	*(T46(EAX) + 4).A.C =   #4.C
; Line 4725:	            } 

	BLOCK END
	BLOCK 22

L_6577:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_6579:
	DBG BLOCK END
	GOTO	L_6578:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_6580:
	BLOCK END
	BLOCK 26

L_6573:
; Line 4726:	            else 

; Line 4727:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_6581:
; Line 4728:	                apl->preg = EBP; 

	T47(EAX).A =   _apl:LINK(-8).A
	*(T47(EAX) + 4).A.C =   #5.C
; Line 4729:	            } 

	BLOCK END
	BLOCK 28

L_6582:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_6583:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_6578:
	BLOCK END
	BLOCK 31

L_6584:
	DBG BLOCK END
; Line 4730:	            apl->mode = am_indisp; 

	T48(EAX).A =   _apl:LINK(-8).A
	*(T48(EAX) + 0).A.I =   #C.I
; Line 4731:	        } 

	BLOCK END
	BLOCK 32

L_6585:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_6587:
	DBG BLOCK END
	GOTO	L_6586:PC
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_6588:
	BLOCK END
	BLOCK 36

L_6569:
; Line 4732:	        else 

; Line 4733:	            apl->mode = am_direct; 

	T49(EAX).A =   _apl:LINK(-8).A
	*(T49(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 37

L_6589:
	DBG BLOCK END
	BLOCK END
	BLOCK 38

L_6586:
	BLOCK END
	BLOCK 39

L_6590:
	DBG BLOCK END
; Line 4734:	    } 

	BLOCK END
	BLOCK 40

L_6591:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_6592:
	DBG BLOCK END
	BLOCK END
	BLOCK 42

L_6565:
	BLOCK END
	BLOCK 43

L_6593:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_6595:
; Line 4736:	    if (n <= 24 && (q->dc.left->mode == Optimizer::i_immed || apl->mode == am_dreg)) 

	T50(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6594:PC ; T50(EAX).I S> #18.I
	BLOCK END
	BLOCK 45
	T51(EAX).A =   _q:LINK(4).A
	T52(EAX).A =   *(T51(EAX) + 4+0).A.A
	T53(EAX).I =   *(T52(EAX) + 0).A.I
	CONDGO	L_6660:PC ; T53(EAX).I == #1.C
	BLOCK END
	BLOCK 46
	T54(EAX).A =   _apl:LINK(-8).A
	T55(EAX).I =   *(T54(EAX) + 0).A.I
	CONDGO	L_6594:PC ; T55(EAX).I != #2.I
	BLOCK END
	BLOCK 47

L_6660:
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_6596:
; Line 4737:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_6597:
; Line 4738:	        if (apl->mode == am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_6599:
	T56(EAX).A =   _apl:LINK(-8).A
	T57(EAX).I =   *(T56(EAX) + 0).A.I
	CONDGO	L_6598:PC ; T57(EAX).I != #2.I
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_6600:
; Line 4739:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_6601:
; Line 4740:	            apl->mode = am_indisp; 

	T58(EAX).A =   _apl:LINK(-8).A
	*(T58(EAX) + 0).A.I =   #C.I
; Line 4741:	            ofs = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T59(EDX:EAX).ULL =   #0.C
	PARM	T59(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T60(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	_ofs:LINK(-32).A =   T60(EAX).A
; Line 4742:	        } 

	BLOCK END
	BLOCK 54

L_6602:
	DBG BLOCK END
	BLOCK END
	BLOCK 55

L_6603:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_6598:
	BLOCK END
	BLOCK 57

L_6604:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_6606:
; Line 4743:	        if (n & 1) 

	T61(EAX).I =   _n:LINK(-4).I
	T62(EAX).I = T61(EAX).I & #1.C
	CONDGO	L_6605:PC ; T62(EAX).I == #0.C
	BLOCK END
	BLOCK 59
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_6607:
; Line 4744:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_6608:
; Line 4745:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

	T63(EAX).I =   _n:LINK(-4).I
	T64(EAX).I = T63(EAX).I - #1.C
	T65(EDX:EAX).ULL =   T64(EAX).I
	PARM	T65(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T66(EAX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	PARM	T66(EAX).A
	T67(EAX).A =   _ofs:LINK(-32).A
	PARM	T67(EAX).A
	T68(EAX).UI =   #1.C
	PARM	T68(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T69(ECX).A =   RV.T2(EAX).A
	PARMADJ	#C.N
	T70(EAX).A =   _apl:LINK(-8).A
	*(T70(EAX) + C).A.A =   T69(ECX).A
; Line 4746:	            gen_codes(op_mov, ISZ_UCHAR, apl, aimmed(0)); 

	T71(EDX:EAX).ULL =   #0.C
	PARM	T71(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T72(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	PARM	T72(EAX).A
	T73(EAX).A =   _apl:LINK(-8).A
	PARM	T73(EAX).A
	T74(EAX).UI =   #3.C
	PARM	T74(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4747:	            n--; 

	_n:LINK(-4).I = _n:LINK(-4).I - #1.C
; Line 4748:	        } 

	BLOCK END
	BLOCK 62

L_6609:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_6610:
	DBG BLOCK END
	BLOCK END
	BLOCK 64

L_6605:
	BLOCK END
	BLOCK 65

L_6611:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_6613:
; Line 4749:	        if (n & 2) 

	T75(EAX).I =   _n:LINK(-4).I
	T76(EAX).I = T75(EAX).I & #2.I
	CONDGO	L_6612:PC ; T76(EAX).I == #0.C
	BLOCK END
	BLOCK 67
	DBG BLOCK START
	BLOCK END
	BLOCK 68

L_6614:
; Line 4750:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_6615:
; Line 4751:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

	T77(EAX).I =   _n:LINK(-4).I
	T78(EAX).I = T77(EAX).I - #2.I
	T79(EDX:EAX).ULL =   T78(EAX).I
	PARM	T79(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T80(EAX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	PARM	T80(EAX).A
	T81(EAX).A =   _ofs:LINK(-32).A
	PARM	T81(EAX).A
	T82(EAX).UI =   #1.C
	PARM	T82(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T83(ECX).A =   RV.T5(EAX).A
	PARMADJ	#C.N
	T84(EAX).A =   _apl:LINK(-8).A
	*(T84(EAX) + C).A.A =   T83(ECX).A
; Line 4752:	            gen_codes(op_mov, ISZ_USHORT, apl, aimmed(0)); 

	T85(EDX:EAX).ULL =   #0.C
	PARM	T85(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T86(EAX).A =   RV.T6(EAX).A
	PARMADJ	#8.N
	PARM	T86(EAX).A
	T87(EAX).A =   _apl:LINK(-8).A
	PARM	T87(EAX).A
	PARM	#4.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4753:	            n -= 2; 

	_n:LINK(-4).I = _n:LINK(-4).I - #2.I
; Line 4754:	        } 

	BLOCK END
	BLOCK 70

L_6616:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_6617:
	DBG BLOCK END
	BLOCK END
	BLOCK 72

L_6612:
	BLOCK END
	BLOCK 73

L_6618:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_6622:
	GOTO	L_6621:PC
	BLOCK END
	BLOCK 75

L_6619:
	DBG BLOCK START
	BLOCK END
	BLOCK 76

L_6623:
; Line 4756:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_6624:
; Line 4757:	            n -= 4; 

	_n:LINK(-4).I = _n:LINK(-4).I - #4.I
; Line 4758:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n)); 

	T89(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T89(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T90(EAX).A =   RV.T7(EAX).A
	PARMADJ	#C.N
	PARM	T90(EAX).A
	T91(EAX).A =   _ofs:LINK(-32).A
	PARM	T91(EAX).A
	T92(EAX).UI =   #1.C
	PARM	T92(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T93(ECX).A =   RV.T8(EAX).A
	PARMADJ	#C.N
	T94(EAX).A =   _apl:LINK(-8).A
	*(T94(EAX) + C).A.A =   T93(ECX).A
; Line 4759:	            gen_codes(op_mov, ISZ_ULONG, apl, aimmed(0)); 

	T95(EDX:EAX).ULL =   #0.C
	PARM	T95(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T96(EAX).A =   RV.T9(EAX).A
	PARMADJ	#8.N
	PARM	T96(EAX).A
	T97(EAX).A =   _apl:LINK(-8).A
	PARM	T97(EAX).A
	PARM	#9.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4760:	        } 

	BLOCK END
	BLOCK 78

L_6625:
	DBG BLOCK END
	BLOCK END
	BLOCK 79

L_6626:
	DBG BLOCK END
	BLOCK END
	BLOCK 80

L_6621:
; Line 4755:	        while (n > 0) 

	T88(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6619:PC ; T88(EAX).I S> #0.C
	BLOCK END
	BLOCK 81

L_6620:
	BLOCK END
	BLOCK 82

L_6627:
	DBG BLOCK END
; Line 4761:	    } 

	BLOCK END
	BLOCK 83

L_6628:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_6630:
	DBG BLOCK END
	GOTO	L_6629:PC
	BLOCK END
	BLOCK 85
	DBG BLOCK START
	BLOCK END
	BLOCK 86

L_6631:
	BLOCK END
	BLOCK 87

L_6594:
; Line 4762:	    else 

; Line 4763:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_6632:
; Line 4764:	        AMODE* ax = makedreg(EAX); 

	VAR START	ax
	T98(EAX).UI =   #0.C
	PARM	T98(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T99(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	_ax:LINK(-36).A =   T99(EAX).A
	VAR START	cx
; Line 4765:	        AMODE* cx = makedreg(ECX); 

	T100(EAX).UI =   #1.C
	PARM	T100(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T101(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	_cx:LINK(-40).A =   T101(EAX).A
	VAR START	di
; Line 4766:	        AMODE* di = makedreg(EDI); 

	PARM	#7.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T102(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	_di:LINK(-44).A =   T102(EAX).A
; Line 4767:	        cx->liveRegs = q->liveRegs; 

	T103(EAX).A =   _q:LINK(4).A
	T104(ECX).I =   *(T103(EAX) + 48).A.ULL
	T105(EAX).A =   _cx:LINK(-40).A
	*(T105(EAX) + 10).A.I =   T104(ECX).I
; Line 4768:	        di->liveRegs = q->liveRegs; 

	T106(EAX).A =   _q:LINK(4).A
	T107(ECX).I =   *(T106(EAX) + 48).A.ULL
	T108(EAX).A =   _di:LINK(-44).A
	*(T108(EAX) + 10).A.I =   T107(ECX).I
; Line 4769:	        gen_codes(op_push, ISZ_UINT, di, 0); 

	T109(EAX).A =   #0.C
	PARM	T109(EAX).A
	T110(EAX).A =   _di:LINK(-44).A
	PARM	T110(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4770:	        gen_codes(op_push, ISZ_UINT, cx, 0); 

	T111(EAX).A =   #0.C
	PARM	T111(EAX).A
	T112(EAX).A =   _cx:LINK(-40).A
	PARM	T112(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4771:	        gen_codes(op_push, ISZ_UINT, ax, 0); 

	T113(EAX).A =   #0.C
	PARM	T113(EAX).A
	T114(EAX).A =   _ax:LINK(-36).A
	PARM	T114(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4772:	        pushlevel += 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #C.I
; Line 4773:	        gen_codes(op, ISZ_UINT, di, apl); 

	T115(EAX).A =   _apl:LINK(-8).A
	PARM	T115(EAX).A
	T116(EAX).A =   _di:LINK(-44).A
	PARM	T116(EAX).A
	PARM	#7.I
	T117(EAX).I =   _op:LINK(-24).I
	PARM	T117(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4774:	        gen_codes(op_xor, ISZ_UINT, ax, ax); 

	T118(EAX).A =   _ax:LINK(-36).A
	PARM	T118(EAX).A
	T119(EAX).A =   _ax:LINK(-36).A
	PARM	T119(EAX).A
	PARM	#7.I
	PARM	#199.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 89

L_6634:
; Line 4775:	        if (n == INT_MAX) 

	T120(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6633:PC ; T120(EAX).I != #7FFFFFFF.I
	BLOCK END
	BLOCK 90
	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_6635:
; Line 4776:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 92

L_6636:
; Line 4777:	            gen_codes(op_mov, ISZ_UINT, cx, aprl); 

	T121(EAX).A =   _aprl:LINK(-16).A
	PARM	T121(EAX).A
	T122(EAX).A =   _cx:LINK(-40).A
	PARM	T122(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4778:	            gen_codes(op_shr, ISZ_UINT, cx, aimmed(2)); 

	T123(EDX:EAX).ULL =   #2.I
	PARM	T123(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T124(EAX).A =   RV.T13(EAX).A
	PARMADJ	#8.N
	PARM	T124(EAX).A
	T125(EAX).A =   _cx:LINK(-40).A
	PARM	T125(EAX).A
	PARM	#7.I
	PARM	#17B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4779:	        } 

	BLOCK END
	BLOCK 93

L_6637:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_6639:
	DBG BLOCK END
	GOTO	L_6638:PC
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_6640:
	BLOCK END
	BLOCK 97

L_6633:
; Line 4780:	        else 

; Line 4781:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_6641:
; Line 4782:	            gen_codes(op_mov, ISZ_UINT, cx, aimmed(n / 4)); 

	T126(ECX).I =   _n:LINK(-4).I
	T127(EAX).I = T126(ECX).I S>> #1.UI
	T128(EAX).I = T127(EAX).I U>> #1E.UI
	T129(EAX).I = T128(EAX).I + T126(ECX).I
	T130(EAX).I = T129(EAX).I S>> #2.UI
	T131(EDX:EAX).ULL =   T130(EAX).I
	PARM	T131(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T132(EAX).A =   RV.T14(EAX).A
	PARMADJ	#8.N
	PARM	T132(EAX).A
	T133(EAX).A =   _cx:LINK(-40).A
	PARM	T133(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4783:	        } 

	BLOCK END
	BLOCK 99

L_6642:
	DBG BLOCK END
	BLOCK END
	BLOCK 100

L_6643:
	DBG BLOCK END
	BLOCK END
	BLOCK 101

L_6638:
	BLOCK END
	BLOCK 102

L_6644:
	DBG BLOCK END
; Line 4784:	        gen_code(op_cld, 0, 0); 

	T134(EAX).A =   #0.C
	PARM	T134(EAX).A
	T135(EAX).A =   #0.C
	PARM	T135(EAX).A
	PARM	#35.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4785:	        gen_code(op_rep, 0, 0); 

	T136(EAX).A =   #0.C
	PARM	T136(EAX).A
	T137(EAX).A =   #0.C
	PARM	T137(EAX).A
	PARM	#272.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4786:	        gen_code(op_stosd, 0, 0); 

	T138(EAX).A =   #0.C
	PARM	T138(EAX).A
	T139(EAX).A =   #0.C
	PARM	T139(EAX).A
	PARM	#186.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_6646:
; Line 4787:	        if (n & 2) 

	T140(EAX).I =   _n:LINK(-4).I
	T141(EAX).I = T140(EAX).I & #2.I
	CONDGO	L_6645:PC ; T141(EAX).I == #0.C
	BLOCK END
	BLOCK 104
	DBG BLOCK START
	BLOCK END
	BLOCK 105

L_6647:
; Line 4788:	            gen_code(op_stosw, 0, 0); 

	T142(EAX).A =   #0.C
	PARM	T142(EAX).A
	T143(EAX).A =   #0.C
	PARM	T143(EAX).A
	PARM	#185.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 106

L_6648:
	DBG BLOCK END
	BLOCK END
	BLOCK 107

L_6645:
	BLOCK END
	BLOCK 108

L_6649:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 109

L_6651:
; Line 4789:	        if (n & 1) 

	T144(EAX).I =   _n:LINK(-4).I
	T145(EAX).I = T144(EAX).I & #1.C
	CONDGO	L_6650:PC ; T145(EAX).I == #0.C
	BLOCK END
	BLOCK 110
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_6652:
; Line 4790:	            gen_code(op_stosb, 0, 0); 

	T146(EAX).A =   #0.C
	PARM	T146(EAX).A
	T147(EAX).A =   #0.C
	PARM	T147(EAX).A
	PARM	#184.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 112

L_6653:
	DBG BLOCK END
	BLOCK END
	BLOCK 113

L_6650:
	BLOCK END
	BLOCK 114

L_6654:
	DBG BLOCK END
; Line 4791:	        gen_codes(op_pop, ISZ_UINT, ax, 0); 

	T148(EAX).A =   #0.C
	PARM	T148(EAX).A
	T149(EAX).A =   _ax:LINK(-36).A
	PARM	T149(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4792:	        gen_codes(op_pop, ISZ_UINT, cx, 0); 

	T150(EAX).A =   #0.C
	PARM	T150(EAX).A
	T151(EAX).A =   _cx:LINK(-40).A
	PARM	T151(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4793:	        gen_codes(op_pop, ISZ_UINT, di, 0); 

	T152(EAX).A =   #0.C
	PARM	T152(EAX).A
	T153(EAX).A =   _di:LINK(-44).A
	PARM	T153(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4794:	        pushlevel -= 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #C.I
; Line 4795:	    } 

	BLOCK END
	BLOCK 115

L_6655:
	DBG BLOCK END
	BLOCK END
	BLOCK 116

L_6656:
	DBG BLOCK END
	BLOCK END
	BLOCK 117

L_6629:
	BLOCK END
	BLOCK 118

L_6657:
	DBG BLOCK END
; Line 4796:	} 

	BLOCK END
	BLOCK 119

L_6658:
	DBG BLOCK END
	BLOCK END
	BLOCK 120

L_6558:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_cmpblock$qp15@Optimizer@quad


global @occx86@asm_cmpblock$qp15@Optimizer@quad
@occx86@asm_cmpblock$qp15@Optimizer@quad:
; Line 4798:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#48.UI
	BLOCK END
	BLOCK 2

L_6664:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6666:
; Line 4799:	    int n = q->ans->offset->i; 

	VAR START	n
	T28(EAX).A =   _q:LINK(4).A
	T29(EAX).A =   *(T28(EAX) + 40).A.A
	T30(EAX).A =   *(T29(EAX) + 4).A.A
	T31(EAX).I =   *(T30(EAX) + 8).A.LL
	_n:LINK(-4).I =   T31(EAX).I
	VAR START	apl
; Line 4800:	    AMODE *apl = nullptr, *aph = nullptr, *apal = nullptr, *apah = nullptr; 

	T32(EAX).A =   #0.UI
	_apl:LINK(-8).A =   T32(EAX).A
	VAR START	aph
	T33(EAX).A =   #0.UI
	_aph:LINK(-12).A =   T33(EAX).A
	VAR START	apal
	T34(EAX).A =   #0.UI
	_apal:LINK(-16).A =   T34(EAX).A
	VAR START	apah
	T35(EAX).A =   #0.UI
	_apah:LINK(-20).A =   T35(EAX).A
	VAR START	op
	VAR START	opa
	VAR START	ofs
	VAR START	ofsa
; Line 4802:	    Optimizer::SimpleExpression *ofs, *ofsa; 

	T36(EAX).A =   #_aph:LINK(-12).A
	PARM	T36(EAX).A
	T37(EAX).A =   #_apl:LINK(-8).A
	PARM	T37(EAX).A
	T38(EAX).A =   _q:LINK(4).A
	T39(EAX).A =   *(T38(EAX) + 8+0).A.A
	PARM	T39(EAX).A
	T40(EAX).A =   #_op:LINK(-24).A
	PARM	T40(EAX).A
	T41(EAX).A =   _q:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 4805:	    getAmodes(q, &opa, q->dc.left, &apal, &apah); 

	T42(EAX).A =   #_apah:LINK(-20).A
	PARM	T42(EAX).A
	T43(EAX).A =   #_apal:LINK(-16).A
	PARM	T43(EAX).A
	T44(EAX).A =   _q:LINK(4).A
	T45(EAX).A =   *(T44(EAX) + 4+0).A.A
	PARM	T45(EAX).A
	T46(EAX).A =   #_opa:LINK(-28).A
	PARM	T46(EAX).A
	T47(EAX).A =   _q:LINK(4).A
	PARM	T47(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 4807:	    ofs = apl->offset; 

	T48(EAX).A =   _apl:LINK(-8).A
	T49(EAX).A =   *(T48(EAX) + C).A.A
	_ofs:LINK(-32).A =   T49(EAX).A
; Line 4808:	    ofsa = apal->offset; 

	T50(EAX).A =   _apal:LINK(-16).A
	T51(EAX).A =   *(T50(EAX) + C).A.A
	_ofsa:LINK(-36).A =   T51(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_6668:
; Line 4809:	    if (q->dc.right->mode == Optimizer::i_immed) 

	T52(EAX).A =   _q:LINK(4).A
	T53(EAX).A =   *(T52(EAX) + 8+0).A.A
	T54(EAX).I =   *(T53(EAX) + 0).A.I
	CONDGO	L_6667:PC ; T54(EAX).I != #1.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_6669:
; Line 4810:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_6670:
; Line 4811:	        op = op_lea; 

	_op:LINK(-24).I =   #106.I
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_6672:
; Line 4812:	        if (ofs->type == Optimizer::se_auto) 

	T55(EAX).A =   _ofs:LINK(-32).A
	T56(EAX).I =   *(T55(EAX) + 0).A.I
	CONDGO	L_6671:PC ; T56(EAX).I != #B.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_6673:
; Line 4813:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_6674:
; Line 4814:	            if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_6676:
	T57(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_6675:PC ; T57(EAX).I == #0.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_6677:
; Line 4815:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_6678:
; Line 4816:	                apl->preg = ESP; 

	T58(EAX).A =   _apl:LINK(-8).A
	*(T58(EAX) + 4).A.C =   #4.C
; Line 4817:	            } 

	BLOCK END
	BLOCK 16

L_6679:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_6681:
	DBG BLOCK END
	GOTO	L_6680:PC
	BLOCK END
	BLOCK 18
	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_6682:
	BLOCK END
	BLOCK 20

L_6675:
; Line 4818:	            else 

; Line 4819:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_6683:
; Line 4820:	                apl->preg = EBP; 

	T59(EAX).A =   _apl:LINK(-8).A
	*(T59(EAX) + 4).A.C =   #5.C
; Line 4821:	            } 

	BLOCK END
	BLOCK 22

L_6684:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_6685:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_6680:
	BLOCK END
	BLOCK 25

L_6686:
	DBG BLOCK END
; Line 4822:	            apl->mode = am_indisp; 

	T60(EAX).A =   _apl:LINK(-8).A
	*(T60(EAX) + 0).A.I =   #C.I
; Line 4823:	        } 

	BLOCK END
	BLOCK 26

L_6687:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_6689:
	DBG BLOCK END
	GOTO	L_6688:PC
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_6690:
	BLOCK END
	BLOCK 30

L_6671:
; Line 4824:	        else 

; Line 4825:	            apl->mode = am_direct; 

	T61(EAX).A =   _apl:LINK(-8).A
	*(T61(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 31

L_6691:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_6688:
	BLOCK END
	BLOCK 33

L_6692:
	DBG BLOCK END
; Line 4826:	    } 

	BLOCK END
	BLOCK 34

L_6693:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_6694:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_6667:
	BLOCK END
	BLOCK 37

L_6695:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_6697:
; Line 4827:	    if (q->dc.left->mode == Optimizer::i_immed) 

	T62(EAX).A =   _q:LINK(4).A
	T63(EAX).A =   *(T62(EAX) + 4+0).A.A
	T64(EAX).I =   *(T63(EAX) + 0).A.I
	CONDGO	L_6696:PC ; T64(EAX).I != #1.C
	BLOCK END
	BLOCK 39
	DBG BLOCK START
	BLOCK END
	BLOCK 40

L_6698:
; Line 4828:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_6699:
; Line 4829:	        opa = op_lea; 

	_opa:LINK(-28).I =   #106.I
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_6701:
; Line 4830:	        if (ofsa->type == Optimizer::se_auto) 

	T65(EAX).A =   _ofsa:LINK(-36).A
	T66(EAX).I =   *(T65(EAX) + 0).A.I
	CONDGO	L_6700:PC ; T66(EAX).I != #B.C
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_6702:
; Line 4831:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_6703:
; Line 4832:	            if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_6705:
	T67(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_6704:PC ; T67(EAX).I == #0.C
	BLOCK END
	BLOCK 47
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_6706:
; Line 4833:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_6707:
; Line 4834:	                apal->preg = ESP; 

	T68(EAX).A =   _apal:LINK(-16).A
	*(T68(EAX) + 4).A.C =   #4.C
; Line 4835:	            } 

	BLOCK END
	BLOCK 50

L_6708:
	DBG BLOCK END
	BLOCK END
	BLOCK 51

L_6710:
	DBG BLOCK END
	GOTO	L_6709:PC
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_6711:
	BLOCK END
	BLOCK 54

L_6704:
; Line 4836:	            else 

; Line 4837:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_6712:
; Line 4838:	                apal->preg = EBP; 

	T69(EAX).A =   _apal:LINK(-16).A
	*(T69(EAX) + 4).A.C =   #5.C
; Line 4839:	            } 

	BLOCK END
	BLOCK 56

L_6713:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_6714:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_6709:
	BLOCK END
	BLOCK 59

L_6715:
	DBG BLOCK END
; Line 4840:	            apal->mode = am_indisp; 

	T70(EAX).A =   _apal:LINK(-16).A
	*(T70(EAX) + 0).A.I =   #C.I
; Line 4841:	        } 

	BLOCK END
	BLOCK 60

L_6716:
	DBG BLOCK END
	BLOCK END
	BLOCK 61

L_6718:
	DBG BLOCK END
	GOTO	L_6717:PC
	BLOCK END
	BLOCK 62
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_6719:
	BLOCK END
	BLOCK 64

L_6700:
; Line 4842:	        else 

; Line 4843:	            apal->mode = am_direct; 

	T71(EAX).A =   _apal:LINK(-16).A
	*(T71(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 65

L_6720:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_6717:
	BLOCK END
	BLOCK 67

L_6721:
	DBG BLOCK END
; Line 4844:	    } 

	BLOCK END
	BLOCK 68

L_6722:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_6723:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_6696:
	BLOCK END
	BLOCK 71

L_6724:
	DBG BLOCK END
	VAR START	labno
; Line 4846:	    int labno = q->dc.v.label; 

	T72(EAX).A =   _q:LINK(4).A
	T73(EAX).I =   *(T72(EAX) + 0+C+0).A.L
	_labno:LINK(-40).I =   T73(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_6726:
; Line 4848:	    if (n <= 24 && (q->dc.right->mode == Optimizer::i_immed || apl->mode == am_dreg) && 
; Line 4849:	        (q->dc.left->mode == Optimizer::i_immed || apal->mode == am_dreg)) 

; Line 4849:	        (q->dc.left->mode == Optimizer::i_immed || apal->mode == am_dreg)) 

	T74(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6725:PC ; T74(EAX).I S> #18.I
	BLOCK END
	BLOCK 73
	T75(EAX).A =   _q:LINK(4).A
	T76(EAX).A =   *(T75(EAX) + 8+0).A.A
	T77(EAX).I =   *(T76(EAX) + 0).A.I
	CONDGO	L_6876:PC ; T77(EAX).I == #1.C
	BLOCK END
	BLOCK 74
	T78(EAX).A =   _apl:LINK(-8).A
	T79(EAX).I =   *(T78(EAX) + 0).A.I
	CONDGO	L_6725:PC ; T79(EAX).I != #2.I
	BLOCK END
	BLOCK 75

L_6876:
	T80(EAX).A =   _q:LINK(4).A
	T81(EAX).A =   *(T80(EAX) + 4+0).A.A
	T82(EAX).I =   *(T81(EAX) + 0).A.I
	CONDGO	L_6877:PC ; T82(EAX).I == #1.C
	BLOCK END
	BLOCK 76
	T83(EAX).A =   _apal:LINK(-16).A
	T84(EAX).I =   *(T83(EAX) + 0).A.I
	CONDGO	L_6725:PC ; T84(EAX).I != #2.I
	BLOCK END
	BLOCK 77

L_6877:
	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_6727:
; Line 4850:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_6728:
; Line 4851:	        AMODE* ax; 

	VAR START	ax
	VAR START	reg
; Line 4852:	        int reg = -1; 

	_reg:LINK(-64).I =   #FFFFFFFFFFFFFFFF.I
	VAR START	i
	VAR START	push
; Line 4853:	        int i; 
; Line 4854:	        int push = false; 

; Line 4854:	        int push = false; 

	T85(EAX).I =   #0.C
	_push:LINK(-72).I =   T85(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_6730:
; Line 4855:	        if (apl->mode == am_dreg) 

	T86(EAX).A =   _apl:LINK(-8).A
	T87(EAX).I =   *(T86(EAX) + 0).A.I
	CONDGO	L_6729:PC ; T87(EAX).I != #2.I
	BLOCK END
	BLOCK 81
	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_6731:
; Line 4856:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 83

L_6732:
; Line 4857:	            apl->mode = am_indisp; 

	T88(EAX).A =   _apl:LINK(-8).A
	*(T88(EAX) + 0).A.I =   #C.I
; Line 4858:	            ofs = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T89(EDX:EAX).ULL =   #0.C
	PARM	T89(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T90(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	_ofs:LINK(-32).A =   T90(EAX).A
; Line 4859:	        } 

	BLOCK END
	BLOCK 84

L_6733:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_6734:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_6729:
	BLOCK END
	BLOCK 87

L_6735:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 88

L_6737:
; Line 4860:	        if (apal->mode == am_dreg) 

	T91(EAX).A =   _apal:LINK(-16).A
	T92(EAX).I =   *(T91(EAX) + 0).A.I
	CONDGO	L_6736:PC ; T92(EAX).I != #2.I
	BLOCK END
	BLOCK 89
	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_6738:
; Line 4861:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_6739:
; Line 4862:	            apal->mode = am_indisp; 

	T93(EAX).A =   _apal:LINK(-16).A
	*(T93(EAX) + 0).A.I =   #C.I
; Line 4863:	            ofsa = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T94(EDX:EAX).ULL =   #0.C
	PARM	T94(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T95(EAX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	_ofsa:LINK(-36).A =   T95(EAX).A
; Line 4864:	        } 

	BLOCK END
	BLOCK 92

L_6740:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_6741:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_6736:
	BLOCK END
	BLOCK 95

L_6742:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_6747:
; Line 4865:	        for (i = 0; i < 4; i++) 

	T96(EAX).I =   #0.C
	_i:LINK(-68).I =   T96(EAX).I
	GOTO	L_6744:PC
	BLOCK END
	BLOCK 97

L_6743:
	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_6748:
; Line 4866:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 99

L_6749:
; Line 4867:	            if (Optimizer::chosenAssembler->arch->regMap[i][0] < 3 && !(q->liveRegs & ((unsigned long long)1 << i))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_6751:
	T98(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T99(EAX).A =   *(T98(EAX) + 44).A.A
	T100(ECX).A =   *(T99(EAX) + 58).A.A
	T101(EAX).I =   _i:LINK(-68).I
	T102(EAX).I =   *(T100(ECX) + T101(EAX) * 8).A.I
	CONDGO	L_6750:PC ; T102(EAX).I S>= #3.C
	BLOCK END
	BLOCK 101
	T103(EAX).A =   _q:LINK(4).A
	T104(EBX:ESI).ULL =   *(T103(EAX) + 48).A.ULL
	T106(EAX).I =   _i:LINK(-68).I
	PARM	T106(EAX).I
	PARM	#1.ULL
	GOSUB	#__LXSHL:PC.N
	PARMADJ	#0.N
	T107(EDX:EAX).ULL =   RV.T27(EDX:EAX).ULL
	T108(EDX:EAX).ULL = T104(EBX:ESI).ULL & T107(EDX:EAX).ULL
	CONDGO	L_6750:PC ; T108(EDX:EAX).ULL != #0.ULL
	BLOCK END
	BLOCK 102
	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_6752:
; Line 4868:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_6753:
; Line 4869:	                if ((apl->mode != am_indisp || apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0]) && 

	DBG BLOCK START
	BLOCK END
	BLOCK 105

L_6755:
; Line 4870:	                    (apl->mode != am_indispscale || (apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0] && 
; Line 4875:	                { 

	T109(EAX).A =   _apl:LINK(-8).A
	T110(EAX).I =   *(T109(EAX) + 0).A.I
	CONDGO	L_6878:PC ; T110(EAX).I != #C.I
	BLOCK END
	BLOCK 106
	T111(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T112(EAX).A =   *(T111(EAX) + 44).A.A
	T113(ECX).A =   *(T112(EAX) + 58).A.A
	T114(EAX).I =   _i:LINK(-68).I
	T115(ECX).I =   *(T113(ECX) + T114(EAX) * 8).A.I
	T116(EAX).A =   _apl:LINK(-8).A
	T117(EAX).I =   *(T116(EAX) + 4).A.C
	CONDGO	L_6754:PC ; T117(EAX).I == T115(ECX).I
	BLOCK END
	BLOCK 107

L_6878:
	T118(EAX).A =   _apl:LINK(-8).A
	T119(EAX).I =   *(T118(EAX) + 0).A.I
	CONDGO	L_6879:PC ; T119(EAX).I != #D.I
	BLOCK END
	BLOCK 108
	T120(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T121(EAX).A =   *(T120(EAX) + 44).A.A
	T122(ECX).A =   *(T121(EAX) + 58).A.A
	T123(EAX).I =   _i:LINK(-68).I
	T124(ECX).I =   *(T122(ECX) + T123(EAX) * 8).A.I
	T125(EAX).A =   _apl:LINK(-8).A
	T126(EAX).I =   *(T125(EAX) + 4).A.C
	CONDGO	L_6754:PC ; T126(EAX).I == T124(ECX).I
	BLOCK END
	BLOCK 109
	T127(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T128(EAX).A =   *(T127(EAX) + 44).A.A
	T129(ECX).A =   *(T128(EAX) + 58).A.A
	T130(EAX).I =   _i:LINK(-68).I
	T131(ECX).I =   *(T129(ECX) + T130(EAX) * 8).A.I
	T132(EAX).A =   _apl:LINK(-8).A
	T133(EAX).I =   *(T132(EAX) + 5).A.C
	CONDGO	L_6754:PC ; T133(EAX).I == T131(ECX).I
	BLOCK END
	BLOCK 110

L_6879:
	T134(EAX).A =   _apal:LINK(-16).A
	T135(EAX).I =   *(T134(EAX) + 0).A.I
	CONDGO	L_6880:PC ; T135(EAX).I != #C.I
	BLOCK END
	BLOCK 111
	T136(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T137(EAX).A =   *(T136(EAX) + 44).A.A
	T138(ECX).A =   *(T137(EAX) + 58).A.A
	T139(EAX).I =   _i:LINK(-68).I
	T140(ECX).I =   *(T138(ECX) + T139(EAX) * 8).A.I
	T141(EAX).A =   _apal:LINK(-16).A
	T142(EAX).I =   *(T141(EAX) + 4).A.C
	CONDGO	L_6754:PC ; T142(EAX).I == T140(ECX).I
	BLOCK END
	BLOCK 112

L_6880:
	T143(EAX).A =   _apal:LINK(-16).A
	T144(EAX).I =   *(T143(EAX) + 0).A.I
	CONDGO	L_6881:PC ; T144(EAX).I != #D.I
	BLOCK END
	BLOCK 113
	T145(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T146(EAX).A =   *(T145(EAX) + 44).A.A
	T147(ECX).A =   *(T146(EAX) + 58).A.A
	T148(EAX).I =   _i:LINK(-68).I
	T149(ECX).I =   *(T147(ECX) + T148(EAX) * 8).A.I
	T150(EAX).A =   _apal:LINK(-16).A
	T151(EAX).I =   *(T150(EAX) + 4).A.C
	CONDGO	L_6754:PC ; T151(EAX).I == T149(ECX).I
	BLOCK END
	BLOCK 114
	T152(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T153(EAX).A =   *(T152(EAX) + 44).A.A
	T154(ECX).A =   *(T153(EAX) + 58).A.A
	T155(EAX).I =   _i:LINK(-68).I
	T156(ECX).I =   *(T154(ECX) + T155(EAX) * 8).A.I
	T157(EAX).A =   _apal:LINK(-16).A
	T158(EAX).I =   *(T157(EAX) + 5).A.C
	CONDGO	L_6754:PC ; T158(EAX).I == T156(ECX).I
	BLOCK END
	BLOCK 115

L_6881:
	DBG BLOCK START
	BLOCK END
	BLOCK 116

L_6756:
; Line 4874:	                                                      apal->sreg != Optimizer::chosenAssembler->arch->regMap[i][0]))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_6757:
; Line 4876:	                    reg = Optimizer::chosenAssembler->arch->regMap[i][0]; 

	T159(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T160(EAX).A =   *(T159(EAX) + 44).A.A
	T161(ECX).A =   *(T160(EAX) + 58).A.A
	T162(EAX).I =   _i:LINK(-68).I
	T163(EAX).I =   *(T161(ECX) + T162(EAX) * 8).A.I
	_reg:LINK(-64).I =   T163(EAX).I
; Line 4877:	                    break; 

	GOTO	L_6745:PC
	BLOCK END
	BLOCK 118

L_6758:
	DBG BLOCK END
	BLOCK END
	BLOCK 119

L_6759:
	DBG BLOCK END
	BLOCK END
	BLOCK 120

L_6754:
	BLOCK END
	BLOCK 121

L_6760:
	DBG BLOCK END
; Line 4879:	            } 

	BLOCK END
	BLOCK 122

L_6761:
	DBG BLOCK END
	BLOCK END
	BLOCK 123

L_6762:
	DBG BLOCK END
	BLOCK END
	BLOCK 124

L_6750:
	BLOCK END
	BLOCK 125

L_6763:
	DBG BLOCK END
; Line 4880:	        } 

	BLOCK END
	BLOCK 126

L_6764:
	DBG BLOCK END
	BLOCK END
	BLOCK 127

L_6765:
	DBG BLOCK END
	BLOCK END
	BLOCK 128

L_6746:
	_i:LINK(-68).I = _i:LINK(-68).I + #1.C
	BLOCK END
	BLOCK 129

L_6744:
	T97(EAX).I =   _i:LINK(-68).I
	CONDGO	L_6743:PC ; T97(EAX).I S< #4.I
	BLOCK END
	BLOCK 130

L_6745:
	BLOCK END
	BLOCK 131

L_6766:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 132

L_6768:
; Line 4881:	        if (reg == -1) 

	T164(EAX).I =   _reg:LINK(-64).I
	CONDGO	L_6767:PC ; T164(EAX).I != #FFFFFFFFFFFFFFFF.I
	BLOCK END
	BLOCK 133
	DBG BLOCK START
	BLOCK END
	BLOCK 134

L_6769:
; Line 4882:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_6770:
; Line 4883:	            for (i = 0; i < 6; i++) 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_6775:
	T165(EAX).I =   #0.C
	_i:LINK(-68).I =   T165(EAX).I
	GOTO	L_6772:PC
	BLOCK END
	BLOCK 137

L_6771:
	DBG BLOCK START
	BLOCK END
	BLOCK 138

L_6776:
; Line 4884:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 139

L_6777:
; Line 4885:	                if ((apl->mode != am_indisp || apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0]) && 

	DBG BLOCK START
	BLOCK END
	BLOCK 140

L_6779:
; Line 4886:	                    (apal->mode != am_indispscale || (apl->preg != Optimizer::chosenAssembler->arch->regMap[i][0] && 
; Line 4891:	                { 

	T167(EAX).A =   _apl:LINK(-8).A
	T168(EAX).I =   *(T167(EAX) + 0).A.I
	CONDGO	L_6882:PC ; T168(EAX).I != #C.I
	BLOCK END
	BLOCK 141
	T169(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T170(EAX).A =   *(T169(EAX) + 44).A.A
	T171(ECX).A =   *(T170(EAX) + 58).A.A
	T172(EAX).I =   _i:LINK(-68).I
	T173(ECX).I =   *(T171(ECX) + T172(EAX) * 8).A.I
	T174(EAX).A =   _apl:LINK(-8).A
	T175(EAX).I =   *(T174(EAX) + 4).A.C
	CONDGO	L_6778:PC ; T175(EAX).I == T173(ECX).I
	BLOCK END
	BLOCK 142

L_6882:
	T176(EAX).A =   _apal:LINK(-16).A
	T177(EAX).I =   *(T176(EAX) + 0).A.I
	CONDGO	L_6883:PC ; T177(EAX).I != #D.I
	BLOCK END
	BLOCK 143
	T178(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T179(EAX).A =   *(T178(EAX) + 44).A.A
	T180(ECX).A =   *(T179(EAX) + 58).A.A
	T181(EAX).I =   _i:LINK(-68).I
	T182(ECX).I =   *(T180(ECX) + T181(EAX) * 8).A.I
	T183(EAX).A =   _apl:LINK(-8).A
	T184(EAX).I =   *(T183(EAX) + 4).A.C
	CONDGO	L_6778:PC ; T184(EAX).I == T182(ECX).I
	BLOCK END
	BLOCK 144
	T185(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T186(EAX).A =   *(T185(EAX) + 44).A.A
	T187(ECX).A =   *(T186(EAX) + 58).A.A
	T188(EAX).I =   _i:LINK(-68).I
	T189(ECX).I =   *(T187(ECX) + T188(EAX) * 8).A.I
	T190(EAX).A =   _apl:LINK(-8).A
	T191(EAX).I =   *(T190(EAX) + 5).A.C
	CONDGO	L_6778:PC ; T191(EAX).I == T189(ECX).I
	BLOCK END
	BLOCK 145

L_6883:
	T192(EAX).A =   _apal:LINK(-16).A
	T193(EAX).I =   *(T192(EAX) + 0).A.I
	CONDGO	L_6884:PC ; T193(EAX).I != #C.I
	BLOCK END
	BLOCK 146
	T194(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T195(EAX).A =   *(T194(EAX) + 44).A.A
	T196(ECX).A =   *(T195(EAX) + 58).A.A
	T197(EAX).I =   _i:LINK(-68).I
	T198(ECX).I =   *(T196(ECX) + T197(EAX) * 8).A.I
	T199(EAX).A =   _apal:LINK(-16).A
	T200(EAX).I =   *(T199(EAX) + 4).A.C
	CONDGO	L_6778:PC ; T200(EAX).I == T198(ECX).I
	BLOCK END
	BLOCK 147

L_6884:
	T201(EAX).A =   _apal:LINK(-16).A
	T202(EAX).I =   *(T201(EAX) + 0).A.I
	CONDGO	L_6885:PC ; T202(EAX).I != #D.I
	BLOCK END
	BLOCK 148
	T203(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T204(EAX).A =   *(T203(EAX) + 44).A.A
	T205(ECX).A =   *(T204(EAX) + 58).A.A
	T206(EAX).I =   _i:LINK(-68).I
	T207(ECX).I =   *(T205(ECX) + T206(EAX) * 8).A.I
	T208(EAX).A =   _apal:LINK(-16).A
	T209(EAX).I =   *(T208(EAX) + 4).A.C
	CONDGO	L_6778:PC ; T209(EAX).I == T207(ECX).I
	BLOCK END
	BLOCK 149
	T210(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T211(EAX).A =   *(T210(EAX) + 44).A.A
	T212(ECX).A =   *(T211(EAX) + 58).A.A
	T213(EAX).I =   _i:LINK(-68).I
	T214(ECX).I =   *(T212(ECX) + T213(EAX) * 8).A.I
	T215(EAX).A =   _apal:LINK(-16).A
	T216(EAX).I =   *(T215(EAX) + 5).A.C
	CONDGO	L_6778:PC ; T216(EAX).I == T214(ECX).I
	BLOCK END
	BLOCK 150

L_6885:
	DBG BLOCK START
	BLOCK END
	BLOCK 151

L_6780:
; Line 4890:	                                                      apal->sreg != Optimizer::chosenAssembler->arch->regMap[i][0]))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_6781:
; Line 4892:	                    reg = Optimizer::chosenAssembler->arch->regMap[i][0]; 

	T217(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T218(EAX).A =   *(T217(EAX) + 44).A.A
	T219(ECX).A =   *(T218(EAX) + 58).A.A
	T220(EAX).I =   _i:LINK(-68).I
	T221(EAX).I =   *(T219(ECX) + T220(EAX) * 8).A.I
	_reg:LINK(-64).I =   T221(EAX).I
; Line 4893:	                    push = true; 

	T222(EAX).I =   #1.C
	_push:LINK(-72).I =   T222(EAX).I
; Line 4894:	                    break; 

	GOTO	L_6773:PC
	BLOCK END
	BLOCK 153

L_6782:
	DBG BLOCK END
	BLOCK END
	BLOCK 154

L_6783:
	DBG BLOCK END
	BLOCK END
	BLOCK 155

L_6778:
	BLOCK END
	BLOCK 156

L_6784:
	DBG BLOCK END
; Line 4896:	            } 

	BLOCK END
	BLOCK 157

L_6785:
	DBG BLOCK END
	BLOCK END
	BLOCK 158

L_6786:
	DBG BLOCK END
	BLOCK END
	BLOCK 159

L_6774:
	_i:LINK(-68).I = _i:LINK(-68).I + #1.C
	BLOCK END
	BLOCK 160

L_6772:
	T166(EAX).I =   _i:LINK(-68).I
	CONDGO	L_6771:PC ; T166(EAX).I S< #6.I
	BLOCK END
	BLOCK 161

L_6773:
	BLOCK END
	BLOCK 162

L_6787:
	DBG BLOCK END
; Line 4897:	        } 

	BLOCK END
	BLOCK 163

L_6788:
	DBG BLOCK END
	BLOCK END
	BLOCK 164

L_6789:
	DBG BLOCK END
	BLOCK END
	BLOCK 165

L_6767:
	BLOCK END
	BLOCK 166

L_6790:
	DBG BLOCK END
; Line 4898:	        ax = makedreg(reg); 

	T223(EAX).I =   _reg:LINK(-64).I
	PARM	T223(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T224(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	_ax:LINK(-60).A =   T224(EAX).A
; Line 4899:	        ax->liveRegs = q->liveRegs; 

	T225(EAX).A =   _q:LINK(4).A
	T226(ECX).I =   *(T225(EAX) + 48).A.ULL
	T227(EAX).A =   _ax:LINK(-60).A
	*(T227(EAX) + 10).A.I =   T226(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_6792:
; Line 4900:	        if (push) 

	T228(EAX).I =   _push:LINK(-72).I
	CONDGO	L_6791:PC ; T228(EAX).I == #0.C
	BLOCK END
	BLOCK 168
	DBG BLOCK START
	BLOCK END
	BLOCK 169

L_6793:
; Line 4901:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 170

L_6794:
; Line 4902:	            gen_codes(op_push, ISZ_UINT, ax, 0); 

	T229(EAX).A =   #0.C
	PARM	T229(EAX).A
	T230(EAX).A =   _ax:LINK(-60).A
	PARM	T230(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4903:	            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 4904:	        } 

	BLOCK END
	BLOCK 171

L_6795:
	DBG BLOCK END
	BLOCK END
	BLOCK 172

L_6796:
	DBG BLOCK END
	BLOCK END
	BLOCK 173

L_6791:
	BLOCK END
	BLOCK 174

L_6797:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_6799:
; Line 4905:	        if (n & 1) 

	T231(EAX).I =   _n:LINK(-4).I
	T232(EAX).I = T231(EAX).I & #1.C
	CONDGO	L_6798:PC ; T232(EAX).I == #0.C
	BLOCK END
	BLOCK 176
	DBG BLOCK START
	BLOCK END
	BLOCK 177

L_6800:
; Line 4906:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_6801:
; Line 4907:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

	T233(EAX).I =   _n:LINK(-4).I
	T234(EAX).I = T233(EAX).I - #1.C
	T235(EDX:EAX).ULL =   T234(EAX).I
	PARM	T235(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T236(EAX).A =   RV.T3(EAX).A
	PARMADJ	#C.N
	PARM	T236(EAX).A
	T237(EAX).A =   _ofs:LINK(-32).A
	PARM	T237(EAX).A
	T238(EAX).UI =   #1.C
	PARM	T238(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T239(ECX).A =   RV.T4(EAX).A
	PARMADJ	#C.N
	T240(EAX).A =   _apl:LINK(-8).A
	*(T240(EAX) + C).A.A =   T239(ECX).A
; Line 4908:	            apal->offset = 
; Line 4909:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

; Line 4909:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 1)); 

	T241(EAX).I =   _n:LINK(-4).I
	T242(EAX).I = T241(EAX).I - #1.C
	T243(EDX:EAX).ULL =   T242(EAX).I
	PARM	T243(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T244(EAX).A =   RV.T5(EAX).A
	PARMADJ	#C.N
	PARM	T244(EAX).A
	T245(EAX).A =   _ofsa:LINK(-36).A
	PARM	T245(EAX).A
	T246(EAX).UI =   #1.C
	PARM	T246(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T247(ECX).A =   RV.T6(EAX).A
	PARMADJ	#C.N
	T248(EAX).A =   _apal:LINK(-16).A
	*(T248(EAX) + C).A.A =   T247(ECX).A
; Line 4910:	            gen_codes(op_mov, ISZ_UCHAR, ax, apl); 

	T249(EAX).A =   _apl:LINK(-8).A
	PARM	T249(EAX).A
	T250(EAX).A =   _ax:LINK(-60).A
	PARM	T250(EAX).A
	T251(EAX).UI =   #3.C
	PARM	T251(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4911:	            gen_codes(op_cmp, ISZ_UCHAR, apal, ax); 

	T252(EAX).A =   _ax:LINK(-60).A
	PARM	T252(EAX).A
	T253(EAX).A =   _apal:LINK(-16).A
	PARM	T253(EAX).A
	T254(EAX).UI =   #3.C
	PARM	T254(EAX).UI
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4912:	            gen_code(op_jne, make_label(labno), NULL); 

	T255(EAX).A =   #0.C
	PARM	T255(EAX).A
	T256(EAX).I =   _labno:LINK(-40).I
	PARM	T256(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T257(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T257(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4913:	            n--; 

	_n:LINK(-4).I = _n:LINK(-4).I - #1.C
; Line 4914:	        } 

	BLOCK END
	BLOCK 179

L_6802:
	DBG BLOCK END
	BLOCK END
	BLOCK 180

L_6803:
	DBG BLOCK END
	BLOCK END
	BLOCK 181

L_6798:
	BLOCK END
	BLOCK 182

L_6804:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 183

L_6806:
; Line 4915:	        if (n & 2) 

	T258(EAX).I =   _n:LINK(-4).I
	T259(EAX).I = T258(EAX).I & #2.I
	CONDGO	L_6805:PC ; T259(EAX).I == #0.C
	BLOCK END
	BLOCK 184
	DBG BLOCK START
	BLOCK END
	BLOCK 185

L_6807:
; Line 4916:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 186

L_6808:
; Line 4917:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

	T260(EAX).I =   _n:LINK(-4).I
	T261(EAX).I = T260(EAX).I - #2.I
	T262(EDX:EAX).ULL =   T261(EAX).I
	PARM	T262(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T263(EAX).A =   RV.T8(EAX).A
	PARMADJ	#C.N
	PARM	T263(EAX).A
	T264(EAX).A =   _ofs:LINK(-32).A
	PARM	T264(EAX).A
	T265(EAX).UI =   #1.C
	PARM	T265(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T266(ECX).A =   RV.T9(EAX).A
	PARMADJ	#C.N
	T267(EAX).A =   _apl:LINK(-8).A
	*(T267(EAX) + C).A.A =   T266(ECX).A
; Line 4918:	            apal->offset = 
; Line 4919:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

; Line 4919:	                Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n - 2)); 

	T268(EAX).I =   _n:LINK(-4).I
	T269(EAX).I = T268(EAX).I - #2.I
	T270(EDX:EAX).ULL =   T269(EAX).I
	PARM	T270(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T271(EAX).A =   RV.T10(EAX).A
	PARMADJ	#C.N
	PARM	T271(EAX).A
	T272(EAX).A =   _ofsa:LINK(-36).A
	PARM	T272(EAX).A
	T273(EAX).UI =   #1.C
	PARM	T273(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T274(ECX).A =   RV.T11(EAX).A
	PARMADJ	#C.N
	T275(EAX).A =   _apal:LINK(-16).A
	*(T275(EAX) + C).A.A =   T274(ECX).A
; Line 4920:	            gen_codes(op_mov, ISZ_USHORT, ax, apl); 

	T276(EAX).A =   _apl:LINK(-8).A
	PARM	T276(EAX).A
	T277(EAX).A =   _ax:LINK(-60).A
	PARM	T277(EAX).A
	PARM	#4.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4921:	            gen_codes(op_cmp, ISZ_USHORT, apal, ax); 

	T278(EAX).A =   _ax:LINK(-60).A
	PARM	T278(EAX).A
	T279(EAX).A =   _apal:LINK(-16).A
	PARM	T279(EAX).A
	PARM	#4.I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4922:	            gen_code(op_jne, make_label(labno), NULL); 

	T280(EAX).A =   #0.C
	PARM	T280(EAX).A
	T281(EAX).I =   _labno:LINK(-40).I
	PARM	T281(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T282(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T282(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4923:	            n -= 2; 

	_n:LINK(-4).I = _n:LINK(-4).I - #2.I
; Line 4924:	        } 

	BLOCK END
	BLOCK 187

L_6809:
	DBG BLOCK END
	BLOCK END
	BLOCK 188

L_6810:
	DBG BLOCK END
	BLOCK END
	BLOCK 189

L_6805:
	BLOCK END
	BLOCK 190

L_6811:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 191

L_6815:
	GOTO	L_6814:PC
	BLOCK END
	BLOCK 192

L_6812:
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_6816:
; Line 4927:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 194

L_6817:
; Line 4928:	            n -= 4; 

	_n:LINK(-4).I = _n:LINK(-4).I - #4.I
; Line 4929:	            apl->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofs, Optimizer::simpleIntNode(Optimizer::se_i, n)); 

	T284(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T284(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T285(EAX).A =   RV.T13(EAX).A
	PARMADJ	#C.N
	PARM	T285(EAX).A
	T286(EAX).A =   _ofs:LINK(-32).A
	PARM	T286(EAX).A
	T287(EAX).UI =   #1.C
	PARM	T287(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T288(ECX).A =   RV.T14(EAX).A
	PARMADJ	#C.N
	T289(EAX).A =   _apl:LINK(-8).A
	*(T289(EAX) + C).A.A =   T288(ECX).A
; Line 4930:	            apal->offset = Optimizer::simpleExpressionNode(Optimizer::se_add, ofsa, Optimizer::simpleIntNode(Optimizer::se_i, n)); 

	T290(EDX:EAX).ULL =   _n:LINK(-4).I
	PARM	T290(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T291(EAX).A =   RV.T15(EAX).A
	PARMADJ	#C.N
	PARM	T291(EAX).A
	T292(EAX).A =   _ofsa:LINK(-36).A
	PARM	T292(EAX).A
	T293(EAX).UI =   #1.C
	PARM	T293(EAX).UI
	TAG
	GOSUB	#@Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1:PC.UI
	T294(ECX).A =   RV.T16(EAX).A
	PARMADJ	#C.N
	T295(EAX).A =   _apal:LINK(-16).A
	*(T295(EAX) + C).A.A =   T294(ECX).A
; Line 4931:	            gen_codes(op_mov, ISZ_UINT, ax, apl); 

	T296(EAX).A =   _apl:LINK(-8).A
	PARM	T296(EAX).A
	T297(EAX).A =   _ax:LINK(-60).A
	PARM	T297(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4932:	            gen_codes(op_cmp, ISZ_UINT, apal, ax); 

	T298(EAX).A =   _ax:LINK(-60).A
	PARM	T298(EAX).A
	T299(EAX).A =   _apal:LINK(-16).A
	PARM	T299(EAX).A
	PARM	#7.I
	PARM	#57.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4933:	            gen_code(op_jne, make_label(labno), NULL); 

	T300(EAX).A =   #0.C
	PARM	T300(EAX).A
	T301(EAX).I =   _labno:LINK(-40).I
	PARM	T301(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T302(EAX).A =   RV.T17(EAX).A
	PARMADJ	#4.N
	PARM	T302(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4934:	        } 

	BLOCK END
	BLOCK 195

L_6818:
	DBG BLOCK END
	BLOCK END
	BLOCK 196

L_6819:
	DBG BLOCK END
	BLOCK END
	BLOCK 197

L_6814:
; Line 4926:	        while (n > 0) 

	T283(EAX).I =   _n:LINK(-4).I
	CONDGO	L_6812:PC ; T283(EAX).I S> #0.C
	BLOCK END
	BLOCK 198

L_6813:
	BLOCK END
	BLOCK 199

L_6820:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 200

L_6822:
; Line 4935:	        if (push) 

	T303(EAX).I =   _push:LINK(-72).I
	CONDGO	L_6821:PC ; T303(EAX).I == #0.C
	BLOCK END
	BLOCK 201
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_6823:
; Line 4936:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 203

L_6824:
; Line 4937:	            gen_codes(op_pop, ISZ_UINT, ax, 0); 

	T304(EAX).A =   #0.C
	PARM	T304(EAX).A
	T305(EAX).A =   _ax:LINK(-60).A
	PARM	T305(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4938:	            pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 4939:	        } 

	BLOCK END
	BLOCK 204

L_6825:
	DBG BLOCK END
	BLOCK END
	BLOCK 205

L_6826:
	DBG BLOCK END
	BLOCK END
	BLOCK 206

L_6821:
	BLOCK END
	BLOCK 207

L_6827:
	DBG BLOCK END
; Line 4940:	    } 

	BLOCK END
	BLOCK 208

L_6828:
	DBG BLOCK END
	BLOCK END
	BLOCK 209

L_6830:
	DBG BLOCK END
	GOTO	L_6829:PC
	BLOCK END
	BLOCK 210
	DBG BLOCK START
	BLOCK END
	BLOCK 211

L_6831:
	BLOCK END
	BLOCK 212

L_6725:
; Line 4941:	    else 

; Line 4942:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 213

L_6832:
; Line 4943:	        AMODE* cx = makedreg(ECX); 

	VAR START	cx
	T306(EAX).UI =   #1.C
	PARM	T306(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T307(EAX).A =   RV.T18(EAX).A
	PARMADJ	#4.N
	_cx:LINK(-44).A =   T307(EAX).A
	VAR START	di
; Line 4944:	        AMODE* di = makedreg(EDI); 

	PARM	#7.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T308(EAX).A =   RV.T19(EAX).A
	PARMADJ	#4.N
	_di:LINK(-48).A =   T308(EAX).A
	VAR START	si
; Line 4945:	        AMODE* si = makedreg(ESI); 

	PARM	#6.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T309(EAX).A =   RV.T20(EAX).A
	PARMADJ	#4.N
	_si:LINK(-52).A =   T309(EAX).A
; Line 4946:	        cx->liveRegs = q->liveRegs; 

	T310(EAX).A =   _q:LINK(4).A
	T311(ECX).I =   *(T310(EAX) + 48).A.ULL
	T312(EAX).A =   _cx:LINK(-44).A
	*(T312(EAX) + 10).A.I =   T311(ECX).I
; Line 4947:	        di->liveRegs = q->liveRegs; 

	T313(EAX).A =   _q:LINK(4).A
	T314(ECX).I =   *(T313(EAX) + 48).A.ULL
	T315(EAX).A =   _di:LINK(-48).A
	*(T315(EAX) + 10).A.I =   T314(ECX).I
; Line 4948:	        si->liveRegs = q->liveRegs; 

	T316(EAX).A =   _q:LINK(4).A
	T317(ECX).I =   *(T316(EAX) + 48).A.ULL
	T318(EAX).A =   _si:LINK(-52).A
	*(T318(EAX) + 10).A.I =   T317(ECX).I
; Line 4949:	        gen_codes(op_push, ISZ_UINT, di, 0); 

	T319(EAX).A =   #0.C
	PARM	T319(EAX).A
	T320(EAX).A =   _di:LINK(-48).A
	PARM	T320(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4950:	        gen_codes(op_push, ISZ_UINT, si, 0); 

	T321(EAX).A =   #0.C
	PARM	T321(EAX).A
	T322(EAX).A =   _si:LINK(-52).A
	PARM	T322(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4951:	        gen_codes(op_push, ISZ_UINT, cx, 0); 

	T323(EAX).A =   #0.C
	PARM	T323(EAX).A
	T324(EAX).A =   _cx:LINK(-44).A
	PARM	T324(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4952:	        pushlevel += 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #C.I
	DBG BLOCK START
	BLOCK END
	BLOCK 214

L_6834:
; Line 4953:	        if (samereg(di, apl)) 

	T325(EAX).A =   _apl:LINK(-8).A
	PARM	T325(EAX).A
	T326(EAX).A =   _di:LINK(-48).A
	PARM	T326(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T327(EAX).I =   RV.T21(EAX).I
	PARMADJ	#8.N
	CONDGO	L_6833:PC ; T327(EAX).I == #0.C
	BLOCK END
	BLOCK 215
	DBG BLOCK START
	BLOCK END
	BLOCK 216

L_6835:
; Line 4954:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 217

L_6836:
; Line 4955:	            if (samereg(si, apal)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 218

L_6838:
	T328(EAX).A =   _apal:LINK(-16).A
	PARM	T328(EAX).A
	T329(EAX).A =   _si:LINK(-52).A
	PARM	T329(EAX).A
	TAG
	GOSUB	#@occx86@samereg$qp5amodepn0:PC.UI
	T330(EAX).I =   RV.T22(EAX).I
	PARMADJ	#8.N
	CONDGO	L_6837:PC ; T330(EAX).I == #0.C
	BLOCK END
	BLOCK 219
	DBG BLOCK START
	BLOCK END
	BLOCK 220

L_6839:
; Line 4956:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_6840:
; Line 4957:	                gen_codes(op, ISZ_UINT, cx, apl); 

	T331(EAX).A =   _apl:LINK(-8).A
	PARM	T331(EAX).A
	T332(EAX).A =   _cx:LINK(-44).A
	PARM	T332(EAX).A
	PARM	#7.I
	T333(EAX).I =   _op:LINK(-24).I
	PARM	T333(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4958:	                gen_codes(opa, ISZ_UINT, di, apal); 

	T334(EAX).A =   _apal:LINK(-16).A
	PARM	T334(EAX).A
	T335(EAX).A =   _di:LINK(-48).A
	PARM	T335(EAX).A
	PARM	#7.I
	T336(EAX).I =   _opa:LINK(-28).I
	PARM	T336(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4959:	                gen_codes(op_mov, ISZ_UINT, si, cx); 

	T337(EAX).A =   _cx:LINK(-44).A
	PARM	T337(EAX).A
	T338(EAX).A =   _si:LINK(-52).A
	PARM	T338(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4960:	            } 

	BLOCK END
	BLOCK 222

L_6841:
	DBG BLOCK END
	BLOCK END
	BLOCK 223

L_6843:
	DBG BLOCK END
	GOTO	L_6842:PC
	BLOCK END
	BLOCK 224
	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_6844:
	BLOCK END
	BLOCK 226

L_6837:
; Line 4961:	            else 

; Line 4962:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 227

L_6845:
; Line 4963:	                gen_codes(op, ISZ_UINT, si, apl); 

	T339(EAX).A =   _apl:LINK(-8).A
	PARM	T339(EAX).A
	T340(EAX).A =   _si:LINK(-52).A
	PARM	T340(EAX).A
	PARM	#7.I
	T341(EAX).I =   _op:LINK(-24).I
	PARM	T341(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4964:	                gen_codes(opa, ISZ_UINT, di, apal); 

	T342(EAX).A =   _apal:LINK(-16).A
	PARM	T342(EAX).A
	T343(EAX).A =   _di:LINK(-48).A
	PARM	T343(EAX).A
	PARM	#7.I
	T344(EAX).I =   _opa:LINK(-28).I
	PARM	T344(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4965:	            } 

	BLOCK END
	BLOCK 228

L_6846:
	DBG BLOCK END
	BLOCK END
	BLOCK 229

L_6847:
	DBG BLOCK END
	BLOCK END
	BLOCK 230

L_6842:
	BLOCK END
	BLOCK 231

L_6848:
	DBG BLOCK END
; Line 4966:	        } 

	BLOCK END
	BLOCK 232

L_6849:
	DBG BLOCK END
	BLOCK END
	BLOCK 233

L_6851:
	DBG BLOCK END
	GOTO	L_6850:PC
	BLOCK END
	BLOCK 234
	DBG BLOCK START
	BLOCK END
	BLOCK 235

L_6852:
	BLOCK END
	BLOCK 236

L_6833:
; Line 4967:	        else 

; Line 4968:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 237

L_6853:
; Line 4969:	            gen_codes(opa, ISZ_UINT, di, apal); 

	T345(EAX).A =   _apal:LINK(-16).A
	PARM	T345(EAX).A
	T346(EAX).A =   _di:LINK(-48).A
	PARM	T346(EAX).A
	PARM	#7.I
	T347(EAX).I =   _opa:LINK(-28).I
	PARM	T347(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4970:	            gen_codes(op, ISZ_UINT, si, apl); 

	T348(EAX).A =   _apl:LINK(-8).A
	PARM	T348(EAX).A
	T349(EAX).A =   _si:LINK(-52).A
	PARM	T349(EAX).A
	PARM	#7.I
	T350(EAX).I =   _op:LINK(-24).I
	PARM	T350(EAX).I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4971:	        } 

	BLOCK END
	BLOCK 238

L_6854:
	DBG BLOCK END
	BLOCK END
	BLOCK 239

L_6855:
	DBG BLOCK END
	BLOCK END
	BLOCK 240

L_6850:
	BLOCK END
	BLOCK 241

L_6856:
	DBG BLOCK END
; Line 4972:	        gen_codes(op_mov, ISZ_UINT, cx, aimmed(n / 4)); 

	T351(ECX).I =   _n:LINK(-4).I
	T352(EAX).I = T351(ECX).I S>> #1.UI
	T353(EAX).I = T352(EAX).I U>> #1E.UI
	T354(EAX).I = T353(EAX).I + T351(ECX).I
	T355(EAX).I = T354(EAX).I S>> #2.UI
	T356(EDX:EAX).ULL =   T355(EAX).I
	PARM	T356(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T357(EAX).A =   RV.T23(EAX).A
	PARMADJ	#8.N
	PARM	T357(EAX).A
	T358(EAX).A =   _cx:LINK(-44).A
	PARM	T358(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4973:	        gen_code(op_cld, 0, 0); 

	T359(EAX).A =   #0.C
	PARM	T359(EAX).A
	T360(EAX).A =   #0.C
	PARM	T360(EAX).A
	PARM	#35.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4974:	        gen_code(op_rep, 0, 0); 

	T361(EAX).A =   #0.C
	PARM	T361(EAX).A
	T362(EAX).A =   #0.C
	PARM	T362(EAX).A
	PARM	#272.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4975:	        gen_code(op_cmpsd, 0, 0); 

	T363(EAX).A =   #0.C
	PARM	T363(EAX).A
	T364(EAX).A =   #0.C
	PARM	T364(EAX).A
	PARM	#5B.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	VAR START	labno1
; Line 4976:	        int labno1 = beGetLabel; 

	T365(EAX).I =   @Optimizer@nextLabel:RAM.I
	_labno1:LINK(-56).I =   T365(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	DBG BLOCK START
	BLOCK END
	BLOCK 242

L_6858:
; Line 4977:	        if (n & 2) 

	T366(EAX).I =   _n:LINK(-4).I
	T367(EAX).I = T366(EAX).I & #2.I
	CONDGO	L_6857:PC ; T367(EAX).I == #0.C
	BLOCK END
	BLOCK 243
	DBG BLOCK START
	BLOCK END
	BLOCK 244

L_6859:
; Line 4978:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_6860:
; Line 4979:	            gen_code(op_jne, make_label(labno1), NULL); 

	T368(EAX).A =   #0.C
	PARM	T368(EAX).A
	T369(EAX).I =   _labno1:LINK(-56).I
	PARM	T369(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T370(EAX).A =   RV.T24(EAX).A
	PARMADJ	#4.N
	PARM	T370(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4980:	            gen_code(op_cmpsw, 0, 0); 

	T371(EAX).A =   #0.C
	PARM	T371(EAX).A
	T372(EAX).A =   #0.C
	PARM	T372(EAX).A
	PARM	#5A.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4981:	        } 

	BLOCK END
	BLOCK 246

L_6861:
	DBG BLOCK END
	BLOCK END
	BLOCK 247

L_6862:
	DBG BLOCK END
	BLOCK END
	BLOCK 248

L_6857:
	BLOCK END
	BLOCK 249

L_6863:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 250

L_6865:
; Line 4982:	        if (n & 1) 

	T373(EAX).I =   _n:LINK(-4).I
	T374(EAX).I = T373(EAX).I & #1.C
	CONDGO	L_6864:PC ; T374(EAX).I == #0.C
	BLOCK END
	BLOCK 251
	DBG BLOCK START
	BLOCK END
	BLOCK 252

L_6866:
; Line 4983:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 253

L_6867:
; Line 4984:	            gen_code(op_jne, make_label(labno1), NULL); 

	T375(EAX).A =   #0.C
	PARM	T375(EAX).A
	T376(EAX).I =   _labno1:LINK(-56).I
	PARM	T376(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T377(EAX).A =   RV.T25(EAX).A
	PARMADJ	#4.N
	PARM	T377(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4985:	            gen_code(op_cmpsb, 0, 0); 

	T378(EAX).A =   #0.C
	PARM	T378(EAX).A
	T379(EAX).A =   #0.C
	PARM	T379(EAX).A
	PARM	#59.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4986:	        } 

	BLOCK END
	BLOCK 254

L_6868:
	DBG BLOCK END
	BLOCK END
	BLOCK 255

L_6869:
	DBG BLOCK END
	BLOCK END
	BLOCK 256

L_6864:
	BLOCK END
	BLOCK 257

L_6870:
	DBG BLOCK END
; Line 4987:	        oa_gen_label(labno1); 

	T380(EAX).I =   _labno1:LINK(-56).I
	PARM	T380(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 4988:	        gen_codes(op_pop, ISZ_UINT, cx, 0); 

	T381(EAX).A =   #0.C
	PARM	T381(EAX).A
	T382(EAX).A =   _cx:LINK(-44).A
	PARM	T382(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4989:	        gen_codes(op_pop, ISZ_UINT, si, 0); 

	T383(EAX).A =   #0.C
	PARM	T383(EAX).A
	T384(EAX).A =   _si:LINK(-52).A
	PARM	T384(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4990:	        gen_codes(op_pop, ISZ_UINT, di, 0); 

	T385(EAX).A =   #0.C
	PARM	T385(EAX).A
	T386(EAX).A =   _di:LINK(-48).A
	PARM	T386(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 4991:	        gen_code(op_jne, make_label(labno), NULL); 

	T387(EAX).A =   #0.C
	PARM	T387(EAX).A
	T388(EAX).I =   _labno:LINK(-40).I
	PARM	T388(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T389(EAX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	PARM	T389(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 4992:	        pushlevel -= 12; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #C.I
; Line 4993:	    } 

	BLOCK END
	BLOCK 258

L_6871:
	DBG BLOCK END
	BLOCK END
	BLOCK 259

L_6872:
	DBG BLOCK END
	BLOCK END
	BLOCK 260

L_6829:
	BLOCK END
	BLOCK 261

L_6873:
	DBG BLOCK END
; Line 4994:	} 

	BLOCK END
	BLOCK 262

L_6874:
	DBG BLOCK END
	BLOCK END
	BLOCK 263

L_6665:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jc$qp15@Optimizer@quad


global @occx86@asm_jc$qp15@Optimizer@quad
@occx86@asm_jc$qp15@Optimizer@quad:
; Line 4995:	void asm_jc(Optimizer::QUAD* q)   { gen_goto(q, op_jc, op_ja, op_jc, op_ja, op_jb, op_ja, op_jb); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6889:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6891:
	PARM	#E4.I
	PARM	#E2.I
	PARM	#E4.I
	PARM	#E2.I
	PARM	#E6.I
	PARM	#E2.I
	PARM	#E6.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6892:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6890:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_ja$qp15@Optimizer@quad


global @occx86@asm_ja$qp15@Optimizer@quad
@occx86@asm_ja$qp15@Optimizer@quad:
; Line 4996:	void asm_ja(Optimizer::QUAD* q)   { gen_goto(q, op_ja, op_jc, op_ja, op_jc, op_ja, op_jb, op_ja); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6897:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6899:
	PARM	#E2.I
	PARM	#E4.I
	PARM	#E2.I
	PARM	#E6.I
	PARM	#E2.I
	PARM	#E6.I
	PARM	#E2.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6900:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6898:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_je$qp15@Optimizer@quad


global @occx86@asm_je$qp15@Optimizer@quad
@occx86@asm_je$qp15@Optimizer@quad:
; Line 4997:	void asm_je(Optimizer::QUAD* q)   { gen_goto(q, op_je, op_jne, op_je, op_jne, op_je, op_jne, op_je); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6905:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6907:
	PARM	#E9.I
	PARM	#F4.I
	PARM	#E9.I
	PARM	#F4.I
	PARM	#E9.I
	PARM	#F4.I
	PARM	#E9.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6908:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6906:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jnc$qp15@Optimizer@quad


global @occx86@asm_jnc$qp15@Optimizer@quad
@occx86@asm_jnc$qp15@Optimizer@quad:
; Line 4998:	void asm_jnc(Optimizer::QUAD* q)   { gen_goto(q, op_jnc, op_jbe, op_ja, op_jc, op_jae, op_jbe, op_jae); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6913:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6915:
	PARM	#E3.I
	PARM	#E5.I
	PARM	#E3.I
	PARM	#E6.I
	PARM	#E2.I
	PARM	#E5.I
	PARM	#F3.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6916:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6914:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jbe$qp15@Optimizer@quad


global @occx86@asm_jbe$qp15@Optimizer@quad
@occx86@asm_jbe$qp15@Optimizer@quad:
; Line 4999:	void asm_jbe(Optimizer::QUAD* q)   { gen_goto(q, op_jbe, op_jnc, op_jc, op_ja, op_jbe, op_jnc, op_jbe); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6921:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6923:
	PARM	#E5.I
	PARM	#F3.I
	PARM	#E5.I
	PARM	#E2.I
	PARM	#E6.I
	PARM	#F3.I
	PARM	#E5.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6924:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6922:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jne$qp15@Optimizer@quad


global @occx86@asm_jne$qp15@Optimizer@quad
@occx86@asm_jne$qp15@Optimizer@quad:
; Line 5000:	void asm_jne(Optimizer::QUAD* q)   { gen_goto(q, op_jne, op_je, op_jne, op_je, op_jne, op_je, op_jne); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6929:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6931:
	PARM	#F4.I
	PARM	#E9.I
	PARM	#F4.I
	PARM	#E9.I
	PARM	#F4.I
	PARM	#E9.I
	PARM	#F4.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6932:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6930:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jl$qp15@Optimizer@quad


global @occx86@asm_jl$qp15@Optimizer@quad
@occx86@asm_jl$qp15@Optimizer@quad:
; Line 5001:	void asm_jl(Optimizer::QUAD* q)   { gen_goto(q, op_jl, op_jg, op_jl, op_jg, op_jb, op_ja, op_jb); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6937:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6939:
	PARM	#E4.I
	PARM	#E2.I
	PARM	#E4.I
	PARM	#EA.I
	PARM	#EC.I
	PARM	#EA.I
	PARM	#EC.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6940:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6938:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jg$qp15@Optimizer@quad


global @occx86@asm_jg$qp15@Optimizer@quad
@occx86@asm_jg$qp15@Optimizer@quad:
; Line 5002:	void asm_jg(Optimizer::QUAD* q)   { gen_goto(q, op_jg, op_jl, op_jg, op_jl, op_ja, op_jb, op_ja); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6945:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6947:
	PARM	#E2.I
	PARM	#E4.I
	PARM	#E2.I
	PARM	#EC.I
	PARM	#EA.I
	PARM	#EC.I
	PARM	#EA.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6948:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6946:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jle$qp15@Optimizer@quad


global @occx86@asm_jle$qp15@Optimizer@quad
@occx86@asm_jle$qp15@Optimizer@quad:
; Line 5003:	void asm_jle(Optimizer::QUAD* q)   { gen_goto(q, op_jle, op_jge, op_jl, op_jg, op_jbe, op_jae, op_jbe); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6953:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6955:
	PARM	#E5.I
	PARM	#E3.I
	PARM	#E5.I
	PARM	#EA.I
	PARM	#EC.I
	PARM	#EB.I
	PARM	#ED.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6956:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6954:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_jge$qp15@Optimizer@quad


global @occx86@asm_jge$qp15@Optimizer@quad
@occx86@asm_jge$qp15@Optimizer@quad:
; Line 5004:	void asm_jge(Optimizer::QUAD* q)   { gen_goto(q, op_jge, op_jle, op_jg, op_jl, op_jae, op_jbe, op_jae); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6961:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6963:
	PARM	#E3.I
	PARM	#E5.I
	PARM	#E3.I
	PARM	#EC.I
	PARM	#EA.I
	PARM	#ED.I
	PARM	#EB.I
	T0(EAX).A =   _q:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@occx86@gen_goto$qp15@Optimizer@quad8e_opcoden1n1n1n1n1n1:PC.UI
	PARMADJ	#20.N
	BLOCK END
	BLOCK 4

L_6964:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6962:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_cppini$qp15@Optimizer@quad


global @occx86@asm_cppini$qp15@Optimizer@quad
@occx86@asm_cppini$qp15@Optimizer@quad:
; Line 5005:	void asm_cppini(Optimizer::QUAD* q)   { (void)q; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_6969:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6971:
	BLOCK END
	BLOCK 4

L_6972:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_6970:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_prologue$qp15@Optimizer@quad


global @occx86@asm_prologue$qp15@Optimizer@quad
@occx86@asm_prologue$qp15@Optimizer@quad:
; Line 5014:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_6978:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_6980:
; Line 5015:	    inframe = 

	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).A =   *(T13(EAX) + 4+0).A.A
	T15(EAX).A =   *(T14(EAX) + 4).A.A
	T16(EDX:EAX).ULL =   *(T15(EAX) + 8).A.LL
	T17(EDX:EAX).ULL = T16(EDX:EAX).ULL & #8000000000000000.ULL
	CONDGO	L_7105:PC ; T17(EDX:EAX).ULL != #0.ULL
	BLOCK END
	BLOCK 4
	T18(AL).BOOL =   @Optimizer@cparams:RAM+24.BOOL
	CONDGO	L_7105:PC ; T18(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	T19(EAX).I =   @Optimizer@cparams:RAM+4.I
	CONDGO	L_7105:PC ; T19(EAX).I != #0.C
	BLOCK END
	BLOCK 6
	T21(EAX).UI =   #0.UI
	GOTO	L_7106:PC
	BLOCK END
	BLOCK 7

L_7105:
	T21(EAX).UI =   #1.UI
	BLOCK END
	BLOCK 8

L_7106:
	@occx86@inframe:RAM.I =   T21(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_6982:
; Line 5017:	    if (inframe) 

	T22(EAX).I =   @occx86@inframe:RAM.I
	CONDGO	L_6981:PC ; T22(EAX).I == #0.C
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_6983:
; Line 5018:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_6984:
; Line 5019:	        int n = beGetIcon(q->dc.right); 

	VAR START	n
	T23(EAX).A =   _q:LINK(4).A
	T24(EAX).A =   *(T23(EAX) + 8+0).A.A
	T25(EAX).A =   *(T24(EAX) + 4).A.A
	T26(EAX).I =   *(T25(EAX) + 8).A.LL
	_n:LINK(-16).I =   T26(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_6986:
; Line 5021:	        if (Optimizer::cparams.prm_stackalign && beGetIcon(q->dc.left) != 0) 

	T27(EAX).I =   @Optimizer@cparams:RAM+4.I
	CONDGO	L_6985:PC ; T27(EAX).I == #0.C
	BLOCK END
	BLOCK 14
	T28(EAX).A =   _q:LINK(4).A
	T29(EAX).A =   *(T28(EAX) + 4+0).A.A
	T30(EAX).A =   *(T29(EAX) + 4).A.A
	T31(EDX:EAX).LL =   *(T30(EAX) + 8).A.LL
	CONDGO	L_6985:PC ; T31(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_6987:
; Line 5022:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_6988:
; Line 5024:	            int cnt = 0; 

	VAR START	cnt
	T32(EAX).I =   #0.C
	_cnt:LINK(-24).I =   T32(EAX).I
	VAR START	mask
; Line 5025:	            int mask = 1, compare; 

	T33(EAX).I =   #1.C
	_mask:LINK(-28).I =   T33(EAX).I
	VAR START	compare
; Line 5026:	            compare = (unsigned)(beGetIcon(q->dc.left) & ~(FRAME_FLAG_NEEDS_FRAME)); 

	T34(EAX).A =   _q:LINK(4).A
	T35(EAX).A =   *(T34(EAX) + 4+0).A.A
	T36(EAX).A =   *(T35(EAX) + 4).A.A
	T37(EDX:EAX).ULL =   *(T36(EAX) + 8).A.LL
	T38(EDX:EAX).ULL = T37(EDX:EAX).ULL & #7FFFFFFFFFFFFFFF.ULL
	T40(EAX).UI =   T38(EDX:EAX).ULL
	_compare:LINK(-32).I =   T40(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_6992:
	GOTO	L_6991:PC
	BLOCK END
	BLOCK 19

L_6989:
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_6993:
; Line 5028:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_6994:
; Line 5029:	                if (mask & compare) 

	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_6996:
	T43(ECX).I =   _mask:LINK(-28).I
	T44(EAX).I =   _compare:LINK(-32).I
	T45(EAX).I = T43(ECX).I & T44(EAX).I
	CONDGO	L_6995:PC ; T45(EAX).I == #0.C
	BLOCK END
	BLOCK 23
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_6997:
; Line 5030:	                    cnt += 4; 

	_cnt:LINK(-24).I = _cnt:LINK(-24).I + #4.I
	BLOCK END
	BLOCK 25

L_6998:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_6995:
	BLOCK END
	BLOCK 27

L_6999:
	DBG BLOCK END
; Line 5031:	                mask <<= 1; 

	_mask:LINK(-28).I = _mask:LINK(-28).I << #1.C
; Line 5032:	            } 

	BLOCK END
	BLOCK 28

L_7000:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_7001:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_6991:
; Line 5027:	            while (mask <= compare) 

	T41(ECX).I =   _compare:LINK(-32).I
	T42(EAX).I =   _mask:LINK(-28).I
	CONDGO	L_6989:PC ; T42(EAX).I S<= T41(ECX).I
	BLOCK END
	BLOCK 31

L_6990:
	BLOCK END
	BLOCK 32

L_7002:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_7004:
; Line 5033:	            if (cnt % Optimizer::cparams.prm_stackalign) 

	T46(EAX).I =   _cnt:LINK(-24).I
	T47(EDX:EAX).LL =   T46(EAX).I
	T125(EDX).I = T47(EDX:EAX).LL S% @Optimizer@cparams:RAM+4.I
	CONDGO	L_7003:PC ; T125(EDX).I == #0.C
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_7005:
; Line 5034:	                cnt = Optimizer::cparams.prm_stackalign - cnt % Optimizer::cparams.prm_stackalign; 

	T50(EAX).I =   _cnt:LINK(-24).I
	T51(EDX:EAX).LL =   T50(EAX).I
	T126(EDX).I = T51(EDX:EAX).LL S% @Optimizer@cparams:RAM+4.I
	T54(EAX).I = @Optimizer@cparams:RAM+4.I - T126(EDX).I
	_cnt:LINK(-24).I =   T54(EAX).I
	BLOCK END
	BLOCK 36

L_7006:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_7003:
	BLOCK END
	BLOCK 38

L_7007:
	DBG BLOCK END
; Line 5035:	            n += cnt; 

	T55(ECX).I =   _n:LINK(-16).I
	T56(EAX).I =   _cnt:LINK(-24).I
	T57(EAX).I = T55(ECX).I + T56(EAX).I
	_n:LINK(-16).I =   T57(EAX).I
; Line 5036:	        } 

	BLOCK END
	BLOCK 39

L_7008:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_7009:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_6985:
	BLOCK END
	BLOCK 42

L_7010:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_7012:
; Line 5038:	        if (!usingEsp) 

	T58(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_7011:PC ; T58(EAX).I != #0.C
	BLOCK END
	BLOCK 44
	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_7013:
; Line 5039:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_7014:
; Line 5040:	            gen_codes(op_push, ISZ_UINT, makedreg(EBP), 0); 

	T59(EAX).A =   #0.C
	PARM	T59(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T60(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T60(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5041:	            gen_code(op_mov, makedreg(EBP), makedreg(ESP)); 

	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T61(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T61(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T62(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T62(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5042:	        } 

	BLOCK END
	BLOCK 47

L_7015:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_7016:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_7011:
	BLOCK END
	BLOCK 50

L_7017:
	DBG BLOCK END
; Line 5043:	        pushlevel = 0; 

	T63(EAX).I =   #0.C
	@occx86@pushlevel:RAM.I =   T63(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_7019:
; Line 5044:	        if (n) 

	T64(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7018:PC ; T64(EAX).I == #0.C
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_7020:
; Line 5045:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_7021:
; Line 5046:	            if (n < 16) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_7023:
	T65(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7022:PC ; T65(EAX).I S>= #10.I
	BLOCK END
	BLOCK 56
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_7024:
; Line 5047:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_7025:
; Line 5048:	                int i; 

	VAR START	i
	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_7030:
; Line 5049:	                for (i = 0; i < n; i += 4) 

	T66(EAX).I =   #0.C
	_i:LINK(-20).I =   T66(EAX).I
	GOTO	L_7027:PC
	BLOCK END
	BLOCK 60

L_7026:
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_7031:
; Line 5050:	                    gen_codes(op_push, ISZ_UINT, makedreg(ECX), 0); 

	T69(EAX).A =   #0.C
	PARM	T69(EAX).A
	T70(EAX).UI =   #1.C
	PARM	T70(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T71(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T71(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 62

L_7032:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_7029:
	_i:LINK(-20).I = _i:LINK(-20).I + #4.I
	BLOCK END
	BLOCK 64

L_7027:
	T67(ECX).I =   _n:LINK(-16).I
	T68(EAX).I =   _i:LINK(-20).I
	CONDGO	L_7026:PC ; T68(EAX).I S< T67(ECX).I
	BLOCK END
	BLOCK 65

L_7028:
	BLOCK END
	BLOCK 66

L_7033:
	DBG BLOCK END
; Line 5051:	            } 

	BLOCK END
	BLOCK 67

L_7034:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_7036:
	DBG BLOCK END
	GOTO	L_7035:PC
	BLOCK END
	BLOCK 69
	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_7037:
	BLOCK END
	BLOCK 71

L_7022:
; Line 5052:	            else if (n <= 4092) 

	DBG BLOCK START
	BLOCK END
	BLOCK 72

L_7039:
	T72(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7038:PC ; T72(EAX).I S> #FFC.I
	BLOCK END
	BLOCK 73
	DBG BLOCK START
	BLOCK END
	BLOCK 74

L_7040:
; Line 5053:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_7041:
; Line 5054:	                gen_code(op_add, makedreg(ESP), aimmed(-n)); 

	T73(EAX).I =   _n:LINK(-16).I
	T74(EAX).I =  - T73(EAX).I
	T75(EDX:EAX).ULL =   T74(EAX).I
	PARM	T75(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T76(EAX).A =   RV.T4(EAX).A
	PARMADJ	#8.N
	PARM	T76(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T77(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T77(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5055:	            } 

	BLOCK END
	BLOCK 76

L_7042:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_7044:
	DBG BLOCK END
	GOTO	L_7043:PC
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_7045:
	BLOCK END
	BLOCK 80

L_7038:
; Line 5056:	            else 

; Line 5057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_7046:
; Line 5058:	                if (n <= 8188) 

	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_7048:
	T78(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7047:PC ; T78(EAX).I S> #1FFC.I
	BLOCK END
	BLOCK 83
	DBG BLOCK START
	BLOCK END
	BLOCK 84

L_7049:
; Line 5059:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 85

L_7050:
; Line 5060:	                    gen_code(op_add, makedreg(ESP), aimmed(-4092)); 

	T79(EDX:EAX).ULL =   #FFFFFFFFFFFFF004.I
	PARM	T79(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T80(EAX).A =   RV.T6(EAX).A
	PARMADJ	#8.N
	PARM	T80(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T81(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T81(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5061:	                    gen_codes(op_push, ISZ_UINT, makedreg(EAX), 0); 

	T82(EAX).A =   #0.C
	PARM	T82(EAX).A
	T83(EAX).UI =   #0.C
	PARM	T83(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T84(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T84(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5062:	                    gen_code(op_add, makedreg(ESP), aimmed(-(n - 4096))); 

	T85(EAX).I =   _n:LINK(-16).I
	T86(EAX).I = T85(EAX).I - #1000.I
	T87(EAX).I =  - T86(EAX).I
	T88(EDX:EAX).ULL =   T87(EAX).I
	PARM	T88(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T89(EAX).A =   RV.T9(EAX).A
	PARMADJ	#8.N
	PARM	T89(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T90(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	PARM	T90(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5063:	                } 

	BLOCK END
	BLOCK 86

L_7051:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_7053:
	DBG BLOCK END
	GOTO	L_7052:PC
	BLOCK END
	BLOCK 88
	DBG BLOCK START
	BLOCK END
	BLOCK 89

L_7054:
	BLOCK END
	BLOCK 90

L_7047:
; Line 5064:	                else 

; Line 5065:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 91

L_7055:
; Line 5066:	                    n += 15;    

	_n:LINK(-16).I = _n:LINK(-16).I + #F.I
; Line 5067:	                    n &= -16;   

	_n:LINK(-16).I = _n:LINK(-16).I & #FFFFFFFFFFFFFFF0.I
; Line 5068:	                    gen_codes(op_push, ISZ_UINT, aimmed(n), 0); 

	T91(EAX).A =   #0.C
	PARM	T91(EAX).A
	T92(EDX:EAX).ULL =   _n:LINK(-16).I
	PARM	T92(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T93(EAX).A =   RV.T11(EAX).A
	PARMADJ	#8.N
	PARM	T93(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5069:	                    callLibrary("___substackp", 0); 

	T94(EAX).UI =   #0.C
	PARM	T94(EAX).UI
	PARM	#L_6977:PC.A
	TAG
	GOSUB	#@occx86@callLibrary$qpxci:PC.UI
	PARMADJ	#8.N
; Line 5070:	                } 

	BLOCK END
	BLOCK 92

L_7056:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_7057:
	DBG BLOCK END
	BLOCK END
	BLOCK 94

L_7052:
	BLOCK END
	BLOCK 95

L_7058:
	DBG BLOCK END
; Line 5071:	            } 

	BLOCK END
	BLOCK 96

L_7059:
	DBG BLOCK END
	BLOCK END
	BLOCK 97

L_7060:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_7043:
	BLOCK END
	BLOCK 99

L_7061:
	DBG BLOCK END
	BLOCK END
	BLOCK 100

L_7062:
	DBG BLOCK END
	BLOCK END
	BLOCK 101

L_7035:
	BLOCK END
	BLOCK 102

L_7063:
	DBG BLOCK END
; Line 5072:	        } 

	BLOCK END
	BLOCK 103

L_7064:
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_7065:
	DBG BLOCK END
	BLOCK END
	BLOCK 105

L_7018:
	BLOCK END
	BLOCK 106

L_7066:
	DBG BLOCK END
; Line 5073:	        funcstackheight = n; 

	T95(EAX).I =   _n:LINK(-16).I
	@occx86@funcstackheight:RAM.I =   T95(EAX).I
; Line 5074:	    } 

	BLOCK END
	BLOCK 107

L_7067:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_7069:
	DBG BLOCK END
	GOTO	L_7068:PC
	BLOCK END
	BLOCK 109
	DBG BLOCK START
	BLOCK END
	BLOCK 110

L_7070:
	BLOCK END
	BLOCK 111

L_6981:
; Line 5075:	    else 

; Line 5076:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 112

L_7071:
; Line 5077:	        funcstackheight = 0; 

	T96(EAX).I =   #0.C
	@occx86@funcstackheight:RAM.I =   T96(EAX).I
; Line 5078:	    } 

	BLOCK END
	BLOCK 113

L_7072:
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_7073:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_7068:
	BLOCK END
	BLOCK 116

L_7074:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 117

L_7076:
; Line 5079:	    if (beGetIcon(q->dc.left) != 0) 

	T97(EAX).A =   _q:LINK(4).A
	T98(EAX).A =   *(T97(EAX) + 4+0).A.A
	T99(EAX).A =   *(T98(EAX) + 4).A.A
	T100(EDX:EAX).LL =   *(T99(EAX) + 8).A.LL
	CONDGO	L_7075:PC ; T100(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 118
	DBG BLOCK START
	BLOCK END
	BLOCK 119

L_7077:
; Line 5080:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_7078:
; Line 5081:	        int cnt = 0; 

	VAR START	cnt
	T101(EAX).I =   #0.C
	_cnt:LINK(-4).I =   T101(EAX).I
	VAR START	mask
; Line 5082:	        int mask = 1, compare; 

	T102(EAX).I =   #1.C
	_mask:LINK(-8).I =   T102(EAX).I
	VAR START	compare
; Line 5083:	        compare = (unsigned)(beGetIcon(q->dc.left) & ~(FRAME_FLAG_NEEDS_FRAME)); 

	T103(EAX).A =   _q:LINK(4).A
	T104(EAX).A =   *(T103(EAX) + 4+0).A.A
	T105(EAX).A =   *(T104(EAX) + 4).A.A
	T106(EDX:EAX).ULL =   *(T105(EAX) + 8).A.LL
	T107(EDX:EAX).ULL = T106(EDX:EAX).ULL & #7FFFFFFFFFFFFFFF.ULL
	T109(EAX).UI =   T107(EDX:EAX).ULL
	_compare:LINK(-12).I =   T109(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 121

L_7080:
; Line 5084:	        if (currentFunction->anyTry) 

	T110(EAX).A =   _currentFunction:RAM.A
	CONDGO	L_7079:PC ; *(T110(EAX) + 50){21:1}.A.UI == #0.UI
	BLOCK END
	BLOCK 122
	DBG BLOCK START
	BLOCK END
	BLOCK 123

L_7081:
; Line 5085:	            compare |= 0xc8;   

	_compare:LINK(-12).I = _compare:LINK(-12).I | #C8.I
	BLOCK END
	BLOCK 124

L_7082:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_7079:
	BLOCK END
	BLOCK 126

L_7083:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_7087:
	GOTO	L_7086:PC
	BLOCK END
	BLOCK 128

L_7084:
	DBG BLOCK START
	BLOCK END
	BLOCK 129

L_7088:
; Line 5087:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 130

L_7089:
; Line 5088:	            if (mask & compare) 

	DBG BLOCK START
	BLOCK END
	BLOCK 131

L_7091:
	T113(ECX).I =   _mask:LINK(-8).I
	T114(EAX).I =   _compare:LINK(-12).I
	T115(EAX).I = T113(ECX).I & T114(EAX).I
	CONDGO	L_7090:PC ; T115(EAX).I == #0.C
	BLOCK END
	BLOCK 132
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_7092:
; Line 5089:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 134

L_7093:
; Line 5090:	                funcstackheight += 4; 

	@occx86@funcstackheight:RAM.I = @occx86@funcstackheight:RAM.I + #4.I
; Line 5091:	                gen_codes(op_push, ISZ_UINT, makedreg(Optimizer::chosenAssembler->arch->regMap[cnt][0]), 0); 

	T116(EAX).A =   #0.C
	PARM	T116(EAX).A
	T117(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T118(EAX).A =   *(T117(EAX) + 44).A.A
	T119(ECX).A =   *(T118(EAX) + 58).A.A
	T120(EAX).I =   _cnt:LINK(-4).I
	T121(EAX).I =   *(T119(ECX) + T120(EAX) * 8).A.I
	PARM	T121(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T122(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T122(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5092:	            } 

	BLOCK END
	BLOCK 135

L_7094:
	DBG BLOCK END
	BLOCK END
	BLOCK 136

L_7095:
	DBG BLOCK END
	BLOCK END
	BLOCK 137

L_7090:
	BLOCK END
	BLOCK 138

L_7096:
	DBG BLOCK END
; Line 5093:	            cnt++, mask <<= 1; 

	_cnt:LINK(-4).I = _cnt:LINK(-4).I + #1.C
	_mask:LINK(-8).I = _mask:LINK(-8).I << #1.C
; Line 5094:	        } 

	BLOCK END
	BLOCK 139

L_7097:
	DBG BLOCK END
	BLOCK END
	BLOCK 140

L_7098:
	DBG BLOCK END
	BLOCK END
	BLOCK 141

L_7086:
; Line 5086:	        while (mask <= compare) 

	T111(ECX).I =   _compare:LINK(-12).I
	T112(EAX).I =   _mask:LINK(-8).I
	CONDGO	L_7084:PC ; T112(EAX).I S<= T111(ECX).I
	BLOCK END
	BLOCK 142

L_7085:
	BLOCK END
	BLOCK 143

L_7099:
	DBG BLOCK END
; Line 5095:	    } 

	BLOCK END
	BLOCK 144

L_7100:
	DBG BLOCK END
	BLOCK END
	BLOCK 145

L_7101:
	DBG BLOCK END
	BLOCK END
	BLOCK 146

L_7075:
	BLOCK END
	BLOCK 147

L_7102:
	DBG BLOCK END
; Line 5096:	} 

	BLOCK END
	BLOCK 148

L_7103:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_6979:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_epilogue$qp15@Optimizer@quad


global @occx86@asm_epilogue$qp15@Optimizer@quad
@occx86@asm_epilogue$qp15@Optimizer@quad:
; Line 5101:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_7111:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7113:
; Line 5102:	    if (pushlevel != 0 && usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_7115:
	T7(EAX).I =   @occx86@pushlevel:RAM.I
	CONDGO	L_7114:PC ; T7(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	T8(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_7114:PC ; T8(EAX).I == #0.C
	BLOCK END
	BLOCK 6
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_7116:
; Line 5103:	        diag("asm_epilogue: pushlevel not aligned"); 

	PARM	#L_7110:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 8

L_7117:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_7114:
	BLOCK END
	BLOCK 10

L_7118:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_7120:
; Line 5104:	    if (beGetIcon(q->dc.left) != 0) 

	T9(EAX).A =   _q:LINK(4).A
	T10(EAX).A =   *(T9(EAX) + 4+0).A.A
	T11(EAX).A =   *(T10(EAX) + 4).A.A
	T12(EDX:EAX).LL =   *(T11(EAX) + 8).A.LL
	CONDGO	L_7119:PC ; T12(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 12
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_7121:
; Line 5105:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_7122:
; Line 5106:	        int mask = 0x80, compare; 

	VAR START	mask
	_mask:LINK(-8).I =   #80.I
	VAR START	compare
	VAR START	cnt
; Line 5107:	        int cnt = 7; 

	_cnt:LINK(-16).I =   #7.I
; Line 5108:	        compare = (unsigned)(beGetIcon(q->dc.left) & ~(FRAME_FLAG_NEEDS_FRAME)); 

	T13(EAX).A =   _q:LINK(4).A
	T14(EAX).A =   *(T13(EAX) + 4+0).A.A
	T15(EAX).A =   *(T14(EAX) + 4).A.A
	T16(EDX:EAX).ULL =   *(T15(EAX) + 8).A.LL
	T17(EDX:EAX).ULL = T16(EDX:EAX).ULL & #7FFFFFFFFFFFFFFF.ULL
	T19(EAX).UI =   T17(EDX:EAX).ULL
	_compare:LINK(-12).I =   T19(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_7124:
; Line 5109:	        if (currentFunction->anyTry) 

	T20(EAX).A =   _currentFunction:RAM.A
	CONDGO	L_7123:PC ; *(T20(EAX) + 50){21:1}.A.UI == #0.UI
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_7125:
; Line 5110:	            compare |= 0xc8;   

	_compare:LINK(-12).I = _compare:LINK(-12).I | #C8.I
	BLOCK END
	BLOCK 18

L_7126:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_7123:
	BLOCK END
	BLOCK 20

L_7127:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 21

L_7131:
	GOTO	L_7130:PC
	BLOCK END
	BLOCK 22

L_7128:
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_7132:
; Line 5112:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_7133:
; Line 5113:	            if (mask & compare) 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_7135:
	T22(ECX).I =   _mask:LINK(-8).I
	T23(EAX).I =   _compare:LINK(-12).I
	T24(EAX).I = T22(ECX).I & T23(EAX).I
	CONDGO	L_7134:PC ; T24(EAX).I == #0.C
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_7136:
; Line 5114:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_7137:
; Line 5115:	                gen_codes(op_pop, ISZ_UINT, makedreg(Optimizer::chosenAssembler->arch->regMap[cnt][0]), 0); 

	T25(EAX).A =   #0.C
	PARM	T25(EAX).A
	T26(EAX).A =   @Optimizer@chosenAssembler:RAM.A
	T27(EAX).A =   *(T26(EAX) + 44).A.A
	T28(ECX).A =   *(T27(EAX) + 58).A.A
	T29(EAX).I =   _cnt:LINK(-16).I
	T30(EAX).I =   *(T28(ECX) + T29(EAX) * 8).A.I
	PARM	T30(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T31(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T31(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5116:	                funcstackheight -= 4; 

	@occx86@funcstackheight:RAM.I = @occx86@funcstackheight:RAM.I - #4.I
; Line 5117:	            } 

	BLOCK END
	BLOCK 29

L_7138:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_7139:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_7134:
	BLOCK END
	BLOCK 32

L_7140:
	DBG BLOCK END
; Line 5118:	            cnt--, mask >>= 1; 

	_cnt:LINK(-16).I = _cnt:LINK(-16).I - #1.C
	_mask:LINK(-8).I = _mask:LINK(-8).I S>> #1.C
; Line 5119:	        } 

	BLOCK END
	BLOCK 33

L_7141:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_7142:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_7130:
; Line 5111:	        while (mask) 

	T21(EAX).I =   _mask:LINK(-8).I
	CONDGO	L_7128:PC ; T21(EAX).I != #0.C
	BLOCK END
	BLOCK 36

L_7129:
	BLOCK END
	BLOCK 37

L_7143:
	DBG BLOCK END
; Line 5120:	    } 

	BLOCK END
	BLOCK 38

L_7144:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_7145:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_7119:
	BLOCK END
	BLOCK 41

L_7146:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_7148:
; Line 5121:	    if (inframe) 

	T32(EAX).I =   @occx86@inframe:RAM.I
	CONDGO	L_7147:PC ; T32(EAX).I == #0.C
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_7149:
; Line 5122:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_7150:
; Line 5123:	        if (usingEsp) 

	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_7152:
	T33(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_7151:PC ; T33(EAX).I == #0.C
	BLOCK END
	BLOCK 47
	DBG BLOCK START
	BLOCK END
	BLOCK 48

L_7153:
; Line 5124:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_7154:
; Line 5125:	            if (funcstackheight <= 16) 

	DBG BLOCK START
	BLOCK END
	BLOCK 50

L_7156:
	T34(EAX).I =   @occx86@funcstackheight:RAM.I
	CONDGO	L_7155:PC ; T34(EAX).I S> #10.I
	BLOCK END
	BLOCK 51
	DBG BLOCK START
	BLOCK END
	BLOCK 52

L_7157:
; Line 5126:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_7158:
; Line 5127:	                int i; 

	VAR START	i
	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_7163:
; Line 5128:	                for (i = 0; i < funcstackheight; i += 4) 

	T35(EAX).I =   #0.C
	_i:LINK(-4).I =   T35(EAX).I
	GOTO	L_7160:PC
	BLOCK END
	BLOCK 55

L_7159:
	DBG BLOCK START
	BLOCK END
	BLOCK 56

L_7164:
; Line 5129:	                    gen_codes(op_pop, ISZ_UINT, makedreg(ECX), 0); 

	T38(EAX).A =   #0.C
	PARM	T38(EAX).A
	T39(EAX).UI =   #1.C
	PARM	T39(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T40(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T40(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 57

L_7165:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_7162:
	_i:LINK(-4).I = _i:LINK(-4).I + #4.I
	BLOCK END
	BLOCK 59

L_7160:
	T36(ECX).I =   @occx86@funcstackheight:RAM.I
	T37(EAX).I =   _i:LINK(-4).I
	CONDGO	L_7159:PC ; T37(EAX).I S< T36(ECX).I
	BLOCK END
	BLOCK 60

L_7161:
	BLOCK END
	BLOCK 61

L_7166:
	DBG BLOCK END
; Line 5130:	            } 

	BLOCK END
	BLOCK 62

L_7167:
	DBG BLOCK END
	BLOCK END
	BLOCK 63

L_7169:
	DBG BLOCK END
	GOTO	L_7168:PC
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_7170:
	BLOCK END
	BLOCK 66

L_7155:
; Line 5131:	            else 

; Line 5132:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_7171:
; Line 5133:	                gen_code(op_add, makedreg(ESP), aimmed(funcstackheight)); 

	T41(EDX:EAX).ULL =   @occx86@funcstackheight:RAM.I
	PARM	T41(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T42(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T42(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T43(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T43(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5134:	            } 

	BLOCK END
	BLOCK 68

L_7172:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_7173:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_7168:
	BLOCK END
	BLOCK 71

L_7174:
	DBG BLOCK END
; Line 5135:	        } 

	BLOCK END
	BLOCK 72

L_7175:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_7177:
	DBG BLOCK END
	GOTO	L_7176:PC
	BLOCK END
	BLOCK 74
	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_7178:
	BLOCK END
	BLOCK 76

L_7151:
; Line 5136:	        else 

; Line 5137:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_7179:
; Line 5138:	            if (beGetIcon(q->dc.right)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_7181:
	T44(EAX).A =   _q:LINK(4).A
	T45(EAX).A =   *(T44(EAX) + 8+0).A.A
	T46(EAX).A =   *(T45(EAX) + 4).A.A
	T47(EDX:EAX).LL =   *(T46(EAX) + 8).A.LL
	CONDGO	L_7180:PC ; T47(EDX:EAX).LL == #0.LL
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_7182:
; Line 5139:	                gen_code(op_mov, makedreg(ESP), makedreg(EBP)); 

	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T48(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T48(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T49(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T49(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 81

L_7183:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_7180:
	BLOCK END
	BLOCK 83

L_7184:
	DBG BLOCK END
; Line 5140:	            gen_codes(op_pop, ISZ_UINT, makedreg(EBP), 0); 

	T50(EAX).A =   #0.C
	PARM	T50(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T51(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T51(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5141:	        } 

	BLOCK END
	BLOCK 84

L_7185:
	DBG BLOCK END
	BLOCK END
	BLOCK 85

L_7186:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_7176:
	BLOCK END
	BLOCK 87

L_7187:
	DBG BLOCK END
; Line 5142:	    } 

	BLOCK END
	BLOCK 88

L_7188:
	DBG BLOCK END
	BLOCK END
	BLOCK 89

L_7189:
	DBG BLOCK END
	BLOCK END
	BLOCK 90

L_7147:
	BLOCK END
	BLOCK 91

L_7190:
	DBG BLOCK END
; Line 5143:	} 

	BLOCK END
	BLOCK 92

L_7191:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_7112:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_pushcontext$qp15@Optimizer@quad


global @occx86@asm_pushcontext$qp15@Optimizer@quad
@occx86@asm_pushcontext$qp15@Optimizer@quad:
; Line 5148:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7196:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7198:
; Line 5149:	    (void)q; 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_7200:
; Line 5150:	    if (Optimizer::cparams.prm_farkeyword) 

	T3(AL).BOOL =   @Optimizer@cparams:RAM+34.BOOL
	CONDGO	L_7199:PC ; T3(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_7201:
; Line 5151:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_7202:
; Line 5152:	        gen_codes(op_push, ISZ_UINT, makesegreg(ES), 0); 

	T4(EAX).A =   #0.C
	PARM	T4(EAX).A
	T5(EAX).UI =   #3.C
	PARM	T5(EAX).UI
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T6(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T6(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5153:	        gen_codes(op_push, ISZ_UINT, makesegreg(FS), 0); 

	T7(EAX).A =   #0.C
	PARM	T7(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T8(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T8(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5154:	        gen_codes(op_push, ISZ_UINT, makesegreg(GS), 0); 

	T9(EAX).A =   #0.C
	PARM	T9(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T10(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T10(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5155:	    } 

	BLOCK END
	BLOCK 8

L_7203:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_7204:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_7199:
	BLOCK END
	BLOCK 11

L_7205:
	DBG BLOCK END
; Line 5156:	    gen_code(op_pushad, 0, 0); 

	T11(EAX).A =   #0.C
	PARM	T11(EAX).A
	T12(EAX).A =   #0.C
	PARM	T12(EAX).A
	PARM	#141.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5157:	} 

	BLOCK END
	BLOCK 12

L_7206:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_7197:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_popcontext$qp15@Optimizer@quad


global @occx86@asm_popcontext$qp15@Optimizer@quad
@occx86@asm_popcontext$qp15@Optimizer@quad:
; Line 5162:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7211:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7213:
; Line 5163:	    (void)q; 

; Line 5164:	    gen_code(op_popad, 0, 0); 

	T3(EAX).A =   #0.C
	PARM	T3(EAX).A
	T4(EAX).A =   #0.C
	PARM	T4(EAX).A
	PARM	#134.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_7215:
; Line 5165:	    if (Optimizer::cparams.prm_farkeyword) 

	T5(AL).BOOL =   @Optimizer@cparams:RAM+34.BOOL
	CONDGO	L_7214:PC ; T5(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_7216:
; Line 5166:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_7217:
; Line 5167:	        gen_codes(op_pop, ISZ_UINT, makesegreg(GS), 0); 

	T6(EAX).A =   #0.C
	PARM	T6(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T7(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5168:	        gen_codes(op_pop, ISZ_UINT, makesegreg(FS), 0); 

	T8(EAX).A =   #0.C
	PARM	T8(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T9(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5169:	        gen_codes(op_pop, ISZ_UINT, makesegreg(ES), 0); 

	T10(EAX).A =   #0.C
	PARM	T10(EAX).A
	T11(EAX).UI =   #3.C
	PARM	T11(EAX).UI
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T12(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5170:	    } 

	BLOCK END
	BLOCK 8

L_7218:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_7219:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_7214:
	BLOCK END
	BLOCK 11

L_7220:
	DBG BLOCK END
; Line 5171:	} 

	BLOCK END
	BLOCK 12

L_7221:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_7212:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_loadcontext$qp15@Optimizer@quad


global @occx86@asm_loadcontext$qp15@Optimizer@quad
@occx86@asm_loadcontext$qp15@Optimizer@quad:
; Line 5176:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7226:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7228:
; Line 5177:	    (void)q; 

; Line 5178:	    gen_codes(op_push, ISZ_UINT, makesegreg(DS), 0); 

	T5(EAX).A =   #0.C
	PARM	T5(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T6(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T6(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5179:	    gen_codes(op_push, ISZ_UINT, makesegreg(CS), 0); 

	T7(EAX).A =   #0.C
	PARM	T7(EAX).A
	T8(EAX).UI =   #1.C
	PARM	T8(EAX).UI
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T9(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5180:	    gen_codes(op_add, 2, make_stack(0), aimmed(8)); 

	T10(EDX:EAX).ULL =   #8.I
	PARM	T10(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T11(EAX).A
	T12(EAX).UI =   #0.C
	PARM	T12(EAX).UI
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T13(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T13(EAX).A
	PARM	#2.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5181:	    gen_codes(op_pop, ISZ_UINT, makesegreg(DS), 0); 

	T14(EAX).A =   #0.C
	PARM	T14(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T15(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T15(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5182:	} 

	BLOCK END
	BLOCK 4

L_7229:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7227:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_unloadcontext$qp15@Optimizer@quad


global @occx86@asm_unloadcontext$qp15@Optimizer@quad
@occx86@asm_unloadcontext$qp15@Optimizer@quad:
; Line 5187:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7234:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7236:
; Line 5188:	    (void)q; 

; Line 5189:	    gen_codes(op_pop, ISZ_UINT, makesegreg(DS), 0); 

	T1(EAX).A =   #0.C
	PARM	T1(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makesegreg$qi:PC.UI
	T2(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T2(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5190:	} 

	BLOCK END
	BLOCK 4

L_7237:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7235:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_tryblock$qp15@Optimizer@quad


global @occx86@asm_tryblock$qp15@Optimizer@quad
@occx86@asm_tryblock$qp15@Optimizer@quad:
; Line 5192:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_7243:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7245:
; Line 5193:	    AMODE* ap1 = beLocalAllocate<AMODE>(); 

	VAR START	ap1
	T6(EAX).UI =   #1.C
	PARM	T6(EAX).UI
	TAG
	GOSUB	#@#beLocalAllocate$5amode~$qi:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_ap1:LINK(-4).A =   T7(EAX).A
; Line 5194:	    ap1->mode = am_indisp; 

	T8(EAX).A =   _ap1:LINK(-4).A
	*(T8(EAX) + 0).A.I =   #C.I
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_7247:
; Line 5195:	    if (usingEsp) 

	T9(EAX).I =   _usingEsp:RAM.I
	CONDGO	L_7246:PC ; T9(EAX).I == #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_7248:
; Line 5196:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_7249:
; Line 5197:	        ap1->preg = ESP; 

	T10(EAX).A =   _ap1:LINK(-4).A
	*(T10(EAX) + 4).A.C =   #4.C
; Line 5198:	        ap1->offset = Optimizer::simpleIntNode(Optimizer::se_i, q->dc.v.label + funcstackheight);   

	T11(ECX).A =   _q:LINK(4).A
	T12(EAX).L =   @occx86@funcstackheight:RAM.I
	T13(EAX).L = *(T11(ECX) + 0+C+0).A.L + T12(EAX).L
	T14(EDX:EAX).ULL =   T13(EAX).L
	PARM	T14(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T15(ECX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	T16(EAX).A =   _ap1:LINK(-4).A
	*(T16(EAX) + C).A.A =   T15(ECX).A
; Line 5199:	    } 

	BLOCK END
	BLOCK 8

L_7250:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_7252:
	DBG BLOCK END
	GOTO	L_7251:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_7253:
	BLOCK END
	BLOCK 12

L_7246:
; Line 5200:	    else 

; Line 5201:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_7254:
; Line 5202:	        ap1->preg = EBP; 

	T17(EAX).A =   _ap1:LINK(-4).A
	*(T17(EAX) + 4).A.C =   #5.C
; Line 5203:	        ap1->offset = Optimizer::simpleIntNode(Optimizer::se_i, q->dc.v.label);   

	T18(EAX).A =   _q:LINK(4).A
	T19(EDX:EAX).ULL =   *(T18(EAX) + 0+C+0).A.L
	PARM	T19(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T20(ECX).A =   RV.T2(EAX).A
	PARMADJ	#C.N
	T21(EAX).A =   _ap1:LINK(-4).A
	*(T21(EAX) + C).A.A =   T20(ECX).A
; Line 5204:	    } 

	BLOCK END
	BLOCK 14

L_7255:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_7256:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_7251:
	BLOCK END
	BLOCK 17

L_7257:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_7259:
	DBG BLOCK END
; Line 5206:	    switch ((int)q->dc.left->offset->i) 

	T22(EAX).A =   _q:LINK(4).A
	T23(EAX).A =   *(T22(EAX) + 4+0).A.A
	T24(EAX).A =   *(T23(EAX) + 4).A.A
	T25(EAX).I =   *(T24(EAX) + 8).A.LL
	COSWITCH(T25(EAX).I,#3.UI,#3.UI,L_7267:PC)
	SWBRANCH(#0.UI,L_7261:PC)
	SWBRANCH(#1.UI,L_7263:PC)
	SWBRANCH(#2.UI,L_7265:PC)
; Line 5207:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_7260:
	BLOCK END
	BLOCK 20

L_7261:
	DBG BLOCK START
; Line 5209:	            gen_codes(op_push, ISZ_UINT, ap1, 0); 

	T26(EAX).A =   #0.C
	PARM	T26(EAX).A
	T27(EAX).A =   _ap1:LINK(-4).A
	PARM	T27(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5210:	            gen_codes(op_mov, ISZ_UINT, ap1, makedreg(ESP)); 

	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T28(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T28(EAX).A
	T29(EAX).A =   _ap1:LINK(-4).A
	PARM	T29(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5211:	            break; 

	GOTO	L_7258:PC
	BLOCK END
	BLOCK 21
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_7263:
	DBG BLOCK START
; Line 5212:	        case 1:   
; Line 5213:	            gen_codes(op_mov, ISZ_UINT, makedreg(ESP), ap1); 

; Line 5213:	            gen_codes(op_mov, ISZ_UINT, makedreg(ESP), ap1); 

	T30(EAX).A =   _ap1:LINK(-4).A
	PARM	T30(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T31(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T31(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5214:	            gen_codes(op_pop, ISZ_UINT, ap1, 0); 

	T32(EAX).A =   #0.C
	PARM	T32(EAX).A
	T33(EAX).A =   _ap1:LINK(-4).A
	PARM	T33(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5215:	            break; 

	GOTO	L_7258:PC
	BLOCK END
	BLOCK 23
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_7265:
	DBG BLOCK START
; Line 5216:	        case 2:   
; Line 5217:	            gen_codes(op_mov, ISZ_UINT, makedreg(ESP), ap1); 

; Line 5217:	            gen_codes(op_mov, ISZ_UINT, makedreg(ESP), ap1); 

	T34(EAX).A =   _ap1:LINK(-4).A
	PARM	T34(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T35(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T35(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5218:	            gen_codes(op_pop, ISZ_UINT, ap1, 0); 

	T36(EAX).A =   #0.C
	PARM	T36(EAX).A
	T37(EAX).A =   _ap1:LINK(-4).A
	PARM	T37(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5219:	            break; 

	GOTO	L_7258:PC
	BLOCK END
	BLOCK 25
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_7267:
	DBG BLOCK START
; Line 5220:	        default: 
; Line 5221:	            diag("asm_tryblock: Unknown tryblock type"); 

; Line 5221:	            diag("asm_tryblock: Unknown tryblock type"); 

	PARM	#L_7242:PC.A
	TAG
	GOSUB	#@diag$qpxce:PC.UI
	PARMADJ	#4.N
; Line 5222:	            break; 

	BLOCK END
	BLOCK 27

L_7268:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_7258:
	BLOCK END
	BLOCK 29

L_7269:
	DBG BLOCK END
; Line 5224:	} 

	BLOCK END
	BLOCK 30

L_7270:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_7244:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_stackalloc$qp15@Optimizer@quad


global @occx86@asm_stackalloc$qp15@Optimizer@quad
@occx86@asm_stackalloc$qp15@Optimizer@quad:
; Line 5225:	void asm_stackalloc( 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_7275:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7277:
; Line 5227:	{ 

	VAR START	op
	VAR START	apl
	VAR START	aph
; Line 5229:	    AMODE *apl, *aph; 

	T10(EAX).A =   #_aph:LINK(-12).A
	PARM	T10(EAX).A
	T11(EAX).A =   #_apl:LINK(-8).A
	PARM	T11(EAX).A
	T12(EAX).A =   _q:LINK(4).A
	T13(EAX).A =   *(T12(EAX) + 4+0).A.A
	PARM	T13(EAX).A
	T14(EAX).A =   #_op:LINK(-4).A
	PARM	T14(EAX).A
	T15(EAX).A =   _q:LINK(4).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_7279:
; Line 5231:	    if (apl->mode == am_immed) 

	T16(EAX).A =   _apl:LINK(-8).A
	T17(EAX).I =   *(T16(EAX) + 0).A.I
	CONDGO	L_7278:PC ; T17(EAX).I != #10.I
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_7280:
; Line 5232:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_7281:
; Line 5233:	        int n = apl->offset->i; 

	VAR START	n
	T18(EAX).A =   _apl:LINK(-8).A
	T19(EAX).A =   *(T18(EAX) + C).A.A
	T20(EAX).I =   *(T19(EAX) + 8).A.LL
	_n:LINK(-16).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_7283:
; Line 5234:	        if (n) 

	T21(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7282:PC ; T21(EAX).I == #0.C
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_7284:
; Line 5235:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_7285:
; Line 5236:	            if (n < 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_7287:
	T22(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7286:PC ; T22(EAX).I S>= #0.C
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_7288:
; Line 5237:	                n = (n - 3) & ~3; 

	T23(EAX).I =   _n:LINK(-16).I
	T24(EAX).I = T23(EAX).I - #3.C
	T25(EAX).I = T24(EAX).I & #FFFFFFFFFFFFFFFC.I
	_n:LINK(-16).I =   T25(EAX).I
	BLOCK END
	BLOCK 15

L_7290:
	DBG BLOCK END
	GOTO	L_7289:PC
	BLOCK END
	BLOCK 16
	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_7291:
	BLOCK END
	BLOCK 18

L_7286:
; Line 5238:	            else 

; Line 5239:	                n = (n + 3) & ~3; 

	T26(EAX).I =   _n:LINK(-16).I
	T27(EAX).I = T26(EAX).I + #3.C
	T28(EAX).I = T27(EAX).I & #FFFFFFFFFFFFFFFC.I
	_n:LINK(-16).I =   T28(EAX).I
	BLOCK END
	BLOCK 19

L_7292:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_7289:
	BLOCK END
	BLOCK 21

L_7293:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_7295:
; Line 5241:	            if (n >= 0 && n <= 4092)   

	T29(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7294:PC ; T29(EAX).I S< #0.C
	BLOCK END
	BLOCK 23
	T30(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7294:PC ; T30(EAX).I S> #FFC.I
	BLOCK END
	BLOCK 24
	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_7296:
; Line 5242:	                gen_code(op_add, makedreg(ESP), aimmed(-n)); 

	T31(EAX).I =   _n:LINK(-16).I
	T32(EAX).I =  - T31(EAX).I
	T33(EDX:EAX).ULL =   T32(EAX).I
	PARM	T33(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T34(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	PARM	T34(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T35(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T35(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 26

L_7298:
	DBG BLOCK END
	GOTO	L_7297:PC
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_7299:
	BLOCK END
	BLOCK 29

L_7294:
; Line 5243:	            else 

; Line 5244:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_7300:
; Line 5245:	                if (n >= 0 && n <= 8188) 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_7302:
	T36(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7301:PC ; T36(EAX).I S< #0.C
	BLOCK END
	BLOCK 32
	T37(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7301:PC ; T37(EAX).I S> #1FFC.I
	BLOCK END
	BLOCK 33
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_7303:
; Line 5246:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_7304:
; Line 5247:	                    gen_code(op_add, makedreg(ESP), aimmed(-4092)); 

	T38(EDX:EAX).ULL =   #FFFFFFFFFFFFF004.I
	PARM	T38(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T39(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T39(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T40(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T40(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5248:	                    gen_codes(op_push, ISZ_UINT, makedreg(EAX), 0); 

	T41(EAX).A =   #0.C
	PARM	T41(EAX).A
	T42(EAX).UI =   #0.C
	PARM	T42(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T43(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T43(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5249:	                    gen_code(op_add, makedreg(ESP), aimmed(-(n - 4096))); 

	T44(EAX).I =   _n:LINK(-16).I
	T45(EAX).I = T44(EAX).I - #1000.I
	T46(EAX).I =  - T45(EAX).I
	T47(EDX:EAX).ULL =   T46(EAX).I
	PARM	T47(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T48(EAX).A =   RV.T5(EAX).A
	PARMADJ	#8.N
	PARM	T48(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T49(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T49(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5250:	                } 

	BLOCK END
	BLOCK 36

L_7305:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_7307:
	DBG BLOCK END
	GOTO	L_7306:PC
	BLOCK END
	BLOCK 38
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_7308:
	BLOCK END
	BLOCK 40

L_7301:
; Line 5251:	                else 

; Line 5252:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_7309:
; Line 5253:	                    if (n < 0)   

	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_7311:
	T50(EAX).I =   _n:LINK(-16).I
	CONDGO	L_7310:PC ; T50(EAX).I S>= #0.C
	BLOCK END
	BLOCK 43
	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_7312:
; Line 5254:	                        n = (n - 15) & ~15; 

	T51(EAX).I =   _n:LINK(-16).I
	T52(EAX).I = T51(EAX).I - #F.I
	T53(EAX).I = T52(EAX).I & #FFFFFFFFFFFFFFF0.I
	_n:LINK(-16).I =   T53(EAX).I
	BLOCK END
	BLOCK 45

L_7314:
	DBG BLOCK END
	GOTO	L_7313:PC
	BLOCK END
	BLOCK 46
	DBG BLOCK START
	BLOCK END
	BLOCK 47

L_7315:
	BLOCK END
	BLOCK 48

L_7310:
; Line 5255:	                    else 

; Line 5256:	                        n = (n + 15) & ~15; 

	T54(EAX).I =   _n:LINK(-16).I
	T55(EAX).I = T54(EAX).I + #F.I
	T56(EAX).I = T55(EAX).I & #FFFFFFFFFFFFFFF0.I
	_n:LINK(-16).I =   T56(EAX).I
	BLOCK END
	BLOCK 49

L_7316:
	DBG BLOCK END
	BLOCK END
	BLOCK 50

L_7313:
	BLOCK END
	BLOCK 51

L_7317:
	DBG BLOCK END
; Line 5257:	                    gen_codes(op_push, ISZ_UINT, aimmed(n), 0); 

	T57(EAX).A =   #0.C
	PARM	T57(EAX).A
	T58(EDX:EAX).ULL =   _n:LINK(-16).I
	PARM	T58(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T59(EAX).A =   RV.T7(EAX).A
	PARMADJ	#8.N
	PARM	T59(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5258:	                    callLibrary("___substackp", 0); 

	T60(EAX).UI =   #0.C
	PARM	T60(EAX).UI
	PARM	#L_6977:PC.A
	TAG
	GOSUB	#@occx86@callLibrary$qpxci:PC.UI
	PARMADJ	#8.N
; Line 5259:	                } 

	BLOCK END
	BLOCK 52

L_7318:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_7319:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_7306:
	BLOCK END
	BLOCK 55

L_7320:
	DBG BLOCK END
; Line 5260:	            } 

	BLOCK END
	BLOCK 56

L_7321:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_7322:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_7297:
	BLOCK END
	BLOCK 59

L_7323:
	DBG BLOCK END
; Line 5261:	            pushlevel += n; 

	T61(ECX).I =   @occx86@pushlevel:RAM.I
	T62(EAX).I =   _n:LINK(-16).I
	T63(EAX).I = T61(ECX).I + T62(EAX).I
	@occx86@pushlevel:RAM.I =   T63(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 60

L_7325:
; Line 5262:	            if (q->ans) 

	T64(EAX).A =   _q:LINK(4).A
	T65(EAX).A =   *(T64(EAX) + 40).A.A
	CONDGO	L_7324:PC ; T65(EAX).A == #0.A
	BLOCK END
	BLOCK 61
	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_7326:
; Line 5263:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_7327:
; Line 5264:	                getAmodes(q, &op, q->ans, &apl, &aph); 

	T66(EAX).A =   #_aph:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   #_apl:LINK(-8).A
	PARM	T67(EAX).A
	T68(EAX).A =   _q:LINK(4).A
	T69(EAX).A =   *(T68(EAX) + 40).A.A
	PARM	T69(EAX).A
	T70(EAX).A =   #_op:LINK(-4).A
	PARM	T70(EAX).A
	T71(EAX).A =   _q:LINK(4).A
	PARM	T71(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5265:	                gen_codes(op_mov, ISZ_UINT, apl, makedreg(ESP)); 

	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T72(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T72(EAX).A
	T73(EAX).A =   _apl:LINK(-8).A
	PARM	T73(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5266:	            } 

	BLOCK END
	BLOCK 64

L_7328:
	DBG BLOCK END
	BLOCK END
	BLOCK 65

L_7329:
	DBG BLOCK END
	BLOCK END
	BLOCK 66

L_7324:
	BLOCK END
	BLOCK 67

L_7330:
	DBG BLOCK END
; Line 5267:	        } 

	BLOCK END
	BLOCK 68

L_7331:
	DBG BLOCK END
	BLOCK END
	BLOCK 69

L_7332:
	DBG BLOCK END
	BLOCK END
	BLOCK 70

L_7282:
	BLOCK END
	BLOCK 71

L_7333:
	DBG BLOCK END
; Line 5268:	    } 

	BLOCK END
	BLOCK 72

L_7334:
	DBG BLOCK END
	BLOCK END
	BLOCK 73

L_7336:
	DBG BLOCK END
	GOTO	L_7335:PC
	BLOCK END
	BLOCK 74
	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_7337:
	BLOCK END
	BLOCK 76

L_7278:
; Line 5269:	    else 

; Line 5270:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_7338:
; Line 5271:	        gen_codes(op_push, ISZ_UINT, apl, 0); 

	T74(EAX).A =   #0.C
	PARM	T74(EAX).A
	T75(EAX).A =   _apl:LINK(-8).A
	PARM	T75(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5272:	        callLibrary("___substackp", 0);   

	T76(EAX).UI =   #0.C
	PARM	T76(EAX).UI
	PARM	#L_6977:PC.A
	TAG
	GOSUB	#@occx86@callLibrary$qpxci:PC.UI
	PARMADJ	#8.N
	DBG BLOCK START
	BLOCK END
	BLOCK 78

L_7340:
; Line 5273:	        if (q->ans) 

	T77(EAX).A =   _q:LINK(4).A
	T78(EAX).A =   *(T77(EAX) + 40).A.A
	CONDGO	L_7339:PC ; T78(EAX).A == #0.A
	BLOCK END
	BLOCK 79
	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_7341:
; Line 5274:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 81

L_7342:
; Line 5275:	            getAmodes(q, &op, q->ans, &apl, &aph); 

	T79(EAX).A =   #_aph:LINK(-12).A
	PARM	T79(EAX).A
	T80(EAX).A =   #_apl:LINK(-8).A
	PARM	T80(EAX).A
	T81(EAX).A =   _q:LINK(4).A
	T82(EAX).A =   *(T81(EAX) + 40).A.A
	PARM	T82(EAX).A
	T83(EAX).A =   #_op:LINK(-4).A
	PARM	T83(EAX).A
	T84(EAX).A =   _q:LINK(4).A
	PARM	T84(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5276:	            gen_codes(op_mov, ISZ_UINT, apl, makedreg(ESP)); 

	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T85(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	PARM	T85(EAX).A
	T86(EAX).A =   _apl:LINK(-8).A
	PARM	T86(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5277:	        } 

	BLOCK END
	BLOCK 82

L_7343:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_7344:
	DBG BLOCK END
	BLOCK END
	BLOCK 84

L_7339:
	BLOCK END
	BLOCK 85

L_7345:
	DBG BLOCK END
; Line 5278:	    } 

	BLOCK END
	BLOCK 86

L_7346:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_7347:
	DBG BLOCK END
	BLOCK END
	BLOCK 88

L_7335:
	BLOCK END
	BLOCK 89

L_7348:
	DBG BLOCK END
; Line 5279:	} 

	BLOCK END
	BLOCK 90

L_7349:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_7276:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_loadstack$qp15@Optimizer@quad


global @occx86@asm_loadstack$qp15@Optimizer@quad
@occx86@asm_loadstack$qp15@Optimizer@quad:
; Line 5281:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#C.UI
	BLOCK END
	BLOCK 2

L_7354:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7356:
; Line 5282:	    AMODE *apl, *aph; 

	VAR START	apl
	VAR START	aph
	VAR START	op
; Line 5283:	    enum e_opcode op; 
; Line 5286:	    apl->liveRegs = q->liveRegs; 

	T1(EAX).A =   #_aph:LINK(-8).A
	PARM	T1(EAX).A
	T2(EAX).A =   #_apl:LINK(-4).A
	PARM	T2(EAX).A
	T3(EAX).A =   _q:LINK(4).A
	T4(EAX).A =   *(T3(EAX) + 4+0).A.A
	PARM	T4(EAX).A
	T5(EAX).A =   #_op:LINK(-12).A
	PARM	T5(EAX).A
	T6(EAX).A =   _q:LINK(4).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5285:	    getAmodes(q, &op, q->dc.left, &apl, &aph); 

	T7(EAX).A =   _q:LINK(4).A
	T8(ECX).I =   *(T7(EAX) + 48).A.ULL
	T9(EAX).A =   _apl:LINK(-4).A
	*(T9(EAX) + 10).A.I =   T8(ECX).I
; Line 5287:	    gen_codes(op_mov, ISZ_UINT, makedreg(ESP), apl); 

	T10(EAX).A =   _apl:LINK(-4).A
	PARM	T10(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T11(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T11(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5288:	} 

	BLOCK END
	BLOCK 4

L_7357:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7355:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_savestack$qp15@Optimizer@quad


global @occx86@asm_savestack$qp15@Optimizer@quad
@occx86@asm_savestack$qp15@Optimizer@quad:
; Line 5290:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#C.UI
	BLOCK END
	BLOCK 2

L_7362:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7364:
; Line 5291:	    AMODE *apl = nullptr, *aph = nullptr; 

	VAR START	apl
	T1(EAX).A =   #0.UI
	_apl:LINK(-4).A =   T1(EAX).A
	VAR START	aph
	T2(EAX).A =   #0.UI
	_aph:LINK(-8).A =   T2(EAX).A
	VAR START	op
; Line 5292:	    enum e_opcode op; 
; Line 5295:	    apl->liveRegs = q->liveRegs; 

	T3(EAX).A =   #_aph:LINK(-8).A
	PARM	T3(EAX).A
	T4(EAX).A =   #_apl:LINK(-4).A
	PARM	T4(EAX).A
	T5(EAX).A =   _q:LINK(4).A
	T6(EAX).A =   *(T5(EAX) + 4+0).A.A
	PARM	T6(EAX).A
	T7(EAX).A =   #_op:LINK(-12).A
	PARM	T7(EAX).A
	T8(EAX).A =   _q:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5294:	    getAmodes(q, &op, q->dc.left, &apl, &aph); 

	T9(EAX).A =   _q:LINK(4).A
	T10(ECX).I =   *(T9(EAX) + 48).A.ULL
	T11(EAX).A =   _apl:LINK(-4).A
	*(T11(EAX) + 10).A.I =   T10(ECX).I
; Line 5296:	    gen_codes(op_mov, ISZ_UINT, apl, makedreg(ESP)); 

	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T12(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	T13(EAX).A =   _apl:LINK(-4).A
	PARM	T13(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5297:	} 

	BLOCK END
	BLOCK 4

L_7365:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7363:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_functail$qp15@Optimizer@quadii


global @occx86@asm_functail$qp15@Optimizer@quadii
@occx86@asm_functail$qp15@Optimizer@quadii:
; Line 5299:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_7370:
	VAR START	q
	VAR START	begin
	VAR START	size
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7372:
; Line 5300:	    enum e_opcode op = op_push; 

	VAR START	op
	_op:LINK(-4).I =   #13E.I
; Line 5301:	    (void)q; 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_7374:
; Line 5302:	    if (!begin) 

	T4(EAX).I =   _begin:LINK(8).I
	CONDGO	L_7373:PC ; T4(EAX).I != #0.C
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_7375:
; Line 5303:	        op = op_pop; 

	_op:LINK(-4).I =   #131.I
	BLOCK END
	BLOCK 7

L_7376:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_7373:
	BLOCK END
	BLOCK 9

L_7377:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_7379:
; Line 5304:	    if (size == ISZ_ULONGLONG) 

	T5(EAX).I =   _size:LINK(12).I
	CONDGO	L_7378:PC ; T5(EAX).I != #B.C
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_7380:
; Line 5305:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_7381:
; Line 5306:	        if (begin) 

	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_7383:
	T6(EAX).I =   _begin:LINK(8).I
	CONDGO	L_7382:PC ; T6(EAX).I == #0.C
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_7384:
; Line 5307:	            gen_code(op, makedreg(EDX), 0); 

	T7(EAX).A =   #0.C
	PARM	T7(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T8(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T8(EAX).A
	T9(EAX).I =   _op:LINK(-4).I
	PARM	T9(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 17

L_7385:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_7382:
	BLOCK END
	BLOCK 19

L_7386:
	DBG BLOCK END
; Line 5308:	        gen_code(op, makedreg(EAX), 0); 

	T10(EAX).A =   #0.C
	PARM	T10(EAX).A
	T11(EAX).UI =   #0.C
	PARM	T11(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T12(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	T13(EAX).I =   _op:LINK(-4).I
	PARM	T13(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 20

L_7388:
; Line 5309:	        if (!begin) 

	T14(EAX).I =   _begin:LINK(8).I
	CONDGO	L_7387:PC ; T14(EAX).I != #0.C
	BLOCK END
	BLOCK 21
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_7389:
; Line 5310:	            gen_code(op, makedreg(EDX), 0); 

	T15(EAX).A =   #0.C
	PARM	T15(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T16(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T16(EAX).A
	T17(EAX).I =   _op:LINK(-4).I
	PARM	T17(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 23

L_7390:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_7387:
	BLOCK END
	BLOCK 25

L_7391:
	DBG BLOCK END
; Line 5311:	    } 

	BLOCK END
	BLOCK 26

L_7392:
	DBG BLOCK END
	BLOCK END
	BLOCK 27

L_7394:
	DBG BLOCK END
	GOTO	L_7393:PC
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_7395:
	BLOCK END
	BLOCK 30

L_7378:
; Line 5312:	    else if (size < ISZ_FLOAT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_7397:
	T18(EAX).I =   _size:LINK(12).I
	CONDGO	L_7396:PC ; T18(EAX).I S>= #12.C
	BLOCK END
	BLOCK 32
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_7398:
; Line 5313:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_7399:
; Line 5314:	        gen_code(op, makedreg(EAX), 0); 

	T19(EAX).A =   #0.C
	PARM	T19(EAX).A
	T20(EAX).UI =   #0.C
	PARM	T20(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T21(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T21(EAX).A
	T22(EAX).I =   _op:LINK(-4).I
	PARM	T22(EAX).I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5315:	    } 

	BLOCK END
	BLOCK 35

L_7400:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_7401:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_7396:
	BLOCK END
	BLOCK 38

L_7402:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_7403:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_7393:
	BLOCK END
	BLOCK 41

L_7404:
	DBG BLOCK END
; Line 5316:	} 

	BLOCK END
	BLOCK 42

L_7405:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_7371:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_atomic$qp15@Optimizer@quad


global @occx86@asm_atomic$qp15@Optimizer@quad
@occx86@asm_atomic$qp15@Optimizer@quad:
; Line 5318:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#C0.UI
	BLOCK END
	BLOCK 2

L_7411:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7413:
; Line 5319:	    bool pushed; 

	VAR START	pushed
	VAR START	needsync
; Line 5320:	    int needsync = q->dc.opcode != Optimizer::i_xchg ? q->dc.left->offset->i : 0; 

	T150(EAX).A =   _q:LINK(4).A
	T151(EAX).I =   *(T150(EAX) + 0+0).A.I
	CONDGO	L_7926:PC ; T151(EAX).I == #59.I
	BLOCK END
	BLOCK 4
	T152(EAX).A =   _q:LINK(4).A
	T153(EAX).A =   *(T152(EAX) + 4+0).A.A
	T154(EAX).A =   *(T153(EAX) + 4).A.A
	T156(EDX:EAX).LL =   *(T154(EAX) + 8).A.LL
	GOTO	L_7927:PC
	BLOCK END
	BLOCK 5

L_7926:
	T156(EDX:EAX).LL =   #0.LL
	BLOCK END
	BLOCK 6

L_7927:
	T157(EAX).I =   T156(EDX:EAX).LL
	_needsync:LINK(-8).I =   T157(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_7415:
; Line 5321:	    if (needsync < 0) 

	T158(EAX).I =   _needsync:LINK(-8).I
	CONDGO	L_7414:PC ; T158(EAX).I S>= #0.C
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_7416:
; Line 5322:	        needsync = 0; 

	T159(EAX).I =   #0.C
	_needsync:LINK(-8).I =   T159(EAX).I
	BLOCK END
	BLOCK 10

L_7417:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_7414:
	BLOCK END
	BLOCK 12

L_7418:
	DBG BLOCK END
	VAR START	apal
; Line 5324:	    AMODE *apal = nullptr, *apah = nullptr, *apll = nullptr, *aplh = nullptr, *aprl = nullptr, *aprh = nullptr; 

	T160(EAX).A =   #0.UI
	_apal:LINK(-12).A =   T160(EAX).A
	VAR START	apah
	T161(EAX).A =   #0.UI
	_apah:LINK(-16).A =   T161(EAX).A
	VAR START	apll
	T162(EAX).A =   #0.UI
	_apll:LINK(-20).A =   T162(EAX).A
	VAR START	aplh
	T163(EAX).A =   #0.UI
	_aplh:LINK(-24).A =   T163(EAX).A
	VAR START	aprl
	T164(EAX).A =   #0.UI
	_aprl:LINK(-28).A =   T164(EAX).A
	VAR START	aprh
	T165(EAX).A =   #0.UI
	_aprh:LINK(-32).A =   T165(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_7420:
	DBG BLOCK END
; Line 5325:	    switch (q->dc.opcode) 

	T166(EAX).A =   _q:LINK(4).A
	T167(EAX).I =   *(T166(EAX) + 0+0).A.I
	COSWITCH(T167(EAX).I,#7.UI,#9.UI,L_7921:PC)
	SWBRANCH(#51.UI,L_7478:PC)
	SWBRANCH(#52.UI,L_7494:PC)
	SWBRANCH(#53.UI,L_7422:PC)
	SWBRANCH(#55.UI,L_7431:PC)
	SWBRANCH(#56.UI,L_7675:PC)
	SWBRANCH(#57.UI,L_7677:PC)
	SWBRANCH(#59.UI,L_7503:PC)
; Line 5326:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_7421:
	VAR START	pushed
	VAR START	reg
	VAR START	opa
	VAR START	opl
	VAR START	opr
	VAR START	lbl1
	VAR START	lbl2
	BLOCK END
	BLOCK 15

L_7422:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_7425:
; Line 5332:	        int lbl1, lbl2; 
; Line 5336:	            { 

	T168(EAX).I =   _needsync:LINK(-8).I
	CONDGO	L_7424:PC ; T168(EAX).I != #85.I
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_7426:
; Line 5334:	            if (needsync == Optimizer::mo_seq_cst + 0x80)   

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_7427:
; Line 5337:	                gen_code(op_mfence, NULL, NULL); 

	T169(EAX).A =   #0.C
	PARM	T169(EAX).A
	T170(EAX).A =   #0.C
	PARM	T170(EAX).A
	PARM	#1D5.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5338:	            } 

	BLOCK END
	BLOCK 20

L_7428:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_7429:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_7424:
	BLOCK END
	BLOCK 23

L_7430:
	DBG BLOCK END
; Line 5339:	            break; 

	GOTO	L_7419:PC
	BLOCK END
	BLOCK 24
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_7431:
	DBG BLOCK START
; Line 5340:	        case Optimizer::i_atomic_flag_fence: 
; Line 5341:	            getAmodes(q, &opl, q->dc.right, &apll, &aplh); 

; Line 5341:	            getAmodes(q, &opl, q->dc.right, &apll, &aplh); 

	T171(EAX).A =   #_aplh:LINK(-24).A
	PARM	T171(EAX).A
	T172(EAX).A =   #_apll:LINK(-20).A
	PARM	T172(EAX).A
	T173(EAX).A =   _q:LINK(4).A
	T174(EAX).A =   *(T173(EAX) + 8+0).A.A
	PARM	T174(EAX).A
	T175(EAX).A =   #_opl:LINK(-48).A
	PARM	T175(EAX).A
	T176(EAX).A =   _q:LINK(4).A
	PARM	T176(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5342:	            apll->mode = am_indisp; 

	T177(EAX).A =   _apll:LINK(-20).A
	*(T177(EAX) + 0).A.I =   #C.I
; Line 5343:	            apll->offset = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T178(EDX:EAX).ULL =   #0.C
	PARM	T178(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T179(ECX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	T180(EAX).A =   _apll:LINK(-20).A
	*(T180(EAX) + C).A.A =   T179(ECX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_7434:
; Line 5344:	            if (q->dc.left->offset->i > 0) 

	T181(EAX).A =   _q:LINK(4).A
	T182(EAX).A =   *(T181(EAX) + 4+0).A.A
	T183(EAX).A =   *(T182(EAX) + 4).A.A
	T184(EDX:EAX).LL =   *(T183(EAX) + 8).A.LL
	CONDGO	L_7433:PC ; T184(EDX:EAX).LL S<= #0.LL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_7435:
; Line 5345:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_7436:
; Line 5346:	                lbl1 = beGetLabel; 

	T185(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lbl1:LINK(-56).I =   T185(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 5347:	                lbl2 = beGetLabel; 

	T186(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lbl2:LINK(-60).I =   T186(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
; Line 5348:	                reg = -1; 

	_reg:LINK(-40).I =   #FFFFFFFFFFFFFFFF.I
; Line 5349:	                pushed = false; 

	_pushed:LINK(-33).BOOL =   #0.BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_7438:
; Line 5350:	                if (!(apll->liveRegs & (1 << EAX))) 

	T187(EAX).A =   _apll:LINK(-20).A
	T188(EAX).I =   *(T187(EAX) + 10).A.I
	T189(EAX).I = T188(EAX).I & #1.C
	CONDGO	L_7437:PC ; T189(EAX).I != #0.C
	BLOCK END
	BLOCK 31
	DBG BLOCK START
	BLOCK END
	BLOCK 32

L_7439:
; Line 5351:	                    reg = EAX; 

	T190(EAX).I =   #0.C
	_reg:LINK(-40).I =   T190(EAX).I
	BLOCK END
	BLOCK 33

L_7441:
	DBG BLOCK END
	GOTO	L_7440:PC
	BLOCK END
	BLOCK 34
	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_7442:
	BLOCK END
	BLOCK 36

L_7437:
; Line 5352:	                else if (!(apll->liveRegs & (1 << ECX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_7444:
	T191(EAX).A =   _apll:LINK(-20).A
	T192(EAX).I =   *(T191(EAX) + 10).A.I
	T193(EAX).I = T192(EAX).I & #2.I
	CONDGO	L_7443:PC ; T193(EAX).I != #0.C
	BLOCK END
	BLOCK 38
	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_7445:
; Line 5353:	                    reg = ECX; 

	T194(EAX).I =   #1.C
	_reg:LINK(-40).I =   T194(EAX).I
	BLOCK END
	BLOCK 40

L_7447:
	DBG BLOCK END
	GOTO	L_7446:PC
	BLOCK END
	BLOCK 41
	DBG BLOCK START
	BLOCK END
	BLOCK 42

L_7448:
	BLOCK END
	BLOCK 43

L_7443:
; Line 5354:	                else if (!(apll->liveRegs & (1 << EDX))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 44

L_7450:
	T195(EAX).A =   _apll:LINK(-20).A
	T196(EAX).I =   *(T195(EAX) + 10).A.I
	T197(EAX).I = T196(EAX).I & #4.I
	CONDGO	L_7449:PC ; T197(EAX).I != #0.C
	BLOCK END
	BLOCK 45
	DBG BLOCK START
	BLOCK END
	BLOCK 46

L_7451:
; Line 5355:	                    reg = EDX; 

	_reg:LINK(-40).I =   #2.I
	BLOCK END
	BLOCK 47

L_7453:
	DBG BLOCK END
	GOTO	L_7452:PC
	BLOCK END
	BLOCK 48
	DBG BLOCK START
	BLOCK END
	BLOCK 49

L_7454:
	BLOCK END
	BLOCK 50

L_7449:
; Line 5356:	                else 

; Line 5357:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_7455:
; Line 5358:	                    pushed = true; 

	_pushed:LINK(-33).BOOL =   #1.BOOL
; Line 5359:	                    reg = (apll->preg & 3) ^ 1; 

	T198(EAX).A =   _apll:LINK(-20).A
	T199(EAX).I =   *(T198(EAX) + 4).A.C
	T200(EAX).I = T199(EAX).I & #3.C
	T201(EAX).I = T200(EAX).I ^ #1.C
	_reg:LINK(-40).I =   T201(EAX).I
; Line 5360:	                    gen_codes(op_push, ISZ_UINT, makedreg(reg), 0); 

	T202(EAX).A =   #0.C
	PARM	T202(EAX).A
	T203(EAX).I =   _reg:LINK(-40).I
	PARM	T203(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T204(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T204(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5361:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5362:	                } 

	BLOCK END
	BLOCK 52

L_7456:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_7457:
	DBG BLOCK END
	BLOCK END
	BLOCK 54

L_7452:
	BLOCK END
	BLOCK 55

L_7458:
	DBG BLOCK END
	BLOCK END
	BLOCK 56

L_7459:
	DBG BLOCK END
	BLOCK END
	BLOCK 57

L_7446:
	BLOCK END
	BLOCK 58

L_7460:
	DBG BLOCK END
	BLOCK END
	BLOCK 59

L_7461:
	DBG BLOCK END
	BLOCK END
	BLOCK 60

L_7440:
	BLOCK END
	BLOCK 61

L_7462:
	DBG BLOCK END
; Line 5363:	                oa_gen_label(lbl1); 

	T205(EAX).I =   _lbl1:LINK(-56).I
	PARM	T205(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 5366:	                gen_codes(op_mov, ISZ_UCHAR, makedreg(reg), aimmed(1)); 

	T206(EDX:EAX).ULL =   #1.C
	PARM	T206(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T207(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	PARM	T207(EAX).A
	T208(EAX).I =   _reg:LINK(-40).I
	PARM	T208(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T209(EAX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	PARM	T209(EAX).A
	T210(EAX).UI =   #3.C
	PARM	T210(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5367:	                gen_code(op_lock, NULL, NULL); 

	T211(EAX).A =   #0.C
	PARM	T211(EAX).A
	T212(EAX).A =   #0.C
	PARM	T212(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5368:	                gen_codes(op_xchg, ISZ_UCHAR, apll, makedreg(reg)); 

	T213(EAX).I =   _reg:LINK(-40).I
	PARM	T213(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T214(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T214(EAX).A
	T215(EAX).A =   _apll:LINK(-20).A
	PARM	T215(EAX).A
	T216(EAX).UI =   #3.C
	PARM	T216(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5369:	                gen_codes(op_or, ISZ_UCHAR, makedreg(reg), makedreg(reg)); 

	T217(EAX).I =   _reg:LINK(-40).I
	PARM	T217(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T218(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T218(EAX).A
	T219(EAX).I =   _reg:LINK(-40).I
	PARM	T219(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T220(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T220(EAX).A
	T221(EAX).UI =   #3.C
	PARM	T221(EAX).UI
	PARM	#12B.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5370:	                gen_code(op_jz, make_label(lbl2), 0); 

	T222(EAX).A =   #0.C
	PARM	T222(EAX).A
	T223(EAX).I =   _lbl2:LINK(-60).I
	PARM	T223(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T224(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T224(EAX).A
	PARM	#102.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5371:	                callLibrary("___atomic_yield", 0); 

	T225(EAX).UI =   #0.C
	PARM	T225(EAX).UI
	PARM	#L_7410:PC.A
	TAG
	GOSUB	#@occx86@callLibrary$qpxci:PC.UI
	PARMADJ	#8.N
; Line 5372:	                gen_code(op_jmp, make_label(lbl1), 0); 

	T226(EAX).A =   #0.C
	PARM	T226(EAX).A
	T227(EAX).I =   _lbl1:LINK(-56).I
	PARM	T227(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T228(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	PARM	T228(EAX).A
	PARM	#EE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5373:	                oa_gen_label(lbl2); 

	T229(EAX).I =   _lbl2:LINK(-60).I
	PARM	T229(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_7464:
; Line 5374:	                if (pushed) 

	T230(AL).BOOL =   _pushed:LINK(-33).BOOL
	CONDGO	L_7463:PC ; T230(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 63
	DBG BLOCK START
	BLOCK END
	BLOCK 64

L_7465:
; Line 5375:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_7466:
; Line 5376:	                    gen_codes(op_pop, ISZ_UINT, makedreg(reg), 0); 

	T231(EAX).A =   #0.C
	PARM	T231(EAX).A
	T232(EAX).I =   _reg:LINK(-40).I
	PARM	T232(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T233(EAX).A =   RV.T9(EAX).A
	PARMADJ	#4.N
	PARM	T233(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5377:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5378:	                } 

	BLOCK END
	BLOCK 66

L_7467:
	DBG BLOCK END
	BLOCK END
	BLOCK 67

L_7468:
	DBG BLOCK END
	BLOCK END
	BLOCK 68

L_7463:
	BLOCK END
	BLOCK 69

L_7469:
	DBG BLOCK END
; Line 5379:	            } 

	BLOCK END
	BLOCK 70

L_7470:
	DBG BLOCK END
	BLOCK END
	BLOCK 71

L_7472:
	DBG BLOCK END
	GOTO	L_7471:PC
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_7473:
	BLOCK END
	BLOCK 74

L_7433:
; Line 5380:	            else 

; Line 5381:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 75

L_7474:
; Line 5382:	                gen_code(op_mov, apll, aimmed(0)); 

	T234(EDX:EAX).ULL =   #0.C
	PARM	T234(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T235(EAX).A =   RV.T10(EAX).A
	PARMADJ	#8.N
	PARM	T235(EAX).A
	T236(EAX).A =   _apll:LINK(-20).A
	PARM	T236(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5383:	            } 

	BLOCK END
	BLOCK 76

L_7475:
	DBG BLOCK END
	BLOCK END
	BLOCK 77

L_7476:
	DBG BLOCK END
	BLOCK END
	BLOCK 78

L_7471:
	BLOCK END
	BLOCK 79

L_7477:
	DBG BLOCK END
; Line 5384:	            break; 

	GOTO	L_7419:PC
	BLOCK END
	BLOCK 80
	DBG BLOCK END
	BLOCK END
	BLOCK 81

L_7478:
	DBG BLOCK START
; Line 5385:	        case Optimizer::i_atomic_flag_test_and_set: 
; Line 5386:	            pushed = false; 

; Line 5386:	            pushed = false; 

	_pushed:LINK(-33).BOOL =   #0.BOOL
; Line 5387:	            getAmodes(q, &opl, q->dc.right, &apll, &aplh); 

	T237(EAX).A =   #_aplh:LINK(-24).A
	PARM	T237(EAX).A
	T238(EAX).A =   #_apll:LINK(-20).A
	PARM	T238(EAX).A
	T239(EAX).A =   _q:LINK(4).A
	T240(EAX).A =   *(T239(EAX) + 8+0).A.A
	PARM	T240(EAX).A
	T241(EAX).A =   #_opl:LINK(-48).A
	PARM	T241(EAX).A
	T242(EAX).A =   _q:LINK(4).A
	PARM	T242(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5388:	            getAmodes(q, &opa, q->ans, &apal, &apah); 

	T243(EAX).A =   #_apah:LINK(-16).A
	PARM	T243(EAX).A
	T244(EAX).A =   #_apal:LINK(-12).A
	PARM	T244(EAX).A
	T245(EAX).A =   _q:LINK(4).A
	T246(EAX).A =   *(T245(EAX) + 40).A.A
	PARM	T246(EAX).A
	T247(EAX).A =   #_opa:LINK(-44).A
	PARM	T247(EAX).A
	T248(EAX).A =   _q:LINK(4).A
	PARM	T248(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	DBG BLOCK START
	BLOCK END
	BLOCK 82

L_7481:
; Line 5389:	            if ((apll->mode == am_indisp && apll->preg == EAX) || 
; Line 5390:	                (apll->mode == am_indispscale && (apll->preg == EAX || apll->sreg == EAX))) 

; Line 5390:	                (apll->mode == am_indispscale && (apll->preg == EAX || apll->sreg == EAX))) 

	T249(EAX).A =   _apll:LINK(-20).A
	T250(EAX).I =   *(T249(EAX) + 0).A.I
	CONDGO	L_7929:PC ; T250(EAX).I != #C.I
	BLOCK END
	BLOCK 83
	T251(EAX).A =   _apll:LINK(-20).A
	T252(AL).C =   *(T251(EAX) + 4).A.C
	CONDGO	L_7928:PC ; T252(AL).C == #0.C
	BLOCK END
	BLOCK 84

L_7929:
	T253(EAX).A =   _apll:LINK(-20).A
	T254(EAX).I =   *(T253(EAX) + 0).A.I
	CONDGO	L_7480:PC ; T254(EAX).I != #D.I
	BLOCK END
	BLOCK 85
	T255(EAX).A =   _apll:LINK(-20).A
	T256(AL).C =   *(T255(EAX) + 4).A.C
	CONDGO	L_7930:PC ; T256(AL).C == #0.C
	BLOCK END
	BLOCK 86
	T257(EAX).A =   _apll:LINK(-20).A
	T258(AL).C =   *(T257(EAX) + 5).A.C
	CONDGO	L_7480:PC ; T258(AL).C != #0.C
	BLOCK END
	BLOCK 87

L_7930:
	BLOCK END
	BLOCK 88

L_7928:
	DBG BLOCK START
	BLOCK END
	BLOCK 89

L_7482:
; Line 5391:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 90

L_7483:
; Line 5392:	                pushed = true; 

	_pushed:LINK(-33).BOOL =   #1.BOOL
; Line 5393:	                gen_codes(op_push, ISZ_UINT, makedreg(EBP), 0); 

	T259(EAX).A =   #0.I
	PARM	T259(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T260(EAX).A =   RV.T11(EAX).A
	PARMADJ	#4.N
	PARM	T260(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5394:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5395:	                gen_codes(op_lea, ISZ_UINT, makedreg(EBP), apll); 

	T261(EAX).A =   _apll:LINK(-20).A
	PARM	T261(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T262(EAX).A =   RV.T12(EAX).A
	PARMADJ	#4.N
	PARM	T262(EAX).A
	PARM	#7.I
	PARM	#106.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5396:	                apll = makedreg(EBP); 

	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T263(EAX).A =   RV.T13(EAX).A
	PARMADJ	#4.N
	_apll:LINK(-20).A =   T263(EAX).A
; Line 5397:	                apll->mode = am_indisp; 

	T264(EAX).A =   _apll:LINK(-20).A
	*(T264(EAX) + 0).A.I =   #C.I
; Line 5398:	                apll->offset = Optimizer::simpleIntNode(Optimizer::se_i, 0); 

	T265(EDX:EAX).ULL =   #0.I
	PARM	T265(EDX:EAX).ULL
	PARM	#4.I
	TAG
	GOSUB	#@Optimizer@simpleIntNode$q18@Optimizer@se_typeuL:PC.UI
	T266(ECX).A =   RV.T14(EAX).A
	PARMADJ	#C.N
	T267(EAX).A =   _apll:LINK(-20).A
	*(T267(EAX) + C).A.A =   T266(ECX).A
; Line 5399:	            } 

	BLOCK END
	BLOCK 91

L_7484:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_7485:
	DBG BLOCK END
	BLOCK END
	BLOCK 93

L_7480:
	BLOCK END
	BLOCK 94

L_7486:
	DBG BLOCK END
; Line 5400:	            gen_codes(op_mov, ISZ_UCHAR, apal, aimmed(1)); 

	T268(EDX:EAX).ULL =   #1.C
	PARM	T268(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T269(EAX).A =   RV.T15(EAX).A
	PARMADJ	#8.N
	PARM	T269(EAX).A
	T270(EAX).A =   _apal:LINK(-12).A
	PARM	T270(EAX).A
	T271(EAX).UI =   #3.C
	PARM	T271(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5401:	            gen_code(op_lock, NULL, NULL); 

	T272(EAX).A =   #0.I
	PARM	T272(EAX).A
	T273(EAX).A =   #0.I
	PARM	T273(EAX).A
	PARM	#26F.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5402:	            gen_codes(op_xchg, ISZ_UCHAR, apal, apll); 

	T274(EAX).A =   _apll:LINK(-20).A
	PARM	T274(EAX).A
	T275(EAX).A =   _apal:LINK(-12).A
	PARM	T275(EAX).A
	T276(EAX).UI =   #3.C
	PARM	T276(EAX).UI
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 95

L_7488:
; Line 5403:	            if (pushed) 

	T277(AL).BOOL =   _pushed:LINK(-33).BOOL
	CONDGO	L_7487:PC ; T277(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 96
	DBG BLOCK START
	BLOCK END
	BLOCK 97

L_7489:
; Line 5404:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 98

L_7490:
; Line 5405:	                gen_codes(op_pop, ISZ_UINT, makedreg(EBP), NULL); 

	T278(EAX).A =   #0.I
	PARM	T278(EAX).A
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T279(EAX).A =   RV.T16(EAX).A
	PARMADJ	#4.N
	PARM	T279(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5406:	                pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5407:	            } 

	BLOCK END
	BLOCK 99

L_7491:
	DBG BLOCK END
	BLOCK END
	BLOCK 100

L_7492:
	DBG BLOCK END
	BLOCK END
	BLOCK 101

L_7487:
	BLOCK END
	BLOCK 102

L_7493:
	DBG BLOCK END
; Line 5408:	            break; 

	GOTO	L_7419:PC
	BLOCK END
	BLOCK 103
	DBG BLOCK END
	BLOCK END
	BLOCK 104

L_7494:
	DBG BLOCK START
; Line 5409:	        case Optimizer::i_atomic_flag_clear: 
; Line 5410:	            getAmodes(q, &opl, q->dc.right, &apll, &aplh); 

; Line 5410:	            getAmodes(q, &opl, q->dc.right, &apll, &aplh); 

	T280(EAX).A =   #_aplh:LINK(-24).A
	PARM	T280(EAX).A
	T281(EAX).A =   #_apll:LINK(-20).A
	PARM	T281(EAX).A
	T282(EAX).A =   _q:LINK(4).A
	T283(EAX).A =   *(T282(EAX) + 8+0).A.A
	PARM	T283(EAX).A
	T284(EAX).A =   #_opl:LINK(-48).A
	PARM	T284(EAX).A
	T285(EAX).A =   _q:LINK(4).A
	PARM	T285(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5411:	            gen_codes(op_mov, ISZ_UCHAR, apll, aimmed(0)); 

	T286(EDX:EAX).ULL =   #0.I
	PARM	T286(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T287(EAX).A =   RV.T17(EAX).A
	PARMADJ	#8.N
	PARM	T287(EAX).A
	T288(EAX).A =   _apll:LINK(-20).A
	PARM	T288(EAX).A
	T289(EAX).UI =   #3.C
	PARM	T289(EAX).UI
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 105

L_7497:
; Line 5412:	            if (needsync == (Optimizer::mo_seq_cst | 0x80)) 

	T290(EAX).I =   _needsync:LINK(-8).I
	CONDGO	L_7496:PC ; T290(EAX).I != #85.I
	BLOCK END
	BLOCK 106
	DBG BLOCK START
	BLOCK END
	BLOCK 107

L_7498:
; Line 5413:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 108

L_7499:
; Line 5414:	                gen_code(op_mfence, NULL, NULL); 

	T291(EAX).A =   #0.I
	PARM	T291(EAX).A
	T292(EAX).A =   #0.I
	PARM	T292(EAX).A
	PARM	#1D5.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5415:	            } 

	BLOCK END
	BLOCK 109

L_7500:
	DBG BLOCK END
	BLOCK END
	BLOCK 110

L_7501:
	DBG BLOCK END
	BLOCK END
	BLOCK 111

L_7496:
	BLOCK END
	BLOCK 112

L_7502:
	DBG BLOCK END
; Line 5416:	            break; 

	GOTO	L_7419:PC
	BLOCK END
	BLOCK 113
	DBG BLOCK END
	BLOCK END
	BLOCK 114

L_7503:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 115

L_7506:
; Line 5417:	        case Optimizer::i_xchg: 
; Line 5421:	            { 

	T293(EAX).A =   _q:LINK(4).A
	T294(EAX).A =   *(T293(EAX) + 40).A.A
	T295(AL).C =   *(T294(EAX) + 19).A.C
	CONDGO	L_7931:PC ; T295(AL).C == #B.C
	BLOCK END
	BLOCK 116
	T296(EAX).A =   _q:LINK(4).A
	T297(EAX).A =   *(T296(EAX) + 40).A.A
	T298(EAX).I =   *(T297(EAX) + 19).A.C
	CONDGO	L_7931:PC ; T298(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 117
	T299(EAX).A =   _q:LINK(4).A
	T300(EAX).A =   *(T299(EAX) + 40).A.A
	T301(EAX).I =   *(T300(EAX) + 19).A.C
	CONDGO	L_7505:PC ; T301(EAX).I S< #13.I
	BLOCK END
	BLOCK 118

L_7931:
	T302(EAX).A =   _q:LINK(4).A
	T303(EAX).A =   *(T302(EAX) + 4+0).A.A
	T304(AL).C =   *(T303(EAX) + 19).A.C
	CONDGO	L_7932:PC ; T304(AL).C == #B.C
	BLOCK END
	BLOCK 119
	T305(EAX).A =   _q:LINK(4).A
	T306(EAX).A =   *(T305(EAX) + 4+0).A.A
	T307(EAX).I =   *(T306(EAX) + 19).A.C
	CONDGO	L_7932:PC ; T307(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 120
	T308(EAX).A =   _q:LINK(4).A
	T309(EAX).A =   *(T308(EAX) + 4+0).A.A
	T310(EAX).I =   *(T309(EAX) + 19).A.C
	CONDGO	L_7505:PC ; T310(EAX).I S< #13.I
	BLOCK END
	BLOCK 121

L_7932:
	T311(EAX).A =   _q:LINK(4).A
	T312(EAX).A =   *(T311(EAX) + 8+0).A.A
	T313(AL).C =   *(T312(EAX) + 19).A.C
	CONDGO	L_7933:PC ; T313(AL).C == #B.C
	BLOCK END
	BLOCK 122
	T314(EAX).A =   _q:LINK(4).A
	T315(EAX).A =   *(T314(EAX) + 8+0).A.A
	T316(EAX).I =   *(T315(EAX) + 19).A.C
	CONDGO	L_7933:PC ; T316(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 123
	T317(EAX).A =   _q:LINK(4).A
	T318(EAX).A =   *(T317(EAX) + 8+0).A.A
	T319(EAX).I =   *(T318(EAX) + 19).A.C
	CONDGO	L_7505:PC ; T319(EAX).I S< #13.I
	BLOCK END
	BLOCK 124

L_7933:
	DBG BLOCK START
	BLOCK END
	BLOCK 125

L_7507:
; Line 5420:	                (q->dc.right->size == ISZ_ULONGLONG || q->dc.right->size == -ISZ_ULONGLONG || q->dc.right->size >= ISZ_DOUBLE)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 126

L_7508:
; Line 5422:	                int lab = 0; 

	VAR START	lab
	_lab:LINK(-164).I =   #0.I
; Line 5423:	                getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T320(EAX).A =   #_aprh:LINK(-32).A
	PARM	T320(EAX).A
	T321(EAX).A =   #_aprl:LINK(-28).A
	PARM	T321(EAX).A
	T322(EAX).A =   _q:LINK(4).A
	T323(EAX).A =   *(T322(EAX) + 8+0).A.A
	PARM	T323(EAX).A
	T324(EAX).A =   #_opr:LINK(-52).A
	PARM	T324(EAX).A
	T325(EAX).A =   _q:LINK(4).A
	PARM	T325(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5424:	                getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T326(EAX).A =   #_aplh:LINK(-24).A
	PARM	T326(EAX).A
	T327(EAX).A =   #_apll:LINK(-20).A
	PARM	T327(EAX).A
	T328(EAX).A =   _q:LINK(4).A
	T329(EAX).A =   *(T328(EAX) + 4+0).A.A
	PARM	T329(EAX).A
	T330(EAX).A =   #_opl:LINK(-48).A
	PARM	T330(EAX).A
	T331(EAX).A =   _q:LINK(4).A
	PARM	T331(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5425:	                getAmodes(q, &opa, q->ans, &apal, &apah); 

	T332(EAX).A =   #_apah:LINK(-16).A
	PARM	T332(EAX).A
	T333(EAX).A =   #_apal:LINK(-12).A
	PARM	T333(EAX).A
	T334(EAX).A =   _q:LINK(4).A
	T335(EAX).A =   *(T334(EAX) + 40).A.A
	PARM	T335(EAX).A
	T336(EAX).A =   #_opa:LINK(-44).A
	PARM	T336(EAX).A
	T337(EAX).A =   _q:LINK(4).A
	PARM	T337(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	VAR START	regflagsa
; Line 5426:	                int regflagsa = makeregflags(apal); 

	T338(EAX).A =   _apal:LINK(-12).A
	PARM	T338(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T339(EAX).I =   RV.T18(EAX).I
	PARMADJ	#4.N
	_regflagsa:LINK(-168).I =   T339(EAX).I
	VAR START	regflagsl
; Line 5427:	                int regflagsl = makeregflags(apll); 

	T340(EAX).A =   _apll:LINK(-20).A
	PARM	T340(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T341(EAX).I =   RV.T19(EAX).I
	PARMADJ	#4.N
	_regflagsl:LINK(-172).I =   T341(EAX).I
	VAR START	regflagsr
; Line 5428:	                int regflagsr = makeregflags(aprl); 

	T342(EAX).A =   _aprl:LINK(-28).A
	PARM	T342(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T343(EAX).I =   RV.T20(EAX).I
	PARMADJ	#4.N
	_regflagsr:LINK(-176).I =   T343(EAX).I
	VAR START	regflags
; Line 5429:	                int regflags = regflagsa | regflagsl | regflagsr; 

	T344(ECX).I =   _regflagsa:LINK(-168).I
	T345(EAX).I =   _regflagsl:LINK(-172).I
	T346(ECX).I = T344(ECX).I | T345(EAX).I
	T347(EAX).I =   _regflagsr:LINK(-176).I
	T348(EAX).I = T346(ECX).I | T347(EAX).I
	_regflags:LINK(-180).I =   T348(EAX).I
	VAR START	pushreg1
; Line 5430:	                bool pushreg1 = false; 

	_pushreg1:LINK(-181).BOOL =   #0.BOOL
	VAR START	reg1
; Line 5431:	                int reg1 = 0; 

	_reg1:LINK(-188).I =   #0.I
	VAR START	used_mask
; Line 5432:	                int used_mask = (1 << EAX) | (1 << EBX) | (1 << ECX) | (1 << EDX); 

	_used_mask:LINK(-192).I =   #F.I
; Line 5433:	                gen_codes(op_push, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T349(EAX).UI =   #1.C
	PARM	T349(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T350(EAX).A =   RV.T21(EAX).A
	PARMADJ	#4.N
	PARM	T350(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5434:	                gen_codes(op_push, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T351(EAX).UI =   #3.C
	PARM	T351(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T352(EAX).A =   RV.T22(EAX).A
	PARMADJ	#4.N
	PARM	T352(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5435:	                pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 127

L_7510:
; Line 5436:	                if (regflagsl & used_mask) 

	T353(ECX).I =   _regflagsl:LINK(-172).I
	T354(EAX).I =   _used_mask:LINK(-192).I
	T355(EAX).I = T353(ECX).I & T354(EAX).I
	CONDGO	L_7509:PC ; T355(EAX).I == #0.I
	BLOCK END
	BLOCK 128
	DBG BLOCK START
	BLOCK END
	BLOCK 129

L_7511:
; Line 5437:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 130

L_7512:
; Line 5438:	                    apll = atomic_lea(apll, apll, regflags | used_mask, reg1, pushreg1); 

	T356(EAX).A =   #_pushreg1:LINK(-181).A
	PARM	T356(EAX).A
	T357(EAX).A =   #_reg1:LINK(-188).A
	PARM	T357(EAX).A
	T358(ECX).I =   _regflags:LINK(-180).I
	T359(EAX).I =   _used_mask:LINK(-192).I
	T360(EAX).I = T358(ECX).I | T359(EAX).I
	PARM	T360(EAX).I
	T361(EAX).A =   _apll:LINK(-20).A
	PARM	T361(EAX).A
	T362(EAX).A =   _apll:LINK(-20).A
	PARM	T362(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T363(EAX).A =   RV.T23(EAX).A
	PARMADJ	#14.N
	_apll:LINK(-20).A =   T363(EAX).A
; Line 5439:	                    aplh = nullptr; 

	_aplh:LINK(-24).A =   #0.A
; Line 5440:	                    used_mask |= 1 << reg1; 

	T364(EDX).I =   _used_mask:LINK(-192).I
	T366(ECX).I =   _reg1:LINK(-188).I
	T924(EAX).I =   T366(ECX).I^
	T931(ECX).I =   T924(EAX).I^
	T367(EAX).I = #1.C << T931(ECX).I
	T368(EAX).I = T364(EDX).I | T367(EAX).I
	_used_mask:LINK(-192).I =   T368(EAX).I
; Line 5441:	                } 

	BLOCK END
	BLOCK 131

L_7513:
	DBG BLOCK END
	BLOCK END
	BLOCK 132

L_7514:
	DBG BLOCK END
	BLOCK END
	BLOCK 133

L_7509:
	BLOCK END
	BLOCK 134

L_7515:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_7517:
; Line 5442:	                if (aprl->mode == am_xmmreg) 

	T369(EAX).A =   _aprl:LINK(-28).A
	T370(EAX).I =   *(T369(EAX) + 0).A.I
	CONDGO	L_7516:PC ; T370(EAX).I != #A.I
	BLOCK END
	BLOCK 136
	DBG BLOCK START
	BLOCK END
	BLOCK 137

L_7518:
; Line 5443:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 138

L_7519:
; Line 5444:	                    gen_code(op_sub, makedreg(ESP), aimmed(8)); 

	T371(EDX:EAX).ULL =   #8.I
	PARM	T371(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T372(EAX).A =   RV.T24(EAX).A
	PARMADJ	#8.N
	PARM	T372(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T373(EAX).A =   RV.T25(EAX).A
	PARMADJ	#4.N
	PARM	T373(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5445:	                    pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
; Line 5446:	                    gen_code_sse(op_movsd, make_stack(0), aprl); 

	T374(EAX).A =   _aprl:LINK(-28).A
	PARM	T374(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T375(EAX).A =   RV.T26(EAX).A
	PARMADJ	#4.N
	PARM	T375(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5447:	                } 

	BLOCK END
	BLOCK 139

L_7520:
	DBG BLOCK END
	BLOCK END
	BLOCK 140

L_7522:
	DBG BLOCK END
	GOTO	L_7521:PC
	BLOCK END
	BLOCK 141
	DBG BLOCK START
	BLOCK END
	BLOCK 142

L_7523:
	BLOCK END
	BLOCK 143

L_7516:
; Line 5448:	                else 

; Line 5449:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 144

L_7524:
; Line 5450:	                    if (!aprh) 

	DBG BLOCK START
	BLOCK END
	BLOCK 145

L_7526:
	T376(EAX).A =   _aprh:LINK(-32).A
	CONDGO	L_7525:PC ; T376(EAX).A != #0.A
	BLOCK END
	BLOCK 146
	DBG BLOCK START
	BLOCK END
	BLOCK 147

L_7527:
; Line 5451:	                        aprh = offsetToHigh(aprl); 

	T377(EAX).A =   _aprl:LINK(-28).A
	PARM	T377(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T378(EAX).A =   RV.T27(EAX).A
	PARMADJ	#4.N
	_aprh:LINK(-32).A =   T378(EAX).A
	BLOCK END
	BLOCK 148

L_7528:
	DBG BLOCK END
	BLOCK END
	BLOCK 149

L_7525:
	BLOCK END
	BLOCK 150

L_7529:
	DBG BLOCK END
; Line 5452:	                    gen_codes(op_push, ISZ_UINT, aprh, nullptr); 

	PARM	#0.UI
	T379(EAX).A =   _aprh:LINK(-32).A
	PARM	T379(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5453:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5454:	                    gen_codes(op_push, ISZ_UINT, aprl, nullptr); 

	PARM	#0.UI
	T380(EAX).A =   _aprl:LINK(-28).A
	PARM	T380(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5455:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5456:	                } 

	BLOCK END
	BLOCK 151

L_7530:
	DBG BLOCK END
	BLOCK END
	BLOCK 152

L_7531:
	DBG BLOCK END
	BLOCK END
	BLOCK 153

L_7521:
	BLOCK END
	BLOCK 154

L_7532:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 155

L_7534:
; Line 5457:	                if (!aplh) 

	T381(EAX).A =   _aplh:LINK(-24).A
	CONDGO	L_7533:PC ; T381(EAX).A != #0.A
	BLOCK END
	BLOCK 156
	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_7535:
; Line 5458:	                    aplh = offsetToHigh(apll); 

	T382(EAX).A =   _apll:LINK(-20).A
	PARM	T382(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T383(EAX).A =   RV.T28(EAX).A
	PARMADJ	#4.N
	_aplh:LINK(-24).A =   T383(EAX).A
	BLOCK END
	BLOCK 158

L_7536:
	DBG BLOCK END
	BLOCK END
	BLOCK 159

L_7533:
	BLOCK END
	BLOCK 160

L_7537:
	DBG BLOCK END
; Line 5459:	                gen_codes(op_push, ISZ_UINT, aplh, nullptr); 

	PARM	#0.UI
	T384(EAX).A =   _aplh:LINK(-24).A
	PARM	T384(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5460:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5461:	                gen_codes(op_push, ISZ_UINT, apll, nullptr); 

	PARM	#0.UI
	T385(EAX).A =   _apll:LINK(-20).A
	PARM	T385(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5462:	                pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5463:	                gen_codes(op_mov, ISZ_UINT, makedreg(EAX), make_stack(-0)); 

	PARM	#0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T386(EAX).A =   RV.T29(EAX).A
	PARMADJ	#4.N
	PARM	T386(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T387(EAX).A =   RV.T30(EAX).A
	PARMADJ	#4.N
	PARM	T387(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5464:	                gen_codes(op_mov, ISZ_UINT, makedreg(EDX), make_stack(-4)); 

	PARM	#FFFFFFFFFFFFFFFC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T388(EAX).A =   RV.T31(EAX).A
	PARMADJ	#4.N
	PARM	T388(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T389(EAX).A =   RV.T32(EAX).A
	PARMADJ	#4.N
	PARM	T389(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5465:	                oa_gen_label(lab = beGetLabel); 

	T390(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-164).I =   T390(EAX).I
	T391(EAX).I =   _lab:LINK(-164).I
	PARM	T391(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 5466:	                gen_codes(op_mov, ISZ_UINT, makedreg(EBX), make_stack(-8)); 

	PARM	#FFFFFFFFFFFFFFF8.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T392(EAX).A =   RV.T33(EAX).A
	PARMADJ	#4.N
	PARM	T392(EAX).A
	T393(EAX).UI =   #3.C
	PARM	T393(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T394(EAX).A =   RV.T34(EAX).A
	PARMADJ	#4.N
	PARM	T394(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5467:	                gen_codes(op_mov, ISZ_UINT, makedreg(ECX), make_stack(-12)); 

	PARM	#FFFFFFFFFFFFFFF4.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T395(EAX).A =   RV.T35(EAX).A
	PARMADJ	#4.N
	PARM	T395(EAX).A
	T396(EAX).UI =   #1.C
	PARM	T396(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T397(EAX).A =   RV.T36(EAX).A
	PARMADJ	#4.N
	PARM	T397(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5468:	                gen_codes(op_cmpxchg8b, ISZ_NONE, apll, nullptr); 

	PARM	#0.UI
	T398(EAX).A =   _apll:LINK(-20).A
	PARM	T398(EAX).A
	PARM	#0.I
	PARM	#5E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5469:	                gen_code(op_jne, make_label(lab), NULL); 

	T399(EAX).A =   #0.I
	PARM	T399(EAX).A
	T400(EAX).I =   _lab:LINK(-164).I
	PARM	T400(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T401(EAX).A =   RV.T37(EAX).A
	PARMADJ	#4.N
	PARM	T401(EAX).A
	PARM	#F4.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 161

L_7539:
; Line 5471:	                if (apal->mode == am_xmmreg) 

	T402(EAX).A =   _apal:LINK(-12).A
	T403(EAX).I =   *(T402(EAX) + 0).A.I
	CONDGO	L_7538:PC ; T403(EAX).I != #A.I
	BLOCK END
	BLOCK 162
	DBG BLOCK START
	BLOCK END
	BLOCK 163

L_7540:
; Line 5472:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 164

L_7541:
; Line 5473:	                    gen_codes(op_push, ISZ_UINT, makedreg(EDX), nullptr); 

	PARM	#0.UI
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T404(EAX).A =   RV.T38(EAX).A
	PARMADJ	#4.N
	PARM	T404(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5474:	                    gen_codes(op_push, ISZ_UINT, makedreg(EAX), nullptr); 

	PARM	#0.UI
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T405(EAX).A =   RV.T39(EAX).A
	PARMADJ	#4.N
	PARM	T405(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5475:	                    gen_code_sse(op_movsd, apal, make_stack(0)); 

	PARM	#0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T406(EAX).A =   RV.T40(EAX).A
	PARMADJ	#4.N
	PARM	T406(EAX).A
	T407(EAX).A =   _apal:LINK(-12).A
	PARM	T407(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5476:	                    gen_code(op_add, makedreg(ESP), aimmed(8)); 

	T408(EDX:EAX).ULL =   #8.I
	PARM	T408(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T409(EAX).A =   RV.T41(EAX).A
	PARMADJ	#8.N
	PARM	T409(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T410(EAX).A =   RV.T42(EAX).A
	PARMADJ	#4.N
	PARM	T410(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5477:	                } 

	BLOCK END
	BLOCK 165

L_7542:
	DBG BLOCK END
	BLOCK END
	BLOCK 166

L_7544:
	DBG BLOCK END
	GOTO	L_7543:PC
	BLOCK END
	BLOCK 167
	DBG BLOCK START
	BLOCK END
	BLOCK 168

L_7545:
	BLOCK END
	BLOCK 169

L_7538:
; Line 5478:	                else 

; Line 5479:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 170

L_7546:
; Line 5480:	                    gen_codes(op_mov, ISZ_UINT, apal, makedreg(EAX)); 

	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T411(EAX).A =   RV.T43(EAX).A
	PARMADJ	#4.N
	PARM	T411(EAX).A
	T412(EAX).A =   _apal:LINK(-12).A
	PARM	T412(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5481:	                    gen_codes(op_mov, ISZ_UINT, apah, makedreg(EDX)); 

	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T413(EAX).A =   RV.T44(EAX).A
	PARMADJ	#4.N
	PARM	T413(EAX).A
	T414(EAX).A =   _apah:LINK(-16).A
	PARM	T414(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5482:	                } 

	BLOCK END
	BLOCK 171

L_7547:
	DBG BLOCK END
	BLOCK END
	BLOCK 172

L_7548:
	DBG BLOCK END
	BLOCK END
	BLOCK 173

L_7543:
	BLOCK END
	BLOCK 174

L_7549:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 175

L_7551:
; Line 5483:	                if (aprl->mode == am_dreg) 

	T415(EAX).A =   _aprl:LINK(-28).A
	T416(EAX).I =   *(T415(EAX) + 0).A.I
	CONDGO	L_7550:PC ; T416(EAX).I != #2.I
	BLOCK END
	BLOCK 176
	DBG BLOCK START
	BLOCK END
	BLOCK 177

L_7552:
; Line 5484:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_7553:
; Line 5485:	                    gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T417(EDX:EAX).ULL =   #8.I
	PARM	T417(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T418(EAX).A =   RV.T45(EAX).A
	PARMADJ	#8.N
	PARM	T418(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T419(EAX).A =   RV.T46(EAX).A
	PARMADJ	#4.N
	PARM	T419(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5486:	                    pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 179

L_7555:
; Line 5487:	                    if (apal->preg != aprl->preg && (!apah || apah->preg != aprl->preg)) 

	T420(EAX).A =   _aprl:LINK(-28).A
	T421(ECX).I =   *(T420(EAX) + 4).A.C
	T422(EAX).A =   _apal:LINK(-12).A
	T423(EAX).I =   *(T422(EAX) + 4).A.C
	CONDGO	L_7554:PC ; T423(EAX).I == T421(ECX).I
	BLOCK END
	BLOCK 180
	T424(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7934:PC ; T424(EAX).A == #0.A
	BLOCK END
	BLOCK 181
	T425(EAX).A =   _aprl:LINK(-28).A
	T426(ECX).I =   *(T425(EAX) + 4).A.C
	T427(EAX).A =   _apah:LINK(-16).A
	T428(EAX).I =   *(T427(EAX) + 4).A.C
	CONDGO	L_7554:PC ; T428(EAX).I == T426(ECX).I
	BLOCK END
	BLOCK 182

L_7934:
	DBG BLOCK START
	BLOCK END
	BLOCK 183

L_7556:
; Line 5488:	                        gen_codes(op_pop, ISZ_UINT, aprl, nullptr); 

	PARM	#0.UI
	T429(EAX).A =   _aprl:LINK(-28).A
	PARM	T429(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 184

L_7558:
	DBG BLOCK END
	GOTO	L_7557:PC
	BLOCK END
	BLOCK 185
	DBG BLOCK START
	BLOCK END
	BLOCK 186

L_7559:
	BLOCK END
	BLOCK 187

L_7554:
; Line 5489:	                    else 

; Line 5490:	                        gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T430(EDX:EAX).ULL =   #4.I
	PARM	T430(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T431(EAX).A =   RV.T47(EAX).A
	PARMADJ	#8.N
	PARM	T431(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T432(EAX).A =   RV.T48(EAX).A
	PARMADJ	#4.N
	PARM	T432(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 188

L_7560:
	DBG BLOCK END
	BLOCK END
	BLOCK 189

L_7557:
	BLOCK END
	BLOCK 190

L_7561:
	DBG BLOCK END
; Line 5491:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
	DBG BLOCK START
	BLOCK END
	BLOCK 191

L_7563:
; Line 5492:	                    if (apal->preg != aprh->preg && (!apah || apah->preg != aprh->preg)) 

	T433(EAX).A =   _aprh:LINK(-32).A
	T434(ECX).I =   *(T433(EAX) + 4).A.C
	T435(EAX).A =   _apal:LINK(-12).A
	T436(EAX).I =   *(T435(EAX) + 4).A.C
	CONDGO	L_7562:PC ; T436(EAX).I == T434(ECX).I
	BLOCK END
	BLOCK 192
	T437(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7935:PC ; T437(EAX).A == #0.A
	BLOCK END
	BLOCK 193
	T438(EAX).A =   _aprh:LINK(-32).A
	T439(ECX).I =   *(T438(EAX) + 4).A.C
	T440(EAX).A =   _apah:LINK(-16).A
	T441(EAX).I =   *(T440(EAX) + 4).A.C
	CONDGO	L_7562:PC ; T441(EAX).I == T439(ECX).I
	BLOCK END
	BLOCK 194

L_7935:
	DBG BLOCK START
	BLOCK END
	BLOCK 195

L_7564:
; Line 5493:	                        gen_codes(op_pop, ISZ_UINT, aprh, nullptr); 

	PARM	#0.UI
	T442(EAX).A =   _aprh:LINK(-32).A
	PARM	T442(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 196

L_7566:
	DBG BLOCK END
	GOTO	L_7565:PC
	BLOCK END
	BLOCK 197
	DBG BLOCK START
	BLOCK END
	BLOCK 198

L_7567:
	BLOCK END
	BLOCK 199

L_7562:
; Line 5494:	                    else 

; Line 5495:	                        gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T443(EDX:EAX).ULL =   #4.I
	PARM	T443(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T444(EAX).A =   RV.T49(EAX).A
	PARMADJ	#8.N
	PARM	T444(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T445(EAX).A =   RV.T50(EAX).A
	PARMADJ	#4.N
	PARM	T445(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 200

L_7568:
	DBG BLOCK END
	BLOCK END
	BLOCK 201

L_7565:
	BLOCK END
	BLOCK 202

L_7569:
	DBG BLOCK END
; Line 5496:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5497:	                } 

	BLOCK END
	BLOCK 203

L_7570:
	DBG BLOCK END
	BLOCK END
	BLOCK 204

L_7572:
	DBG BLOCK END
	GOTO	L_7571:PC
	BLOCK END
	BLOCK 205
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_7573:
	BLOCK END
	BLOCK 207

L_7550:
; Line 5498:	                else 

; Line 5499:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_7574:
; Line 5500:	                    gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(16)); 

	T446(EDX:EAX).ULL =   #10.I
	PARM	T446(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T447(EAX).A =   RV.T51(EAX).A
	PARMADJ	#8.N
	PARM	T447(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T448(EAX).A =   RV.T52(EAX).A
	PARMADJ	#4.N
	PARM	T448(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5501:	                    pushlevel -= 16; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #10.I
; Line 5502:	                } 

	BLOCK END
	BLOCK 209

L_7575:
	DBG BLOCK END
	BLOCK END
	BLOCK 210

L_7576:
	DBG BLOCK END
	BLOCK END
	BLOCK 211

L_7571:
	BLOCK END
	BLOCK 212

L_7577:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 213

L_7579:
; Line 5503:	                if (pushreg1) 

	T449(AL).BOOL =   _pushreg1:LINK(-181).BOOL
	CONDGO	L_7578:PC ; T449(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 214
	DBG BLOCK START
	BLOCK END
	BLOCK 215

L_7580:
; Line 5504:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 216

L_7581:
; Line 5505:	                    if (equal_address(apal, makedreg(reg1)) || apah && equal_address(apah, makedreg(reg1))) 

	DBG BLOCK START
	BLOCK END
	BLOCK 217

L_7583:
	T450(EAX).I =   _reg1:LINK(-188).I
	PARM	T450(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T451(EAX).A =   RV.T53(EAX).A
	PARMADJ	#4.N
	PARM	T451(EAX).A
	T452(EAX).A =   _apal:LINK(-12).A
	PARM	T452(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T453(EAX).I =   RV.T54(EAX).I
	PARMADJ	#8.N
	CONDGO	L_7936:PC ; T453(EAX).I != #0.I
	BLOCK END
	BLOCK 218
	T454(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7582:PC ; T454(EAX).A == #0.A
	BLOCK END
	BLOCK 219
	T455(EAX).I =   _reg1:LINK(-188).I
	PARM	T455(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T456(EAX).A =   RV.T55(EAX).A
	PARMADJ	#4.N
	PARM	T456(EAX).A
	T457(EAX).A =   _apah:LINK(-16).A
	PARM	T457(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T458(EAX).I =   RV.T56(EAX).I
	PARMADJ	#8.N
	CONDGO	L_7582:PC ; T458(EAX).I == #0.I
	BLOCK END
	BLOCK 220

L_7936:
	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_7584:
; Line 5506:	                        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(4)); 

	T461(EDX:EAX).ULL =   #4.I
	PARM	T461(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T462(EAX).A =   RV.T57(EAX).A
	PARMADJ	#8.N
	PARM	T462(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T463(EAX).A =   RV.T58(EAX).A
	PARMADJ	#4.N
	PARM	T463(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 222

L_7586:
	DBG BLOCK END
	GOTO	L_7585:PC
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_7587:
	BLOCK END
	BLOCK 225

L_7582:
; Line 5507:	                    else 

; Line 5508:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg1), nullptr); 

	PARM	#0.UI
	T459(EAX).I =   _reg1:LINK(-188).I
	PARM	T459(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T460(EAX).A =   RV.T59(EAX).A
	PARMADJ	#4.N
	PARM	T460(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 226

L_7588:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_7585:
	BLOCK END
	BLOCK 228

L_7589:
	DBG BLOCK END
; Line 5509:	                    pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5510:	                } 

	BLOCK END
	BLOCK 229

L_7590:
	DBG BLOCK END
	BLOCK END
	BLOCK 230

L_7591:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_7578:
	BLOCK END
	BLOCK 232

L_7592:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 233

L_7594:
; Line 5511:	                if (apal->preg != EBX && (!apah || apah->preg != EBX)) 

	T464(EAX).A =   _apal:LINK(-12).A
	T465(AL).C =   *(T464(EAX) + 4).A.C
	CONDGO	L_7593:PC ; T465(AL).C == #3.C
	BLOCK END
	BLOCK 234
	T466(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7937:PC ; T466(EAX).A == #0.A
	BLOCK END
	BLOCK 235
	T467(EAX).A =   _apah:LINK(-16).A
	T468(AL).C =   *(T467(EAX) + 4).A.C
	CONDGO	L_7593:PC ; T468(AL).C == #3.C
	BLOCK END
	BLOCK 236

L_7937:
	DBG BLOCK START
	BLOCK END
	BLOCK 237

L_7595:
; Line 5512:	                    gen_codes(op_pop, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T469(EAX).UI =   #3.C
	PARM	T469(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T470(EAX).A =   RV.T60(EAX).A
	PARMADJ	#4.N
	PARM	T470(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 238

L_7597:
	DBG BLOCK END
	GOTO	L_7596:PC
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_7598:
	BLOCK END
	BLOCK 241

L_7593:
; Line 5513:	                else 

; Line 5514:	                    gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T471(EDX:EAX).ULL =   #4.I
	PARM	T471(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T472(EAX).A =   RV.T61(EAX).A
	PARMADJ	#8.N
	PARM	T472(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T473(EAX).A =   RV.T62(EAX).A
	PARMADJ	#4.N
	PARM	T473(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 242

L_7599:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_7596:
	BLOCK END
	BLOCK 244

L_7600:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_7602:
; Line 5515:	                if (apal->preg != ECX && (!apah || apah->preg != ECX)) 

	T474(EAX).A =   _apal:LINK(-12).A
	T475(AL).C =   *(T474(EAX) + 4).A.C
	CONDGO	L_7601:PC ; T475(AL).C == #1.C
	BLOCK END
	BLOCK 246
	T476(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7938:PC ; T476(EAX).A == #0.A
	BLOCK END
	BLOCK 247
	T477(EAX).A =   _apah:LINK(-16).A
	T478(AL).C =   *(T477(EAX) + 4).A.C
	CONDGO	L_7601:PC ; T478(AL).C == #1.C
	BLOCK END
	BLOCK 248

L_7938:
	DBG BLOCK START
	BLOCK END
	BLOCK 249

L_7603:
; Line 5516:	                    gen_codes(op_pop, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T479(EAX).UI =   #1.C
	PARM	T479(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T480(EAX).A =   RV.T63(EAX).A
	PARMADJ	#4.N
	PARM	T480(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 250

L_7605:
	DBG BLOCK END
	GOTO	L_7604:PC
	BLOCK END
	BLOCK 251
	DBG BLOCK START
	BLOCK END
	BLOCK 252

L_7606:
	BLOCK END
	BLOCK 253

L_7601:
; Line 5517:	                else 

; Line 5518:	                    gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T481(EDX:EAX).ULL =   #4.I
	PARM	T481(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T482(EAX).A =   RV.T64(EAX).A
	PARMADJ	#8.N
	PARM	T482(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T483(EAX).A =   RV.T65(EAX).A
	PARMADJ	#4.N
	PARM	T483(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 254

L_7607:
	DBG BLOCK END
	BLOCK END
	BLOCK 255

L_7604:
	BLOCK END
	BLOCK 256

L_7608:
	DBG BLOCK END
; Line 5519:	                pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 5520:	            } 

	BLOCK END
	BLOCK 257

L_7609:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_7611:
	DBG BLOCK END
	GOTO	L_7610:PC
	BLOCK END
	BLOCK 259
	DBG BLOCK START
	BLOCK END
	BLOCK 260

L_7612:
	BLOCK END
	BLOCK 261

L_7505:
; Line 5521:	            else 

; Line 5522:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 262

L_7613:
; Line 5523:	                getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T484(EAX).A =   #_aprh:LINK(-32).A
	PARM	T484(EAX).A
	T485(EAX).A =   #_aprl:LINK(-28).A
	PARM	T485(EAX).A
	T486(EAX).A =   _q:LINK(4).A
	T487(EAX).A =   *(T486(EAX) + 8+0).A.A
	PARM	T487(EAX).A
	T488(EAX).A =   #_opr:LINK(-52).A
	PARM	T488(EAX).A
	T489(EAX).A =   _q:LINK(4).A
	PARM	T489(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5524:	                getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T490(EAX).A =   #_aplh:LINK(-24).A
	PARM	T490(EAX).A
	T491(EAX).A =   #_apll:LINK(-20).A
	PARM	T491(EAX).A
	T492(EAX).A =   _q:LINK(4).A
	T493(EAX).A =   *(T492(EAX) + 4+0).A.A
	PARM	T493(EAX).A
	T494(EAX).A =   #_opl:LINK(-48).A
	PARM	T494(EAX).A
	T495(EAX).A =   _q:LINK(4).A
	PARM	T495(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5525:	                getAmodes(q, &opa, q->ans, &apal, &apah); 

	T496(EAX).A =   #_apah:LINK(-16).A
	PARM	T496(EAX).A
	T497(EAX).A =   #_apal:LINK(-12).A
	PARM	T497(EAX).A
	T498(EAX).A =   _q:LINK(4).A
	T499(EAX).A =   *(T498(EAX) + 40).A.A
	PARM	T499(EAX).A
	T500(EAX).A =   #_opa:LINK(-44).A
	PARM	T500(EAX).A
	T501(EAX).A =   _q:LINK(4).A
	PARM	T501(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	VAR START	regflags
; Line 5526:	                int regflags = makeregflags(apll); 

	T502(EAX).A =   _apll:LINK(-20).A
	PARM	T502(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T503(EAX).I =   RV.T66(EAX).I
	PARMADJ	#4.N
	_regflags:LINK(-148).I =   T503(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 263

L_7615:
; Line 5527:	                if (regflags & (1 << apal->preg)) 

	T504(EDX).I =   _regflags:LINK(-148).I
	T505(EAX).A =   _apal:LINK(-12).A
	T507(CL).C =   *(T505(EAX) + 4).A.C
	T925(AL).C =   T507(CL).C^
	T932(CL).C =   T925(AL).C^
	T508(EAX).I = #1.C << T932(CL).C
	T509(EAX).I = T504(EDX).I & T508(EAX).I
	CONDGO	L_7614:PC ; T509(EAX).I == #0.I
	BLOCK END
	BLOCK 264
	DBG BLOCK START
	BLOCK END
	BLOCK 265

L_7616:
; Line 5528:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 266

L_7617:
; Line 5529:	                    bool pushed = false; 

	VAR START	pushed
	_pushed:LINK(-153).BOOL =   #0.BOOL
	VAR START	reg
; Line 5530:	                    int reg = getreg(apll, regflags, pushed); 

	T510(EAX).A =   #_pushed:LINK(-153).A
	PARM	T510(EAX).A
	T511(EAX).I =   _regflags:LINK(-148).I
	PARM	T511(EAX).I
	T512(EAX).A =   _apll:LINK(-20).A
	PARM	T512(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T513(EAX).I =   RV.T67(EAX).I
	PARMADJ	#C.N
	_reg:LINK(-160).I =   T513(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 267

L_7619:
; Line 5531:	                    if (aprl->mode == am_xmmreg) 

	T514(EAX).A =   _aprl:LINK(-28).A
	T515(EAX).I =   *(T514(EAX) + 0).A.I
	CONDGO	L_7618:PC ; T515(EAX).I != #A.I
	BLOCK END
	BLOCK 268
	DBG BLOCK START
	BLOCK END
	BLOCK 269

L_7620:
; Line 5532:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 270

L_7621:
; Line 5533:	                        gen_code(op_movd, makedreg(reg), aprl); 

	T516(EAX).A =   _aprl:LINK(-28).A
	PARM	T516(EAX).A
	T517(EAX).I =   _reg:LINK(-160).I
	PARM	T517(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T518(EAX).A =   RV.T68(EAX).A
	PARMADJ	#4.N
	PARM	T518(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5534:	                    } 

	BLOCK END
	BLOCK 271

L_7622:
	DBG BLOCK END
	BLOCK END
	BLOCK 272

L_7624:
	DBG BLOCK END
	GOTO	L_7623:PC
	BLOCK END
	BLOCK 273
	DBG BLOCK START
	BLOCK END
	BLOCK 274

L_7625:
	BLOCK END
	BLOCK 275

L_7618:
; Line 5535:	                    else 

; Line 5536:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 276

L_7626:
; Line 5537:	                        gen_codes(op_mov, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, makedreg(reg), aprl); 

	T519(EAX).A =   _aprl:LINK(-28).A
	PARM	T519(EAX).A
	T520(EAX).I =   _reg:LINK(-160).I
	PARM	T520(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T521(EAX).A =   RV.T69(EAX).A
	PARMADJ	#4.N
	PARM	T521(EAX).A
	T522(EAX).A =   _q:LINK(4).A
	T523(EAX).A =   *(T522(EAX) + 40).A.A
	T524(AL).C =   *(T523(EAX) + 19).A.C
	CONDGO	L_7939:PC ; T524(AL).C != #12.C
	BLOCK END
	BLOCK 277
	T525(EAX).I =   #7.I
	GOTO	L_7940:PC
	BLOCK END
	BLOCK 278

L_7939:
	T526(EAX).A =   _q:LINK(4).A
	T527(EAX).A =   *(T526(EAX) + 40).A.A
	T528(EAX).I =   *(T527(EAX) + 19).A.C
	T525(EAX).I =   T528(EAX).I
	BLOCK END
	BLOCK 279

L_7940:
	PARM	T525(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5538:	                    } 

	BLOCK END
	BLOCK 280

L_7627:
	DBG BLOCK END
	BLOCK END
	BLOCK 281

L_7628:
	DBG BLOCK END
	BLOCK END
	BLOCK 282

L_7623:
	BLOCK END
	BLOCK 283

L_7629:
	DBG BLOCK END
; Line 5539:	                    gen_codes(op_xchg, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, apll, makedreg(reg)); 

	T529(EAX).I =   _reg:LINK(-160).I
	PARM	T529(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T530(EAX).A =   RV.T70(EAX).A
	PARMADJ	#4.N
	PARM	T530(EAX).A
	T531(EAX).A =   _apll:LINK(-20).A
	PARM	T531(EAX).A
	T532(EAX).A =   _q:LINK(4).A
	T533(EAX).A =   *(T532(EAX) + 40).A.A
	T534(AL).C =   *(T533(EAX) + 19).A.C
	CONDGO	L_7941:PC ; T534(AL).C != #12.C
	BLOCK END
	BLOCK 284
	T535(EAX).I =   #7.I
	GOTO	L_7942:PC
	BLOCK END
	BLOCK 285

L_7941:
	T536(EAX).A =   _q:LINK(4).A
	T537(EAX).A =   *(T536(EAX) + 40).A.A
	T538(EAX).I =   *(T537(EAX) + 19).A.C
	T535(EAX).I =   T538(EAX).I
	BLOCK END
	BLOCK 286

L_7942:
	PARM	T535(EAX).I
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 287

L_7631:
; Line 5540:	                    if (apal->mode == am_xmmreg) 

	T539(EAX).A =   _apal:LINK(-12).A
	T540(EAX).I =   *(T539(EAX) + 0).A.I
	CONDGO	L_7630:PC ; T540(EAX).I != #A.I
	BLOCK END
	BLOCK 288
	DBG BLOCK START
	BLOCK END
	BLOCK 289

L_7632:
; Line 5541:	                        gen_code(op_movd, apal, makedreg(reg)); 

	T541(EAX).I =   _reg:LINK(-160).I
	PARM	T541(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T542(EAX).A =   RV.T71(EAX).A
	PARMADJ	#4.N
	PARM	T542(EAX).A
	T543(EAX).A =   _apal:LINK(-12).A
	PARM	T543(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 290

L_7634:
	DBG BLOCK END
	GOTO	L_7633:PC
	BLOCK END
	BLOCK 291
	DBG BLOCK START
	BLOCK END
	BLOCK 292

L_7635:
	BLOCK END
	BLOCK 293

L_7630:
; Line 5542:	                    else 

; Line 5543:	                        gen_codes(op_mov, q->ans->size, apal, makedreg(reg)); 

	T544(EAX).I =   _reg:LINK(-160).I
	PARM	T544(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T545(EAX).A =   RV.T72(EAX).A
	PARMADJ	#4.N
	PARM	T545(EAX).A
	T546(EAX).A =   _apal:LINK(-12).A
	PARM	T546(EAX).A
	T547(EAX).A =   _q:LINK(4).A
	T548(EAX).A =   *(T547(EAX) + 40).A.A
	T549(EAX).I =   *(T548(EAX) + 19).A.C
	PARM	T549(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 294

L_7636:
	DBG BLOCK END
	BLOCK END
	BLOCK 295

L_7633:
	BLOCK END
	BLOCK 296

L_7637:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 297

L_7639:
; Line 5544:	                    if (pushed) 

	T550(AL).BOOL =   _pushed:LINK(-153).BOOL
	CONDGO	L_7638:PC ; T550(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 298
	DBG BLOCK START
	BLOCK END
	BLOCK 299

L_7640:
; Line 5545:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 300

L_7641:
; Line 5546:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg), nullptr); 

	PARM	#0.UI
	T551(EAX).I =   _reg:LINK(-160).I
	PARM	T551(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T552(EAX).A =   RV.T73(EAX).A
	PARMADJ	#4.N
	PARM	T552(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5547:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5548:	                    } 

	BLOCK END
	BLOCK 301

L_7642:
	DBG BLOCK END
	BLOCK END
	BLOCK 302

L_7643:
	DBG BLOCK END
	BLOCK END
	BLOCK 303

L_7638:
	BLOCK END
	BLOCK 304

L_7644:
	DBG BLOCK END
; Line 5549:	                } 

	BLOCK END
	BLOCK 305

L_7645:
	DBG BLOCK END
	BLOCK END
	BLOCK 306

L_7647:
	DBG BLOCK END
	GOTO	L_7646:PC
	BLOCK END
	BLOCK 307
	DBG BLOCK START
	BLOCK END
	BLOCK 308

L_7648:
	BLOCK END
	BLOCK 309

L_7614:
; Line 5550:	                else 

; Line 5551:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 310

L_7649:
; Line 5552:	                    if (aprl->mode == am_xmmreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 311

L_7651:
	T553(EAX).A =   _aprl:LINK(-28).A
	T554(EAX).I =   *(T553(EAX) + 0).A.I
	CONDGO	L_7650:PC ; T554(EAX).I != #A.I
	BLOCK END
	BLOCK 312
	DBG BLOCK START
	BLOCK END
	BLOCK 313

L_7652:
; Line 5553:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 314

L_7653:
; Line 5554:	                        int reg = getreg(apll, regflags, pushed); 

	VAR START	reg
	T555(EAX).A =   #_pushed:LINK(-33).A
	PARM	T555(EAX).A
	T556(EAX).I =   _regflags:LINK(-148).I
	PARM	T556(EAX).I
	T557(EAX).A =   _apll:LINK(-20).A
	PARM	T557(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T558(EAX).I =   RV.T74(EAX).I
	PARMADJ	#C.N
	_reg:LINK(-152).I =   T558(EAX).I
; Line 5555:	                        gen_code(op_movd, makedreg(reg), aprl); 

	T559(EAX).A =   _aprl:LINK(-28).A
	PARM	T559(EAX).A
	T560(EAX).I =   _reg:LINK(-152).I
	PARM	T560(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T561(EAX).A =   RV.T75(EAX).A
	PARMADJ	#4.N
	PARM	T561(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5556:	                        gen_codes(op_xchg, ISZ_UINT, apll, makedreg(reg)); 

	T562(EAX).I =   _reg:LINK(-152).I
	PARM	T562(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T563(EAX).A =   RV.T76(EAX).A
	PARMADJ	#4.N
	PARM	T563(EAX).A
	T564(EAX).A =   _apll:LINK(-20).A
	PARM	T564(EAX).A
	PARM	#7.I
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5557:	                        gen_code(op_movd, apal, makedreg(reg)); 

	T565(EAX).I =   _reg:LINK(-152).I
	PARM	T565(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T566(EAX).A =   RV.T77(EAX).A
	PARMADJ	#4.N
	PARM	T566(EAX).A
	T567(EAX).A =   _apal:LINK(-12).A
	PARM	T567(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	DBG BLOCK START
	BLOCK END
	BLOCK 315

L_7655:
; Line 5558:	                        if (pushed) 

	T568(AL).BOOL =   _pushed:LINK(-33).BOOL
	CONDGO	L_7654:PC ; T568(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 316
	DBG BLOCK START
	BLOCK END
	BLOCK 317

L_7656:
; Line 5559:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 318

L_7657:
; Line 5560:	                            gen_codes(op_pop, ISZ_UINT, makedreg(reg), nullptr); 

	PARM	#0.UI
	T569(EAX).I =   _reg:LINK(-152).I
	PARM	T569(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T570(EAX).A =   RV.T78(EAX).A
	PARMADJ	#4.N
	PARM	T570(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5561:	                            pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5562:	                        } 

	BLOCK END
	BLOCK 319

L_7658:
	DBG BLOCK END
	BLOCK END
	BLOCK 320

L_7659:
	DBG BLOCK END
	BLOCK END
	BLOCK 321

L_7654:
	BLOCK END
	BLOCK 322

L_7660:
	DBG BLOCK END
; Line 5563:	                    } 

	BLOCK END
	BLOCK 323

L_7661:
	DBG BLOCK END
	BLOCK END
	BLOCK 324

L_7663:
	DBG BLOCK END
	GOTO	L_7662:PC
	BLOCK END
	BLOCK 325
	DBG BLOCK START
	BLOCK END
	BLOCK 326

L_7664:
	BLOCK END
	BLOCK 327

L_7650:
; Line 5564:	                    else 

; Line 5565:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 328

L_7665:
; Line 5566:	                        gen_codes(op_mov, q->ans->size, apal, aprl); 

	T571(EAX).A =   _aprl:LINK(-28).A
	PARM	T571(EAX).A
	T572(EAX).A =   _apal:LINK(-12).A
	PARM	T572(EAX).A
	T573(EAX).A =   _q:LINK(4).A
	T574(EAX).A =   *(T573(EAX) + 40).A.A
	T575(EAX).I =   *(T574(EAX) + 19).A.C
	PARM	T575(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5567:	                        gen_codes(op_xchg, q->ans->size, apll, apal); 

	T576(EAX).A =   _apal:LINK(-12).A
	PARM	T576(EAX).A
	T577(EAX).A =   _apll:LINK(-20).A
	PARM	T577(EAX).A
	T578(EAX).A =   _q:LINK(4).A
	T579(EAX).A =   *(T578(EAX) + 40).A.A
	T580(EAX).I =   *(T579(EAX) + 19).A.C
	PARM	T580(EAX).I
	PARM	#196.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5568:	                    } 

	BLOCK END
	BLOCK 329

L_7666:
	DBG BLOCK END
	BLOCK END
	BLOCK 330

L_7667:
	DBG BLOCK END
	BLOCK END
	BLOCK 331

L_7662:
	BLOCK END
	BLOCK 332

L_7668:
	DBG BLOCK END
; Line 5569:	                } 

	BLOCK END
	BLOCK 333

L_7669:
	DBG BLOCK END
	BLOCK END
	BLOCK 334

L_7670:
	DBG BLOCK END
	BLOCK END
	BLOCK 335

L_7646:
	BLOCK END
	BLOCK 336

L_7671:
	DBG BLOCK END
; Line 5570:	            } 

	BLOCK END
	BLOCK 337

L_7672:
	DBG BLOCK END
	BLOCK END
	BLOCK 338

L_7673:
	DBG BLOCK END
	BLOCK END
	BLOCK 339

L_7610:
	BLOCK END
	BLOCK 340

L_7674:
	DBG BLOCK END
; Line 5571:	            break; 

	GOTO	L_7419:PC
	BLOCK END
	BLOCK 341
	DBG BLOCK END
	BLOCK END
	BLOCK 342

L_7675:
	BLOCK END
	BLOCK 343

L_7677:
	DBG BLOCK START
; Line 5572:	        case Optimizer::i_cmpxchgweak: 

	DBG BLOCK START
	BLOCK END
	BLOCK 344

L_7679:
; Line 5582:	            { 

	VAR START	sz
; Line 5583:	                int sz = q->ans->size; 

	T581(EAX).A =   _q:LINK(4).A
	T582(EAX).A =   *(T581(EAX) + 40).A.A
	T583(EAX).I =   *(T582(EAX) + 19).A.C
	_sz:LINK(-64).I =   T583(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 345

L_7681:
; Line 5584:	                if ((q->ans->size == ISZ_ULONGLONG || q->ans->size == -ISZ_ULONGLONG || q->ans->size >= ISZ_DOUBLE) && 
; Line 5585:	                    (q->dc.left->size == ISZ_ULONGLONG || q->dc.left->size == -ISZ_ULONGLONG || q->dc.left->size >= ISZ_DOUBLE)) 

; Line 5585:	                    (q->dc.left->size == ISZ_ULONGLONG || q->dc.left->size == -ISZ_ULONGLONG || q->dc.left->size >= ISZ_DOUBLE)) 

	T584(EAX).A =   _q:LINK(4).A
	T585(EAX).A =   *(T584(EAX) + 40).A.A
	T586(AL).C =   *(T585(EAX) + 19).A.C
	CONDGO	L_7943:PC ; T586(AL).C == #B.C
	BLOCK END
	BLOCK 346
	T587(EAX).A =   _q:LINK(4).A
	T588(EAX).A =   *(T587(EAX) + 40).A.A
	T589(EAX).I =   *(T588(EAX) + 19).A.C
	CONDGO	L_7943:PC ; T589(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 347
	T590(EAX).A =   _q:LINK(4).A
	T591(EAX).A =   *(T590(EAX) + 40).A.A
	T592(EAX).I =   *(T591(EAX) + 19).A.C
	CONDGO	L_7680:PC ; T592(EAX).I S< #13.I
	BLOCK END
	BLOCK 348

L_7943:
	T593(EAX).A =   _q:LINK(4).A
	T594(EAX).A =   *(T593(EAX) + 4+0).A.A
	T595(AL).C =   *(T594(EAX) + 19).A.C
	CONDGO	L_7944:PC ; T595(AL).C == #B.C
	BLOCK END
	BLOCK 349
	T596(EAX).A =   _q:LINK(4).A
	T597(EAX).A =   *(T596(EAX) + 4+0).A.A
	T598(EAX).I =   *(T597(EAX) + 19).A.C
	CONDGO	L_7944:PC ; T598(EAX).I == #FFFFFFFFFFFFFFF5.I
	BLOCK END
	BLOCK 350
	T599(EAX).A =   _q:LINK(4).A
	T600(EAX).A =   *(T599(EAX) + 4+0).A.A
	T601(EAX).I =   *(T600(EAX) + 19).A.C
	CONDGO	L_7680:PC ; T601(EAX).I S< #13.I
	BLOCK END
	BLOCK 351

L_7944:
	DBG BLOCK START
	BLOCK END
	BLOCK 352

L_7682:
; Line 5586:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 353

L_7683:
; Line 5587:	                    int lab = 0; 

	VAR START	lab
	_lab:LINK(-96).I =   #0.I
; Line 5588:	                    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T602(EAX).A =   #_aprh:LINK(-32).A
	PARM	T602(EAX).A
	T603(EAX).A =   #_aprl:LINK(-28).A
	PARM	T603(EAX).A
	T604(EAX).A =   _q:LINK(4).A
	T605(EAX).A =   *(T604(EAX) + 8+0).A.A
	PARM	T605(EAX).A
	T606(EAX).A =   #_opr:LINK(-52).A
	PARM	T606(EAX).A
	T607(EAX).A =   _q:LINK(4).A
	PARM	T607(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5589:	                    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T608(EAX).A =   #_aplh:LINK(-24).A
	PARM	T608(EAX).A
	T609(EAX).A =   #_apll:LINK(-20).A
	PARM	T609(EAX).A
	T610(EAX).A =   _q:LINK(4).A
	T611(EAX).A =   *(T610(EAX) + 4+0).A.A
	PARM	T611(EAX).A
	T612(EAX).A =   #_opl:LINK(-48).A
	PARM	T612(EAX).A
	T613(EAX).A =   _q:LINK(4).A
	PARM	T613(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5590:	                    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T614(EAX).A =   #_apah:LINK(-16).A
	PARM	T614(EAX).A
	T615(EAX).A =   #_apal:LINK(-12).A
	PARM	T615(EAX).A
	T616(EAX).A =   _q:LINK(4).A
	T617(EAX).A =   *(T616(EAX) + 40).A.A
	PARM	T617(EAX).A
	T618(EAX).A =   #_opa:LINK(-44).A
	PARM	T618(EAX).A
	T619(EAX).A =   _q:LINK(4).A
	PARM	T619(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	VAR START	aprlold
; Line 5591:	                    AMODE *aprlold = aprl, *aprhold = aprh; 

	T620(EAX).A =   _aprl:LINK(-28).A
	_aprlold:LINK(-100).A =   T620(EAX).A
	VAR START	aprhold
	T621(EAX).A =   _aprh:LINK(-32).A
	_aprhold:LINK(-104).A =   T621(EAX).A
	VAR START	regflagsa
; Line 5592:	                    int regflagsa = makeregflags(apal); 

	T622(EAX).A =   _apal:LINK(-12).A
	PARM	T622(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T623(EAX).I =   RV.T79(EAX).I
	PARMADJ	#4.N
	_regflagsa:LINK(-108).I =   T623(EAX).I
	VAR START	regflagsl
; Line 5593:	                    int regflagsl = makeregflags(apll); 

	T624(EAX).A =   _apll:LINK(-20).A
	PARM	T624(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T625(EAX).I =   RV.T80(EAX).I
	PARMADJ	#4.N
	_regflagsl:LINK(-112).I =   T625(EAX).I
	VAR START	regflagsr
; Line 5594:	                    int regflagsr = makeregflags(aprl); 

	T626(EAX).A =   _aprl:LINK(-28).A
	PARM	T626(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T627(EAX).I =   RV.T81(EAX).I
	PARMADJ	#4.N
	_regflagsr:LINK(-116).I =   T627(EAX).I
	VAR START	regflags
; Line 5595:	                    int regflags = regflagsa | regflagsl | regflagsr; 

	T628(ECX).I =   _regflagsa:LINK(-108).I
	T629(EAX).I =   _regflagsl:LINK(-112).I
	T630(ECX).I = T628(ECX).I | T629(EAX).I
	T631(EAX).I =   _regflagsr:LINK(-116).I
	T632(EAX).I = T630(ECX).I | T631(EAX).I
	_regflags:LINK(-120).I =   T632(EAX).I
	VAR START	pushreg1
; Line 5596:	                    bool pushreg1 = false, pushreg2 = false, pushreg3 = false; 

	_pushreg1:LINK(-121).BOOL =   #0.BOOL
	VAR START	pushreg2
	_pushreg2:LINK(-122).BOOL =   #0.BOOL
	VAR START	pushreg3
	_pushreg3:LINK(-123).BOOL =   #0.BOOL
	VAR START	reg1
; Line 5597:	                    int reg1 = 0, reg2 = 0, reg3 = 0; 

	_reg1:LINK(-128).I =   #0.I
	VAR START	reg2
	_reg2:LINK(-132).I =   #0.I
	VAR START	reg3
	_reg3:LINK(-136).I =   #0.I
	VAR START	used_mask
; Line 5598:	                    int used_mask = (1 << EAX) | (1 << EBX) | (1 << ECX) | (1 << EDX); 

	_used_mask:LINK(-140).I =   #F.I
	VAR START	pushpair
; Line 5599:	                    bool pushpair = false; 

	_pushpair:LINK(-141).BOOL =   #0.BOOL
; Line 5600:	                    gen_codes(op_push, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	T633(EAX).UI =   #1.C
	PARM	T633(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T634(EAX).A =   RV.T82(EAX).A
	PARMADJ	#4.N
	PARM	T634(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5601:	                    gen_codes(op_push, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	T635(EAX).UI =   #3.C
	PARM	T635(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T636(EAX).A =   RV.T83(EAX).A
	PARMADJ	#4.N
	PARM	T636(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5602:	                    pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 354

L_7685:
; Line 5603:	                    if (regflagsa & used_mask) 

	T637(ECX).I =   _regflagsa:LINK(-108).I
	T638(EAX).I =   _used_mask:LINK(-140).I
	T639(EAX).I = T637(ECX).I & T638(EAX).I
	CONDGO	L_7684:PC ; T639(EAX).I == #0.I
	BLOCK END
	BLOCK 355
	DBG BLOCK START
	BLOCK END
	BLOCK 356

L_7686:
; Line 5604:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 357

L_7687:
; Line 5605:	                        if (apal->mode == am_dreg || apal->mode == am_immed) 

	DBG BLOCK START
	BLOCK END
	BLOCK 358

L_7689:
	T640(EAX).A =   _apal:LINK(-12).A
	T641(EAX).I =   *(T640(EAX) + 0).A.I
	CONDGO	L_7945:PC ; T641(EAX).I == #2.I
	BLOCK END
	BLOCK 359
	T642(EAX).A =   _apal:LINK(-12).A
	T643(EAX).I =   *(T642(EAX) + 0).A.I
	CONDGO	L_7688:PC ; T643(EAX).I != #10.I
	BLOCK END
	BLOCK 360

L_7945:
	DBG BLOCK START
	BLOCK END
	BLOCK 361

L_7690:
; Line 5606:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 362

L_7691:
; Line 5607:	                            pushpair = true; 

	_pushpair:LINK(-141).BOOL =   #1.BOOL
; Line 5608:	                            gen_codes(op_push, ISZ_UINT, apah, nullptr); 

	PARM	#0.UI
	T657(EAX).A =   _apah:LINK(-16).A
	PARM	T657(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5609:	                            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5610:	                            gen_codes(op_push, ISZ_UINT, apal, nullptr); 

	PARM	#0.UI
	T658(EAX).A =   _apal:LINK(-12).A
	PARM	T658(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5612:	                            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5613:	                            apal = make_stack(-16); 

	PARM	#FFFFFFFFFFFFFFF0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T659(EAX).A =   RV.T84(EAX).A
	PARMADJ	#4.N
	_apal:LINK(-12).A =   T659(EAX).A
; Line 5614:	                        } 

	BLOCK END
	BLOCK 363

L_7692:
	DBG BLOCK END
	BLOCK END
	BLOCK 364

L_7694:
	DBG BLOCK END
	GOTO	L_7693:PC
	BLOCK END
	BLOCK 365
	DBG BLOCK START
	BLOCK END
	BLOCK 366

L_7695:
	BLOCK END
	BLOCK 367

L_7688:
; Line 5615:	                        else 

; Line 5616:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 368

L_7696:
; Line 5617:	                            apal = atomic_lea(apll, apal, regflags | used_mask, reg1, pushreg1); 

	T644(EAX).A =   #_pushreg1:LINK(-121).A
	PARM	T644(EAX).A
	T645(EAX).A =   #_reg1:LINK(-128).A
	PARM	T645(EAX).A
	T646(ECX).I =   _regflags:LINK(-120).I
	T647(EAX).I =   _used_mask:LINK(-140).I
	T648(EAX).I = T646(ECX).I | T647(EAX).I
	PARM	T648(EAX).I
	T649(EAX).A =   _apal:LINK(-12).A
	PARM	T649(EAX).A
	T650(EAX).A =   _apll:LINK(-20).A
	PARM	T650(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T651(EAX).A =   RV.T85(EAX).A
	PARMADJ	#14.N
	_apal:LINK(-12).A =   T651(EAX).A
; Line 5618:	                            apah = nullptr; 

	_apah:LINK(-16).A =   #0.A
; Line 5619:	                            used_mask |= 1 << reg1; 

	T652(EDX).I =   _used_mask:LINK(-140).I
	T654(ECX).I =   _reg1:LINK(-128).I
	T926(EAX).I =   T654(ECX).I^
	T933(ECX).I =   T926(EAX).I^
	T655(EAX).I = #1.C << T933(ECX).I
	T656(EAX).I = T652(EDX).I | T655(EAX).I
	_used_mask:LINK(-140).I =   T656(EAX).I
; Line 5620:	                        } 

	BLOCK END
	BLOCK 369

L_7697:
	DBG BLOCK END
	BLOCK END
	BLOCK 370

L_7698:
	DBG BLOCK END
	BLOCK END
	BLOCK 371

L_7693:
	BLOCK END
	BLOCK 372

L_7699:
	DBG BLOCK END
; Line 5621:	                    } 

	BLOCK END
	BLOCK 373

L_7700:
	DBG BLOCK END
	BLOCK END
	BLOCK 374

L_7701:
	DBG BLOCK END
	BLOCK END
	BLOCK 375

L_7684:
	BLOCK END
	BLOCK 376

L_7702:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 377

L_7704:
; Line 5622:	                    if (regflagsl & used_mask) 

	T660(ECX).I =   _regflagsl:LINK(-112).I
	T661(EAX).I =   _used_mask:LINK(-140).I
	T662(EAX).I = T660(ECX).I & T661(EAX).I
	CONDGO	L_7703:PC ; T662(EAX).I == #0.I
	BLOCK END
	BLOCK 378
	DBG BLOCK START
	BLOCK END
	BLOCK 379

L_7705:
; Line 5623:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 380

L_7706:
; Line 5624:	                        if (apll->mode != am_dreg) 

	DBG BLOCK START
	BLOCK END
	BLOCK 381

L_7708:
	T663(EAX).A =   _apll:LINK(-20).A
	T664(EAX).I =   *(T663(EAX) + 0).A.I
	CONDGO	L_7707:PC ; T664(EAX).I == #2.I
	BLOCK END
	BLOCK 382
	DBG BLOCK START
	BLOCK END
	BLOCK 383

L_7709:
; Line 5625:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 384

L_7710:
; Line 5626:	                            apll = atomic_lea(apll, apll, regflags | used_mask, reg2, pushreg2); 

	T665(EAX).A =   #_pushreg2:LINK(-122).A
	PARM	T665(EAX).A
	T666(EAX).A =   #_reg2:LINK(-132).A
	PARM	T666(EAX).A
	T667(ECX).I =   _regflags:LINK(-120).I
	T668(EAX).I =   _used_mask:LINK(-140).I
	T669(EAX).I = T667(ECX).I | T668(EAX).I
	PARM	T669(EAX).I
	T670(EAX).A =   _apll:LINK(-20).A
	PARM	T670(EAX).A
	T671(EAX).A =   _apll:LINK(-20).A
	PARM	T671(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T672(EAX).A =   RV.T86(EAX).A
	PARMADJ	#14.N
	_apll:LINK(-20).A =   T672(EAX).A
; Line 5627:	                            aplh = nullptr; 

	_aplh:LINK(-24).A =   #0.A
; Line 5628:	                            used_mask |= 1 << reg2; 

	T673(EDX).I =   _used_mask:LINK(-140).I
	T675(ECX).I =   _reg2:LINK(-132).I
	T927(EAX).I =   T675(ECX).I^
	T934(ECX).I =   T927(EAX).I^
	T676(EAX).I = #1.C << T934(ECX).I
	T677(EAX).I = T673(EDX).I | T676(EAX).I
	_used_mask:LINK(-140).I =   T677(EAX).I
; Line 5629:	                        } 

	BLOCK END
	BLOCK 385

L_7711:
	DBG BLOCK END
	BLOCK END
	BLOCK 386

L_7712:
	DBG BLOCK END
	BLOCK END
	BLOCK 387

L_7707:
	BLOCK END
	BLOCK 388

L_7713:
	DBG BLOCK END
; Line 5630:	                    } 

	BLOCK END
	BLOCK 389

L_7714:
	DBG BLOCK END
	BLOCK END
	BLOCK 390

L_7715:
	DBG BLOCK END
	BLOCK END
	BLOCK 391

L_7703:
	BLOCK END
	BLOCK 392

L_7716:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 393

L_7718:
; Line 5631:	                    if (aprl->mode == am_immed) 

	T678(EAX).A =   _aprl:LINK(-28).A
	T679(EAX).I =   *(T678(EAX) + 0).A.I
	CONDGO	L_7717:PC ; T679(EAX).I != #10.I
	BLOCK END
	BLOCK 394
	DBG BLOCK START
	BLOCK END
	BLOCK 395

L_7719:
; Line 5632:	                        aprl->mode = am_direct; 

	T680(EAX).A =   _aprl:LINK(-28).A
	*(T680(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 396

L_7720:
	DBG BLOCK END
	BLOCK END
	BLOCK 397

L_7717:
	BLOCK END
	BLOCK 398

L_7721:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 399

L_7723:
; Line 5633:	                    if (regflagsr & used_mask) 

	T681(ECX).I =   _regflagsr:LINK(-116).I
	T682(EAX).I =   _used_mask:LINK(-140).I
	T683(EAX).I = T681(ECX).I & T682(EAX).I
	CONDGO	L_7722:PC ; T683(EAX).I == #0.I
	BLOCK END
	BLOCK 400
	DBG BLOCK START
	BLOCK END
	BLOCK 401

L_7724:
; Line 5634:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 402

L_7725:
; Line 5635:	                        aprl = atomic_lea(apll, aprl, ~(1 << EBP), reg3, pushreg3); 

	T684(EAX).A =   #_pushreg3:LINK(-123).A
	PARM	T684(EAX).A
	T685(EAX).A =   #_reg3:LINK(-136).A
	PARM	T685(EAX).A
	PARM	#FFFFFFFFFFFFFFDF.I
	T686(EAX).A =   _aprl:LINK(-28).A
	PARM	T686(EAX).A
	T687(EAX).A =   _apll:LINK(-20).A
	PARM	T687(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T688(EAX).A =   RV.T87(EAX).A
	PARMADJ	#14.N
	_aprl:LINK(-28).A =   T688(EAX).A
; Line 5636:	                        aprh = nullptr; 

	_aprh:LINK(-32).A =   #0.A
; Line 5637:	                        used_mask |= 1 << reg3; 

	T689(EDX).I =   _used_mask:LINK(-140).I
	T691(ECX).I =   _reg3:LINK(-136).I
	T928(EAX).I =   T691(ECX).I^
	T935(ECX).I =   T928(EAX).I^
	T692(EAX).I = #1.C << T935(ECX).I
	T693(EAX).I = T689(EDX).I | T692(EAX).I
	_used_mask:LINK(-140).I =   T693(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 403

L_7727:
; Line 5638:	                        if (!pushreg3) 

	T694(AL).BOOL =   _pushreg3:LINK(-123).BOOL
	CONDGO	L_7726:PC ; T694(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 404
	DBG BLOCK START
	BLOCK END
	BLOCK 405

L_7728:
; Line 5639:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 406

L_7729:
; Line 5640:	                            pushreg3 = true; 

	_pushreg3:LINK(-123).BOOL =   #1.BOOL
; Line 5641:	                            gen_codes(op_push, ISZ_UINT, makedreg(EBP), nullptr); 

	PARM	#0.UI
	PARM	#5.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T695(EAX).A =   RV.T88(EAX).A
	PARMADJ	#4.N
	PARM	T695(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5642:	                            pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5643:	                        } 

	BLOCK END
	BLOCK 407

L_7730:
	DBG BLOCK END
	BLOCK END
	BLOCK 408

L_7731:
	DBG BLOCK END
	BLOCK END
	BLOCK 409

L_7726:
	BLOCK END
	BLOCK 410

L_7732:
	DBG BLOCK END
; Line 5644:	                    } 

	BLOCK END
	BLOCK 411

L_7733:
	DBG BLOCK END
	BLOCK END
	BLOCK 412

L_7734:
	DBG BLOCK END
	BLOCK END
	BLOCK 413

L_7722:
	BLOCK END
	BLOCK 414

L_7735:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 415

L_7737:
; Line 5646:	                    if (!aprh) 

	T696(EAX).A =   _aprh:LINK(-32).A
	CONDGO	L_7736:PC ; T696(EAX).A != #0.A
	BLOCK END
	BLOCK 416
	DBG BLOCK START
	BLOCK END
	BLOCK 417

L_7738:
; Line 5647:	                        aprh = offsetToHigh(aprl); 

	T697(EAX).A =   _aprl:LINK(-28).A
	PARM	T697(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T698(EAX).A =   RV.T89(EAX).A
	PARMADJ	#4.N
	_aprh:LINK(-32).A =   T698(EAX).A
	BLOCK END
	BLOCK 418

L_7739:
	DBG BLOCK END
	BLOCK END
	BLOCK 419

L_7736:
	BLOCK END
	BLOCK 420

L_7740:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 421

L_7742:
; Line 5648:	                    if (apll->mode == am_xmmreg) 

	T699(EAX).A =   _apll:LINK(-20).A
	T700(EAX).I =   *(T699(EAX) + 0).A.I
	CONDGO	L_7741:PC ; T700(EAX).I != #A.I
	BLOCK END
	BLOCK 422
	DBG BLOCK START
	BLOCK END
	BLOCK 423

L_7743:
; Line 5649:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 424

L_7744:
; Line 5650:	                        gen_code(op_sub, makedreg(ESP), aimmed(8)); 

	T701(EDX:EAX).ULL =   #8.I
	PARM	T701(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T702(EAX).A =   RV.T90(EAX).A
	PARMADJ	#8.N
	PARM	T702(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T703(EAX).A =   RV.T91(EAX).A
	PARMADJ	#4.N
	PARM	T703(EAX).A
	PARM	#189.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5651:	                        pushlevel += 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #8.I
; Line 5652:	                        gen_code_sse(op_movsd, make_stack(0), apll); 

	T704(EAX).A =   _apll:LINK(-20).A
	PARM	T704(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T705(EAX).A =   RV.T92(EAX).A
	PARMADJ	#4.N
	PARM	T705(EAX).A
	PARM	#122.I
	TAG
	GOSUB	#@occx86@gen_code_sse$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5653:	                    } 

	BLOCK END
	BLOCK 425

L_7745:
	DBG BLOCK END
	BLOCK END
	BLOCK 426

L_7747:
	DBG BLOCK END
	GOTO	L_7746:PC
	BLOCK END
	BLOCK 427
	DBG BLOCK START
	BLOCK END
	BLOCK 428

L_7748:
	BLOCK END
	BLOCK 429

L_7741:
; Line 5654:	                    else 

; Line 5655:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 430

L_7749:
; Line 5656:	                        if (!aplh) 

	DBG BLOCK START
	BLOCK END
	BLOCK 431

L_7751:
	T706(EAX).A =   _aplh:LINK(-24).A
	CONDGO	L_7750:PC ; T706(EAX).A != #0.A
	BLOCK END
	BLOCK 432
	DBG BLOCK START
	BLOCK END
	BLOCK 433

L_7752:
; Line 5657:	                            aplh = offsetToHigh(apll); 

	T707(EAX).A =   _apll:LINK(-20).A
	PARM	T707(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T708(EAX).A =   RV.T93(EAX).A
	PARMADJ	#4.N
	_aplh:LINK(-24).A =   T708(EAX).A
	BLOCK END
	BLOCK 434

L_7753:
	DBG BLOCK END
	BLOCK END
	BLOCK 435

L_7750:
	BLOCK END
	BLOCK 436

L_7754:
	DBG BLOCK END
; Line 5658:	                        gen_codes(op_push, ISZ_UINT, aplh, nullptr); 

	PARM	#0.UI
	T709(EAX).A =   _aplh:LINK(-24).A
	PARM	T709(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5659:	                        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5660:	                        gen_codes(op_push, ISZ_UINT, apll, nullptr); 

	PARM	#0.UI
	T710(EAX).A =   _apll:LINK(-20).A
	PARM	T710(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5661:	                        pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5662:	                    } 

	BLOCK END
	BLOCK 437

L_7755:
	DBG BLOCK END
	BLOCK END
	BLOCK 438

L_7756:
	DBG BLOCK END
	BLOCK END
	BLOCK 439

L_7746:
	BLOCK END
	BLOCK 440

L_7757:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 441

L_7759:
; Line 5663:	                    if (!aprh) 

	T711(EAX).A =   _aprh:LINK(-32).A
	CONDGO	L_7758:PC ; T711(EAX).A != #0.A
	BLOCK END
	BLOCK 442
	DBG BLOCK START
	BLOCK END
	BLOCK 443

L_7760:
; Line 5664:	                        aprh = offsetToHigh(aprl); 

	T712(EAX).A =   _aprl:LINK(-28).A
	PARM	T712(EAX).A
	TAG
	GOSUB	#@occx86@offsetToHigh$qp5amode:PC.UI
	T713(EAX).A =   RV.T94(EAX).A
	PARMADJ	#4.N
	_aprh:LINK(-32).A =   T713(EAX).A
	BLOCK END
	BLOCK 444

L_7761:
	DBG BLOCK END
	BLOCK END
	BLOCK 445

L_7758:
	BLOCK END
	BLOCK 446

L_7762:
	DBG BLOCK END
; Line 5665:	                    gen_codes(op_push, ISZ_UINT, aprh, nullptr); 

	PARM	#0.UI
	T714(EAX).A =   _aprh:LINK(-32).A
	PARM	T714(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5666:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5667:	                    gen_codes(op_push, ISZ_UINT, aprl, nullptr); 

	PARM	#0.UI
	T715(EAX).A =   _aprl:LINK(-28).A
	PARM	T715(EAX).A
	PARM	#7.I
	PARM	#13E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5668:	                    pushlevel += 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I + #4.I
; Line 5669:	                    gen_codes(op_mov, ISZ_UINT, makedreg(EAX), make_stack(-0)); 

	PARM	#0.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T716(EAX).A =   RV.T95(EAX).A
	PARMADJ	#4.N
	PARM	T716(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T717(EAX).A =   RV.T96(EAX).A
	PARMADJ	#4.N
	PARM	T717(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5670:	                    gen_codes(op_mov, ISZ_UINT, makedreg(EDX), make_stack(-4)); 

	PARM	#FFFFFFFFFFFFFFFC.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T718(EAX).A =   RV.T97(EAX).A
	PARMADJ	#4.N
	PARM	T718(EAX).A
	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T719(EAX).A =   RV.T98(EAX).A
	PARMADJ	#4.N
	PARM	T719(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5671:	                    gen_codes(op_mov, ISZ_UINT, makedreg(EBX), make_stack(-8)); 

	PARM	#FFFFFFFFFFFFFFF8.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T720(EAX).A =   RV.T99(EAX).A
	PARMADJ	#4.N
	PARM	T720(EAX).A
	T721(EAX).UI =   #3.C
	PARM	T721(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T722(EAX).A =   RV.T100(EAX).A
	PARMADJ	#4.N
	PARM	T722(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5672:	                    gen_codes(op_mov, ISZ_UINT, makedreg(ECX), make_stack(-12)); 

	PARM	#FFFFFFFFFFFFFFF4.I
	TAG
	GOSUB	#@occx86@make_stack$qi:PC.UI
	T723(EAX).A =   RV.T101(EAX).A
	PARMADJ	#4.N
	PARM	T723(EAX).A
	T724(EAX).UI =   #1.C
	PARM	T724(EAX).UI
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T725(EAX).A =   RV.T102(EAX).A
	PARMADJ	#4.N
	PARM	T725(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5673:	                    gen_codes(op_cmpxchg8b, ISZ_NONE, apal, nullptr); 

	PARM	#0.UI
	T726(EAX).A =   _apal:LINK(-12).A
	PARM	T726(EAX).A
	PARM	#0.I
	PARM	#5E.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5674:	                    gen_code(op_je, make_label(lab = beGetLabel), NULL); 

	T727(EAX).A =   #0.I
	PARM	T727(EAX).A
	T728(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-96).I =   T728(EAX).I
	T729(EAX).I =   _lab:LINK(-96).I
	PARM	T729(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.C
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T730(EAX).A =   RV.T103(EAX).A
	PARMADJ	#4.N
	PARM	T730(EAX).A
	PARM	#E9.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5675:	                    gen_codes(op_mov, ISZ_UINT, aprh, makedreg(EDX)); 

	PARM	#2.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T731(EAX).A =   RV.T104(EAX).A
	PARMADJ	#4.N
	PARM	T731(EAX).A
	T732(EAX).A =   _aprh:LINK(-32).A
	PARM	T732(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5676:	                    gen_codes(op_mov, ISZ_UINT, aprl, makedreg(EAX)); 

	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T733(EAX).A =   RV.T105(EAX).A
	PARMADJ	#4.N
	PARM	T733(EAX).A
	T734(EAX).A =   _aprl:LINK(-28).A
	PARM	T734(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5677:	                    oa_gen_label(lab); 

	T735(EAX).I =   _lab:LINK(-96).I
	PARM	T735(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 5678:	                    gen_code(op_mov, makedreg(EAX), aimmed(0)); 

	T736(EDX:EAX).ULL =   #0.I
	PARM	T736(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T737(EAX).A =   RV.T106(EAX).A
	PARMADJ	#8.N
	PARM	T737(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T738(EAX).A =   RV.T107(EAX).A
	PARMADJ	#4.N
	PARM	T738(EAX).A
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5679:	                    gen_codes(op_setz, ISZ_UCHAR, makedreg(EAX), NULL); 

	T739(EAX).A =   #0.I
	PARM	T739(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T740(EAX).A =   RV.T108(EAX).A
	PARMADJ	#4.N
	PARM	T740(EAX).A
	T741(EAX).UI =   #3.C
	PARM	T741(EAX).UI
	PARM	#176.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 447

L_7764:
; Line 5680:	                    if (aprlold->mode == am_dreg) 

	T742(EAX).A =   _aprlold:LINK(-100).A
	T743(EAX).I =   *(T742(EAX) + 0).A.I
	CONDGO	L_7763:PC ; T743(EAX).I != #2.I
	BLOCK END
	BLOCK 448
	DBG BLOCK START
	BLOCK END
	BLOCK 449

L_7765:
; Line 5681:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 450

L_7766:
; Line 5682:	                        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T744(EDX:EAX).ULL =   #8.I
	PARM	T744(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T745(EAX).A =   RV.T109(EAX).A
	PARMADJ	#8.N
	PARM	T745(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T746(EAX).A =   RV.T110(EAX).A
	PARMADJ	#4.N
	PARM	T746(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5683:	                        pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
	DBG BLOCK START
	BLOCK END
	BLOCK 451

L_7768:
; Line 5684:	                        if (equal_address(makedreg(EAX), aprlold)) 

	T747(EAX).A =   _aprlold:LINK(-100).A
	PARM	T747(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T748(EAX).A =   RV.T111(EAX).A
	PARMADJ	#4.N
	PARM	T748(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T749(EAX).I =   RV.T112(EAX).I
	PARMADJ	#8.N
	CONDGO	L_7767:PC ; T749(EAX).I == #0.I
	BLOCK END
	BLOCK 452
	DBG BLOCK START
	BLOCK END
	BLOCK 453

L_7769:
; Line 5685:	                            gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(4)); 

	T750(EDX:EAX).ULL =   #4.I
	PARM	T750(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T751(EAX).A =   RV.T113(EAX).A
	PARMADJ	#8.N
	PARM	T751(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T752(EAX).A =   RV.T114(EAX).A
	PARMADJ	#4.N
	PARM	T752(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 454

L_7771:
	DBG BLOCK END
	GOTO	L_7770:PC
	BLOCK END
	BLOCK 455
	DBG BLOCK START
	BLOCK END
	BLOCK 456

L_7772:
	BLOCK END
	BLOCK 457

L_7767:
; Line 5686:	                        else 

; Line 5687:	                            gen_codes(op_pop, ISZ_UINT, aprlold, nullptr); 

	PARM	#0.UI
	T753(EAX).A =   _aprlold:LINK(-100).A
	PARM	T753(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 458

L_7773:
	DBG BLOCK END
	BLOCK END
	BLOCK 459

L_7770:
	BLOCK END
	BLOCK 460

L_7774:
	DBG BLOCK END
; Line 5688:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
	DBG BLOCK START
	BLOCK END
	BLOCK 461

L_7776:
; Line 5689:	                        if (equal_address(makedreg(EAX), aprhold)) 

	T754(EAX).A =   _aprhold:LINK(-104).A
	PARM	T754(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T755(EAX).A =   RV.T115(EAX).A
	PARMADJ	#4.N
	PARM	T755(EAX).A
	TAG
	GOSUB	#@occx86@equal_address$qp5amodepn0:PC.UI
	T756(EAX).I =   RV.T116(EAX).I
	PARMADJ	#8.N
	CONDGO	L_7775:PC ; T756(EAX).I == #0.I
	BLOCK END
	BLOCK 462
	DBG BLOCK START
	BLOCK END
	BLOCK 463

L_7777:
; Line 5690:	                            gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(4)); 

	T757(EDX:EAX).ULL =   #4.I
	PARM	T757(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T758(EAX).A =   RV.T117(EAX).A
	PARMADJ	#8.N
	PARM	T758(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T759(EAX).A =   RV.T118(EAX).A
	PARMADJ	#4.N
	PARM	T759(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 464

L_7779:
	DBG BLOCK END
	GOTO	L_7778:PC
	BLOCK END
	BLOCK 465
	DBG BLOCK START
	BLOCK END
	BLOCK 466

L_7780:
	BLOCK END
	BLOCK 467

L_7775:
; Line 5691:	                        else 

; Line 5692:	                            gen_codes(op_pop, ISZ_UINT, aprhold, nullptr); 

	PARM	#0.UI
	T760(EAX).A =   _aprhold:LINK(-104).A
	PARM	T760(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 468

L_7781:
	DBG BLOCK END
	BLOCK END
	BLOCK 469

L_7778:
	BLOCK END
	BLOCK 470

L_7782:
	DBG BLOCK END
; Line 5693:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5694:	                    } 

	BLOCK END
	BLOCK 471

L_7783:
	DBG BLOCK END
	BLOCK END
	BLOCK 472

L_7785:
	DBG BLOCK END
	GOTO	L_7784:PC
	BLOCK END
	BLOCK 473
	DBG BLOCK START
	BLOCK END
	BLOCK 474

L_7786:
	BLOCK END
	BLOCK 475

L_7763:
; Line 5695:	                    else 

; Line 5696:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 476

L_7787:
; Line 5697:	                        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(16)); 

	T761(EDX:EAX).ULL =   #10.I
	PARM	T761(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T762(EAX).A =   RV.T119(EAX).A
	PARMADJ	#8.N
	PARM	T762(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T763(EAX).A =   RV.T120(EAX).A
	PARMADJ	#4.N
	PARM	T763(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5698:	                        pushlevel -= 16; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #10.I
; Line 5699:	                    } 

	BLOCK END
	BLOCK 477

L_7788:
	DBG BLOCK END
	BLOCK END
	BLOCK 478

L_7789:
	DBG BLOCK END
	BLOCK END
	BLOCK 479

L_7784:
	BLOCK END
	BLOCK 480

L_7790:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 481

L_7792:
; Line 5700:	                    if (pushreg3) 

	T764(AL).BOOL =   _pushreg3:LINK(-123).BOOL
	CONDGO	L_7791:PC ; T764(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 482
	DBG BLOCK START
	BLOCK END
	BLOCK 483

L_7793:
; Line 5701:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 484

L_7794:
; Line 5702:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg3), nullptr); 

	PARM	#0.UI
	T765(EAX).I =   _reg3:LINK(-136).I
	PARM	T765(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T766(EAX).A =   RV.T121(EAX).A
	PARMADJ	#4.N
	PARM	T766(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5703:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5704:	                    } 

	BLOCK END
	BLOCK 485

L_7795:
	DBG BLOCK END
	BLOCK END
	BLOCK 486

L_7796:
	DBG BLOCK END
	BLOCK END
	BLOCK 487

L_7791:
	BLOCK END
	BLOCK 488

L_7797:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 489

L_7799:
; Line 5705:	                    if (pushreg2) 

	T767(AL).BOOL =   _pushreg2:LINK(-122).BOOL
	CONDGO	L_7798:PC ; T767(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 490
	DBG BLOCK START
	BLOCK END
	BLOCK 491

L_7800:
; Line 5706:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 492

L_7801:
; Line 5707:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg2), nullptr); 

	PARM	#0.UI
	T768(EAX).I =   _reg2:LINK(-132).I
	PARM	T768(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T769(EAX).A =   RV.T122(EAX).A
	PARMADJ	#4.N
	PARM	T769(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5708:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5709:	                    } 

	BLOCK END
	BLOCK 493

L_7802:
	DBG BLOCK END
	BLOCK END
	BLOCK 494

L_7803:
	DBG BLOCK END
	BLOCK END
	BLOCK 495

L_7798:
	BLOCK END
	BLOCK 496

L_7804:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 497

L_7806:
; Line 5710:	                    if (pushreg1) 

	T770(AL).BOOL =   _pushreg1:LINK(-121).BOOL
	CONDGO	L_7805:PC ; T770(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 498
	DBG BLOCK START
	BLOCK END
	BLOCK 499

L_7807:
; Line 5711:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 500

L_7808:
; Line 5712:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg1), nullptr); 

	PARM	#0.UI
	T771(EAX).I =   _reg1:LINK(-128).I
	PARM	T771(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T772(EAX).A =   RV.T123(EAX).A
	PARMADJ	#4.N
	PARM	T772(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5713:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5714:	                    } 

	BLOCK END
	BLOCK 501

L_7809:
	DBG BLOCK END
	BLOCK END
	BLOCK 502

L_7811:
	DBG BLOCK END
	GOTO	L_7810:PC
	BLOCK END
	BLOCK 503
	DBG BLOCK START
	BLOCK END
	BLOCK 504

L_7812:
	BLOCK END
	BLOCK 505

L_7805:
; Line 5715:	                    else if (pushpair) 

	DBG BLOCK START
	BLOCK END
	BLOCK 506

L_7814:
	T773(AL).BOOL =   _pushpair:LINK(-141).BOOL
	CONDGO	L_7813:PC ; T773(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 507
	DBG BLOCK START
	BLOCK END
	BLOCK 508

L_7815:
; Line 5716:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 509

L_7816:
; Line 5717:	                        gen_codes(op_add, ISZ_UINT, makedreg(ESP), aimmed(8)); 

	T774(EDX:EAX).ULL =   #8.I
	PARM	T774(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T775(EAX).A =   RV.T124(EAX).A
	PARMADJ	#8.N
	PARM	T775(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T776(EAX).A =   RV.T125(EAX).A
	PARMADJ	#4.N
	PARM	T776(EAX).A
	PARM	#7.I
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5718:	                        pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 5719:	                    } 

	BLOCK END
	BLOCK 510

L_7817:
	DBG BLOCK END
	BLOCK END
	BLOCK 511

L_7818:
	DBG BLOCK END
	BLOCK END
	BLOCK 512

L_7813:
	BLOCK END
	BLOCK 513

L_7819:
	DBG BLOCK END
	BLOCK END
	BLOCK 514

L_7820:
	DBG BLOCK END
	BLOCK END
	BLOCK 515

L_7810:
	BLOCK END
	BLOCK 516

L_7821:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 517

L_7823:
; Line 5720:	                    if (apal->preg != EBX && (!apah || apah->preg != EBX)) 

	T777(EAX).A =   _apal:LINK(-12).A
	T778(AL).C =   *(T777(EAX) + 4).A.C
	CONDGO	L_7822:PC ; T778(AL).C == #3.C
	BLOCK END
	BLOCK 518
	T779(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7946:PC ; T779(EAX).A == #0.A
	BLOCK END
	BLOCK 519
	T780(EAX).A =   _apah:LINK(-16).A
	T781(AL).C =   *(T780(EAX) + 4).A.C
	CONDGO	L_7822:PC ; T781(AL).C == #3.C
	BLOCK END
	BLOCK 520

L_7946:
	DBG BLOCK START
	BLOCK END
	BLOCK 521

L_7824:
; Line 5721:	                        gen_codes(op_pop, ISZ_UINT, makedreg(EBX), nullptr); 

	PARM	#0.UI
	PARM	#3.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T782(EAX).A =   RV.T126(EAX).A
	PARMADJ	#4.N
	PARM	T782(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 522

L_7826:
	DBG BLOCK END
	GOTO	L_7825:PC
	BLOCK END
	BLOCK 523
	DBG BLOCK START
	BLOCK END
	BLOCK 524

L_7827:
	BLOCK END
	BLOCK 525

L_7822:
; Line 5722:	                    else 

; Line 5723:	                        gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T783(EDX:EAX).ULL =   #4.I
	PARM	T783(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T784(EAX).A =   RV.T127(EAX).A
	PARMADJ	#8.N
	PARM	T784(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T785(EAX).A =   RV.T128(EAX).A
	PARMADJ	#4.N
	PARM	T785(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 526

L_7828:
	DBG BLOCK END
	BLOCK END
	BLOCK 527

L_7825:
	BLOCK END
	BLOCK 528

L_7829:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 529

L_7831:
; Line 5724:	                    if (apal->preg != ECX && (!apah || apah->preg != ECX)) 

	T786(EAX).A =   _apal:LINK(-12).A
	T787(AL).C =   *(T786(EAX) + 4).A.C
	CONDGO	L_7830:PC ; T787(AL).C == #1.C
	BLOCK END
	BLOCK 530
	T788(EAX).A =   _apah:LINK(-16).A
	CONDGO	L_7947:PC ; T788(EAX).A == #0.A
	BLOCK END
	BLOCK 531
	T789(EAX).A =   _apah:LINK(-16).A
	T790(AL).C =   *(T789(EAX) + 4).A.C
	CONDGO	L_7830:PC ; T790(AL).C == #1.C
	BLOCK END
	BLOCK 532

L_7947:
	DBG BLOCK START
	BLOCK END
	BLOCK 533

L_7832:
; Line 5725:	                        gen_codes(op_pop, ISZ_UINT, makedreg(ECX), nullptr); 

	PARM	#0.UI
	PARM	#1.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T791(EAX).A =   RV.T129(EAX).A
	PARMADJ	#4.N
	PARM	T791(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	BLOCK END
	BLOCK 534

L_7834:
	DBG BLOCK END
	GOTO	L_7833:PC
	BLOCK END
	BLOCK 535
	DBG BLOCK START
	BLOCK END
	BLOCK 536

L_7835:
	BLOCK END
	BLOCK 537

L_7830:
; Line 5726:	                    else 

; Line 5727:	                        gen_code(op_add, makedreg(ESP), aimmed(4)); 

	T792(EDX:EAX).ULL =   #4.I
	PARM	T792(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T793(EAX).A =   RV.T130(EAX).A
	PARMADJ	#8.N
	PARM	T793(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T794(EAX).A =   RV.T131(EAX).A
	PARMADJ	#4.N
	PARM	T794(EAX).A
	PARM	#25.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 538

L_7836:
	DBG BLOCK END
	BLOCK END
	BLOCK 539

L_7833:
	BLOCK END
	BLOCK 540

L_7837:
	DBG BLOCK END
; Line 5728:	                    pushlevel -= 8; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #8.I
; Line 5729:	                } 

	BLOCK END
	BLOCK 541

L_7838:
	DBG BLOCK END
	BLOCK END
	BLOCK 542

L_7840:
	DBG BLOCK END
	GOTO	L_7839:PC
	BLOCK END
	BLOCK 543
	DBG BLOCK START
	BLOCK END
	BLOCK 544

L_7841:
	BLOCK END
	BLOCK 545

L_7680:
; Line 5730:	                else 

; Line 5731:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 546

L_7842:
; Line 5732:	                    getAmodes(q, &opr, q->dc.right, &aprl, &aprh); 

	T795(EAX).A =   #_aprh:LINK(-32).A
	PARM	T795(EAX).A
	T796(EAX).A =   #_aprl:LINK(-28).A
	PARM	T796(EAX).A
	T797(EAX).A =   _q:LINK(4).A
	T798(EAX).A =   *(T797(EAX) + 8+0).A.A
	PARM	T798(EAX).A
	T799(EAX).A =   #_opr:LINK(-52).A
	PARM	T799(EAX).A
	T800(EAX).A =   _q:LINK(4).A
	PARM	T800(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5733:	                    getAmodes(q, &opl, q->dc.left, &apll, &aplh); 

	T801(EAX).A =   #_aplh:LINK(-24).A
	PARM	T801(EAX).A
	T802(EAX).A =   #_apll:LINK(-20).A
	PARM	T802(EAX).A
	T803(EAX).A =   _q:LINK(4).A
	T804(EAX).A =   *(T803(EAX) + 4+0).A.A
	PARM	T804(EAX).A
	T805(EAX).A =   #_opl:LINK(-48).A
	PARM	T805(EAX).A
	T806(EAX).A =   _q:LINK(4).A
	PARM	T806(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
; Line 5734:	                    getAmodes(q, &opa, q->ans, &apal, &apah); 

	T807(EAX).A =   #_apah:LINK(-16).A
	PARM	T807(EAX).A
	T808(EAX).A =   #_apal:LINK(-12).A
	PARM	T808(EAX).A
	T809(EAX).A =   _q:LINK(4).A
	T810(EAX).A =   *(T809(EAX) + 40).A.A
	PARM	T810(EAX).A
	T811(EAX).A =   #_opa:LINK(-44).A
	PARM	T811(EAX).A
	T812(EAX).A =   _q:LINK(4).A
	PARM	T812(EAX).A
	TAG
	GOSUB	#@occx86@getAmodes$qp15@Optimizer@quadp8e_opcodep18@Optimizer@_imode_pp5amodeppn3:PC.UI
	PARMADJ	#14.N
	VAR START	lab
; Line 5735:	                    int lab = beGetLabel; 

	T813(EAX).I =   @Optimizer@nextLabel:RAM.I
	_lab:LINK(-68).I =   T813(EAX).I
	@Optimizer@nextLabel:RAM.I = @Optimizer@nextLabel:RAM.I + #1.I
	VAR START	regflagsa
; Line 5736:	                    int regflagsa = makeregflags(apal); 

	T814(EAX).A =   _apal:LINK(-12).A
	PARM	T814(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T815(EAX).I =   RV.T132(EAX).I
	PARMADJ	#4.N
	_regflagsa:LINK(-72).I =   T815(EAX).I
	VAR START	regflagsl
; Line 5737:	                    int regflagsl = regflagsa | makeregflags(aprl) | makeregflags(apll); 

	T816(EBX).I =   _regflagsa:LINK(-72).I
	T817(EAX).A =   _aprl:LINK(-28).A
	PARM	T817(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T818(ESI).I =   RV.T133(EAX).I
	PARMADJ	#4.N
	T819(EAX).A =   _apll:LINK(-20).A
	PARM	T819(EAX).A
	TAG
	GOSUB	#@occx86@makeregflags$qp5amode:PC.UI
	T820(EAX).I =   RV.T134(EAX).I
	PARMADJ	#4.N
	T821(EAX).I = T818(ESI).I | T820(EAX).I
	T822(EAX).I = T816(EBX).I | T821(EAX).I
	_regflagsl:LINK(-76).I =   T822(EAX).I
	VAR START	reg1
; Line 5738:	                    int reg1 = 0, reg2 = 0, reg3 = 0; 

	_reg1:LINK(-80).I =   #0.I
	VAR START	reg2
	_reg2:LINK(-84).I =   #0.I
	VAR START	reg3
	_reg3:LINK(-88).I =   #0.I
	VAR START	pushreg1
; Line 5739:	                    bool pushreg1 = false, pushreg2 = false, pushreg3; 

	_pushreg1:LINK(-89).BOOL =   #0.BOOL
	VAR START	pushreg2
	_pushreg2:LINK(-90).BOOL =   #0.BOOL
	VAR START	pushreg3
	DBG BLOCK START
	BLOCK END
	BLOCK 547

L_7844:
; Line 5740:	                    if (aprl->mode == am_immed) 

	T823(EAX).A =   _aprl:LINK(-28).A
	T824(EAX).I =   *(T823(EAX) + 0).A.I
	CONDGO	L_7843:PC ; T824(EAX).I != #10.I
	BLOCK END
	BLOCK 548
	DBG BLOCK START
	BLOCK END
	BLOCK 549

L_7845:
; Line 5741:	                        aprl->mode = am_direct; 

	T825(EAX).A =   _aprl:LINK(-28).A
	*(T825(EAX) + 0).A.I =   #F.I
	BLOCK END
	BLOCK 550

L_7846:
	DBG BLOCK END
	BLOCK END
	BLOCK 551

L_7843:
	BLOCK END
	BLOCK 552

L_7847:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 553

L_7849:
; Line 5742:	                    if (regflagsa & (1 << EAX)) 

	T826(EAX).I =   _regflagsa:LINK(-72).I
	T827(EAX).I = T826(EAX).I & #1.I
	CONDGO	L_7848:PC ; T827(EAX).I == #0.I
	BLOCK END
	BLOCK 554
	DBG BLOCK START
	BLOCK END
	BLOCK 555

L_7850:
; Line 5743:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 556

L_7851:
; Line 5744:	                        apal = atomic_lea(apll, apal, regflagsl, reg1, pushreg1); 

	T828(EAX).A =   #_pushreg1:LINK(-89).A
	PARM	T828(EAX).A
	T829(EAX).A =   #_reg1:LINK(-80).A
	PARM	T829(EAX).A
	T830(EAX).I =   _regflagsl:LINK(-76).I
	PARM	T830(EAX).I
	T831(EAX).A =   _apal:LINK(-12).A
	PARM	T831(EAX).A
	T832(EAX).A =   _apll:LINK(-20).A
	PARM	T832(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T833(EAX).A =   RV.T135(EAX).A
	PARMADJ	#14.N
	_apal:LINK(-12).A =   T833(EAX).A
; Line 5745:	                        apah = nullptr; 

	_apah:LINK(-16).A =   #0.A
; Line 5746:	                        regflagsl |= 1 << reg1; 

	T834(EDX).I =   _regflagsl:LINK(-76).I
	T836(ECX).I =   _reg1:LINK(-80).I
	T929(EAX).I =   T836(ECX).I^
	T936(ECX).I =   T929(EAX).I^
	T837(EAX).I = #1.I << T936(ECX).I
	T838(EAX).I = T834(EDX).I | T837(EAX).I
	_regflagsl:LINK(-76).I =   T838(EAX).I
; Line 5747:	                    } 

	BLOCK END
	BLOCK 557

L_7852:
	DBG BLOCK END
	BLOCK END
	BLOCK 558

L_7853:
	DBG BLOCK END
	BLOCK END
	BLOCK 559

L_7848:
	BLOCK END
	BLOCK 560

L_7854:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 561

L_7856:
; Line 5748:	                    if (regflagsl & (1 << EAX)) 

	T839(EAX).I =   _regflagsl:LINK(-76).I
	T840(EAX).I = T839(EAX).I & #1.I
	CONDGO	L_7855:PC ; T840(EAX).I == #0.I
	BLOCK END
	BLOCK 562
	DBG BLOCK START
	BLOCK END
	BLOCK 563

L_7857:
; Line 5749:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 564

L_7858:
; Line 5750:	                        aprl = atomic_lea(apll, aprl, regflagsl, reg2, pushreg1); 

	T841(EAX).A =   #_pushreg1:LINK(-89).A
	PARM	T841(EAX).A
	T842(EAX).A =   #_reg2:LINK(-84).A
	PARM	T842(EAX).A
	T843(EAX).I =   _regflagsl:LINK(-76).I
	PARM	T843(EAX).I
	T844(EAX).A =   _aprl:LINK(-28).A
	PARM	T844(EAX).A
	T845(EAX).A =   _apll:LINK(-20).A
	PARM	T845(EAX).A
	TAG
	GOSUB	#@occx86@atomic_lea$qp5amodepn0irir4bool:PC.UI
	T846(EAX).A =   RV.T136(EAX).A
	PARMADJ	#14.N
	_aprl:LINK(-28).A =   T846(EAX).A
; Line 5751:	                        aprh = nullptr; 

	_aprh:LINK(-32).A =   #0.A
; Line 5752:	                        regflagsl |= 1 << reg2; 

	T847(EDX).I =   _regflagsl:LINK(-76).I
	T849(ECX).I =   _reg2:LINK(-84).I
	T930(EAX).I =   T849(ECX).I^
	T937(ECX).I =   T930(EAX).I^
	T850(EAX).I = #1.I << T937(ECX).I
	T851(EAX).I = T847(EDX).I | T850(EAX).I
	_regflagsl:LINK(-76).I =   T851(EAX).I
; Line 5753:	                    } 

	BLOCK END
	BLOCK 565

L_7859:
	DBG BLOCK END
	BLOCK END
	BLOCK 566

L_7860:
	DBG BLOCK END
	BLOCK END
	BLOCK 567

L_7855:
	BLOCK END
	BLOCK 568

L_7861:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 569

L_7863:
; Line 5754:	                    if (q->dc.left->size < 0) 

	T852(EAX).A =   _q:LINK(4).A
	T853(EAX).A =   *(T852(EAX) + 4+0).A.A
	T854(EAX).I =   *(T853(EAX) + 19).A.C
	CONDGO	L_7862:PC ; T854(EAX).I S>= #0.I
	BLOCK END
	BLOCK 570
	DBG BLOCK START
	BLOCK END
	BLOCK 571

L_7864:
; Line 5755:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 572

L_7865:
; Line 5756:	                        if (-q->dc.left->size < ISZ_USHORT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 573

L_7867:
	T855(EAX).A =   _q:LINK(4).A
	T856(EAX).A =   *(T855(EAX) + 4+0).A.A
	T857(EAX).I =   *(T856(EAX) + 19).A.C
	T858(EAX).I =  - T857(EAX).I
	CONDGO	L_7866:PC ; T858(EAX).I S>= #4.I
	BLOCK END
	BLOCK 574
	DBG BLOCK START
	BLOCK END
	BLOCK 575

L_7868:
; Line 5757:	                            regflagsl |= (1 << ESI) | (1 << EDI); 

	_regflagsl:LINK(-76).I = _regflagsl:LINK(-76).I | #C0.I
	BLOCK END
	BLOCK 576

L_7869:
	DBG BLOCK END
	BLOCK END
	BLOCK 577

L_7866:
	BLOCK END
	BLOCK 578

L_7870:
	DBG BLOCK END
; Line 5758:	                    } 

	BLOCK END
	BLOCK 579

L_7871:
	DBG BLOCK END
	BLOCK END
	BLOCK 580

L_7873:
	DBG BLOCK END
	GOTO	L_7872:PC
	BLOCK END
	BLOCK 581
	DBG BLOCK START
	BLOCK END
	BLOCK 582

L_7874:
	BLOCK END
	BLOCK 583

L_7862:
; Line 5759:	                    else 

; Line 5760:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 584

L_7875:
; Line 5761:	                        if (q->dc.left->size < ISZ_USHORT) 

	DBG BLOCK START
	BLOCK END
	BLOCK 585

L_7877:
	T859(EAX).A =   _q:LINK(4).A
	T860(EAX).A =   *(T859(EAX) + 4+0).A.A
	T861(EAX).I =   *(T860(EAX) + 19).A.C
	CONDGO	L_7876:PC ; T861(EAX).I S>= #4.I
	BLOCK END
	BLOCK 586
	DBG BLOCK START
	BLOCK END
	BLOCK 587

L_7878:
; Line 5762:	                            regflagsl |= (1 << ESI) | (1 << EDI); 

	_regflagsl:LINK(-76).I = _regflagsl:LINK(-76).I | #C0.I
	BLOCK END
	BLOCK 588

L_7879:
	DBG BLOCK END
	BLOCK END
	BLOCK 589

L_7876:
	BLOCK END
	BLOCK 590

L_7880:
	DBG BLOCK END
; Line 5763:	                    } 

	BLOCK END
	BLOCK 591

L_7881:
	DBG BLOCK END
	BLOCK END
	BLOCK 592

L_7882:
	DBG BLOCK END
	BLOCK END
	BLOCK 593

L_7872:
	BLOCK END
	BLOCK 594

L_7883:
	DBG BLOCK END
; Line 5764:	                    reg3 = getreg(apll, regflagsl | (1 << EAX), pushreg3); 

	T862(EAX).A =   #_pushreg3:LINK(-91).A
	PARM	T862(EAX).A
	T863(EAX).I =   _regflagsl:LINK(-76).I
	T864(EAX).I = T863(EAX).I | #1.I
	PARM	T864(EAX).I
	T865(EAX).A =   _apll:LINK(-20).A
	PARM	T865(EAX).A
	TAG
	GOSUB	#@occx86@getreg$qp5amodeir4bool:PC.UI
	T866(EAX).I =   RV.T137(EAX).I
	PARMADJ	#C.N
	_reg3:LINK(-88).I =   T866(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 595

L_7885:
; Line 5765:	                    if (apll->mode == am_xmmreg) 

	T867(EAX).A =   _apll:LINK(-20).A
	T868(EAX).I =   *(T867(EAX) + 0).A.I
	CONDGO	L_7884:PC ; T868(EAX).I != #A.I
	BLOCK END
	BLOCK 596
	DBG BLOCK START
	BLOCK END
	BLOCK 597

L_7886:
; Line 5766:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 598

L_7887:
; Line 5767:	                        gen_code(op_movd, makedreg(reg3), apll); 

	T869(EAX).A =   _apll:LINK(-20).A
	PARM	T869(EAX).A
	T870(EAX).I =   _reg3:LINK(-88).I
	PARM	T870(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T871(EAX).A =   RV.T138(EAX).A
	PARMADJ	#4.N
	PARM	T871(EAX).A
	PARM	#1DE.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5768:	                    } 

	BLOCK END
	BLOCK 599

L_7888:
	DBG BLOCK END
	BLOCK END
	BLOCK 600

L_7890:
	DBG BLOCK END
	GOTO	L_7889:PC
	BLOCK END
	BLOCK 601
	DBG BLOCK START
	BLOCK END
	BLOCK 602

L_7891:
	BLOCK END
	BLOCK 603

L_7884:
; Line 5769:	                    else 

; Line 5770:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 604

L_7892:
; Line 5771:	                        gen_codes(op_mov, q->ans->size, makedreg(reg3), apll); 

	T872(EAX).A =   _apll:LINK(-20).A
	PARM	T872(EAX).A
	T873(EAX).I =   _reg3:LINK(-88).I
	PARM	T873(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T874(EAX).A =   RV.T139(EAX).A
	PARMADJ	#4.N
	PARM	T874(EAX).A
	T875(EAX).A =   _q:LINK(4).A
	T876(EAX).A =   *(T875(EAX) + 40).A.A
	T877(EAX).I =   *(T876(EAX) + 19).A.C
	PARM	T877(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5772:	                    } 

	BLOCK END
	BLOCK 605

L_7893:
	DBG BLOCK END
	BLOCK END
	BLOCK 606

L_7894:
	DBG BLOCK END
	BLOCK END
	BLOCK 607

L_7889:
	BLOCK END
	BLOCK 608

L_7895:
	DBG BLOCK END
; Line 5773:	                    gen_codes(op_mov, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, makedreg(EAX), aprl); 

	T878(EAX).A =   _aprl:LINK(-28).A
	PARM	T878(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T879(EAX).A =   RV.T140(EAX).A
	PARMADJ	#4.N
	PARM	T879(EAX).A
	T880(EAX).A =   _q:LINK(4).A
	T881(EAX).A =   *(T880(EAX) + 40).A.A
	T882(AL).C =   *(T881(EAX) + 19).A.C
	CONDGO	L_7948:PC ; T882(AL).C != #12.C
	BLOCK END
	BLOCK 609
	T883(EAX).I =   #7.I
	GOTO	L_7949:PC
	BLOCK END
	BLOCK 610

L_7948:
	T884(EAX).A =   _q:LINK(4).A
	T885(EAX).A =   *(T884(EAX) + 40).A.A
	T886(EAX).I =   *(T885(EAX) + 19).A.C
	T883(EAX).I =   T886(EAX).I
	BLOCK END
	BLOCK 611

L_7949:
	PARM	T883(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5774:	                    gen_codes(op_cmpxchg, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, apal, makedreg(reg3)); 

	T887(EAX).I =   _reg3:LINK(-88).I
	PARM	T887(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T888(EAX).A =   RV.T141(EAX).A
	PARMADJ	#4.N
	PARM	T888(EAX).A
	T889(EAX).A =   _apal:LINK(-12).A
	PARM	T889(EAX).A
	T890(EAX).A =   _q:LINK(4).A
	T891(EAX).A =   *(T890(EAX) + 40).A.A
	T892(AL).C =   *(T891(EAX) + 19).A.C
	CONDGO	L_7950:PC ; T892(AL).C != #12.C
	BLOCK END
	BLOCK 612
	T893(EAX).I =   #7.I
	GOTO	L_7951:PC
	BLOCK END
	BLOCK 613

L_7950:
	T894(EAX).A =   _q:LINK(4).A
	T895(EAX).A =   *(T894(EAX) + 40).A.A
	T896(EAX).I =   *(T895(EAX) + 19).A.C
	T893(EAX).I =   T896(EAX).I
	BLOCK END
	BLOCK 614

L_7951:
	PARM	T893(EAX).I
	PARM	#5D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5775:	                    gen_code(op_je, make_label(lab), NULL); 

	T897(EAX).A =   #0.I
	PARM	T897(EAX).A
	T898(EAX).I =   _lab:LINK(-68).I
	PARM	T898(EAX).I
	TAG
	GOSUB	#@occx86@make_label$qi:PC.UI
	T899(EAX).A =   RV.T142(EAX).A
	PARMADJ	#4.N
	PARM	T899(EAX).A
	PARM	#E9.I
	TAG
	GOSUB	#@occx86@gen_code$qip5amodepn0:PC.UI
	PARMADJ	#C.N
; Line 5776:	                    gen_codes(op_mov, q->ans->size == ISZ_FLOAT ? ISZ_UINT : q->ans->size, aprl, makedreg(EAX)); 

	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T900(EAX).A =   RV.T143(EAX).A
	PARMADJ	#4.N
	PARM	T900(EAX).A
	T901(EAX).A =   _aprl:LINK(-28).A
	PARM	T901(EAX).A
	T902(EAX).A =   _q:LINK(4).A
	T903(EAX).A =   *(T902(EAX) + 40).A.A
	T904(AL).C =   *(T903(EAX) + 19).A.C
	CONDGO	L_7952:PC ; T904(AL).C != #12.C
	BLOCK END
	BLOCK 615
	T905(EAX).I =   #7.I
	GOTO	L_7953:PC
	BLOCK END
	BLOCK 616

L_7952:
	T906(EAX).A =   _q:LINK(4).A
	T907(EAX).A =   *(T906(EAX) + 40).A.A
	T908(EAX).I =   *(T907(EAX) + 19).A.C
	T905(EAX).I =   T908(EAX).I
	BLOCK END
	BLOCK 617

L_7953:
	PARM	T905(EAX).I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5777:	                    oa_gen_label(lab); 

	T909(EAX).I =   _lab:LINK(-68).I
	PARM	T909(EAX).I
	TAG
	GOSUB	#@occx86@oa_gen_label$qi:PC.UI
	PARMADJ	#4.N
; Line 5778:	                    gen_codes(op_mov, ISZ_UINT, makedreg(EAX), aimmed(0)); 

	T910(EDX:EAX).ULL =   #0.I
	PARM	T910(EDX:EAX).ULL
	TAG
	GOSUB	#@occx86@aimmed$quL:PC.UI
	T911(EAX).A =   RV.T144(EAX).A
	PARMADJ	#8.N
	PARM	T911(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T912(EAX).A =   RV.T145(EAX).A
	PARMADJ	#4.N
	PARM	T912(EAX).A
	PARM	#7.I
	PARM	#11D.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5779:	                    gen_codes(op_setz, ISZ_UCHAR, makedreg(EAX), NULL); 

	T913(EAX).A =   #0.I
	PARM	T913(EAX).A
	PARM	#0.I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T914(EAX).A =   RV.T146(EAX).A
	PARMADJ	#4.N
	PARM	T914(EAX).A
	PARM	#3.I
	PARM	#176.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 618

L_7897:
; Line 5780:	                    if (pushreg3) 

	T915(AL).BOOL =   _pushreg3:LINK(-91).BOOL
	CONDGO	L_7896:PC ; T915(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 619
	DBG BLOCK START
	BLOCK END
	BLOCK 620

L_7898:
; Line 5781:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 621

L_7899:
; Line 5782:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg3), nullptr); 

	PARM	#0.UI
	T916(EAX).I =   _reg3:LINK(-88).I
	PARM	T916(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T917(EAX).A =   RV.T147(EAX).A
	PARMADJ	#4.N
	PARM	T917(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5783:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5784:	                    } 

	BLOCK END
	BLOCK 622

L_7900:
	DBG BLOCK END
	BLOCK END
	BLOCK 623

L_7901:
	DBG BLOCK END
	BLOCK END
	BLOCK 624

L_7896:
	BLOCK END
	BLOCK 625

L_7902:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 626

L_7904:
; Line 5785:	                    if (pushreg2) 

	T918(AL).BOOL =   _pushreg2:LINK(-90).BOOL
	CONDGO	L_7903:PC ; T918(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 627
	DBG BLOCK START
	BLOCK END
	BLOCK 628

L_7905:
; Line 5786:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 629

L_7906:
; Line 5787:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg2), nullptr); 

	PARM	#0.UI
	T919(EAX).I =   _reg2:LINK(-84).I
	PARM	T919(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T920(EAX).A =   RV.T148(EAX).A
	PARMADJ	#4.N
	PARM	T920(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5788:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5789:	                    } 

	BLOCK END
	BLOCK 630

L_7907:
	DBG BLOCK END
	BLOCK END
	BLOCK 631

L_7908:
	DBG BLOCK END
	BLOCK END
	BLOCK 632

L_7903:
	BLOCK END
	BLOCK 633

L_7909:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 634

L_7911:
; Line 5790:	                    if (pushreg1) 

	T921(AL).BOOL =   _pushreg1:LINK(-89).BOOL
	CONDGO	L_7910:PC ; T921(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 635
	DBG BLOCK START
	BLOCK END
	BLOCK 636

L_7912:
; Line 5791:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 637

L_7913:
; Line 5792:	                        gen_codes(op_pop, ISZ_UINT, makedreg(reg1), nullptr); 

	PARM	#0.UI
	T922(EAX).I =   _reg1:LINK(-80).I
	PARM	T922(EAX).I
	TAG
	GOSUB	#@occx86@makedreg$qi:PC.UI
	T923(EAX).A =   RV.T149(EAX).A
	PARMADJ	#4.N
	PARM	T923(EAX).A
	PARM	#7.I
	PARM	#131.I
	TAG
	GOSUB	#@occx86@gen_codes$qiip5amodepn0:PC.UI
	PARMADJ	#10.N
; Line 5793:	                        pushlevel -= 4; 

	@occx86@pushlevel:RAM.I = @occx86@pushlevel:RAM.I - #4.I
; Line 5794:	                    } 

	BLOCK END
	BLOCK 638

L_7914:
	DBG BLOCK END
	BLOCK END
	BLOCK 639

L_7915:
	DBG BLOCK END
	BLOCK END
	BLOCK 640

L_7910:
	BLOCK END
	BLOCK 641

L_7916:
	DBG BLOCK END
; Line 5795:	                } 

	BLOCK END
	BLOCK 642

L_7917:
	DBG BLOCK END
	BLOCK END
	BLOCK 643

L_7918:
	DBG BLOCK END
	BLOCK END
	BLOCK 644

L_7839:
	BLOCK END
	BLOCK 645

L_7919:
	DBG BLOCK END
; Line 5796:	            } 

	BLOCK END
	BLOCK 646

L_7920:
	DBG BLOCK END
; Line 5797:	            break; 

	GOTO	L_7419:PC
	BLOCK END
	BLOCK 647
	DBG BLOCK END
	BLOCK END
	BLOCK 648

L_7921:
	DBG BLOCK START
; Line 5798:	        default: 
; Line 5799:	            break; 

; Line 5799:	            break; 

	BLOCK END
	BLOCK 649

L_7922:
	DBG BLOCK END
	BLOCK END
	BLOCK 650

L_7419:
	BLOCK END
	BLOCK 651

L_7923:
	DBG BLOCK END
; Line 5801:	} 

	BLOCK END
	BLOCK 652

L_7924:
	DBG BLOCK END
	BLOCK END
	BLOCK 653

L_7412:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_expressiontag$qp15@Optimizer@quad


global @occx86@asm_expressiontag$qp15@Optimizer@quad
@occx86@asm_expressiontag$qp15@Optimizer@quad:
; Line 5802:	void asm_expressiontag(Optimizer::QUAD* q) {} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7957:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7959:
	BLOCK END
	BLOCK 4

L_7960:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7958:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_seh$qp15@Optimizer@quad


global @occx86@asm_seh$qp15@Optimizer@quad
@occx86@asm_seh$qp15@Optimizer@quad:
; Line 5803:	void asm_seh(Optimizer::QUAD* q) {} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7965:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7967:
	BLOCK END
	BLOCK 4

L_7968:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7966:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

global @occx86@asm_tag$qp15@Optimizer@quad


global @occx86@asm_tag$qp15@Optimizer@quad
@occx86@asm_tag$qp15@Optimizer@quad:
; Line 5804:	void asm_tag(Optimizer::QUAD* q) {} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7973:
	VAR START	q
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7975:
	BLOCK END
	BLOCK 4

L_7976:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7974:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

segment end codeseg

	virtual @std@$bnot$qrx18@std@exception_ptr
; Line 141:	   inline bool operator!(const exception_ptr& e) { return !e.exc; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7981:
	VAR START	e
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7983:
	T1(EAX).A =   _e:LINK(4).A
	T2(EAX).A =   *(T1(EAX) + 0).A.A
	T3(EAX).UI = #0.A == T2(EAX).A
	T4(AL).BOOL =   T3(EAX).UI
	RV.T0(AL).BOOL =   T4(AL).BOOL
	BLOCK END
	BLOCK 4

L_7984:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7982:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@$bnot$qrx18@std@exception_ptr

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@$bequ$qrx18@std@exception_ptrrxn0
; Line 142:	   inline bool operator==(const exception_ptr& left, const exception_ptr& right) { return left.exc == right.exc; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7989:
	VAR START	left
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7991:
	T1(EAX).A =   _left:LINK(4).A
	T2(ECX).A =   *(T1(EAX) + 0).A.A
	T3(EAX).A =   _right:LINK(8).A
	T4(EAX).A =   *(T3(EAX) + 0).A.A
	T5(EAX).UI = T2(ECX).A == T4(EAX).A
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_7992:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7990:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@$bequ$qrx18@std@exception_ptrrxn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@$bneq$qrx18@std@exception_ptrrxn0
; Line 143:	   inline bool operator!=(const exception_ptr& left, const exception_ptr& right) { return !operator==(left, right); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_7997:
	VAR START	left
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_7999:
	T2(EAX).A =   _right:LINK(8).A
	PARM	T2(EAX).A
	T3(EAX).A =   _left:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@$bequ$qrx18@std@exception_ptrrxn0:PC.UI
	T4(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	T5(EAX).UI = #0.BOOL == T4(AL).BOOL
	T6(AL).BOOL =   T5(EAX).UI
	RV.T1(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_8000:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_7998:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@$bneq$qrx18@std@exception_ptrrxn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@$bequ$qrx18@std@exception_ptr9nullptr_t
; Line 144:	   inline bool operator==(const exception_ptr& left, nullptr_t right) { return left.exc == nullptr; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_8005:
	VAR START	left
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8007:
	T1(EAX).A =   _left:LINK(4).A
	T2(EAX).A =   *(T1(EAX) + 0).A.A
	T3(EAX).UI = T2(EAX).A == #0.A
	T4(AL).BOOL =   T3(EAX).UI
	RV.T0(AL).BOOL =   T4(AL).BOOL
	BLOCK END
	BLOCK 4

L_8008:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_8006:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@$bequ$qrx18@std@exception_ptr9nullptr_t

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@$bneq$qrx18@std@exception_ptr9nullptr_t
; Line 145:	   inline bool operator!=(const exception_ptr& left, nullptr_t right) { return !operator==(left, nullptr); } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_8013:
	VAR START	left
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8015:
	PARM	#0.UI
	T2(EAX).A =   _left:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@$bequ$qrx18@std@exception_ptr9nullptr_t:PC.UI
	T3(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	T4(EAX).UI = #0.BOOL == T3(AL).BOOL
	T5(AL).BOOL =   T4(EAX).UI
	RV.T1(AL).BOOL =   T5(AL).BOOL
	BLOCK END
	BLOCK 4

L_8016:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_8014:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@$bneq$qrx18@std@exception_ptr9nullptr_t

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$bnew$quipv
; Line 216:	_LIBCPP_OVERRIDABLE_FUNC_VIS _LIBCPP_AVAILABILITY_SIZED_NEW_DELETE void  operator delete[](void* __p, std::size_t __sz, std::align_val_t) _NOEXCEPT; 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_8021:
	VAR START	Unnamed++Identifier 3817
	VAR START	__p
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8023:
; Line 220:	_LIBCPP_NODISCARD_AFTER_CXX17 inline _LIBCPP_INLINE_VISIBILITY void* operator new  (std::size_t, void* __p) _NOEXCEPT {return __p;} 

	T1(EAX).A =   ___p:LINK(8).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 4

L_8024:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_8022:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @$bnew$quipv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$bnwa$quipv
; Line 221:	_LIBCPP_NODISCARD_AFTER_CXX17 inline _LIBCPP_INLINE_VISIBILITY void* operator new[](std::size_t, void* __p) _NOEXCEPT {return __p;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_8029:
	VAR START	Unnamed++Identifier 3818
	VAR START	__p
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8031:
	T1(EAX).A =   ___p:LINK(8).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 4

L_8032:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_8030:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @$bnwa$quipv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@bad_function_call@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_8037:
	T0(EAX).A =   ___$$this:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@exception@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_8038:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@bad_function_call@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$cc~pc~$qpcpcr#__less$cc~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_8043:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8045:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8047:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	COSWITCH(T15(EAX).UI,#6.UI,#6.UI,L_8067:PC)
	SWBRANCH(#0.UI,L_8049:PC)
	SWBRANCH(#1.UI,L_8051:PC)
	SWBRANCH(#2.UI,L_8053:PC)
	SWBRANCH(#3.UI,L_8060:PC)
	SWBRANCH(#4.UI,L_8062:PC)
	SWBRANCH(#5.UI,L_8064:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_8048:
	BLOCK END
	BLOCK 6

L_8049:
	BLOCK END
	BLOCK 7

L_8051:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_8044:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_8053:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8056:
	T16(EAX).A =   ___first:LINK(4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___last:LINK(8).A
	T18(EAX).A = T17(EAX).A - #1.A
	___last:LINK(8).A =   T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___comp:LINK(12).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T21(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8055:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_8057:
; Line 3852:	            swap(*__first, *__last); 

	T22(EAX).A =   ___last:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___first:LINK(4).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_8058:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8055:
	BLOCK END
	BLOCK 14

L_8059:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_8044:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_8060:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T24(EAX).A =   ___comp:LINK(12).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	T26(EAX).A = T25(EAX).A - #1.A
	___last:LINK(8).A =   T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	PARM	T27(EAX).A
	T28(EAX).A =   ___first:LINK(4).A
	T29(EAX).A = T28(EAX).A + #1.A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_8044:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_8062:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T31(EAX).A =   ___comp:LINK(12).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___last:LINK(8).A
	T33(EAX).A = T32(EAX).A - #1.A
	___last:LINK(8).A =   T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___first:LINK(4).A
	T36(EAX).A = T35(EAX).A + #2.A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #1.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$cc~pc~$qpcpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_8044:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_8064:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T40(EAX).A =   ___comp:LINK(12).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___last:LINK(8).A
	T42(EAX).A = T41(EAX).A - #1.A
	___last:LINK(8).A =   T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	PARM	T43(EAX).A
	T44(EAX).A =   ___first:LINK(4).A
	T45(EAX).A = T44(EAX).A + #3.A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #2.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #1.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	PARM	T50(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$cc~pc~$qpcpcpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_8044:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_8066:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_8067:
	BLOCK END
	BLOCK 20

L_8046:
	BLOCK END
	BLOCK 21

L_8068:
	DBG BLOCK END
	VAR START	__j
	T51(EAX).A =   ___first:LINK(4).A
	T52(EAX).A = T51(EAX).A + #2.A
	___j:LINK(-4).A =   T52(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T53(EAX).A =   ___comp:LINK(12).A
	PARM	T53(EAX).A
	T54(EAX).A =   ___j:LINK(-4).A
	PARM	T54(EAX).A
	T55(EAX).A =   ___first:LINK(4).A
	T56(EAX).A = T55(EAX).A + #1.A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	PARM	T57(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T58(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T58(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_8073:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T59(EAX).A =   ___j:LINK(-4).A
	T60(EAX).A = T59(EAX).A + #1.A
	___i:LINK(-12).A =   T60(EAX).A
	GOTO	L_8070:PC
	BLOCK END
	BLOCK 23

L_8069:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_8074:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_8075:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_8077:
	T63(EAX).A =   ___j:LINK(-4).A
	PARM	T63(EAX).A
	T64(EAX).A =   ___i:LINK(-12).A
	PARM	T64(EAX).A
	T65(EAX).A =   ___comp:LINK(12).A
	PARM	T65(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T66(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8076:PC ; T66(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_8078:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8079:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T67(EAX).A =   ___i:LINK(-12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T68(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T69(AL).C =   *(T68(EAX)).A.C
	___t:LINK(-13).C =   T69(AL).C
	VAR START	__k
	T70(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T70(EAX).A
; Line 3875:	            __j = __i; 

	T71(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T71(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_8083:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_8087:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_8080:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_8084:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T72(EAX).A =   ___k:LINK(-20).A
	PARM	T72(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T73(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T74(CL).C =   *(T73(EAX)).A.C
	T75(EAX).A =   ___j:LINK(-4).A
	*(T75(EAX)).A.C =   T74(CL).C
; Line 3879:	                __j = __k; 

	T76(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T76(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_8085:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_8086:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_8082:
	T77(ECX).A =   ___first:LINK(4).A
	T78(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_8102:PC ; T78(EAX).A == T77(ECX).A
	BLOCK END
	BLOCK 37
	T79(EAX).A =   ___k:LINK(-20).A
	T80(EAX).A = T79(EAX).A - #1.A
	___k:LINK(-20).A =   T80(EAX).A
	T81(EAX).A =   ___k:LINK(-20).A
	PARM	T81(EAX).A
	T82(EAX).A =   #___t:LINK(-13).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___comp:LINK(12).A
	PARM	T83(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T84(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8080:PC ; T84(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_8102:
	BLOCK END
	BLOCK 39

L_8081:
	BLOCK END
	BLOCK 40

L_8088:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T85(EAX).A =   #___t:LINK(-13).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T86(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T87(CL).C =   *(T86(EAX)).A.C
	T88(EAX).A =   ___j:LINK(-4).A
	*(T88(EAX)).A.C =   T87(CL).C
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_8090:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T89(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_8089:PC ; T89(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_8091:
	T90(EAX).A =   ___i:LINK(-12).A
	T91(EAX).A = T90(EAX).A + #1.A
	___i:LINK(-12).A =   T91(EAX).A
	T92(ECX).A =   ___i:LINK(-12).A
	T93(EAX).A =   ___last:LINK(8).A
	T94(EAX).UI = T92(ECX).A == T93(EAX).A
	T95(AL).BOOL =   T94(EAX).UI
	RV.T11(AL).BOOL =   T95(AL).BOOL
	GOTO	L_8044:PC
	BLOCK END
	BLOCK 44

L_8092:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_8089:
	BLOCK END
	BLOCK 46

L_8093:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_8094:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_8095:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_8076:
	BLOCK END
	BLOCK 50

L_8096:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T96(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T96(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_8097:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_8098:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_8072:
	T97(EAX).A =   ___i:LINK(-12).A
	T98(EAX).A = T97(EAX).A + #1.A
	___i:LINK(-12).A =   T98(EAX).A
	BLOCK END
	BLOCK 54

L_8070:
	T61(ECX).A =   ___last:LINK(8).A
	T62(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_8069:PC ; T62(EAX).A != T61(ECX).A
	BLOCK END
	BLOCK 55

L_8071:
	BLOCK END
	BLOCK 56

L_8099:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_8100:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_8044:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$cc~pc~$qpcpcr#__less$cc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$cc~pc~$qpcpcr#__less$cc~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_8106:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8108:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8112:
	GOTO	L_8111:PC
	BLOCK END
	BLOCK 5

L_8109:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_8113:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_8114:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_8115:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T18(EAX).A = T15(ECX).A - T16(EAX).A
	___len:LINK(-4).I =   T18(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8117:
	DBG BLOCK END
	T19(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T19(EAX).I,#6.UI,#6.UI,L_8137:PC)
	SWBRANCH(#0.UI,L_8119:PC)
	SWBRANCH(#1.UI,L_8121:PC)
	SWBRANCH(#2.UI,L_8123:PC)
	SWBRANCH(#3.UI,L_8130:PC)
	SWBRANCH(#4.UI,L_8132:PC)
	SWBRANCH(#5.UI,L_8134:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_8118:
	BLOCK END
	BLOCK 11

L_8119:
	BLOCK END
	BLOCK 12

L_8121:
	DBG BLOCK START
	GOTO	L_8107:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8123:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_8126:
	T20(EAX).A =   ___first:LINK(4).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	T22(EAX).A = T21(EAX).A - #1.A
	___last:LINK(8).A =   T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___comp:LINK(12).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T25(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8125:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_8127:
; Line 3945:	                swap(*__first, *__last); 

	T26(EAX).A =   ___last:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___first:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_8128:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_8125:
	BLOCK END
	BLOCK 19

L_8129:
	DBG BLOCK END
	GOTO	L_8107:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_8130:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T28(EAX).A =   ___comp:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	T30(EAX).A = T29(EAX).A - #1.A
	___last:LINK(8).A =   T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	T33(EAX).A = T32(EAX).A + #1.A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	PARM	T34(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#10.N
	GOTO	L_8107:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_8132:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T35(EAX).A =   ___comp:LINK(12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	T37(EAX).A = T36(EAX).A - #1.A
	___last:LINK(8).A =   T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #2.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #1.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	PARM	T43(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$cc~pc~$qpcpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#14.N
	GOTO	L_8107:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_8134:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T44(EAX).A =   ___comp:LINK(12).A
	PARM	T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	T46(EAX).A = T45(EAX).A - #1.A
	___last:LINK(8).A =   T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #3.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #2.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #1.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	PARM	T54(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$cc~pc~$qpcpcpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#18.N
	GOTO	L_8107:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_8136:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_8137:
	BLOCK END
	BLOCK 25

L_8116:
	BLOCK END
	BLOCK 26

L_8138:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_8140:
	T55(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_8139:PC ; T55(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8141:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_8142:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T56(EAX).A =   ___comp:LINK(12).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___last:LINK(8).A
	PARM	T57(EAX).A
	T58(EAX).A =   ___first:LINK(4).A
	PARM	T58(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$cc~pc~$qpcpcr#__less$cc~:PC.UI
	PARMADJ	#C.N
	GOTO	L_8107:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_8143:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_8144:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_8139:
	BLOCK END
	BLOCK 34

L_8145:
	DBG BLOCK END
	VAR START	__m
	T59(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T59(EAX).A
	VAR START	__lm1
	T60(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T60(EAX).A
; Line 3965:	        --__lm1; 

	T61(EAX).A =   ___lm1:LINK(-12).A
	T62(EAX).A = T61(EAX).A - #1.A
	___lm1:LINK(-12).A =   T62(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_8146:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_8148:
	T63(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_8147:PC ; T63(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_8149:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_8150:
; Line 3971:	            __delta = __len/2; 

	T65(EAX).I =   ___len:LINK(-4).I
	T66(ECX).I = T65(EAX).I U>> #1F.UI
	T67(EAX).I = T66(ECX).I + T65(EAX).I
	T69(EAX).I = T67(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T69(EAX).I
; Line 3972:	            __m += __delta; 

	T70(ECX).A =   ___m:LINK(-8).A
	T71(EAX).I =   ___delta:LINK(-32).I
	T72(EAX).A = T70(ECX).A + T71(EAX).I
	___m:LINK(-8).A =   T72(EAX).A
; Line 3973:	            __delta /= 2; 

	T74(EAX).I =   ___delta:LINK(-32).I
	T75(ECX).I = T74(EAX).I U>> #1F.UI
	T76(EAX).I = T75(ECX).I + T74(EAX).I
	T78(EAX).I = T76(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T78(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T79(EAX).A =   ___comp:LINK(12).A
	PARM	T79(EAX).A
	T80(EAX).A =   ___lm1:LINK(-12).A
	PARM	T80(EAX).A
	T81(ECX).A =   ___m:LINK(-8).A
	T82(EAX).I =   ___delta:LINK(-32).I
	T83(EAX).A = T81(ECX).A + T82(EAX).I
	PARM	T83(EAX).A
	T84(EAX).A =   ___m:LINK(-8).A
	PARM	T84(EAX).A
	T85(ECX).A =   ___first:LINK(4).A
	T86(EAX).I =   ___delta:LINK(-32).I
	T87(EAX).A = T85(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___first:LINK(4).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$cc~pc~$qpcpcpcpcpcr#__less$cc~:PC.UI
	T89(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T89(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_8151:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_8153:
	DBG BLOCK END
	GOTO	L_8152:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_8154:
	BLOCK END
	BLOCK 44

L_8147:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_8155:
; Line 3978:	            __delta = __len/2; 

	T91(EAX).I =   ___len:LINK(-4).I
	T92(ECX).I = T91(EAX).I U>> #1F.UI
	T93(EAX).I = T92(ECX).I + T91(EAX).I
	T95(EAX).I = T93(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T95(EAX).I
; Line 3979:	            __m += __delta; 

	T96(ECX).A =   ___m:LINK(-8).A
	T97(EAX).I =   ___delta:LINK(-32).I
	T98(EAX).A = T96(ECX).A + T97(EAX).I
	___m:LINK(-8).A =   T98(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T99(EAX).A =   ___comp:LINK(12).A
	PARM	T99(EAX).A
	T100(EAX).A =   ___lm1:LINK(-12).A
	PARM	T100(EAX).A
	T101(EAX).A =   ___m:LINK(-8).A
	PARM	T101(EAX).A
	T102(EAX).A =   ___first:LINK(4).A
	PARM	T102(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~:PC.UI
	T103(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T103(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_8156:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_8157:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_8152:
	BLOCK END
	BLOCK 49

L_8158:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_8159:
	DBG BLOCK END
	VAR START	__i
	T104(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T104(EAX).A
	VAR START	__j
	T105(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T105(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_8161:
	T106(EAX).A =   ___m:LINK(-8).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___i:LINK(-20).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___comp:LINK(12).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T109(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8160:PC ; T109(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_8162:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_8163:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_8167:
	GOTO	L_8166:PC
	BLOCK END
	BLOCK 56

L_8164:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_8168:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_8169:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_8171:
	T111(EAX).A =   ___j:LINK(-24).A
	T112(EAX).A = T111(EAX).A - #1.A
	___j:LINK(-24).A =   T112(EAX).A
	T113(ECX).A =   ___j:LINK(-24).A
	T114(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8170:PC ; T114(EAX).A != T113(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_8172:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_8173:
; Line 4001:	                    ++__i;   

	T115(EAX).A =   ___i:LINK(-20).A
	T116(EAX).A = T115(EAX).A + #1.A
	___i:LINK(-20).A =   T116(EAX).A
; Line 4002:	                    __j = __last; 

	T117(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T117(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_8175:
	T118(EAX).A =   ___j:LINK(-24).A
	T119(EAX).A = T118(EAX).A - #1.A
	___j:LINK(-24).A =   T119(EAX).A
	T120(EAX).A =   ___j:LINK(-24).A
	PARM	T120(EAX).A
	T121(EAX).A =   ___first:LINK(4).A
	PARM	T121(EAX).A
	T122(EAX).A =   ___comp:LINK(12).A
	PARM	T122(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T123(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8174:PC ; T123(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_8176:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_8177:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_8181:
	GOTO	L_8180:PC
	BLOCK END
	BLOCK 68

L_8178:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_8182:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_8183:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_8185:
	T125(ECX).A =   ___j:LINK(-24).A
	T126(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8184:PC ; T126(EAX).A != T125(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_8186:
	GOTO	L_8107:PC
	BLOCK END
	BLOCK 74

L_8187:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_8184:
	BLOCK END
	BLOCK 76

L_8188:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_8190:
	T127(EAX).A =   ___i:LINK(-20).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___first:LINK(4).A
	PARM	T128(EAX).A
	T129(EAX).A =   ___comp:LINK(12).A
	PARM	T129(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T130(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8189:PC ; T130(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_8191:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_8192:
; Line 4011:	                                swap(*__i, *__j); 

	T131(EAX).A =   ___j:LINK(-24).A
	PARM	T131(EAX).A
	T132(EAX).A =   ___i:LINK(-20).A
	PARM	T132(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T133(EAX).A =   ___i:LINK(-20).A
	T134(EAX).A = T133(EAX).A + #1.A
	___i:LINK(-20).A =   T134(EAX).A
; Line 4014:	                                break; 

	GOTO	L_8179:PC
	BLOCK END
	BLOCK 81

L_8193:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_8194:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_8189:
	BLOCK END
	BLOCK 84

L_8195:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T135(EAX).A =   ___i:LINK(-20).A
	T136(EAX).A = T135(EAX).A + #1.A
	___i:LINK(-20).A =   T136(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_8196:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_8197:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_8180:
	T124(AL).BOOL =   #0.BOOL
	CONDGO	L_8178:PC ; #1.BOOL != T124(AL).BOOL
	BLOCK END
	BLOCK 88

L_8179:
	BLOCK END
	BLOCK 89

L_8198:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_8199:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_8200:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_8174:
	BLOCK END
	BLOCK 93

L_8201:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_8203:
	T137(ECX).A =   ___j:LINK(-24).A
	T138(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8202:PC ; T138(EAX).A != T137(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_8204:
	GOTO	L_8107:PC
	BLOCK END
	BLOCK 97

L_8205:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_8202:
	BLOCK END
	BLOCK 99

L_8206:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_8210:
	GOTO	L_8209:PC
	BLOCK END
	BLOCK 101

L_8207:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_8211:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_8212:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_8216:
	GOTO	L_8215:PC
	BLOCK END
	BLOCK 105

L_8213:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_8217:
; Line 4025:	                            ++__i; 

	T144(EAX).A =   ___i:LINK(-20).A
	T145(EAX).A = T144(EAX).A + #1.A
	___i:LINK(-20).A =   T145(EAX).A
	BLOCK END
	BLOCK 107

L_8218:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_8215:
	T140(EAX).A =   ___i:LINK(-20).A
	PARM	T140(EAX).A
	T141(EAX).A =   ___first:LINK(4).A
	PARM	T141(EAX).A
	T142(EAX).A =   ___comp:LINK(12).A
	PARM	T142(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T143(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8213:PC ; T143(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_8214:
	BLOCK END
	BLOCK 110

L_8219:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_8223:
	BLOCK END
	BLOCK 112

L_8220:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_8224:
	BLOCK END
	BLOCK 114

L_8225:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_8222:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T146(EAX).A =   ___j:LINK(-24).A
	T147(EAX).A = T146(EAX).A - #1.A
	___j:LINK(-24).A =   T147(EAX).A
	T148(EAX).A =   ___j:LINK(-24).A
	PARM	T148(EAX).A
	T149(EAX).A =   ___first:LINK(4).A
	PARM	T149(EAX).A
	T150(EAX).A =   ___comp:LINK(12).A
	PARM	T150(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T151(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8220:PC ; T151(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_8221:
	BLOCK END
	BLOCK 117

L_8226:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_8228:
	T152(ECX).A =   ___j:LINK(-24).A
	T153(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8227:PC ; T153(EAX).A S< T152(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_8229:
; Line 4029:	                            break; 

	GOTO	L_8208:PC
	BLOCK END
	BLOCK 121

L_8230:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_8227:
	BLOCK END
	BLOCK 123

L_8231:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___i:LINK(-20).A
	PARM	T155(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T156(EAX).A =   ___i:LINK(-20).A
	T157(EAX).A = T156(EAX).A + #1.A
	___i:LINK(-20).A =   T157(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_8232:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_8233:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_8209:
; Line 4022:	                    while (true) 

	T139(AL).BOOL =   #0.BOOL
	CONDGO	L_8207:PC ; #1.BOOL != T139(AL).BOOL
	BLOCK END
	BLOCK 127

L_8208:
	BLOCK END
	BLOCK 128

L_8234:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T158(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T158(EAX).A
	GOTO	L_8115:PC
	BLOCK END
	BLOCK 129

L_8235:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_8236:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_8170:
	BLOCK END
	BLOCK 132

L_8237:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_8239:
	T159(EAX).A =   ___m:LINK(-8).A
	PARM	T159(EAX).A
	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___comp:LINK(12).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T162(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8238:PC ; T162(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_8240:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_8241:
; Line 4042:	                    swap(*__i, *__j); 

	T163(EAX).A =   ___j:LINK(-24).A
	PARM	T163(EAX).A
	T164(EAX).A =   ___i:LINK(-20).A
	PARM	T164(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_8165:PC
	BLOCK END
	BLOCK 137

L_8242:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_8243:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_8238:
	BLOCK END
	BLOCK 140

L_8244:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_8245:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_8246:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_8166:
	T110(AL).BOOL =   #0.BOOL
	CONDGO	L_8164:PC ; #1.BOOL != T110(AL).BOOL
	BLOCK END
	BLOCK 144

L_8165:
	BLOCK END
	BLOCK 145

L_8247:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_8248:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_8249:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_8160:
	BLOCK END
	BLOCK 149

L_8250:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T165(EAX).A =   ___i:LINK(-20).A
	T166(EAX).A = T165(EAX).A + #1.A
	___i:LINK(-20).A =   T166(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_8252:
	T167(ECX).A =   ___j:LINK(-24).A
	T168(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8251:PC ; T168(EAX).A S>= T167(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_8253:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_8254:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_8258:
	GOTO	L_8257:PC
	BLOCK END
	BLOCK 155

L_8255:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_8259:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_8260:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_8264:
	GOTO	L_8263:PC
	BLOCK END
	BLOCK 159

L_8261:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_8265:
; Line 4060:	                    ++__i; 

	T174(EAX).A =   ___i:LINK(-20).A
	T175(EAX).A = T174(EAX).A + #1.A
	___i:LINK(-20).A =   T175(EAX).A
	BLOCK END
	BLOCK 161

L_8266:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_8263:
	T170(EAX).A =   ___m:LINK(-8).A
	PARM	T170(EAX).A
	T171(EAX).A =   ___i:LINK(-20).A
	PARM	T171(EAX).A
	T172(EAX).A =   ___comp:LINK(12).A
	PARM	T172(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T173(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8261:PC ; T173(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_8262:
	BLOCK END
	BLOCK 164

L_8267:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_8271:
	BLOCK END
	BLOCK 166

L_8268:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_8272:
	BLOCK END
	BLOCK 168

L_8273:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_8270:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___j:LINK(-24).A
	T178(EAX).A = T177(EAX).A - #1.A
	___j:LINK(-24).A =   T178(EAX).A
	T179(EAX).A =   ___j:LINK(-24).A
	PARM	T179(EAX).A
	T180(EAX).A =   ___comp:LINK(12).A
	PARM	T180(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T181(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8268:PC ; T181(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_8269:
	BLOCK END
	BLOCK 171

L_8274:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_8276:
	T182(ECX).A =   ___j:LINK(-24).A
	T183(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8275:PC ; T183(EAX).A S<= T182(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_8277:
; Line 4065:	                    break; 

	GOTO	L_8256:PC
	BLOCK END
	BLOCK 175

L_8278:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_8275:
	BLOCK END
	BLOCK 177

L_8279:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T184(EAX).A =   ___j:LINK(-24).A
	PARM	T184(EAX).A
	T185(EAX).A =   ___i:LINK(-20).A
	PARM	T185(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_8281:
	T186(ECX).A =   ___i:LINK(-20).A
	T187(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_8280:PC ; T187(EAX).A != T186(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_8282:
; Line 4071:	                    __m = __j; 

	T188(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T188(EAX).A
	BLOCK END
	BLOCK 181

L_8283:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_8280:
	BLOCK END
	BLOCK 183

L_8284:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T189(EAX).A =   ___i:LINK(-20).A
	T190(EAX).A = T189(EAX).A + #1.A
	___i:LINK(-20).A =   T190(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_8285:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_8286:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_8257:
	T169(AL).BOOL =   #0.BOOL
	CONDGO	L_8255:PC ; #1.BOOL != T169(AL).BOOL
	BLOCK END
	BLOCK 187

L_8256:
	BLOCK END
	BLOCK 188

L_8287:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_8288:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_8289:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_8251:
	BLOCK END
	BLOCK 192

L_8290:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_8292:
	T191(ECX).A =   ___m:LINK(-8).A
	T192(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8291:PC ; T192(EAX).A == T191(ECX).A
	BLOCK END
	BLOCK 194
	T193(EAX).A =   ___i:LINK(-20).A
	PARM	T193(EAX).A
	T194(EAX).A =   ___m:LINK(-8).A
	PARM	T194(EAX).A
	T195(EAX).A =   ___comp:LINK(12).A
	PARM	T195(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T196(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8291:PC ; T196(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_8293:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_8294:
; Line 4078:	            swap(*__i, *__m); 

	T197(EAX).A =   ___m:LINK(-8).A
	PARM	T197(EAX).A
	T198(EAX).A =   ___i:LINK(-20).A
	PARM	T198(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_8295:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_8296:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_8291:
	BLOCK END
	BLOCK 201

L_8297:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_8299:
	T199(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_8298:PC ; T199(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_8300:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_8301:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T200(EAX).A =   ___comp:LINK(12).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___i:LINK(-20).A
	PARM	T201(EAX).A
	T202(EAX).A =   ___first:LINK(4).A
	PARM	T202(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$cc~pc~$qpcpcr#__less$cc~:PC.UI
	T203(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T203(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_8303:
	T204(EAX).A =   ___comp:LINK(12).A
	PARM	T204(EAX).A
	T205(EAX).A =   ___last:LINK(8).A
	PARM	T205(EAX).A
	T206(EAX).A =   ___i:LINK(-20).A
	T207(EAX).A = T206(EAX).A + #1.A
	PARM	T207(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$cc~pc~$qpcpcr#__less$cc~:PC.UI
	T208(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8302:PC ; T208(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_8304:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_8305:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_8307:
	T209(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_8306:PC ; T209(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_8308:
	GOTO	L_8107:PC
	BLOCK END
	BLOCK 213

L_8309:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_8306:
	BLOCK END
	BLOCK 215

L_8310:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T210(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T210(EAX).A
; Line 4091:	                continue; 

	GOTO	L_8111:PC
	BLOCK END
	BLOCK 216

L_8311:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_8313:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_8314:
	BLOCK END
	BLOCK 220

L_8302:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_8315:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_8317:
	T211(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_8316:PC ; T211(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_8318:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_8319:
; Line 4097:	                    __first = ++__i; 

	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #1.A
	___i:LINK(-20).A =   T213(EAX).A
	T214(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T214(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_8111:PC
	BLOCK END
	BLOCK 226

L_8320:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_8321:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_8316:
	BLOCK END
	BLOCK 229

L_8322:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_8323:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_8324:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_8312:
	BLOCK END
	BLOCK 233

L_8325:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_8326:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_8327:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_8298:
	BLOCK END
	BLOCK 237

L_8328:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_8330:
	T215(ECX).A =   ___last:LINK(8).A
	T216(EAX).A =   ___i:LINK(-20).A
	T217(EDX).A = T215(ECX).A - T216(EAX).A
	T218(ECX).A =   ___i:LINK(-20).A
	T219(EAX).A =   ___first:LINK(4).A
	T220(EAX).A = T218(ECX).A - T219(EAX).A
	CONDGO	L_8329:PC ; T220(EAX).A S>= T217(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_8331:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_8332:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T221(EAX).A =   ___comp:LINK(12).A
	PARM	T221(EAX).A
	T222(EAX).A =   ___i:LINK(-20).A
	PARM	T222(EAX).A
	T223(EAX).A =   ___first:LINK(4).A
	PARM	T223(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$cc~pc~$qpcpcr#__less$cc~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T224(EAX).A =   ___i:LINK(-20).A
	T225(EAX).A = T224(EAX).A + #1.A
	___i:LINK(-20).A =   T225(EAX).A
	T226(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T226(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_8333:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_8335:
	DBG BLOCK END
	GOTO	L_8334:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_8336:
	BLOCK END
	BLOCK 246

L_8329:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_8337:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T227(EAX).A =   ___comp:LINK(12).A
	PARM	T227(EAX).A
	T228(EAX).A =   ___last:LINK(8).A
	PARM	T228(EAX).A
	T229(EAX).A =   ___i:LINK(-20).A
	T230(EAX).A = T229(EAX).A + #1.A
	PARM	T230(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$cc~pc~$qpcpcr#__less$cc~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T231(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T231(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_8338:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_8339:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_8334:
	BLOCK END
	BLOCK 251

L_8340:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_8341:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_8342:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_8111:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_8109:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_8110:
	BLOCK END
	BLOCK 256

L_8343:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_8344:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_8107:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$cc~pc~$qpcpcr#__less$cc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$CC~pC~$qpCpCr#__less$CC~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_8349:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8351:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8353:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #1.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_8373:PC)
	SWBRANCH(#0.UI,L_8355:PC)
	SWBRANCH(#1.UI,L_8357:PC)
	SWBRANCH(#2.UI,L_8359:PC)
	SWBRANCH(#3.UI,L_8366:PC)
	SWBRANCH(#4.UI,L_8368:PC)
	SWBRANCH(#5.UI,L_8370:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_8354:
	BLOCK END
	BLOCK 6

L_8355:
	BLOCK END
	BLOCK 7

L_8357:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_8350:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_8359:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8362:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #2.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8361:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_8363:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_8364:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8361:
	BLOCK END
	BLOCK 14

L_8365:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_8350:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_8366:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #2.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #2.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_8350:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_8368:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #2.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #4.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #2.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$CC~pC~$qpCpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_8350:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_8370:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #2.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #6.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #4.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #2.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$CC~pC~$qpCpCpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_8350:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_8372:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_8373:
	BLOCK END
	BLOCK 20

L_8352:
	BLOCK END
	BLOCK 21

L_8374:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #4.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #2.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_8379:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #2.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_8376:PC
	BLOCK END
	BLOCK 23

L_8375:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_8380:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_8381:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_8383:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8382:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_8384:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8385:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T72(AX).W =   *(T70(EAX)).A.US
	___t:LINK(-14).US =   T72(AX).US
	VAR START	__k
	T73(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T73(EAX).A
; Line 3875:	            __j = __i; 

	T74(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T74(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_8389:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_8393:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_8386:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_8390:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T75(EAX).A =   ___k:LINK(-20).A
	PARM	T75(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T76(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T77(CX).US =   *(T76(EAX)).A.US
	T78(EAX).A =   ___j:LINK(-4).A
	*(T78(EAX)).A.US =   T77(CX).US
; Line 3879:	                __j = __k; 

	T79(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T79(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_8391:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_8392:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_8388:
	T80(ECX).A =   ___first:LINK(4).A
	T81(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_8408:PC ; T81(EAX).A == T80(ECX).A
	BLOCK END
	BLOCK 37
	T82(EAX).A =   ___k:LINK(-20).A
	T83(EAX).A = T82(EAX).A - #2.A
	___k:LINK(-20).A =   T83(EAX).A
	T84(EAX).A =   ___k:LINK(-20).A
	PARM	T84(EAX).A
	T85(EAX).A =   #___t:LINK(-14).A
	PARM	T85(EAX).A
	T86(EAX).A =   ___comp:LINK(12).A
	PARM	T86(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T87(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8386:PC ; T87(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_8408:
	BLOCK END
	BLOCK 39

L_8387:
	BLOCK END
	BLOCK 40

L_8394:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T88(EAX).A =   #___t:LINK(-14).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T89(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T90(CX).US =   *(T89(EAX)).A.US
	T91(EAX).A =   ___j:LINK(-4).A
	*(T91(EAX)).A.US =   T90(CX).US
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_8396:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T92(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_8395:PC ; T92(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_8397:
	T93(EAX).A =   ___i:LINK(-12).A
	T94(EAX).A = T93(EAX).A + #2.A
	___i:LINK(-12).A =   T94(EAX).A
	T95(ECX).A =   ___i:LINK(-12).A
	T96(EAX).A =   ___last:LINK(8).A
	T97(EAX).UI = T95(ECX).A == T96(EAX).A
	T98(AL).BOOL =   T97(EAX).UI
	RV.T11(AL).BOOL =   T98(AL).BOOL
	GOTO	L_8350:PC
	BLOCK END
	BLOCK 44

L_8398:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_8395:
	BLOCK END
	BLOCK 46

L_8399:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_8400:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_8401:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_8382:
	BLOCK END
	BLOCK 50

L_8402:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T99(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T99(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_8403:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_8404:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_8378:
	T100(EAX).A =   ___i:LINK(-12).A
	T101(EAX).A = T100(EAX).A + #2.A
	___i:LINK(-12).A =   T101(EAX).A
	BLOCK END
	BLOCK 54

L_8376:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_8375:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_8377:
	BLOCK END
	BLOCK 56

L_8405:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_8406:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_8350:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$CC~pC~$qpCpCr#__less$CC~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$CC~pC~$qpCpCr#__less$CC~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_8412:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8414:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8418:
	GOTO	L_8417:PC
	BLOCK END
	BLOCK 5

L_8415:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_8419:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_8420:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_8421:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #1.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8423:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_8443:PC)
	SWBRANCH(#0.UI,L_8425:PC)
	SWBRANCH(#1.UI,L_8427:PC)
	SWBRANCH(#2.UI,L_8429:PC)
	SWBRANCH(#3.UI,L_8436:PC)
	SWBRANCH(#4.UI,L_8438:PC)
	SWBRANCH(#5.UI,L_8440:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_8424:
	BLOCK END
	BLOCK 11

L_8425:
	BLOCK END
	BLOCK 12

L_8427:
	DBG BLOCK START
	GOTO	L_8413:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8429:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_8432:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #2.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8431:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_8433:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_8434:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_8431:
	BLOCK END
	BLOCK 19

L_8435:
	DBG BLOCK END
	GOTO	L_8413:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_8436:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #2.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #2.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#10.N
	GOTO	L_8413:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_8438:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #2.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #4.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #2.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$CC~pC~$qpCpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#14.N
	GOTO	L_8413:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_8440:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #2.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #6.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #4.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #2.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$CC~pC~$qpCpCpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#18.N
	GOTO	L_8413:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_8442:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_8443:
	BLOCK END
	BLOCK 25

L_8422:
	BLOCK END
	BLOCK 26

L_8444:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_8446:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_8445:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8447:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_8448:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$CC~pC~$qpCpCr#__less$CC~:PC.UI
	PARMADJ	#C.N
	GOTO	L_8413:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_8449:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_8450:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_8445:
	BLOCK END
	BLOCK 34

L_8451:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #2.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_8452:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_8454:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_8453:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_8455:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_8456:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #1.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #1.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #1.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$CC~pC~$qpCpCpCpCpCr#__less$CC~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_8457:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_8459:
	DBG BLOCK END
	GOTO	L_8458:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_8460:
	BLOCK END
	BLOCK 44

L_8453:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_8461:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #1.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_8462:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_8463:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_8458:
	BLOCK END
	BLOCK 49

L_8464:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_8465:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_8467:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8466:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_8468:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_8469:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_8473:
	GOTO	L_8472:PC
	BLOCK END
	BLOCK 56

L_8470:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_8474:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_8475:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_8477:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #2.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8476:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_8478:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_8479:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #2.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_8481:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #2.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8480:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_8482:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_8483:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_8487:
	GOTO	L_8486:PC
	BLOCK END
	BLOCK 68

L_8484:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_8488:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_8489:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_8491:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8490:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_8492:
	GOTO	L_8413:PC
	BLOCK END
	BLOCK 74

L_8493:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_8490:
	BLOCK END
	BLOCK 76

L_8494:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_8496:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8495:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_8497:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_8498:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #2.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_8485:PC
	BLOCK END
	BLOCK 81

L_8499:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_8500:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_8495:
	BLOCK END
	BLOCK 84

L_8501:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #2.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_8502:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_8503:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_8486:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_8484:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_8485:
	BLOCK END
	BLOCK 89

L_8504:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_8505:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_8506:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_8480:
	BLOCK END
	BLOCK 93

L_8507:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_8509:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8508:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_8510:
	GOTO	L_8413:PC
	BLOCK END
	BLOCK 97

L_8511:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_8508:
	BLOCK END
	BLOCK 99

L_8512:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_8516:
	GOTO	L_8515:PC
	BLOCK END
	BLOCK 101

L_8513:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_8517:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_8518:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_8522:
	GOTO	L_8521:PC
	BLOCK END
	BLOCK 105

L_8519:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_8523:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #2.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_8524:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_8521:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8519:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_8520:
	BLOCK END
	BLOCK 110

L_8525:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_8529:
	BLOCK END
	BLOCK 112

L_8526:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_8530:
	BLOCK END
	BLOCK 114

L_8531:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_8528:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #2.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8526:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_8527:
	BLOCK END
	BLOCK 117

L_8532:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_8534:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8533:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_8535:
; Line 4029:	                            break; 

	GOTO	L_8514:PC
	BLOCK END
	BLOCK 121

L_8536:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_8533:
	BLOCK END
	BLOCK 123

L_8537:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #2.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_8538:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_8539:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_8515:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_8513:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_8514:
	BLOCK END
	BLOCK 128

L_8540:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_8421:PC
	BLOCK END
	BLOCK 129

L_8541:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_8542:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_8476:
	BLOCK END
	BLOCK 132

L_8543:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_8545:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8544:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_8546:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_8547:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_8471:PC
	BLOCK END
	BLOCK 137

L_8548:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_8549:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_8544:
	BLOCK END
	BLOCK 140

L_8550:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_8551:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_8552:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_8472:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_8470:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_8471:
	BLOCK END
	BLOCK 145

L_8553:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_8554:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_8555:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_8466:
	BLOCK END
	BLOCK 149

L_8556:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #2.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_8558:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8557:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_8559:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_8560:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_8564:
	GOTO	L_8563:PC
	BLOCK END
	BLOCK 155

L_8561:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_8565:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_8566:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_8570:
	GOTO	L_8569:PC
	BLOCK END
	BLOCK 159

L_8567:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_8571:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #2.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_8572:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_8569:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8567:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_8568:
	BLOCK END
	BLOCK 164

L_8573:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_8577:
	BLOCK END
	BLOCK 166

L_8574:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_8578:
	BLOCK END
	BLOCK 168

L_8579:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_8576:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #2.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8574:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_8575:
	BLOCK END
	BLOCK 171

L_8580:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_8582:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8581:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_8583:
; Line 4065:	                    break; 

	GOTO	L_8562:PC
	BLOCK END
	BLOCK 175

L_8584:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_8581:
	BLOCK END
	BLOCK 177

L_8585:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_8587:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_8586:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_8588:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_8589:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_8586:
	BLOCK END
	BLOCK 183

L_8590:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #2.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_8591:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_8592:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_8563:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_8561:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_8562:
	BLOCK END
	BLOCK 188

L_8593:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_8594:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_8595:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_8557:
	BLOCK END
	BLOCK 192

L_8596:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_8598:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8597:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8597:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_8599:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_8600:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_8601:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_8602:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_8597:
	BLOCK END
	BLOCK 201

L_8603:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_8605:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_8604:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_8606:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_8607:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$CC~pC~$qpCpCr#__less$CC~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_8609:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #2.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$CC~pC~$qpCpCr#__less$CC~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8608:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_8610:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_8611:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_8613:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_8612:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_8614:
	GOTO	L_8413:PC
	BLOCK END
	BLOCK 213

L_8615:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_8612:
	BLOCK END
	BLOCK 215

L_8616:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_8417:PC
	BLOCK END
	BLOCK 216

L_8617:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_8619:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_8620:
	BLOCK END
	BLOCK 220

L_8608:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_8621:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_8623:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_8622:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_8624:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_8625:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #2.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_8417:PC
	BLOCK END
	BLOCK 226

L_8626:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_8627:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_8622:
	BLOCK END
	BLOCK 229

L_8628:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_8629:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_8630:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_8618:
	BLOCK END
	BLOCK 233

L_8631:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_8632:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_8633:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_8604:
	BLOCK END
	BLOCK 237

L_8634:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_8636:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #1.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #1.UI
	CONDGO	L_8635:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_8637:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_8638:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$CC~pC~$qpCpCr#__less$CC~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #2.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_8639:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_8641:
	DBG BLOCK END
	GOTO	L_8640:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_8642:
	BLOCK END
	BLOCK 246

L_8635:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_8643:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #2.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$CC~pC~$qpCpCr#__less$CC~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_8644:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_8645:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_8640:
	BLOCK END
	BLOCK 251

L_8646:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_8647:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_8648:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_8417:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_8415:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_8416:
	BLOCK END
	BLOCK 256

L_8649:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_8650:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_8413:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$CC~pC~$qpCpCr#__less$CC~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_8655:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8657:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8659:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	COSWITCH(T15(EAX).UI,#6.UI,#6.UI,L_8679:PC)
	SWBRANCH(#0.UI,L_8661:PC)
	SWBRANCH(#1.UI,L_8663:PC)
	SWBRANCH(#2.UI,L_8665:PC)
	SWBRANCH(#3.UI,L_8672:PC)
	SWBRANCH(#4.UI,L_8674:PC)
	SWBRANCH(#5.UI,L_8676:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_8660:
	BLOCK END
	BLOCK 6

L_8661:
	BLOCK END
	BLOCK 7

L_8663:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_8656:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_8665:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8668:
	T16(EAX).A =   ___first:LINK(4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___last:LINK(8).A
	T18(EAX).A = T17(EAX).A - #1.A
	___last:LINK(8).A =   T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___comp:LINK(12).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T21(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8667:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_8669:
; Line 3852:	            swap(*__first, *__last); 

	T22(EAX).A =   ___last:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___first:LINK(4).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_8670:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8667:
	BLOCK END
	BLOCK 14

L_8671:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_8656:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_8672:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T24(EAX).A =   ___comp:LINK(12).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	T26(EAX).A = T25(EAX).A - #1.A
	___last:LINK(8).A =   T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	PARM	T27(EAX).A
	T28(EAX).A =   ___first:LINK(4).A
	T29(EAX).A = T28(EAX).A + #1.A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_8656:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_8674:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T31(EAX).A =   ___comp:LINK(12).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___last:LINK(8).A
	T33(EAX).A = T32(EAX).A - #1.A
	___last:LINK(8).A =   T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___first:LINK(4).A
	T36(EAX).A = T35(EAX).A + #2.A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #1.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ScSc~pSc~$qpScpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_8656:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_8676:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T40(EAX).A =   ___comp:LINK(12).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___last:LINK(8).A
	T42(EAX).A = T41(EAX).A - #1.A
	___last:LINK(8).A =   T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	PARM	T43(EAX).A
	T44(EAX).A =   ___first:LINK(4).A
	T45(EAX).A = T44(EAX).A + #3.A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #2.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #1.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	PARM	T50(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ScSc~pSc~$qpScpScpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_8656:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_8678:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_8679:
	BLOCK END
	BLOCK 20

L_8658:
	BLOCK END
	BLOCK 21

L_8680:
	DBG BLOCK END
	VAR START	__j
	T51(EAX).A =   ___first:LINK(4).A
	T52(EAX).A = T51(EAX).A + #2.A
	___j:LINK(-4).A =   T52(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T53(EAX).A =   ___comp:LINK(12).A
	PARM	T53(EAX).A
	T54(EAX).A =   ___j:LINK(-4).A
	PARM	T54(EAX).A
	T55(EAX).A =   ___first:LINK(4).A
	T56(EAX).A = T55(EAX).A + #1.A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	PARM	T57(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T58(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T58(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_8685:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T59(EAX).A =   ___j:LINK(-4).A
	T60(EAX).A = T59(EAX).A + #1.A
	___i:LINK(-12).A =   T60(EAX).A
	GOTO	L_8682:PC
	BLOCK END
	BLOCK 23

L_8681:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_8686:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_8687:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_8689:
	T63(EAX).A =   ___j:LINK(-4).A
	PARM	T63(EAX).A
	T64(EAX).A =   ___i:LINK(-12).A
	PARM	T64(EAX).A
	T65(EAX).A =   ___comp:LINK(12).A
	PARM	T65(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T66(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8688:PC ; T66(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_8690:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8691:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T67(EAX).A =   ___i:LINK(-12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T68(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T69(AL).C =   *(T68(EAX)).A.C
	___t:LINK(-13).C =   T69(AL).C
	VAR START	__k
	T70(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T70(EAX).A
; Line 3875:	            __j = __i; 

	T71(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T71(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_8695:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_8699:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_8692:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_8696:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T72(EAX).A =   ___k:LINK(-20).A
	PARM	T72(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T73(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T74(CL).C =   *(T73(EAX)).A.C
	T75(EAX).A =   ___j:LINK(-4).A
	*(T75(EAX)).A.C =   T74(CL).C
; Line 3879:	                __j = __k; 

	T76(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T76(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_8697:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_8698:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_8694:
	T77(ECX).A =   ___first:LINK(4).A
	T78(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_8714:PC ; T78(EAX).A == T77(ECX).A
	BLOCK END
	BLOCK 37
	T79(EAX).A =   ___k:LINK(-20).A
	T80(EAX).A = T79(EAX).A - #1.A
	___k:LINK(-20).A =   T80(EAX).A
	T81(EAX).A =   ___k:LINK(-20).A
	PARM	T81(EAX).A
	T82(EAX).A =   #___t:LINK(-13).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___comp:LINK(12).A
	PARM	T83(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T84(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8692:PC ; T84(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_8714:
	BLOCK END
	BLOCK 39

L_8693:
	BLOCK END
	BLOCK 40

L_8700:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T85(EAX).A =   #___t:LINK(-13).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T86(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T87(CL).C =   *(T86(EAX)).A.C
	T88(EAX).A =   ___j:LINK(-4).A
	*(T88(EAX)).A.C =   T87(CL).C
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_8702:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T89(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_8701:PC ; T89(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_8703:
	T90(EAX).A =   ___i:LINK(-12).A
	T91(EAX).A = T90(EAX).A + #1.A
	___i:LINK(-12).A =   T91(EAX).A
	T92(ECX).A =   ___i:LINK(-12).A
	T93(EAX).A =   ___last:LINK(8).A
	T94(EAX).UI = T92(ECX).A == T93(EAX).A
	T95(AL).BOOL =   T94(EAX).UI
	RV.T11(AL).BOOL =   T95(AL).BOOL
	GOTO	L_8656:PC
	BLOCK END
	BLOCK 44

L_8704:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_8701:
	BLOCK END
	BLOCK 46

L_8705:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_8706:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_8707:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_8688:
	BLOCK END
	BLOCK 50

L_8708:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T96(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T96(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_8709:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_8710:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_8684:
	T97(EAX).A =   ___i:LINK(-12).A
	T98(EAX).A = T97(EAX).A + #1.A
	___i:LINK(-12).A =   T98(EAX).A
	BLOCK END
	BLOCK 54

L_8682:
	T61(ECX).A =   ___last:LINK(8).A
	T62(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_8681:PC ; T62(EAX).A != T61(ECX).A
	BLOCK END
	BLOCK 55

L_8683:
	BLOCK END
	BLOCK 56

L_8711:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_8712:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_8656:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_8718:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8720:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8724:
	GOTO	L_8723:PC
	BLOCK END
	BLOCK 5

L_8721:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_8725:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_8726:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_8727:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T18(EAX).A = T15(ECX).A - T16(EAX).A
	___len:LINK(-4).I =   T18(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8729:
	DBG BLOCK END
	T19(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T19(EAX).I,#6.UI,#6.UI,L_8749:PC)
	SWBRANCH(#0.UI,L_8731:PC)
	SWBRANCH(#1.UI,L_8733:PC)
	SWBRANCH(#2.UI,L_8735:PC)
	SWBRANCH(#3.UI,L_8742:PC)
	SWBRANCH(#4.UI,L_8744:PC)
	SWBRANCH(#5.UI,L_8746:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_8730:
	BLOCK END
	BLOCK 11

L_8731:
	BLOCK END
	BLOCK 12

L_8733:
	DBG BLOCK START
	GOTO	L_8719:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8735:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_8738:
	T20(EAX).A =   ___first:LINK(4).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	T22(EAX).A = T21(EAX).A - #1.A
	___last:LINK(8).A =   T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___comp:LINK(12).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T25(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8737:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_8739:
; Line 3945:	                swap(*__first, *__last); 

	T26(EAX).A =   ___last:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___first:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_8740:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_8737:
	BLOCK END
	BLOCK 19

L_8741:
	DBG BLOCK END
	GOTO	L_8719:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_8742:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T28(EAX).A =   ___comp:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	T30(EAX).A = T29(EAX).A - #1.A
	___last:LINK(8).A =   T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	T33(EAX).A = T32(EAX).A + #1.A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	PARM	T34(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#10.N
	GOTO	L_8719:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_8744:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T35(EAX).A =   ___comp:LINK(12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	T37(EAX).A = T36(EAX).A - #1.A
	___last:LINK(8).A =   T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #2.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #1.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	PARM	T43(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ScSc~pSc~$qpScpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#14.N
	GOTO	L_8719:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_8746:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T44(EAX).A =   ___comp:LINK(12).A
	PARM	T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	T46(EAX).A = T45(EAX).A - #1.A
	___last:LINK(8).A =   T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #3.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #2.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #1.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	PARM	T54(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ScSc~pSc~$qpScpScpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#18.N
	GOTO	L_8719:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_8748:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_8749:
	BLOCK END
	BLOCK 25

L_8728:
	BLOCK END
	BLOCK 26

L_8750:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_8752:
	T55(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_8751:PC ; T55(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8753:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_8754:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T56(EAX).A =   ___comp:LINK(12).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___last:LINK(8).A
	PARM	T57(EAX).A
	T58(EAX).A =   ___first:LINK(4).A
	PARM	T58(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#C.N
	GOTO	L_8719:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_8755:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_8756:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_8751:
	BLOCK END
	BLOCK 34

L_8757:
	DBG BLOCK END
	VAR START	__m
	T59(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T59(EAX).A
	VAR START	__lm1
	T60(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T60(EAX).A
; Line 3965:	        --__lm1; 

	T61(EAX).A =   ___lm1:LINK(-12).A
	T62(EAX).A = T61(EAX).A - #1.A
	___lm1:LINK(-12).A =   T62(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_8758:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_8760:
	T63(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_8759:PC ; T63(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_8761:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_8762:
; Line 3971:	            __delta = __len/2; 

	T65(EAX).I =   ___len:LINK(-4).I
	T66(ECX).I = T65(EAX).I U>> #1F.UI
	T67(EAX).I = T66(ECX).I + T65(EAX).I
	T69(EAX).I = T67(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T69(EAX).I
; Line 3972:	            __m += __delta; 

	T70(ECX).A =   ___m:LINK(-8).A
	T71(EAX).I =   ___delta:LINK(-32).I
	T72(EAX).A = T70(ECX).A + T71(EAX).I
	___m:LINK(-8).A =   T72(EAX).A
; Line 3973:	            __delta /= 2; 

	T74(EAX).I =   ___delta:LINK(-32).I
	T75(ECX).I = T74(EAX).I U>> #1F.UI
	T76(EAX).I = T75(ECX).I + T74(EAX).I
	T78(EAX).I = T76(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T78(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T79(EAX).A =   ___comp:LINK(12).A
	PARM	T79(EAX).A
	T80(EAX).A =   ___lm1:LINK(-12).A
	PARM	T80(EAX).A
	T81(ECX).A =   ___m:LINK(-8).A
	T82(EAX).I =   ___delta:LINK(-32).I
	T83(EAX).A = T81(ECX).A + T82(EAX).I
	PARM	T83(EAX).A
	T84(EAX).A =   ___m:LINK(-8).A
	PARM	T84(EAX).A
	T85(ECX).A =   ___first:LINK(4).A
	T86(EAX).I =   ___delta:LINK(-32).I
	T87(EAX).A = T85(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___first:LINK(4).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ScSc~pSc~$qpScpScpScpScpScr#__less$ScSc~:PC.UI
	T89(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T89(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_8763:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_8765:
	DBG BLOCK END
	GOTO	L_8764:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_8766:
	BLOCK END
	BLOCK 44

L_8759:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_8767:
; Line 3978:	            __delta = __len/2; 

	T91(EAX).I =   ___len:LINK(-4).I
	T92(ECX).I = T91(EAX).I U>> #1F.UI
	T93(EAX).I = T92(ECX).I + T91(EAX).I
	T95(EAX).I = T93(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T95(EAX).I
; Line 3979:	            __m += __delta; 

	T96(ECX).A =   ___m:LINK(-8).A
	T97(EAX).I =   ___delta:LINK(-32).I
	T98(EAX).A = T96(ECX).A + T97(EAX).I
	___m:LINK(-8).A =   T98(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T99(EAX).A =   ___comp:LINK(12).A
	PARM	T99(EAX).A
	T100(EAX).A =   ___lm1:LINK(-12).A
	PARM	T100(EAX).A
	T101(EAX).A =   ___m:LINK(-8).A
	PARM	T101(EAX).A
	T102(EAX).A =   ___first:LINK(4).A
	PARM	T102(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~:PC.UI
	T103(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T103(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_8768:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_8769:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_8764:
	BLOCK END
	BLOCK 49

L_8770:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_8771:
	DBG BLOCK END
	VAR START	__i
	T104(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T104(EAX).A
	VAR START	__j
	T105(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T105(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_8773:
	T106(EAX).A =   ___m:LINK(-8).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___i:LINK(-20).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___comp:LINK(12).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T109(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8772:PC ; T109(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_8774:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_8775:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_8779:
	GOTO	L_8778:PC
	BLOCK END
	BLOCK 56

L_8776:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_8780:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_8781:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_8783:
	T111(EAX).A =   ___j:LINK(-24).A
	T112(EAX).A = T111(EAX).A - #1.A
	___j:LINK(-24).A =   T112(EAX).A
	T113(ECX).A =   ___j:LINK(-24).A
	T114(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8782:PC ; T114(EAX).A != T113(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_8784:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_8785:
; Line 4001:	                    ++__i;   

	T115(EAX).A =   ___i:LINK(-20).A
	T116(EAX).A = T115(EAX).A + #1.A
	___i:LINK(-20).A =   T116(EAX).A
; Line 4002:	                    __j = __last; 

	T117(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T117(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_8787:
	T118(EAX).A =   ___j:LINK(-24).A
	T119(EAX).A = T118(EAX).A - #1.A
	___j:LINK(-24).A =   T119(EAX).A
	T120(EAX).A =   ___j:LINK(-24).A
	PARM	T120(EAX).A
	T121(EAX).A =   ___first:LINK(4).A
	PARM	T121(EAX).A
	T122(EAX).A =   ___comp:LINK(12).A
	PARM	T122(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T123(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8786:PC ; T123(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_8788:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_8789:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_8793:
	GOTO	L_8792:PC
	BLOCK END
	BLOCK 68

L_8790:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_8794:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_8795:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_8797:
	T125(ECX).A =   ___j:LINK(-24).A
	T126(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8796:PC ; T126(EAX).A != T125(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_8798:
	GOTO	L_8719:PC
	BLOCK END
	BLOCK 74

L_8799:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_8796:
	BLOCK END
	BLOCK 76

L_8800:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_8802:
	T127(EAX).A =   ___i:LINK(-20).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___first:LINK(4).A
	PARM	T128(EAX).A
	T129(EAX).A =   ___comp:LINK(12).A
	PARM	T129(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T130(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8801:PC ; T130(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_8803:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_8804:
; Line 4011:	                                swap(*__i, *__j); 

	T131(EAX).A =   ___j:LINK(-24).A
	PARM	T131(EAX).A
	T132(EAX).A =   ___i:LINK(-20).A
	PARM	T132(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T133(EAX).A =   ___i:LINK(-20).A
	T134(EAX).A = T133(EAX).A + #1.A
	___i:LINK(-20).A =   T134(EAX).A
; Line 4014:	                                break; 

	GOTO	L_8791:PC
	BLOCK END
	BLOCK 81

L_8805:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_8806:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_8801:
	BLOCK END
	BLOCK 84

L_8807:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T135(EAX).A =   ___i:LINK(-20).A
	T136(EAX).A = T135(EAX).A + #1.A
	___i:LINK(-20).A =   T136(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_8808:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_8809:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_8792:
	T124(AL).BOOL =   #0.BOOL
	CONDGO	L_8790:PC ; #1.BOOL != T124(AL).BOOL
	BLOCK END
	BLOCK 88

L_8791:
	BLOCK END
	BLOCK 89

L_8810:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_8811:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_8812:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_8786:
	BLOCK END
	BLOCK 93

L_8813:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_8815:
	T137(ECX).A =   ___j:LINK(-24).A
	T138(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8814:PC ; T138(EAX).A != T137(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_8816:
	GOTO	L_8719:PC
	BLOCK END
	BLOCK 97

L_8817:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_8814:
	BLOCK END
	BLOCK 99

L_8818:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_8822:
	GOTO	L_8821:PC
	BLOCK END
	BLOCK 101

L_8819:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_8823:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_8824:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_8828:
	GOTO	L_8827:PC
	BLOCK END
	BLOCK 105

L_8825:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_8829:
; Line 4025:	                            ++__i; 

	T144(EAX).A =   ___i:LINK(-20).A
	T145(EAX).A = T144(EAX).A + #1.A
	___i:LINK(-20).A =   T145(EAX).A
	BLOCK END
	BLOCK 107

L_8830:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_8827:
	T140(EAX).A =   ___i:LINK(-20).A
	PARM	T140(EAX).A
	T141(EAX).A =   ___first:LINK(4).A
	PARM	T141(EAX).A
	T142(EAX).A =   ___comp:LINK(12).A
	PARM	T142(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T143(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8825:PC ; T143(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_8826:
	BLOCK END
	BLOCK 110

L_8831:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_8835:
	BLOCK END
	BLOCK 112

L_8832:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_8836:
	BLOCK END
	BLOCK 114

L_8837:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_8834:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T146(EAX).A =   ___j:LINK(-24).A
	T147(EAX).A = T146(EAX).A - #1.A
	___j:LINK(-24).A =   T147(EAX).A
	T148(EAX).A =   ___j:LINK(-24).A
	PARM	T148(EAX).A
	T149(EAX).A =   ___first:LINK(4).A
	PARM	T149(EAX).A
	T150(EAX).A =   ___comp:LINK(12).A
	PARM	T150(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T151(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8832:PC ; T151(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_8833:
	BLOCK END
	BLOCK 117

L_8838:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_8840:
	T152(ECX).A =   ___j:LINK(-24).A
	T153(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8839:PC ; T153(EAX).A S< T152(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_8841:
; Line 4029:	                            break; 

	GOTO	L_8820:PC
	BLOCK END
	BLOCK 121

L_8842:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_8839:
	BLOCK END
	BLOCK 123

L_8843:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___i:LINK(-20).A
	PARM	T155(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T156(EAX).A =   ___i:LINK(-20).A
	T157(EAX).A = T156(EAX).A + #1.A
	___i:LINK(-20).A =   T157(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_8844:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_8845:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_8821:
; Line 4022:	                    while (true) 

	T139(AL).BOOL =   #0.BOOL
	CONDGO	L_8819:PC ; #1.BOOL != T139(AL).BOOL
	BLOCK END
	BLOCK 127

L_8820:
	BLOCK END
	BLOCK 128

L_8846:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T158(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T158(EAX).A
	GOTO	L_8727:PC
	BLOCK END
	BLOCK 129

L_8847:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_8848:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_8782:
	BLOCK END
	BLOCK 132

L_8849:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_8851:
	T159(EAX).A =   ___m:LINK(-8).A
	PARM	T159(EAX).A
	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___comp:LINK(12).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T162(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8850:PC ; T162(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_8852:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_8853:
; Line 4042:	                    swap(*__i, *__j); 

	T163(EAX).A =   ___j:LINK(-24).A
	PARM	T163(EAX).A
	T164(EAX).A =   ___i:LINK(-20).A
	PARM	T164(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_8777:PC
	BLOCK END
	BLOCK 137

L_8854:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_8855:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_8850:
	BLOCK END
	BLOCK 140

L_8856:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_8857:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_8858:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_8778:
	T110(AL).BOOL =   #0.BOOL
	CONDGO	L_8776:PC ; #1.BOOL != T110(AL).BOOL
	BLOCK END
	BLOCK 144

L_8777:
	BLOCK END
	BLOCK 145

L_8859:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_8860:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_8861:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_8772:
	BLOCK END
	BLOCK 149

L_8862:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T165(EAX).A =   ___i:LINK(-20).A
	T166(EAX).A = T165(EAX).A + #1.A
	___i:LINK(-20).A =   T166(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_8864:
	T167(ECX).A =   ___j:LINK(-24).A
	T168(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8863:PC ; T168(EAX).A S>= T167(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_8865:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_8866:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_8870:
	GOTO	L_8869:PC
	BLOCK END
	BLOCK 155

L_8867:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_8871:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_8872:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_8876:
	GOTO	L_8875:PC
	BLOCK END
	BLOCK 159

L_8873:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_8877:
; Line 4060:	                    ++__i; 

	T174(EAX).A =   ___i:LINK(-20).A
	T175(EAX).A = T174(EAX).A + #1.A
	___i:LINK(-20).A =   T175(EAX).A
	BLOCK END
	BLOCK 161

L_8878:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_8875:
	T170(EAX).A =   ___m:LINK(-8).A
	PARM	T170(EAX).A
	T171(EAX).A =   ___i:LINK(-20).A
	PARM	T171(EAX).A
	T172(EAX).A =   ___comp:LINK(12).A
	PARM	T172(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T173(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8873:PC ; T173(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_8874:
	BLOCK END
	BLOCK 164

L_8879:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_8883:
	BLOCK END
	BLOCK 166

L_8880:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_8884:
	BLOCK END
	BLOCK 168

L_8885:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_8882:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___j:LINK(-24).A
	T178(EAX).A = T177(EAX).A - #1.A
	___j:LINK(-24).A =   T178(EAX).A
	T179(EAX).A =   ___j:LINK(-24).A
	PARM	T179(EAX).A
	T180(EAX).A =   ___comp:LINK(12).A
	PARM	T180(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T181(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8880:PC ; T181(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_8881:
	BLOCK END
	BLOCK 171

L_8886:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_8888:
	T182(ECX).A =   ___j:LINK(-24).A
	T183(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8887:PC ; T183(EAX).A S<= T182(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_8889:
; Line 4065:	                    break; 

	GOTO	L_8868:PC
	BLOCK END
	BLOCK 175

L_8890:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_8887:
	BLOCK END
	BLOCK 177

L_8891:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T184(EAX).A =   ___j:LINK(-24).A
	PARM	T184(EAX).A
	T185(EAX).A =   ___i:LINK(-20).A
	PARM	T185(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_8893:
	T186(ECX).A =   ___i:LINK(-20).A
	T187(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_8892:PC ; T187(EAX).A != T186(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_8894:
; Line 4071:	                    __m = __j; 

	T188(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T188(EAX).A
	BLOCK END
	BLOCK 181

L_8895:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_8892:
	BLOCK END
	BLOCK 183

L_8896:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T189(EAX).A =   ___i:LINK(-20).A
	T190(EAX).A = T189(EAX).A + #1.A
	___i:LINK(-20).A =   T190(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_8897:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_8898:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_8869:
	T169(AL).BOOL =   #0.BOOL
	CONDGO	L_8867:PC ; #1.BOOL != T169(AL).BOOL
	BLOCK END
	BLOCK 187

L_8868:
	BLOCK END
	BLOCK 188

L_8899:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_8900:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_8901:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_8863:
	BLOCK END
	BLOCK 192

L_8902:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_8904:
	T191(ECX).A =   ___m:LINK(-8).A
	T192(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_8903:PC ; T192(EAX).A == T191(ECX).A
	BLOCK END
	BLOCK 194
	T193(EAX).A =   ___i:LINK(-20).A
	PARM	T193(EAX).A
	T194(EAX).A =   ___m:LINK(-8).A
	PARM	T194(EAX).A
	T195(EAX).A =   ___comp:LINK(12).A
	PARM	T195(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T196(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8903:PC ; T196(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_8905:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_8906:
; Line 4078:	            swap(*__i, *__m); 

	T197(EAX).A =   ___m:LINK(-8).A
	PARM	T197(EAX).A
	T198(EAX).A =   ___i:LINK(-20).A
	PARM	T198(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_8907:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_8908:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_8903:
	BLOCK END
	BLOCK 201

L_8909:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_8911:
	T199(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_8910:PC ; T199(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_8912:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_8913:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T200(EAX).A =   ___comp:LINK(12).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___i:LINK(-20).A
	PARM	T201(EAX).A
	T202(EAX).A =   ___first:LINK(4).A
	PARM	T202(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~:PC.UI
	T203(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T203(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_8915:
	T204(EAX).A =   ___comp:LINK(12).A
	PARM	T204(EAX).A
	T205(EAX).A =   ___last:LINK(8).A
	PARM	T205(EAX).A
	T206(EAX).A =   ___i:LINK(-20).A
	T207(EAX).A = T206(EAX).A + #1.A
	PARM	T207(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~:PC.UI
	T208(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8914:PC ; T208(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_8916:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_8917:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_8919:
	T209(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_8918:PC ; T209(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_8920:
	GOTO	L_8719:PC
	BLOCK END
	BLOCK 213

L_8921:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_8918:
	BLOCK END
	BLOCK 215

L_8922:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T210(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T210(EAX).A
; Line 4091:	                continue; 

	GOTO	L_8723:PC
	BLOCK END
	BLOCK 216

L_8923:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_8925:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_8926:
	BLOCK END
	BLOCK 220

L_8914:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_8927:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_8929:
	T211(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_8928:PC ; T211(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_8930:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_8931:
; Line 4097:	                    __first = ++__i; 

	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #1.A
	___i:LINK(-20).A =   T213(EAX).A
	T214(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T214(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_8723:PC
	BLOCK END
	BLOCK 226

L_8932:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_8933:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_8928:
	BLOCK END
	BLOCK 229

L_8934:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_8935:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_8936:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_8924:
	BLOCK END
	BLOCK 233

L_8937:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_8938:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_8939:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_8910:
	BLOCK END
	BLOCK 237

L_8940:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_8942:
	T215(ECX).A =   ___last:LINK(8).A
	T216(EAX).A =   ___i:LINK(-20).A
	T217(EDX).A = T215(ECX).A - T216(EAX).A
	T218(ECX).A =   ___i:LINK(-20).A
	T219(EAX).A =   ___first:LINK(4).A
	T220(EAX).A = T218(ECX).A - T219(EAX).A
	CONDGO	L_8941:PC ; T220(EAX).A S>= T217(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_8943:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_8944:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T221(EAX).A =   ___comp:LINK(12).A
	PARM	T221(EAX).A
	T222(EAX).A =   ___i:LINK(-20).A
	PARM	T222(EAX).A
	T223(EAX).A =   ___first:LINK(4).A
	PARM	T223(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T224(EAX).A =   ___i:LINK(-20).A
	T225(EAX).A = T224(EAX).A + #1.A
	___i:LINK(-20).A =   T225(EAX).A
	T226(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T226(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_8945:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_8947:
	DBG BLOCK END
	GOTO	L_8946:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_8948:
	BLOCK END
	BLOCK 246

L_8941:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_8949:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T227(EAX).A =   ___comp:LINK(12).A
	PARM	T227(EAX).A
	T228(EAX).A =   ___last:LINK(8).A
	PARM	T228(EAX).A
	T229(EAX).A =   ___i:LINK(-20).A
	T230(EAX).A = T229(EAX).A + #1.A
	PARM	T230(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T231(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T231(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_8950:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_8951:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_8946:
	BLOCK END
	BLOCK 251

L_8952:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_8953:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_8954:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_8723:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_8721:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_8722:
	BLOCK END
	BLOCK 256

L_8955:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_8956:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_8719:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_8961:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_8963:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_8965:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	COSWITCH(T15(EAX).UI,#6.UI,#6.UI,L_8985:PC)
	SWBRANCH(#0.UI,L_8967:PC)
	SWBRANCH(#1.UI,L_8969:PC)
	SWBRANCH(#2.UI,L_8971:PC)
	SWBRANCH(#3.UI,L_8978:PC)
	SWBRANCH(#4.UI,L_8980:PC)
	SWBRANCH(#5.UI,L_8982:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_8966:
	BLOCK END
	BLOCK 6

L_8967:
	BLOCK END
	BLOCK 7

L_8969:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_8962:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_8971:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_8974:
	T16(EAX).A =   ___first:LINK(4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___last:LINK(8).A
	T18(EAX).A = T17(EAX).A - #1.A
	___last:LINK(8).A =   T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___comp:LINK(12).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T21(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8973:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_8975:
; Line 3852:	            swap(*__first, *__last); 

	T22(EAX).A =   ___last:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___first:LINK(4).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_8976:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_8973:
	BLOCK END
	BLOCK 14

L_8977:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_8962:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_8978:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T24(EAX).A =   ___comp:LINK(12).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	T26(EAX).A = T25(EAX).A - #1.A
	___last:LINK(8).A =   T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	PARM	T27(EAX).A
	T28(EAX).A =   ___first:LINK(4).A
	T29(EAX).A = T28(EAX).A + #1.A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_8962:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_8980:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T31(EAX).A =   ___comp:LINK(12).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___last:LINK(8).A
	T33(EAX).A = T32(EAX).A - #1.A
	___last:LINK(8).A =   T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___first:LINK(4).A
	T36(EAX).A = T35(EAX).A + #2.A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #1.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ucuc~puc~$qpucpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_8962:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_8982:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T40(EAX).A =   ___comp:LINK(12).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___last:LINK(8).A
	T42(EAX).A = T41(EAX).A - #1.A
	___last:LINK(8).A =   T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	PARM	T43(EAX).A
	T44(EAX).A =   ___first:LINK(4).A
	T45(EAX).A = T44(EAX).A + #3.A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #2.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #1.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	PARM	T50(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ucuc~puc~$qpucpucpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_8962:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_8984:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_8985:
	BLOCK END
	BLOCK 20

L_8964:
	BLOCK END
	BLOCK 21

L_8986:
	DBG BLOCK END
	VAR START	__j
	T51(EAX).A =   ___first:LINK(4).A
	T52(EAX).A = T51(EAX).A + #2.A
	___j:LINK(-4).A =   T52(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T53(EAX).A =   ___comp:LINK(12).A
	PARM	T53(EAX).A
	T54(EAX).A =   ___j:LINK(-4).A
	PARM	T54(EAX).A
	T55(EAX).A =   ___first:LINK(4).A
	T56(EAX).A = T55(EAX).A + #1.A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	PARM	T57(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T58(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T58(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_8991:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T59(EAX).A =   ___j:LINK(-4).A
	T60(EAX).A = T59(EAX).A + #1.A
	___i:LINK(-12).A =   T60(EAX).A
	GOTO	L_8988:PC
	BLOCK END
	BLOCK 23

L_8987:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_8992:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_8993:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_8995:
	T63(EAX).A =   ___j:LINK(-4).A
	PARM	T63(EAX).A
	T64(EAX).A =   ___i:LINK(-12).A
	PARM	T64(EAX).A
	T65(EAX).A =   ___comp:LINK(12).A
	PARM	T65(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T66(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8994:PC ; T66(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_8996:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_8997:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T67(EAX).A =   ___i:LINK(-12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T68(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T69(AL).UC =   *(T68(EAX)).A.UC
	___t:LINK(-13).UC =   T69(AL).UC
	VAR START	__k
	T70(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T70(EAX).A
; Line 3875:	            __j = __i; 

	T71(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T71(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9001:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_9005:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_8998:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_9002:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T72(EAX).A =   ___k:LINK(-20).A
	PARM	T72(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T73(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T74(CL).UC =   *(T73(EAX)).A.UC
	T75(EAX).A =   ___j:LINK(-4).A
	*(T75(EAX)).A.UC =   T74(CL).UC
; Line 3879:	                __j = __k; 

	T76(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T76(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_9003:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_9004:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_9000:
	T77(ECX).A =   ___first:LINK(4).A
	T78(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_9020:PC ; T78(EAX).A == T77(ECX).A
	BLOCK END
	BLOCK 37
	T79(EAX).A =   ___k:LINK(-20).A
	T80(EAX).A = T79(EAX).A - #1.A
	___k:LINK(-20).A =   T80(EAX).A
	T81(EAX).A =   ___k:LINK(-20).A
	PARM	T81(EAX).A
	T82(EAX).A =   #___t:LINK(-13).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___comp:LINK(12).A
	PARM	T83(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T84(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_8998:PC ; T84(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_9020:
	BLOCK END
	BLOCK 39

L_8999:
	BLOCK END
	BLOCK 40

L_9006:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T85(EAX).A =   #___t:LINK(-13).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T86(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T87(CL).UC =   *(T86(EAX)).A.UC
	T88(EAX).A =   ___j:LINK(-4).A
	*(T88(EAX)).A.UC =   T87(CL).UC
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_9008:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T89(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_9007:PC ; T89(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9009:
	T90(EAX).A =   ___i:LINK(-12).A
	T91(EAX).A = T90(EAX).A + #1.A
	___i:LINK(-12).A =   T91(EAX).A
	T92(ECX).A =   ___i:LINK(-12).A
	T93(EAX).A =   ___last:LINK(8).A
	T94(EAX).UI = T92(ECX).A == T93(EAX).A
	T95(AL).BOOL =   T94(EAX).UI
	RV.T11(AL).BOOL =   T95(AL).BOOL
	GOTO	L_8962:PC
	BLOCK END
	BLOCK 44

L_9010:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_9007:
	BLOCK END
	BLOCK 46

L_9011:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_9012:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9013:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_8994:
	BLOCK END
	BLOCK 50

L_9014:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T96(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T96(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_9015:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_9016:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_8990:
	T97(EAX).A =   ___i:LINK(-12).A
	T98(EAX).A = T97(EAX).A + #1.A
	___i:LINK(-12).A =   T98(EAX).A
	BLOCK END
	BLOCK 54

L_8988:
	T61(ECX).A =   ___last:LINK(8).A
	T62(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_8987:PC ; T62(EAX).A != T61(ECX).A
	BLOCK END
	BLOCK 55

L_8989:
	BLOCK END
	BLOCK 56

L_9017:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_9018:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_8962:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_9024:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9026:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9030:
	GOTO	L_9029:PC
	BLOCK END
	BLOCK 5

L_9027:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_9031:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_9032:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_9033:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T18(EAX).A = T15(ECX).A - T16(EAX).A
	___len:LINK(-4).I =   T18(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9035:
	DBG BLOCK END
	T19(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T19(EAX).I,#6.UI,#6.UI,L_9055:PC)
	SWBRANCH(#0.UI,L_9037:PC)
	SWBRANCH(#1.UI,L_9039:PC)
	SWBRANCH(#2.UI,L_9041:PC)
	SWBRANCH(#3.UI,L_9048:PC)
	SWBRANCH(#4.UI,L_9050:PC)
	SWBRANCH(#5.UI,L_9052:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_9036:
	BLOCK END
	BLOCK 11

L_9037:
	BLOCK END
	BLOCK 12

L_9039:
	DBG BLOCK START
	GOTO	L_9025:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9041:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_9044:
	T20(EAX).A =   ___first:LINK(4).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	T22(EAX).A = T21(EAX).A - #1.A
	___last:LINK(8).A =   T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___comp:LINK(12).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T25(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9043:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_9045:
; Line 3945:	                swap(*__first, *__last); 

	T26(EAX).A =   ___last:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___first:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_9046:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_9043:
	BLOCK END
	BLOCK 19

L_9047:
	DBG BLOCK END
	GOTO	L_9025:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_9048:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T28(EAX).A =   ___comp:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	T30(EAX).A = T29(EAX).A - #1.A
	___last:LINK(8).A =   T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	T33(EAX).A = T32(EAX).A + #1.A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	PARM	T34(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#10.N
	GOTO	L_9025:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_9050:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T35(EAX).A =   ___comp:LINK(12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	T37(EAX).A = T36(EAX).A - #1.A
	___last:LINK(8).A =   T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #2.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #1.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	PARM	T43(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ucuc~puc~$qpucpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#14.N
	GOTO	L_9025:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_9052:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T44(EAX).A =   ___comp:LINK(12).A
	PARM	T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	T46(EAX).A = T45(EAX).A - #1.A
	___last:LINK(8).A =   T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #3.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #2.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #1.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	PARM	T54(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ucuc~puc~$qpucpucpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#18.N
	GOTO	L_9025:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_9054:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_9055:
	BLOCK END
	BLOCK 25

L_9034:
	BLOCK END
	BLOCK 26

L_9056:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_9058:
	T55(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9057:PC ; T55(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9059:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9060:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T56(EAX).A =   ___comp:LINK(12).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___last:LINK(8).A
	PARM	T57(EAX).A
	T58(EAX).A =   ___first:LINK(4).A
	PARM	T58(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#C.N
	GOTO	L_9025:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_9061:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_9062:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_9057:
	BLOCK END
	BLOCK 34

L_9063:
	DBG BLOCK END
	VAR START	__m
	T59(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T59(EAX).A
	VAR START	__lm1
	T60(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T60(EAX).A
; Line 3965:	        --__lm1; 

	T61(EAX).A =   ___lm1:LINK(-12).A
	T62(EAX).A = T61(EAX).A - #1.A
	___lm1:LINK(-12).A =   T62(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_9064:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_9066:
	T63(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9065:PC ; T63(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_9067:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_9068:
; Line 3971:	            __delta = __len/2; 

	T65(EAX).I =   ___len:LINK(-4).I
	T66(ECX).I = T65(EAX).I U>> #1F.UI
	T67(EAX).I = T66(ECX).I + T65(EAX).I
	T69(EAX).I = T67(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T69(EAX).I
; Line 3972:	            __m += __delta; 

	T70(ECX).A =   ___m:LINK(-8).A
	T71(EAX).I =   ___delta:LINK(-32).I
	T72(EAX).A = T70(ECX).A + T71(EAX).I
	___m:LINK(-8).A =   T72(EAX).A
; Line 3973:	            __delta /= 2; 

	T74(EAX).I =   ___delta:LINK(-32).I
	T75(ECX).I = T74(EAX).I U>> #1F.UI
	T76(EAX).I = T75(ECX).I + T74(EAX).I
	T78(EAX).I = T76(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T78(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T79(EAX).A =   ___comp:LINK(12).A
	PARM	T79(EAX).A
	T80(EAX).A =   ___lm1:LINK(-12).A
	PARM	T80(EAX).A
	T81(ECX).A =   ___m:LINK(-8).A
	T82(EAX).I =   ___delta:LINK(-32).I
	T83(EAX).A = T81(ECX).A + T82(EAX).I
	PARM	T83(EAX).A
	T84(EAX).A =   ___m:LINK(-8).A
	PARM	T84(EAX).A
	T85(ECX).A =   ___first:LINK(4).A
	T86(EAX).I =   ___delta:LINK(-32).I
	T87(EAX).A = T85(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___first:LINK(4).A
	PARM	T88(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ucuc~puc~$qpucpucpucpucpucr#__less$ucuc~:PC.UI
	T89(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T89(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_9069:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_9071:
	DBG BLOCK END
	GOTO	L_9070:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9072:
	BLOCK END
	BLOCK 44

L_9065:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_9073:
; Line 3978:	            __delta = __len/2; 

	T91(EAX).I =   ___len:LINK(-4).I
	T92(ECX).I = T91(EAX).I U>> #1F.UI
	T93(EAX).I = T92(ECX).I + T91(EAX).I
	T95(EAX).I = T93(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T95(EAX).I
; Line 3979:	            __m += __delta; 

	T96(ECX).A =   ___m:LINK(-8).A
	T97(EAX).I =   ___delta:LINK(-32).I
	T98(EAX).A = T96(ECX).A + T97(EAX).I
	___m:LINK(-8).A =   T98(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T99(EAX).A =   ___comp:LINK(12).A
	PARM	T99(EAX).A
	T100(EAX).A =   ___lm1:LINK(-12).A
	PARM	T100(EAX).A
	T101(EAX).A =   ___m:LINK(-8).A
	PARM	T101(EAX).A
	T102(EAX).A =   ___first:LINK(4).A
	PARM	T102(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~:PC.UI
	T103(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T103(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_9074:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_9075:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9070:
	BLOCK END
	BLOCK 49

L_9076:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_9077:
	DBG BLOCK END
	VAR START	__i
	T104(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T104(EAX).A
	VAR START	__j
	T105(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T105(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_9079:
	T106(EAX).A =   ___m:LINK(-8).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___i:LINK(-20).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___comp:LINK(12).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T109(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9078:PC ; T109(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_9080:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_9081:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_9085:
	GOTO	L_9084:PC
	BLOCK END
	BLOCK 56

L_9082:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_9086:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_9087:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_9089:
	T111(EAX).A =   ___j:LINK(-24).A
	T112(EAX).A = T111(EAX).A - #1.A
	___j:LINK(-24).A =   T112(EAX).A
	T113(ECX).A =   ___j:LINK(-24).A
	T114(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9088:PC ; T114(EAX).A != T113(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_9090:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_9091:
; Line 4001:	                    ++__i;   

	T115(EAX).A =   ___i:LINK(-20).A
	T116(EAX).A = T115(EAX).A + #1.A
	___i:LINK(-20).A =   T116(EAX).A
; Line 4002:	                    __j = __last; 

	T117(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T117(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_9093:
	T118(EAX).A =   ___j:LINK(-24).A
	T119(EAX).A = T118(EAX).A - #1.A
	___j:LINK(-24).A =   T119(EAX).A
	T120(EAX).A =   ___j:LINK(-24).A
	PARM	T120(EAX).A
	T121(EAX).A =   ___first:LINK(4).A
	PARM	T121(EAX).A
	T122(EAX).A =   ___comp:LINK(12).A
	PARM	T122(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T123(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9092:PC ; T123(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_9094:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_9095:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_9099:
	GOTO	L_9098:PC
	BLOCK END
	BLOCK 68

L_9096:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_9100:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_9101:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_9103:
	T125(ECX).A =   ___j:LINK(-24).A
	T126(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9102:PC ; T126(EAX).A != T125(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_9104:
	GOTO	L_9025:PC
	BLOCK END
	BLOCK 74

L_9105:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_9102:
	BLOCK END
	BLOCK 76

L_9106:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_9108:
	T127(EAX).A =   ___i:LINK(-20).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___first:LINK(4).A
	PARM	T128(EAX).A
	T129(EAX).A =   ___comp:LINK(12).A
	PARM	T129(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T130(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9107:PC ; T130(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_9109:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_9110:
; Line 4011:	                                swap(*__i, *__j); 

	T131(EAX).A =   ___j:LINK(-24).A
	PARM	T131(EAX).A
	T132(EAX).A =   ___i:LINK(-20).A
	PARM	T132(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T133(EAX).A =   ___i:LINK(-20).A
	T134(EAX).A = T133(EAX).A + #1.A
	___i:LINK(-20).A =   T134(EAX).A
; Line 4014:	                                break; 

	GOTO	L_9097:PC
	BLOCK END
	BLOCK 81

L_9111:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_9112:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_9107:
	BLOCK END
	BLOCK 84

L_9113:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T135(EAX).A =   ___i:LINK(-20).A
	T136(EAX).A = T135(EAX).A + #1.A
	___i:LINK(-20).A =   T136(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_9114:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_9115:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_9098:
	T124(AL).BOOL =   #0.BOOL
	CONDGO	L_9096:PC ; #1.BOOL != T124(AL).BOOL
	BLOCK END
	BLOCK 88

L_9097:
	BLOCK END
	BLOCK 89

L_9116:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_9117:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_9118:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_9092:
	BLOCK END
	BLOCK 93

L_9119:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_9121:
	T137(ECX).A =   ___j:LINK(-24).A
	T138(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9120:PC ; T138(EAX).A != T137(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_9122:
	GOTO	L_9025:PC
	BLOCK END
	BLOCK 97

L_9123:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_9120:
	BLOCK END
	BLOCK 99

L_9124:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_9128:
	GOTO	L_9127:PC
	BLOCK END
	BLOCK 101

L_9125:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_9129:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_9130:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_9134:
	GOTO	L_9133:PC
	BLOCK END
	BLOCK 105

L_9131:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_9135:
; Line 4025:	                            ++__i; 

	T144(EAX).A =   ___i:LINK(-20).A
	T145(EAX).A = T144(EAX).A + #1.A
	___i:LINK(-20).A =   T145(EAX).A
	BLOCK END
	BLOCK 107

L_9136:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_9133:
	T140(EAX).A =   ___i:LINK(-20).A
	PARM	T140(EAX).A
	T141(EAX).A =   ___first:LINK(4).A
	PARM	T141(EAX).A
	T142(EAX).A =   ___comp:LINK(12).A
	PARM	T142(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T143(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9131:PC ; T143(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_9132:
	BLOCK END
	BLOCK 110

L_9137:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_9141:
	BLOCK END
	BLOCK 112

L_9138:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_9142:
	BLOCK END
	BLOCK 114

L_9143:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_9140:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T146(EAX).A =   ___j:LINK(-24).A
	T147(EAX).A = T146(EAX).A - #1.A
	___j:LINK(-24).A =   T147(EAX).A
	T148(EAX).A =   ___j:LINK(-24).A
	PARM	T148(EAX).A
	T149(EAX).A =   ___first:LINK(4).A
	PARM	T149(EAX).A
	T150(EAX).A =   ___comp:LINK(12).A
	PARM	T150(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T151(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9138:PC ; T151(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_9139:
	BLOCK END
	BLOCK 117

L_9144:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_9146:
	T152(ECX).A =   ___j:LINK(-24).A
	T153(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9145:PC ; T153(EAX).A S< T152(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_9147:
; Line 4029:	                            break; 

	GOTO	L_9126:PC
	BLOCK END
	BLOCK 121

L_9148:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_9145:
	BLOCK END
	BLOCK 123

L_9149:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___i:LINK(-20).A
	PARM	T155(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T156(EAX).A =   ___i:LINK(-20).A
	T157(EAX).A = T156(EAX).A + #1.A
	___i:LINK(-20).A =   T157(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_9150:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_9151:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_9127:
; Line 4022:	                    while (true) 

	T139(AL).BOOL =   #0.BOOL
	CONDGO	L_9125:PC ; #1.BOOL != T139(AL).BOOL
	BLOCK END
	BLOCK 127

L_9126:
	BLOCK END
	BLOCK 128

L_9152:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T158(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T158(EAX).A
	GOTO	L_9033:PC
	BLOCK END
	BLOCK 129

L_9153:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_9154:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_9088:
	BLOCK END
	BLOCK 132

L_9155:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_9157:
	T159(EAX).A =   ___m:LINK(-8).A
	PARM	T159(EAX).A
	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___comp:LINK(12).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T162(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9156:PC ; T162(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_9158:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_9159:
; Line 4042:	                    swap(*__i, *__j); 

	T163(EAX).A =   ___j:LINK(-24).A
	PARM	T163(EAX).A
	T164(EAX).A =   ___i:LINK(-20).A
	PARM	T164(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_9083:PC
	BLOCK END
	BLOCK 137

L_9160:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_9161:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_9156:
	BLOCK END
	BLOCK 140

L_9162:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_9163:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_9164:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_9084:
	T110(AL).BOOL =   #0.BOOL
	CONDGO	L_9082:PC ; #1.BOOL != T110(AL).BOOL
	BLOCK END
	BLOCK 144

L_9083:
	BLOCK END
	BLOCK 145

L_9165:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_9166:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_9167:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_9078:
	BLOCK END
	BLOCK 149

L_9168:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T165(EAX).A =   ___i:LINK(-20).A
	T166(EAX).A = T165(EAX).A + #1.A
	___i:LINK(-20).A =   T166(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_9170:
	T167(ECX).A =   ___j:LINK(-24).A
	T168(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9169:PC ; T168(EAX).A S>= T167(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_9171:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_9172:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_9176:
	GOTO	L_9175:PC
	BLOCK END
	BLOCK 155

L_9173:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_9177:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_9178:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_9182:
	GOTO	L_9181:PC
	BLOCK END
	BLOCK 159

L_9179:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_9183:
; Line 4060:	                    ++__i; 

	T174(EAX).A =   ___i:LINK(-20).A
	T175(EAX).A = T174(EAX).A + #1.A
	___i:LINK(-20).A =   T175(EAX).A
	BLOCK END
	BLOCK 161

L_9184:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_9181:
	T170(EAX).A =   ___m:LINK(-8).A
	PARM	T170(EAX).A
	T171(EAX).A =   ___i:LINK(-20).A
	PARM	T171(EAX).A
	T172(EAX).A =   ___comp:LINK(12).A
	PARM	T172(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T173(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9179:PC ; T173(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_9180:
	BLOCK END
	BLOCK 164

L_9185:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_9189:
	BLOCK END
	BLOCK 166

L_9186:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_9190:
	BLOCK END
	BLOCK 168

L_9191:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_9188:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___j:LINK(-24).A
	T178(EAX).A = T177(EAX).A - #1.A
	___j:LINK(-24).A =   T178(EAX).A
	T179(EAX).A =   ___j:LINK(-24).A
	PARM	T179(EAX).A
	T180(EAX).A =   ___comp:LINK(12).A
	PARM	T180(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T181(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9186:PC ; T181(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_9187:
	BLOCK END
	BLOCK 171

L_9192:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_9194:
	T182(ECX).A =   ___j:LINK(-24).A
	T183(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9193:PC ; T183(EAX).A S<= T182(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_9195:
; Line 4065:	                    break; 

	GOTO	L_9174:PC
	BLOCK END
	BLOCK 175

L_9196:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_9193:
	BLOCK END
	BLOCK 177

L_9197:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T184(EAX).A =   ___j:LINK(-24).A
	PARM	T184(EAX).A
	T185(EAX).A =   ___i:LINK(-20).A
	PARM	T185(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_9199:
	T186(ECX).A =   ___i:LINK(-20).A
	T187(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_9198:PC ; T187(EAX).A != T186(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_9200:
; Line 4071:	                    __m = __j; 

	T188(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T188(EAX).A
	BLOCK END
	BLOCK 181

L_9201:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_9198:
	BLOCK END
	BLOCK 183

L_9202:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T189(EAX).A =   ___i:LINK(-20).A
	T190(EAX).A = T189(EAX).A + #1.A
	___i:LINK(-20).A =   T190(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_9203:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_9204:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_9175:
	T169(AL).BOOL =   #0.BOOL
	CONDGO	L_9173:PC ; #1.BOOL != T169(AL).BOOL
	BLOCK END
	BLOCK 187

L_9174:
	BLOCK END
	BLOCK 188

L_9205:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_9206:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_9207:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_9169:
	BLOCK END
	BLOCK 192

L_9208:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_9210:
	T191(ECX).A =   ___m:LINK(-8).A
	T192(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9209:PC ; T192(EAX).A == T191(ECX).A
	BLOCK END
	BLOCK 194
	T193(EAX).A =   ___i:LINK(-20).A
	PARM	T193(EAX).A
	T194(EAX).A =   ___m:LINK(-8).A
	PARM	T194(EAX).A
	T195(EAX).A =   ___comp:LINK(12).A
	PARM	T195(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T196(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9209:PC ; T196(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_9211:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_9212:
; Line 4078:	            swap(*__i, *__m); 

	T197(EAX).A =   ___m:LINK(-8).A
	PARM	T197(EAX).A
	T198(EAX).A =   ___i:LINK(-20).A
	PARM	T198(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_9213:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_9214:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_9209:
	BLOCK END
	BLOCK 201

L_9215:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_9217:
	T199(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_9216:PC ; T199(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_9218:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_9219:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T200(EAX).A =   ___comp:LINK(12).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___i:LINK(-20).A
	PARM	T201(EAX).A
	T202(EAX).A =   ___first:LINK(4).A
	PARM	T202(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~:PC.UI
	T203(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T203(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_9221:
	T204(EAX).A =   ___comp:LINK(12).A
	PARM	T204(EAX).A
	T205(EAX).A =   ___last:LINK(8).A
	PARM	T205(EAX).A
	T206(EAX).A =   ___i:LINK(-20).A
	T207(EAX).A = T206(EAX).A + #1.A
	PARM	T207(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~:PC.UI
	T208(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9220:PC ; T208(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_9222:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_9223:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_9225:
	T209(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_9224:PC ; T209(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_9226:
	GOTO	L_9025:PC
	BLOCK END
	BLOCK 213

L_9227:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_9224:
	BLOCK END
	BLOCK 215

L_9228:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T210(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T210(EAX).A
; Line 4091:	                continue; 

	GOTO	L_9029:PC
	BLOCK END
	BLOCK 216

L_9229:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_9231:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_9232:
	BLOCK END
	BLOCK 220

L_9220:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_9233:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_9235:
	T211(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_9234:PC ; T211(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_9236:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_9237:
; Line 4097:	                    __first = ++__i; 

	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #1.A
	___i:LINK(-20).A =   T213(EAX).A
	T214(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T214(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_9029:PC
	BLOCK END
	BLOCK 226

L_9238:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_9239:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_9234:
	BLOCK END
	BLOCK 229

L_9240:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_9241:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_9242:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_9230:
	BLOCK END
	BLOCK 233

L_9243:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_9244:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_9245:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_9216:
	BLOCK END
	BLOCK 237

L_9246:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_9248:
	T215(ECX).A =   ___last:LINK(8).A
	T216(EAX).A =   ___i:LINK(-20).A
	T217(EDX).A = T215(ECX).A - T216(EAX).A
	T218(ECX).A =   ___i:LINK(-20).A
	T219(EAX).A =   ___first:LINK(4).A
	T220(EAX).A = T218(ECX).A - T219(EAX).A
	CONDGO	L_9247:PC ; T220(EAX).A S>= T217(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_9249:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_9250:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T221(EAX).A =   ___comp:LINK(12).A
	PARM	T221(EAX).A
	T222(EAX).A =   ___i:LINK(-20).A
	PARM	T222(EAX).A
	T223(EAX).A =   ___first:LINK(4).A
	PARM	T223(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T224(EAX).A =   ___i:LINK(-20).A
	T225(EAX).A = T224(EAX).A + #1.A
	___i:LINK(-20).A =   T225(EAX).A
	T226(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T226(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_9251:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_9253:
	DBG BLOCK END
	GOTO	L_9252:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_9254:
	BLOCK END
	BLOCK 246

L_9247:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_9255:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T227(EAX).A =   ___comp:LINK(12).A
	PARM	T227(EAX).A
	T228(EAX).A =   ___last:LINK(8).A
	PARM	T228(EAX).A
	T229(EAX).A =   ___i:LINK(-20).A
	T230(EAX).A = T229(EAX).A + #1.A
	PARM	T230(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T231(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T231(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_9256:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_9257:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_9252:
	BLOCK END
	BLOCK 251

L_9258:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_9259:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_9260:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_9029:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_9027:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_9028:
	BLOCK END
	BLOCK 256

L_9261:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_9262:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_9025:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ss~ps~$qpspsr#__less$ss~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_9267:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9269:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9271:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #1.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_9291:PC)
	SWBRANCH(#0.UI,L_9273:PC)
	SWBRANCH(#1.UI,L_9275:PC)
	SWBRANCH(#2.UI,L_9277:PC)
	SWBRANCH(#3.UI,L_9284:PC)
	SWBRANCH(#4.UI,L_9286:PC)
	SWBRANCH(#5.UI,L_9288:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_9272:
	BLOCK END
	BLOCK 6

L_9273:
	BLOCK END
	BLOCK 7

L_9275:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_9268:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_9277:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9280:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #2.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9279:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_9281:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_9282:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9279:
	BLOCK END
	BLOCK 14

L_9283:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_9268:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_9284:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #2.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #2.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_9268:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_9286:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #2.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #4.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #2.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ss~ps~$qpspspspsr#__less$ss~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_9268:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_9288:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #2.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #6.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #4.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #2.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ss~ps~$qpspspspspsr#__less$ss~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_9268:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_9290:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_9291:
	BLOCK END
	BLOCK 20

L_9270:
	BLOCK END
	BLOCK 21

L_9292:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #4.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #2.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_9297:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #2.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_9294:PC
	BLOCK END
	BLOCK 23

L_9293:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_9298:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_9299:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_9301:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9300:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_9302:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9303:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(AX).S =   *(T70(EAX)).A.S
	___t:LINK(-14).S =   T71(AX).S
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9307:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_9311:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_9304:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_9308:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(CX).S =   *(T75(EAX)).A.S
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.S =   T76(CX).S
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_9309:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_9310:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_9306:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_9326:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #2.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-14).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9304:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_9326:
	BLOCK END
	BLOCK 39

L_9305:
	BLOCK END
	BLOCK 40

L_9312:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-14).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(CX).S =   *(T88(EAX)).A.S
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.S =   T89(CX).S
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_9314:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_9313:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9315:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #2.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_9268:PC
	BLOCK END
	BLOCK 44

L_9316:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_9313:
	BLOCK END
	BLOCK 46

L_9317:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_9318:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9319:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_9300:
	BLOCK END
	BLOCK 50

L_9320:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_9321:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_9322:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_9296:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #2.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_9294:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_9293:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_9295:
	BLOCK END
	BLOCK 56

L_9323:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_9324:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_9268:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ss~ps~$qpspsr#__less$ss~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ss~ps~$qpspsr#__less$ss~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_9330:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9332:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9336:
	GOTO	L_9335:PC
	BLOCK END
	BLOCK 5

L_9333:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_9337:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_9338:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_9339:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #1.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9341:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_9361:PC)
	SWBRANCH(#0.UI,L_9343:PC)
	SWBRANCH(#1.UI,L_9345:PC)
	SWBRANCH(#2.UI,L_9347:PC)
	SWBRANCH(#3.UI,L_9354:PC)
	SWBRANCH(#4.UI,L_9356:PC)
	SWBRANCH(#5.UI,L_9358:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_9342:
	BLOCK END
	BLOCK 11

L_9343:
	BLOCK END
	BLOCK 12

L_9345:
	DBG BLOCK START
	GOTO	L_9331:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9347:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_9350:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #2.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9349:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_9351:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_9352:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_9349:
	BLOCK END
	BLOCK 19

L_9353:
	DBG BLOCK END
	GOTO	L_9331:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_9354:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #2.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #2.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~:PC.UI
	PARMADJ	#10.N
	GOTO	L_9331:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_9356:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #2.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #4.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #2.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ss~ps~$qpspspspsr#__less$ss~:PC.UI
	PARMADJ	#14.N
	GOTO	L_9331:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_9358:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #2.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #6.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #4.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #2.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ss~ps~$qpspspspspsr#__less$ss~:PC.UI
	PARMADJ	#18.N
	GOTO	L_9331:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_9360:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_9361:
	BLOCK END
	BLOCK 25

L_9340:
	BLOCK END
	BLOCK 26

L_9362:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_9364:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9363:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9365:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9366:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ss~ps~$qpspsr#__less$ss~:PC.UI
	PARMADJ	#C.N
	GOTO	L_9331:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_9367:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_9368:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_9363:
	BLOCK END
	BLOCK 34

L_9369:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #2.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_9370:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_9372:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9371:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_9373:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_9374:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #1.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #1.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #1.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ss~ps~$qpspspspspsr#__less$ss~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_9375:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_9377:
	DBG BLOCK END
	GOTO	L_9376:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9378:
	BLOCK END
	BLOCK 44

L_9371:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_9379:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #1.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_9380:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_9381:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9376:
	BLOCK END
	BLOCK 49

L_9382:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_9383:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_9385:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9384:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_9386:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_9387:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_9391:
	GOTO	L_9390:PC
	BLOCK END
	BLOCK 56

L_9388:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_9392:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_9393:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_9395:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #2.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9394:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_9396:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_9397:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #2.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_9399:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #2.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9398:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_9400:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_9401:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_9405:
	GOTO	L_9404:PC
	BLOCK END
	BLOCK 68

L_9402:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_9406:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_9407:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_9409:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9408:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_9410:
	GOTO	L_9331:PC
	BLOCK END
	BLOCK 74

L_9411:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_9408:
	BLOCK END
	BLOCK 76

L_9412:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_9414:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9413:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_9415:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_9416:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #2.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_9403:PC
	BLOCK END
	BLOCK 81

L_9417:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_9418:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_9413:
	BLOCK END
	BLOCK 84

L_9419:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #2.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_9420:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_9421:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_9404:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_9402:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_9403:
	BLOCK END
	BLOCK 89

L_9422:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_9423:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_9424:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_9398:
	BLOCK END
	BLOCK 93

L_9425:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_9427:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9426:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_9428:
	GOTO	L_9331:PC
	BLOCK END
	BLOCK 97

L_9429:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_9426:
	BLOCK END
	BLOCK 99

L_9430:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_9434:
	GOTO	L_9433:PC
	BLOCK END
	BLOCK 101

L_9431:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_9435:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_9436:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_9440:
	GOTO	L_9439:PC
	BLOCK END
	BLOCK 105

L_9437:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_9441:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #2.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_9442:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_9439:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9437:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_9438:
	BLOCK END
	BLOCK 110

L_9443:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_9447:
	BLOCK END
	BLOCK 112

L_9444:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_9448:
	BLOCK END
	BLOCK 114

L_9449:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_9446:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #2.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9444:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_9445:
	BLOCK END
	BLOCK 117

L_9450:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_9452:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9451:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_9453:
; Line 4029:	                            break; 

	GOTO	L_9432:PC
	BLOCK END
	BLOCK 121

L_9454:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_9451:
	BLOCK END
	BLOCK 123

L_9455:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #2.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_9456:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_9457:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_9433:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_9431:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_9432:
	BLOCK END
	BLOCK 128

L_9458:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_9339:PC
	BLOCK END
	BLOCK 129

L_9459:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_9460:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_9394:
	BLOCK END
	BLOCK 132

L_9461:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_9463:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9462:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_9464:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_9465:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_9389:PC
	BLOCK END
	BLOCK 137

L_9466:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_9467:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_9462:
	BLOCK END
	BLOCK 140

L_9468:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_9469:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_9470:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_9390:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_9388:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_9389:
	BLOCK END
	BLOCK 145

L_9471:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_9472:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_9473:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_9384:
	BLOCK END
	BLOCK 149

L_9474:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #2.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_9476:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9475:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_9477:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_9478:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_9482:
	GOTO	L_9481:PC
	BLOCK END
	BLOCK 155

L_9479:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_9483:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_9484:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_9488:
	GOTO	L_9487:PC
	BLOCK END
	BLOCK 159

L_9485:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_9489:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #2.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_9490:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_9487:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9485:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_9486:
	BLOCK END
	BLOCK 164

L_9491:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_9495:
	BLOCK END
	BLOCK 166

L_9492:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_9496:
	BLOCK END
	BLOCK 168

L_9497:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_9494:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #2.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9492:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_9493:
	BLOCK END
	BLOCK 171

L_9498:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_9500:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9499:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_9501:
; Line 4065:	                    break; 

	GOTO	L_9480:PC
	BLOCK END
	BLOCK 175

L_9502:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_9499:
	BLOCK END
	BLOCK 177

L_9503:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_9505:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_9504:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_9506:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_9507:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_9504:
	BLOCK END
	BLOCK 183

L_9508:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #2.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_9509:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_9510:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_9481:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_9479:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_9480:
	BLOCK END
	BLOCK 188

L_9511:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_9512:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_9513:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_9475:
	BLOCK END
	BLOCK 192

L_9514:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_9516:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9515:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9515:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_9517:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_9518:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_9519:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_9520:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_9515:
	BLOCK END
	BLOCK 201

L_9521:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_9523:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_9522:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_9524:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_9525:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ss~ps~$qpspsr#__less$ss~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_9527:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #2.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ss~ps~$qpspsr#__less$ss~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9526:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_9528:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_9529:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_9531:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_9530:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_9532:
	GOTO	L_9331:PC
	BLOCK END
	BLOCK 213

L_9533:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_9530:
	BLOCK END
	BLOCK 215

L_9534:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_9335:PC
	BLOCK END
	BLOCK 216

L_9535:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_9537:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_9538:
	BLOCK END
	BLOCK 220

L_9526:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_9539:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_9541:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_9540:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_9542:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_9543:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #2.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_9335:PC
	BLOCK END
	BLOCK 226

L_9544:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_9545:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_9540:
	BLOCK END
	BLOCK 229

L_9546:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_9547:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_9548:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_9536:
	BLOCK END
	BLOCK 233

L_9549:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_9550:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_9551:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_9522:
	BLOCK END
	BLOCK 237

L_9552:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_9554:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #1.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #1.UI
	CONDGO	L_9553:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_9555:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_9556:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ss~ps~$qpspsr#__less$ss~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #2.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_9557:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_9559:
	DBG BLOCK END
	GOTO	L_9558:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_9560:
	BLOCK END
	BLOCK 246

L_9553:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_9561:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #2.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ss~ps~$qpspsr#__less$ss~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_9562:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_9563:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_9558:
	BLOCK END
	BLOCK 251

L_9564:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_9565:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_9566:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_9335:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_9333:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_9334:
	BLOCK END
	BLOCK 256

L_9567:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_9568:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_9331:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ss~ps~$qpspsr#__less$ss~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$usus~pus~$qpuspusr#__less$usus~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_9573:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9575:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9577:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #1.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_9597:PC)
	SWBRANCH(#0.UI,L_9579:PC)
	SWBRANCH(#1.UI,L_9581:PC)
	SWBRANCH(#2.UI,L_9583:PC)
	SWBRANCH(#3.UI,L_9590:PC)
	SWBRANCH(#4.UI,L_9592:PC)
	SWBRANCH(#5.UI,L_9594:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_9578:
	BLOCK END
	BLOCK 6

L_9579:
	BLOCK END
	BLOCK 7

L_9581:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_9574:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_9583:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9586:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #2.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9585:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_9587:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_9588:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9585:
	BLOCK END
	BLOCK 14

L_9589:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_9574:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_9590:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #2.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #2.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_9574:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_9592:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #2.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #4.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #2.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$usus~pus~$qpuspuspuspusr#__less$usus~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_9574:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_9594:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #2.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #6.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #4.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #2.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$usus~pus~$qpuspuspuspuspusr#__less$usus~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_9574:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_9596:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_9597:
	BLOCK END
	BLOCK 20

L_9576:
	BLOCK END
	BLOCK 21

L_9598:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #4.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #2.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_9603:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #2.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_9600:PC
	BLOCK END
	BLOCK 23

L_9599:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_9604:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_9605:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_9607:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9606:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_9608:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9609:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(AX).US =   *(T70(EAX)).A.US
	___t:LINK(-14).US =   T71(AX).US
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9613:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_9617:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_9610:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_9614:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(CX).US =   *(T75(EAX)).A.US
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.US =   T76(CX).US
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_9615:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_9616:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_9612:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_9632:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #2.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-14).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9610:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_9632:
	BLOCK END
	BLOCK 39

L_9611:
	BLOCK END
	BLOCK 40

L_9618:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-14).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(CX).US =   *(T88(EAX)).A.US
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.US =   T89(CX).US
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_9620:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_9619:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9621:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #2.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_9574:PC
	BLOCK END
	BLOCK 44

L_9622:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_9619:
	BLOCK END
	BLOCK 46

L_9623:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_9624:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9625:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_9606:
	BLOCK END
	BLOCK 50

L_9626:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_9627:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_9628:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_9602:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #2.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_9600:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_9599:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_9601:
	BLOCK END
	BLOCK 56

L_9629:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_9630:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_9574:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$usus~pus~$qpuspusr#__less$usus~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$usus~pus~$qpuspusr#__less$usus~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_9636:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9638:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9642:
	GOTO	L_9641:PC
	BLOCK END
	BLOCK 5

L_9639:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_9643:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_9644:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_9645:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #1.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9647:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_9667:PC)
	SWBRANCH(#0.UI,L_9649:PC)
	SWBRANCH(#1.UI,L_9651:PC)
	SWBRANCH(#2.UI,L_9653:PC)
	SWBRANCH(#3.UI,L_9660:PC)
	SWBRANCH(#4.UI,L_9662:PC)
	SWBRANCH(#5.UI,L_9664:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_9648:
	BLOCK END
	BLOCK 11

L_9649:
	BLOCK END
	BLOCK 12

L_9651:
	DBG BLOCK START
	GOTO	L_9637:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9653:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_9656:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #2.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9655:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_9657:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_9658:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_9655:
	BLOCK END
	BLOCK 19

L_9659:
	DBG BLOCK END
	GOTO	L_9637:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_9660:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #2.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #2.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~:PC.UI
	PARMADJ	#10.N
	GOTO	L_9637:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_9662:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #2.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #4.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #2.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$usus~pus~$qpuspuspuspusr#__less$usus~:PC.UI
	PARMADJ	#14.N
	GOTO	L_9637:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_9664:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #2.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #6.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #4.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #2.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$usus~pus~$qpuspuspuspuspusr#__less$usus~:PC.UI
	PARMADJ	#18.N
	GOTO	L_9637:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_9666:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_9667:
	BLOCK END
	BLOCK 25

L_9646:
	BLOCK END
	BLOCK 26

L_9668:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_9670:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9669:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9671:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9672:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$usus~pus~$qpuspusr#__less$usus~:PC.UI
	PARMADJ	#C.N
	GOTO	L_9637:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_9673:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_9674:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_9669:
	BLOCK END
	BLOCK 34

L_9675:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #2.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_9676:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_9678:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9677:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_9679:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_9680:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #1.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #1.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #1.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$usus~pus~$qpuspuspuspuspusr#__less$usus~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_9681:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_9683:
	DBG BLOCK END
	GOTO	L_9682:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9684:
	BLOCK END
	BLOCK 44

L_9677:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_9685:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #1.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_9686:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_9687:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9682:
	BLOCK END
	BLOCK 49

L_9688:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_9689:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_9691:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9690:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_9692:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_9693:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_9697:
	GOTO	L_9696:PC
	BLOCK END
	BLOCK 56

L_9694:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_9698:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_9699:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_9701:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #2.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9700:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_9702:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_9703:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #2.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_9705:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #2.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9704:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_9706:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_9707:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_9711:
	GOTO	L_9710:PC
	BLOCK END
	BLOCK 68

L_9708:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_9712:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_9713:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_9715:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9714:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_9716:
	GOTO	L_9637:PC
	BLOCK END
	BLOCK 74

L_9717:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_9714:
	BLOCK END
	BLOCK 76

L_9718:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_9720:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9719:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_9721:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_9722:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #2.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_9709:PC
	BLOCK END
	BLOCK 81

L_9723:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_9724:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_9719:
	BLOCK END
	BLOCK 84

L_9725:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #2.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_9726:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_9727:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_9710:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_9708:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_9709:
	BLOCK END
	BLOCK 89

L_9728:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_9729:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_9730:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_9704:
	BLOCK END
	BLOCK 93

L_9731:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_9733:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9732:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_9734:
	GOTO	L_9637:PC
	BLOCK END
	BLOCK 97

L_9735:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_9732:
	BLOCK END
	BLOCK 99

L_9736:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_9740:
	GOTO	L_9739:PC
	BLOCK END
	BLOCK 101

L_9737:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_9741:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_9742:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_9746:
	GOTO	L_9745:PC
	BLOCK END
	BLOCK 105

L_9743:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_9747:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #2.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_9748:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_9745:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9743:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_9744:
	BLOCK END
	BLOCK 110

L_9749:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_9753:
	BLOCK END
	BLOCK 112

L_9750:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_9754:
	BLOCK END
	BLOCK 114

L_9755:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_9752:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #2.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9750:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_9751:
	BLOCK END
	BLOCK 117

L_9756:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_9758:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9757:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_9759:
; Line 4029:	                            break; 

	GOTO	L_9738:PC
	BLOCK END
	BLOCK 121

L_9760:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_9757:
	BLOCK END
	BLOCK 123

L_9761:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #2.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_9762:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_9763:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_9739:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_9737:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_9738:
	BLOCK END
	BLOCK 128

L_9764:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_9645:PC
	BLOCK END
	BLOCK 129

L_9765:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_9766:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_9700:
	BLOCK END
	BLOCK 132

L_9767:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_9769:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9768:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_9770:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_9771:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_9695:PC
	BLOCK END
	BLOCK 137

L_9772:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_9773:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_9768:
	BLOCK END
	BLOCK 140

L_9774:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_9775:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_9776:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_9696:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_9694:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_9695:
	BLOCK END
	BLOCK 145

L_9777:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_9778:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_9779:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_9690:
	BLOCK END
	BLOCK 149

L_9780:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #2.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_9782:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9781:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_9783:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_9784:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_9788:
	GOTO	L_9787:PC
	BLOCK END
	BLOCK 155

L_9785:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_9789:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_9790:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_9794:
	GOTO	L_9793:PC
	BLOCK END
	BLOCK 159

L_9791:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_9795:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #2.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_9796:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_9793:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9791:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_9792:
	BLOCK END
	BLOCK 164

L_9797:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_9801:
	BLOCK END
	BLOCK 166

L_9798:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_9802:
	BLOCK END
	BLOCK 168

L_9803:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_9800:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #2.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9798:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_9799:
	BLOCK END
	BLOCK 171

L_9804:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_9806:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9805:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_9807:
; Line 4065:	                    break; 

	GOTO	L_9786:PC
	BLOCK END
	BLOCK 175

L_9808:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_9805:
	BLOCK END
	BLOCK 177

L_9809:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_9811:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_9810:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_9812:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_9813:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_9810:
	BLOCK END
	BLOCK 183

L_9814:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #2.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_9815:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_9816:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_9787:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_9785:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_9786:
	BLOCK END
	BLOCK 188

L_9817:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_9818:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_9819:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_9781:
	BLOCK END
	BLOCK 192

L_9820:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_9822:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_9821:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9821:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_9823:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_9824:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_9825:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_9826:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_9821:
	BLOCK END
	BLOCK 201

L_9827:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_9829:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_9828:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_9830:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_9831:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$usus~pus~$qpuspusr#__less$usus~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_9833:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #2.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$usus~pus~$qpuspusr#__less$usus~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9832:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_9834:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_9835:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_9837:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_9836:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_9838:
	GOTO	L_9637:PC
	BLOCK END
	BLOCK 213

L_9839:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_9836:
	BLOCK END
	BLOCK 215

L_9840:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_9641:PC
	BLOCK END
	BLOCK 216

L_9841:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_9843:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_9844:
	BLOCK END
	BLOCK 220

L_9832:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_9845:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_9847:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_9846:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_9848:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_9849:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #2.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_9641:PC
	BLOCK END
	BLOCK 226

L_9850:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_9851:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_9846:
	BLOCK END
	BLOCK 229

L_9852:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_9853:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_9854:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_9842:
	BLOCK END
	BLOCK 233

L_9855:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_9856:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_9857:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_9828:
	BLOCK END
	BLOCK 237

L_9858:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_9860:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #1.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #1.UI
	CONDGO	L_9859:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_9861:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_9862:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$usus~pus~$qpuspusr#__less$usus~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #2.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_9863:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_9865:
	DBG BLOCK END
	GOTO	L_9864:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_9866:
	BLOCK END
	BLOCK 246

L_9859:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_9867:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #2.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$usus~pus~$qpuspusr#__less$usus~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_9868:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_9869:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_9864:
	BLOCK END
	BLOCK 251

L_9870:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_9871:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_9872:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_9641:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_9639:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_9640:
	BLOCK END
	BLOCK 256

L_9873:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_9874:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_9637:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$usus~pus~$qpuspusr#__less$usus~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ii~pi~$qpipir#__less$ii~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_9879:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9881:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9883:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #2.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_9903:PC)
	SWBRANCH(#0.UI,L_9885:PC)
	SWBRANCH(#1.UI,L_9887:PC)
	SWBRANCH(#2.UI,L_9889:PC)
	SWBRANCH(#3.UI,L_9896:PC)
	SWBRANCH(#4.UI,L_9898:PC)
	SWBRANCH(#5.UI,L_9900:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_9884:
	BLOCK END
	BLOCK 6

L_9885:
	BLOCK END
	BLOCK 7

L_9887:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_9880:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_9889:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9892:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #4.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9891:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_9893:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_9894:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9891:
	BLOCK END
	BLOCK 14

L_9895:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_9880:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_9896:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #4.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #4.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_9880:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_9898:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #4.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #8.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #4.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ii~pi~$qpipipipir#__less$ii~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_9880:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_9900:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #4.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #C.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #8.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #4.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ii~pi~$qpipipipipir#__less$ii~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_9880:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_9902:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_9903:
	BLOCK END
	BLOCK 20

L_9882:
	BLOCK END
	BLOCK 21

L_9904:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #8.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #4.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_9909:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #4.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_9906:PC
	BLOCK END
	BLOCK 23

L_9905:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_9910:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_9911:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_9913:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9912:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_9914:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9915:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(EAX).I =   *(T70(EAX)).A.I
	___t:LINK(-16).I =   T71(EAX).I
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9919:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_9923:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_9916:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_9920:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(ECX).I =   *(T75(EAX)).A.I
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.I =   T76(ECX).I
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_9921:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_9922:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_9918:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_9938:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #4.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-16).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9916:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_9938:
	BLOCK END
	BLOCK 39

L_9917:
	BLOCK END
	BLOCK 40

L_9924:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-16).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(ECX).I =   *(T88(EAX)).A.I
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.I =   T89(ECX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_9926:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_9925:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9927:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #4.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_9880:PC
	BLOCK END
	BLOCK 44

L_9928:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_9925:
	BLOCK END
	BLOCK 46

L_9929:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_9930:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9931:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_9912:
	BLOCK END
	BLOCK 50

L_9932:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_9933:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_9934:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_9908:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #4.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_9906:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_9905:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_9907:
	BLOCK END
	BLOCK 56

L_9935:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_9936:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_9880:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ii~pi~$qpipir#__less$ii~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ii~pi~$qpipir#__less$ii~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_9942:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_9944:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_9948:
	GOTO	L_9947:PC
	BLOCK END
	BLOCK 5

L_9945:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_9949:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_9950:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_9951:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #2.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_9953:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_9973:PC)
	SWBRANCH(#0.UI,L_9955:PC)
	SWBRANCH(#1.UI,L_9957:PC)
	SWBRANCH(#2.UI,L_9959:PC)
	SWBRANCH(#3.UI,L_9966:PC)
	SWBRANCH(#4.UI,L_9968:PC)
	SWBRANCH(#5.UI,L_9970:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_9954:
	BLOCK END
	BLOCK 11

L_9955:
	BLOCK END
	BLOCK 12

L_9957:
	DBG BLOCK START
	GOTO	L_9943:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_9959:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_9962:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #4.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9961:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_9963:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_9964:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_9961:
	BLOCK END
	BLOCK 19

L_9965:
	DBG BLOCK END
	GOTO	L_9943:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_9966:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #4.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #4.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~:PC.UI
	PARMADJ	#10.N
	GOTO	L_9943:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_9968:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #4.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #8.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #4.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ii~pi~$qpipipipir#__less$ii~:PC.UI
	PARMADJ	#14.N
	GOTO	L_9943:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_9970:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #4.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #C.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #8.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #4.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ii~pi~$qpipipipipir#__less$ii~:PC.UI
	PARMADJ	#18.N
	GOTO	L_9943:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_9972:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_9973:
	BLOCK END
	BLOCK 25

L_9952:
	BLOCK END
	BLOCK 26

L_9974:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_9976:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9975:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_9977:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_9978:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ii~pi~$qpipir#__less$ii~:PC.UI
	PARMADJ	#C.N
	GOTO	L_9943:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_9979:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_9980:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_9975:
	BLOCK END
	BLOCK 34

L_9981:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #4.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_9982:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_9984:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_9983:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_9985:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_9986:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #2.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #2.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #2.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ii~pi~$qpipipipipir#__less$ii~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_9987:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_9989:
	DBG BLOCK END
	GOTO	L_9988:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_9990:
	BLOCK END
	BLOCK 44

L_9983:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_9991:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #2.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_9992:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_9993:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_9988:
	BLOCK END
	BLOCK 49

L_9994:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_9995:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_9997:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_9996:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_9998:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_9999:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_10003:
	GOTO	L_10002:PC
	BLOCK END
	BLOCK 56

L_10000:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_10004:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_10005:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_10007:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #4.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10006:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_10008:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_10009:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #4.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_10011:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #4.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10010:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_10012:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_10013:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_10017:
	GOTO	L_10016:PC
	BLOCK END
	BLOCK 68

L_10014:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_10018:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_10019:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_10021:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10020:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_10022:
	GOTO	L_9943:PC
	BLOCK END
	BLOCK 74

L_10023:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_10020:
	BLOCK END
	BLOCK 76

L_10024:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_10026:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10025:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_10027:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_10028:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #4.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_10015:PC
	BLOCK END
	BLOCK 81

L_10029:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_10030:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_10025:
	BLOCK END
	BLOCK 84

L_10031:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #4.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_10032:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_10033:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_10016:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_10014:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_10015:
	BLOCK END
	BLOCK 89

L_10034:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_10035:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_10036:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_10010:
	BLOCK END
	BLOCK 93

L_10037:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_10039:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10038:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_10040:
	GOTO	L_9943:PC
	BLOCK END
	BLOCK 97

L_10041:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_10038:
	BLOCK END
	BLOCK 99

L_10042:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_10046:
	GOTO	L_10045:PC
	BLOCK END
	BLOCK 101

L_10043:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_10047:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_10048:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_10052:
	GOTO	L_10051:PC
	BLOCK END
	BLOCK 105

L_10049:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_10053:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #4.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_10054:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_10051:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10049:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_10050:
	BLOCK END
	BLOCK 110

L_10055:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_10059:
	BLOCK END
	BLOCK 112

L_10056:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_10060:
	BLOCK END
	BLOCK 114

L_10061:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_10058:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #4.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10056:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_10057:
	BLOCK END
	BLOCK 117

L_10062:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_10064:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10063:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_10065:
; Line 4029:	                            break; 

	GOTO	L_10044:PC
	BLOCK END
	BLOCK 121

L_10066:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_10063:
	BLOCK END
	BLOCK 123

L_10067:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #4.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_10068:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_10069:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_10045:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_10043:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_10044:
	BLOCK END
	BLOCK 128

L_10070:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_9951:PC
	BLOCK END
	BLOCK 129

L_10071:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_10072:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_10006:
	BLOCK END
	BLOCK 132

L_10073:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_10075:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10074:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_10076:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_10077:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_10001:PC
	BLOCK END
	BLOCK 137

L_10078:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_10079:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_10074:
	BLOCK END
	BLOCK 140

L_10080:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_10081:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_10082:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_10002:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_10000:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_10001:
	BLOCK END
	BLOCK 145

L_10083:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_10084:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_10085:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_9996:
	BLOCK END
	BLOCK 149

L_10086:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #4.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_10088:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10087:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_10089:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_10090:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_10094:
	GOTO	L_10093:PC
	BLOCK END
	BLOCK 155

L_10091:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_10095:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_10096:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_10100:
	GOTO	L_10099:PC
	BLOCK END
	BLOCK 159

L_10097:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_10101:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #4.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_10102:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_10099:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10097:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_10098:
	BLOCK END
	BLOCK 164

L_10103:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_10107:
	BLOCK END
	BLOCK 166

L_10104:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_10108:
	BLOCK END
	BLOCK 168

L_10109:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_10106:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #4.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10104:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_10105:
	BLOCK END
	BLOCK 171

L_10110:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_10112:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10111:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_10113:
; Line 4065:	                    break; 

	GOTO	L_10092:PC
	BLOCK END
	BLOCK 175

L_10114:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_10111:
	BLOCK END
	BLOCK 177

L_10115:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_10117:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_10116:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_10118:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_10119:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_10116:
	BLOCK END
	BLOCK 183

L_10120:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #4.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_10121:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_10122:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_10093:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_10091:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_10092:
	BLOCK END
	BLOCK 188

L_10123:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_10124:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_10125:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_10087:
	BLOCK END
	BLOCK 192

L_10126:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_10128:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10127:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10127:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_10129:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_10130:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_10131:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_10132:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_10127:
	BLOCK END
	BLOCK 201

L_10133:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_10135:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_10134:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_10136:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_10137:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ii~pi~$qpipir#__less$ii~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_10139:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #4.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ii~pi~$qpipir#__less$ii~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10138:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_10140:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_10141:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_10143:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_10142:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_10144:
	GOTO	L_9943:PC
	BLOCK END
	BLOCK 213

L_10145:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_10142:
	BLOCK END
	BLOCK 215

L_10146:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_9947:PC
	BLOCK END
	BLOCK 216

L_10147:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_10149:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_10150:
	BLOCK END
	BLOCK 220

L_10138:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_10151:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_10153:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_10152:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_10154:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_10155:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #4.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_9947:PC
	BLOCK END
	BLOCK 226

L_10156:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_10157:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_10152:
	BLOCK END
	BLOCK 229

L_10158:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_10159:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_10160:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_10148:
	BLOCK END
	BLOCK 233

L_10161:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_10162:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_10163:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_10134:
	BLOCK END
	BLOCK 237

L_10164:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_10166:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #2.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #2.UI
	CONDGO	L_10165:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_10167:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_10168:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ii~pi~$qpipir#__less$ii~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #4.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_10169:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_10171:
	DBG BLOCK END
	GOTO	L_10170:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_10172:
	BLOCK END
	BLOCK 246

L_10165:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_10173:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #4.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ii~pi~$qpipir#__less$ii~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_10174:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_10175:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_10170:
	BLOCK END
	BLOCK 251

L_10176:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_10177:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_10178:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_9947:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_9945:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_9946:
	BLOCK END
	BLOCK 256

L_10179:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_10180:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_9943:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ii~pi~$qpipir#__less$ii~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$uiui~pui~$qpuipuir#__less$uiui~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_10185:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_10187:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_10189:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #2.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_10209:PC)
	SWBRANCH(#0.UI,L_10191:PC)
	SWBRANCH(#1.UI,L_10193:PC)
	SWBRANCH(#2.UI,L_10195:PC)
	SWBRANCH(#3.UI,L_10202:PC)
	SWBRANCH(#4.UI,L_10204:PC)
	SWBRANCH(#5.UI,L_10206:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_10190:
	BLOCK END
	BLOCK 6

L_10191:
	BLOCK END
	BLOCK 7

L_10193:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_10186:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_10195:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_10198:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #4.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10197:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_10199:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_10200:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_10197:
	BLOCK END
	BLOCK 14

L_10201:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_10186:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_10202:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #4.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #4.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_10186:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_10204:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #4.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #8.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #4.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$uiui~pui~$qpuipuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_10186:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_10206:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #4.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #C.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #8.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #4.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$uiui~pui~$qpuipuipuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_10186:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_10208:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_10209:
	BLOCK END
	BLOCK 20

L_10188:
	BLOCK END
	BLOCK 21

L_10210:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #8.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #4.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_10215:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #4.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_10212:PC
	BLOCK END
	BLOCK 23

L_10211:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_10216:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_10217:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_10219:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10218:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_10220:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_10221:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(EAX).UI =   *(T70(EAX)).A.UI
	___t:LINK(-16).UI =   T71(EAX).UI
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_10225:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_10229:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_10222:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_10226:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(ECX).UI =   *(T75(EAX)).A.UI
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.UI =   T76(ECX).UI
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_10227:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_10228:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_10224:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_10244:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #4.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-16).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10222:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_10244:
	BLOCK END
	BLOCK 39

L_10223:
	BLOCK END
	BLOCK 40

L_10230:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-16).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(ECX).UI =   *(T88(EAX)).A.UI
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.UI =   T89(ECX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_10232:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_10231:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_10233:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #4.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_10186:PC
	BLOCK END
	BLOCK 44

L_10234:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_10231:
	BLOCK END
	BLOCK 46

L_10235:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_10236:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_10237:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_10218:
	BLOCK END
	BLOCK 50

L_10238:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_10239:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_10240:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_10214:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #4.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_10212:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_10211:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_10213:
	BLOCK END
	BLOCK 56

L_10241:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_10242:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_10186:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$uiui~pui~$qpuipuir#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$uiui~pui~$qpuipuir#__less$uiui~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_10248:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_10250:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_10254:
	GOTO	L_10253:PC
	BLOCK END
	BLOCK 5

L_10251:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_10255:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_10256:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_10257:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #2.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_10259:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_10279:PC)
	SWBRANCH(#0.UI,L_10261:PC)
	SWBRANCH(#1.UI,L_10263:PC)
	SWBRANCH(#2.UI,L_10265:PC)
	SWBRANCH(#3.UI,L_10272:PC)
	SWBRANCH(#4.UI,L_10274:PC)
	SWBRANCH(#5.UI,L_10276:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_10260:
	BLOCK END
	BLOCK 11

L_10261:
	BLOCK END
	BLOCK 12

L_10263:
	DBG BLOCK START
	GOTO	L_10249:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_10265:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_10268:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #4.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10267:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_10269:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_10270:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_10267:
	BLOCK END
	BLOCK 19

L_10271:
	DBG BLOCK END
	GOTO	L_10249:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_10272:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #4.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #4.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#10.N
	GOTO	L_10249:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_10274:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #4.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #8.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #4.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$uiui~pui~$qpuipuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#14.N
	GOTO	L_10249:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_10276:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #4.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #C.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #8.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #4.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$uiui~pui~$qpuipuipuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#18.N
	GOTO	L_10249:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_10278:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_10279:
	BLOCK END
	BLOCK 25

L_10258:
	BLOCK END
	BLOCK 26

L_10280:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_10282:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_10281:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_10283:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_10284:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$uiui~pui~$qpuipuir#__less$uiui~:PC.UI
	PARMADJ	#C.N
	GOTO	L_10249:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_10285:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_10286:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_10281:
	BLOCK END
	BLOCK 34

L_10287:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #4.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_10288:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_10290:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_10289:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_10291:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_10292:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #2.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #2.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #2.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$uiui~pui~$qpuipuipuipuipuir#__less$uiui~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_10293:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_10295:
	DBG BLOCK END
	GOTO	L_10294:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_10296:
	BLOCK END
	BLOCK 44

L_10289:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_10297:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #2.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_10298:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_10299:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_10294:
	BLOCK END
	BLOCK 49

L_10300:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_10301:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_10303:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10302:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_10304:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_10305:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_10309:
	GOTO	L_10308:PC
	BLOCK END
	BLOCK 56

L_10306:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_10310:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_10311:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_10313:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #4.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10312:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_10314:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_10315:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #4.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_10317:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #4.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10316:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_10318:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_10319:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_10323:
	GOTO	L_10322:PC
	BLOCK END
	BLOCK 68

L_10320:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_10324:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_10325:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_10327:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10326:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_10328:
	GOTO	L_10249:PC
	BLOCK END
	BLOCK 74

L_10329:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_10326:
	BLOCK END
	BLOCK 76

L_10330:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_10332:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10331:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_10333:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_10334:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #4.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_10321:PC
	BLOCK END
	BLOCK 81

L_10335:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_10336:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_10331:
	BLOCK END
	BLOCK 84

L_10337:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #4.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_10338:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_10339:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_10322:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_10320:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_10321:
	BLOCK END
	BLOCK 89

L_10340:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_10341:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_10342:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_10316:
	BLOCK END
	BLOCK 93

L_10343:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_10345:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10344:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_10346:
	GOTO	L_10249:PC
	BLOCK END
	BLOCK 97

L_10347:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_10344:
	BLOCK END
	BLOCK 99

L_10348:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_10352:
	GOTO	L_10351:PC
	BLOCK END
	BLOCK 101

L_10349:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_10353:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_10354:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_10358:
	GOTO	L_10357:PC
	BLOCK END
	BLOCK 105

L_10355:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_10359:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #4.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_10360:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_10357:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10355:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_10356:
	BLOCK END
	BLOCK 110

L_10361:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_10365:
	BLOCK END
	BLOCK 112

L_10362:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_10366:
	BLOCK END
	BLOCK 114

L_10367:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_10364:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #4.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10362:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_10363:
	BLOCK END
	BLOCK 117

L_10368:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_10370:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10369:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_10371:
; Line 4029:	                            break; 

	GOTO	L_10350:PC
	BLOCK END
	BLOCK 121

L_10372:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_10369:
	BLOCK END
	BLOCK 123

L_10373:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #4.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_10374:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_10375:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_10351:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_10349:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_10350:
	BLOCK END
	BLOCK 128

L_10376:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_10257:PC
	BLOCK END
	BLOCK 129

L_10377:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_10378:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_10312:
	BLOCK END
	BLOCK 132

L_10379:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_10381:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10380:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_10382:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_10383:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_10307:PC
	BLOCK END
	BLOCK 137

L_10384:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_10385:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_10380:
	BLOCK END
	BLOCK 140

L_10386:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_10387:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_10388:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_10308:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_10306:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_10307:
	BLOCK END
	BLOCK 145

L_10389:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_10390:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_10391:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_10302:
	BLOCK END
	BLOCK 149

L_10392:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #4.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_10394:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10393:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_10395:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_10396:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_10400:
	GOTO	L_10399:PC
	BLOCK END
	BLOCK 155

L_10397:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_10401:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_10402:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_10406:
	GOTO	L_10405:PC
	BLOCK END
	BLOCK 159

L_10403:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_10407:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #4.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_10408:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_10405:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10403:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_10404:
	BLOCK END
	BLOCK 164

L_10409:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_10413:
	BLOCK END
	BLOCK 166

L_10410:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_10414:
	BLOCK END
	BLOCK 168

L_10415:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_10412:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #4.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10410:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_10411:
	BLOCK END
	BLOCK 171

L_10416:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_10418:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10417:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_10419:
; Line 4065:	                    break; 

	GOTO	L_10398:PC
	BLOCK END
	BLOCK 175

L_10420:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_10417:
	BLOCK END
	BLOCK 177

L_10421:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_10423:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_10422:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_10424:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_10425:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_10422:
	BLOCK END
	BLOCK 183

L_10426:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #4.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_10427:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_10428:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_10399:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_10397:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_10398:
	BLOCK END
	BLOCK 188

L_10429:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_10430:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_10431:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_10393:
	BLOCK END
	BLOCK 192

L_10432:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_10434:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10433:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10433:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_10435:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_10436:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_10437:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_10438:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_10433:
	BLOCK END
	BLOCK 201

L_10439:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_10441:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_10440:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_10442:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_10443:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$uiui~pui~$qpuipuir#__less$uiui~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_10445:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #4.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$uiui~pui~$qpuipuir#__less$uiui~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10444:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_10446:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_10447:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_10449:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_10448:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_10450:
	GOTO	L_10249:PC
	BLOCK END
	BLOCK 213

L_10451:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_10448:
	BLOCK END
	BLOCK 215

L_10452:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_10253:PC
	BLOCK END
	BLOCK 216

L_10453:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_10455:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_10456:
	BLOCK END
	BLOCK 220

L_10444:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_10457:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_10459:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_10458:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_10460:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_10461:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #4.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_10253:PC
	BLOCK END
	BLOCK 226

L_10462:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_10463:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_10458:
	BLOCK END
	BLOCK 229

L_10464:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_10465:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_10466:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_10454:
	BLOCK END
	BLOCK 233

L_10467:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_10468:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_10469:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_10440:
	BLOCK END
	BLOCK 237

L_10470:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_10472:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #2.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #2.UI
	CONDGO	L_10471:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_10473:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_10474:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$uiui~pui~$qpuipuir#__less$uiui~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #4.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_10475:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_10477:
	DBG BLOCK END
	GOTO	L_10476:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_10478:
	BLOCK END
	BLOCK 246

L_10471:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_10479:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #4.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$uiui~pui~$qpuipuir#__less$uiui~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_10480:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_10481:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_10476:
	BLOCK END
	BLOCK 251

L_10482:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_10483:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_10484:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_10253:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_10251:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_10252:
	BLOCK END
	BLOCK 256

L_10485:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_10486:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_10249:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$uiui~pui~$qpuipuir#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ll~pl~$qplplr#__less$ll~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_10491:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_10493:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_10495:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #2.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_10515:PC)
	SWBRANCH(#0.UI,L_10497:PC)
	SWBRANCH(#1.UI,L_10499:PC)
	SWBRANCH(#2.UI,L_10501:PC)
	SWBRANCH(#3.UI,L_10508:PC)
	SWBRANCH(#4.UI,L_10510:PC)
	SWBRANCH(#5.UI,L_10512:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_10496:
	BLOCK END
	BLOCK 6

L_10497:
	BLOCK END
	BLOCK 7

L_10499:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_10492:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_10501:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_10504:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #4.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10503:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_10505:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_10506:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_10503:
	BLOCK END
	BLOCK 14

L_10507:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_10492:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_10508:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #4.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #4.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_10492:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_10510:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #4.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #8.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #4.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ll~pl~$qplplplplr#__less$ll~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_10492:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_10512:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #4.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #C.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #8.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #4.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ll~pl~$qplplplplplr#__less$ll~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_10492:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_10514:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_10515:
	BLOCK END
	BLOCK 20

L_10494:
	BLOCK END
	BLOCK 21

L_10516:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #8.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #4.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_10521:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #4.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_10518:PC
	BLOCK END
	BLOCK 23

L_10517:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_10522:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_10523:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_10525:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10524:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_10526:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_10527:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(EAX).L =   *(T70(EAX)).A.L
	___t:LINK(-16).L =   T71(EAX).L
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_10531:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_10535:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_10528:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_10532:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(ECX).L =   *(T75(EAX)).A.L
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.L =   T76(ECX).L
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_10533:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_10534:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_10530:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_10550:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #4.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-16).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10528:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_10550:
	BLOCK END
	BLOCK 39

L_10529:
	BLOCK END
	BLOCK 40

L_10536:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-16).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(ECX).L =   *(T88(EAX)).A.L
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.L =   T89(ECX).L
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_10538:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_10537:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_10539:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #4.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_10492:PC
	BLOCK END
	BLOCK 44

L_10540:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_10537:
	BLOCK END
	BLOCK 46

L_10541:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_10542:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_10543:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_10524:
	BLOCK END
	BLOCK 50

L_10544:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_10545:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_10546:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_10520:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #4.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_10518:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_10517:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_10519:
	BLOCK END
	BLOCK 56

L_10547:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_10548:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_10492:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ll~pl~$qplplr#__less$ll~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ll~pl~$qplplr#__less$ll~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_10554:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_10556:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_10560:
	GOTO	L_10559:PC
	BLOCK END
	BLOCK 5

L_10557:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_10561:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_10562:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_10563:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #2.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_10565:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_10585:PC)
	SWBRANCH(#0.UI,L_10567:PC)
	SWBRANCH(#1.UI,L_10569:PC)
	SWBRANCH(#2.UI,L_10571:PC)
	SWBRANCH(#3.UI,L_10578:PC)
	SWBRANCH(#4.UI,L_10580:PC)
	SWBRANCH(#5.UI,L_10582:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_10566:
	BLOCK END
	BLOCK 11

L_10567:
	BLOCK END
	BLOCK 12

L_10569:
	DBG BLOCK START
	GOTO	L_10555:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_10571:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_10574:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #4.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10573:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_10575:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_10576:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_10573:
	BLOCK END
	BLOCK 19

L_10577:
	DBG BLOCK END
	GOTO	L_10555:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_10578:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #4.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #4.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~:PC.UI
	PARMADJ	#10.N
	GOTO	L_10555:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_10580:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #4.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #8.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #4.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ll~pl~$qplplplplr#__less$ll~:PC.UI
	PARMADJ	#14.N
	GOTO	L_10555:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_10582:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #4.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #C.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #8.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #4.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ll~pl~$qplplplplplr#__less$ll~:PC.UI
	PARMADJ	#18.N
	GOTO	L_10555:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_10584:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_10585:
	BLOCK END
	BLOCK 25

L_10564:
	BLOCK END
	BLOCK 26

L_10586:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_10588:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_10587:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_10589:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_10590:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ll~pl~$qplplr#__less$ll~:PC.UI
	PARMADJ	#C.N
	GOTO	L_10555:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_10591:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_10592:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_10587:
	BLOCK END
	BLOCK 34

L_10593:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #4.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_10594:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_10596:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_10595:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_10597:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_10598:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #2.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #2.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #2.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ll~pl~$qplplplplplr#__less$ll~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_10599:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_10601:
	DBG BLOCK END
	GOTO	L_10600:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_10602:
	BLOCK END
	BLOCK 44

L_10595:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_10603:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #2.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_10604:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_10605:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_10600:
	BLOCK END
	BLOCK 49

L_10606:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_10607:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_10609:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10608:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_10610:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_10611:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_10615:
	GOTO	L_10614:PC
	BLOCK END
	BLOCK 56

L_10612:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_10616:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_10617:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_10619:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #4.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10618:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_10620:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_10621:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #4.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_10623:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #4.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10622:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_10624:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_10625:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_10629:
	GOTO	L_10628:PC
	BLOCK END
	BLOCK 68

L_10626:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_10630:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_10631:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_10633:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10632:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_10634:
	GOTO	L_10555:PC
	BLOCK END
	BLOCK 74

L_10635:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_10632:
	BLOCK END
	BLOCK 76

L_10636:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_10638:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10637:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_10639:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_10640:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #4.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_10627:PC
	BLOCK END
	BLOCK 81

L_10641:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_10642:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_10637:
	BLOCK END
	BLOCK 84

L_10643:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #4.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_10644:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_10645:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_10628:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_10626:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_10627:
	BLOCK END
	BLOCK 89

L_10646:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_10647:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_10648:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_10622:
	BLOCK END
	BLOCK 93

L_10649:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_10651:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10650:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_10652:
	GOTO	L_10555:PC
	BLOCK END
	BLOCK 97

L_10653:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_10650:
	BLOCK END
	BLOCK 99

L_10654:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_10658:
	GOTO	L_10657:PC
	BLOCK END
	BLOCK 101

L_10655:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_10659:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_10660:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_10664:
	GOTO	L_10663:PC
	BLOCK END
	BLOCK 105

L_10661:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_10665:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #4.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_10666:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_10663:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10661:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_10662:
	BLOCK END
	BLOCK 110

L_10667:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_10671:
	BLOCK END
	BLOCK 112

L_10668:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_10672:
	BLOCK END
	BLOCK 114

L_10673:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_10670:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #4.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10668:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_10669:
	BLOCK END
	BLOCK 117

L_10674:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_10676:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10675:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_10677:
; Line 4029:	                            break; 

	GOTO	L_10656:PC
	BLOCK END
	BLOCK 121

L_10678:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_10675:
	BLOCK END
	BLOCK 123

L_10679:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #4.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_10680:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_10681:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_10657:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_10655:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_10656:
	BLOCK END
	BLOCK 128

L_10682:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_10563:PC
	BLOCK END
	BLOCK 129

L_10683:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_10684:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_10618:
	BLOCK END
	BLOCK 132

L_10685:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_10687:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10686:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_10688:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_10689:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_10613:PC
	BLOCK END
	BLOCK 137

L_10690:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_10691:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_10686:
	BLOCK END
	BLOCK 140

L_10692:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_10693:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_10694:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_10614:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_10612:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_10613:
	BLOCK END
	BLOCK 145

L_10695:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_10696:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_10697:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_10608:
	BLOCK END
	BLOCK 149

L_10698:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #4.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_10700:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10699:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_10701:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_10702:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_10706:
	GOTO	L_10705:PC
	BLOCK END
	BLOCK 155

L_10703:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_10707:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_10708:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_10712:
	GOTO	L_10711:PC
	BLOCK END
	BLOCK 159

L_10709:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_10713:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #4.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_10714:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_10711:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10709:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_10710:
	BLOCK END
	BLOCK 164

L_10715:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_10719:
	BLOCK END
	BLOCK 166

L_10716:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_10720:
	BLOCK END
	BLOCK 168

L_10721:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_10718:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #4.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10716:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_10717:
	BLOCK END
	BLOCK 171

L_10722:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_10724:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10723:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_10725:
; Line 4065:	                    break; 

	GOTO	L_10704:PC
	BLOCK END
	BLOCK 175

L_10726:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_10723:
	BLOCK END
	BLOCK 177

L_10727:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_10729:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_10728:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_10730:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_10731:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_10728:
	BLOCK END
	BLOCK 183

L_10732:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #4.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_10733:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_10734:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_10705:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_10703:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_10704:
	BLOCK END
	BLOCK 188

L_10735:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_10736:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_10737:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_10699:
	BLOCK END
	BLOCK 192

L_10738:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_10740:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10739:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10739:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_10741:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_10742:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_10743:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_10744:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_10739:
	BLOCK END
	BLOCK 201

L_10745:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_10747:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_10746:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_10748:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_10749:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ll~pl~$qplplr#__less$ll~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_10751:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #4.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ll~pl~$qplplr#__less$ll~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10750:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_10752:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_10753:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_10755:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_10754:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_10756:
	GOTO	L_10555:PC
	BLOCK END
	BLOCK 213

L_10757:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_10754:
	BLOCK END
	BLOCK 215

L_10758:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_10559:PC
	BLOCK END
	BLOCK 216

L_10759:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_10761:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_10762:
	BLOCK END
	BLOCK 220

L_10750:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_10763:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_10765:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_10764:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_10766:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_10767:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #4.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_10559:PC
	BLOCK END
	BLOCK 226

L_10768:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_10769:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_10764:
	BLOCK END
	BLOCK 229

L_10770:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_10771:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_10772:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_10760:
	BLOCK END
	BLOCK 233

L_10773:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_10774:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_10775:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_10746:
	BLOCK END
	BLOCK 237

L_10776:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_10778:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #2.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #2.UI
	CONDGO	L_10777:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_10779:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_10780:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ll~pl~$qplplr#__less$ll~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #4.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_10781:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_10783:
	DBG BLOCK END
	GOTO	L_10782:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_10784:
	BLOCK END
	BLOCK 246

L_10777:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_10785:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #4.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ll~pl~$qplplr#__less$ll~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_10786:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_10787:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_10782:
	BLOCK END
	BLOCK 251

L_10788:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_10789:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_10790:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_10559:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_10557:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_10558:
	BLOCK END
	BLOCK 256

L_10791:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_10792:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_10555:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ll~pl~$qplplr#__less$ll~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ulul~pul~$qpulpulr#__less$ulul~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_10797:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_10799:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_10801:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #2.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_10821:PC)
	SWBRANCH(#0.UI,L_10803:PC)
	SWBRANCH(#1.UI,L_10805:PC)
	SWBRANCH(#2.UI,L_10807:PC)
	SWBRANCH(#3.UI,L_10814:PC)
	SWBRANCH(#4.UI,L_10816:PC)
	SWBRANCH(#5.UI,L_10818:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_10802:
	BLOCK END
	BLOCK 6

L_10803:
	BLOCK END
	BLOCK 7

L_10805:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_10798:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_10807:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_10810:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #4.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10809:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_10811:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_10812:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_10809:
	BLOCK END
	BLOCK 14

L_10813:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_10798:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_10814:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #4.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #4.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_10798:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_10816:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #4.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #8.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #4.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ulul~pul~$qpulpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_10798:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_10818:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #4.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #C.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #8.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #4.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ulul~pul~$qpulpulpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_10798:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_10820:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_10821:
	BLOCK END
	BLOCK 20

L_10800:
	BLOCK END
	BLOCK 21

L_10822:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #8.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #4.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_10827:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #4.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_10824:PC
	BLOCK END
	BLOCK 23

L_10823:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_10828:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_10829:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_10831:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10830:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_10832:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_10833:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(EAX).UL =   *(T70(EAX)).A.UL
	___t:LINK(-16).UL =   T71(EAX).UL
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_10837:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_10841:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_10834:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_10838:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(ECX).UL =   *(T75(EAX)).A.UL
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.UL =   T76(ECX).UL
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_10839:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_10840:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_10836:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_10856:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #4.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-16).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10834:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_10856:
	BLOCK END
	BLOCK 39

L_10835:
	BLOCK END
	BLOCK 40

L_10842:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-16).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(ECX).UL =   *(T88(EAX)).A.UL
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.UL =   T89(ECX).UL
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_10844:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_10843:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_10845:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #4.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_10798:PC
	BLOCK END
	BLOCK 44

L_10846:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_10843:
	BLOCK END
	BLOCK 46

L_10847:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_10848:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_10849:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_10830:
	BLOCK END
	BLOCK 50

L_10850:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_10851:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_10852:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_10826:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #4.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_10824:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_10823:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_10825:
	BLOCK END
	BLOCK 56

L_10853:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_10854:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_10798:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ulul~pul~$qpulpulr#__less$ulul~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ulul~pul~$qpulpulr#__less$ulul~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_10860:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_10862:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_10866:
	GOTO	L_10865:PC
	BLOCK END
	BLOCK 5

L_10863:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_10867:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_10868:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_10869:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #2.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_10871:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_10891:PC)
	SWBRANCH(#0.UI,L_10873:PC)
	SWBRANCH(#1.UI,L_10875:PC)
	SWBRANCH(#2.UI,L_10877:PC)
	SWBRANCH(#3.UI,L_10884:PC)
	SWBRANCH(#4.UI,L_10886:PC)
	SWBRANCH(#5.UI,L_10888:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_10872:
	BLOCK END
	BLOCK 11

L_10873:
	BLOCK END
	BLOCK 12

L_10875:
	DBG BLOCK START
	GOTO	L_10861:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_10877:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_10880:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #4.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10879:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_10881:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_10882:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_10879:
	BLOCK END
	BLOCK 19

L_10883:
	DBG BLOCK END
	GOTO	L_10861:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_10884:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #4.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #4.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#10.N
	GOTO	L_10861:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_10886:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #4.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #8.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #4.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ulul~pul~$qpulpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#14.N
	GOTO	L_10861:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_10888:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #4.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #C.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #8.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #4.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ulul~pul~$qpulpulpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#18.N
	GOTO	L_10861:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_10890:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_10891:
	BLOCK END
	BLOCK 25

L_10870:
	BLOCK END
	BLOCK 26

L_10892:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_10894:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_10893:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_10895:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_10896:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ulul~pul~$qpulpulr#__less$ulul~:PC.UI
	PARMADJ	#C.N
	GOTO	L_10861:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_10897:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_10898:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_10893:
	BLOCK END
	BLOCK 34

L_10899:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #4.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_10900:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_10902:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_10901:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_10903:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_10904:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #2.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #2.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #2.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ulul~pul~$qpulpulpulpulpulr#__less$ulul~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_10905:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_10907:
	DBG BLOCK END
	GOTO	L_10906:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_10908:
	BLOCK END
	BLOCK 44

L_10901:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_10909:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #2.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_10910:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_10911:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_10906:
	BLOCK END
	BLOCK 49

L_10912:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_10913:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_10915:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10914:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_10916:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_10917:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_10921:
	GOTO	L_10920:PC
	BLOCK END
	BLOCK 56

L_10918:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_10922:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_10923:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_10925:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #4.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10924:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_10926:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_10927:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #4.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_10929:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #4.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10928:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_10930:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_10931:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_10935:
	GOTO	L_10934:PC
	BLOCK END
	BLOCK 68

L_10932:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_10936:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_10937:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_10939:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10938:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_10940:
	GOTO	L_10861:PC
	BLOCK END
	BLOCK 74

L_10941:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_10938:
	BLOCK END
	BLOCK 76

L_10942:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_10944:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10943:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_10945:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_10946:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #4.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_10933:PC
	BLOCK END
	BLOCK 81

L_10947:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_10948:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_10943:
	BLOCK END
	BLOCK 84

L_10949:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #4.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_10950:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_10951:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_10934:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_10932:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_10933:
	BLOCK END
	BLOCK 89

L_10952:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_10953:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_10954:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_10928:
	BLOCK END
	BLOCK 93

L_10955:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_10957:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10956:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_10958:
	GOTO	L_10861:PC
	BLOCK END
	BLOCK 97

L_10959:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_10956:
	BLOCK END
	BLOCK 99

L_10960:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_10964:
	GOTO	L_10963:PC
	BLOCK END
	BLOCK 101

L_10961:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_10965:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_10966:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_10970:
	GOTO	L_10969:PC
	BLOCK END
	BLOCK 105

L_10967:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_10971:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #4.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_10972:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_10969:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10967:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_10968:
	BLOCK END
	BLOCK 110

L_10973:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_10977:
	BLOCK END
	BLOCK 112

L_10974:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_10978:
	BLOCK END
	BLOCK 114

L_10979:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_10976:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #4.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10974:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_10975:
	BLOCK END
	BLOCK 117

L_10980:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_10982:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_10981:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_10983:
; Line 4029:	                            break; 

	GOTO	L_10962:PC
	BLOCK END
	BLOCK 121

L_10984:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_10981:
	BLOCK END
	BLOCK 123

L_10985:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #4.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_10986:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_10987:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_10963:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_10961:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_10962:
	BLOCK END
	BLOCK 128

L_10988:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_10869:PC
	BLOCK END
	BLOCK 129

L_10989:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_10990:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_10924:
	BLOCK END
	BLOCK 132

L_10991:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_10993:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_10992:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_10994:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_10995:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_10919:PC
	BLOCK END
	BLOCK 137

L_10996:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_10997:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_10992:
	BLOCK END
	BLOCK 140

L_10998:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_10999:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_11000:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_10920:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_10918:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_10919:
	BLOCK END
	BLOCK 145

L_11001:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_11002:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_11003:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_10914:
	BLOCK END
	BLOCK 149

L_11004:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #4.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_11006:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11005:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_11007:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_11008:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_11012:
	GOTO	L_11011:PC
	BLOCK END
	BLOCK 155

L_11009:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_11013:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_11014:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_11018:
	GOTO	L_11017:PC
	BLOCK END
	BLOCK 159

L_11015:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_11019:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #4.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_11020:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_11017:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11015:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_11016:
	BLOCK END
	BLOCK 164

L_11021:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_11025:
	BLOCK END
	BLOCK 166

L_11022:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_11026:
	BLOCK END
	BLOCK 168

L_11027:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_11024:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #4.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11022:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_11023:
	BLOCK END
	BLOCK 171

L_11028:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_11030:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11029:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_11031:
; Line 4065:	                    break; 

	GOTO	L_11010:PC
	BLOCK END
	BLOCK 175

L_11032:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_11029:
	BLOCK END
	BLOCK 177

L_11033:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_11035:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_11034:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_11036:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_11037:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_11034:
	BLOCK END
	BLOCK 183

L_11038:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #4.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_11039:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_11040:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_11011:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_11009:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_11010:
	BLOCK END
	BLOCK 188

L_11041:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_11042:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_11043:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_11005:
	BLOCK END
	BLOCK 192

L_11044:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_11046:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11045:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11045:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_11047:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_11048:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_11049:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_11050:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_11045:
	BLOCK END
	BLOCK 201

L_11051:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_11053:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_11052:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_11054:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_11055:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ulul~pul~$qpulpulr#__less$ulul~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_11057:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #4.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ulul~pul~$qpulpulr#__less$ulul~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11056:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_11058:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_11059:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_11061:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11060:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_11062:
	GOTO	L_10861:PC
	BLOCK END
	BLOCK 213

L_11063:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_11060:
	BLOCK END
	BLOCK 215

L_11064:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_10865:PC
	BLOCK END
	BLOCK 216

L_11065:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_11067:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_11068:
	BLOCK END
	BLOCK 220

L_11056:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_11069:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_11071:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11070:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_11072:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_11073:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #4.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_10865:PC
	BLOCK END
	BLOCK 226

L_11074:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_11075:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_11070:
	BLOCK END
	BLOCK 229

L_11076:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_11077:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_11078:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_11066:
	BLOCK END
	BLOCK 233

L_11079:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_11080:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_11081:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_11052:
	BLOCK END
	BLOCK 237

L_11082:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_11084:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #2.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #2.UI
	CONDGO	L_11083:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_11085:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_11086:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ulul~pul~$qpulpulr#__less$ulul~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #4.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_11087:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_11089:
	DBG BLOCK END
	GOTO	L_11088:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_11090:
	BLOCK END
	BLOCK 246

L_11083:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_11091:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #4.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ulul~pul~$qpulpulr#__less$ulul~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_11092:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_11093:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_11088:
	BLOCK END
	BLOCK 251

L_11094:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_11095:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_11096:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_10865:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_10863:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_10864:
	BLOCK END
	BLOCK 256

L_11097:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_11098:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_10861:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ulul~pul~$qpulpulr#__less$ulul~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$LL~pL~$qpLpLr#__less$LL~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#1C.UI
	BLOCK END
	BLOCK 2

L_11103:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_11105:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11107:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #3.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_11127:PC)
	SWBRANCH(#0.UI,L_11109:PC)
	SWBRANCH(#1.UI,L_11111:PC)
	SWBRANCH(#2.UI,L_11113:PC)
	SWBRANCH(#3.UI,L_11120:PC)
	SWBRANCH(#4.UI,L_11122:PC)
	SWBRANCH(#5.UI,L_11124:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_11108:
	BLOCK END
	BLOCK 6

L_11109:
	BLOCK END
	BLOCK 7

L_11111:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_11104:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_11113:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_11116:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #8.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11115:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_11117:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_11118:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_11115:
	BLOCK END
	BLOCK 14

L_11119:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_11104:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_11120:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #8.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #8.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_11104:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_11122:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #8.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #10.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #8.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$LL~pL~$qpLpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_11104:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_11124:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #8.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #18.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #10.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #8.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$LL~pL~$qpLpLpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_11104:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_11126:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_11127:
	BLOCK END
	BLOCK 20

L_11106:
	BLOCK END
	BLOCK 21

L_11128:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #10.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #8.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_11133:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #8.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_11130:PC
	BLOCK END
	BLOCK 23

L_11129:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_11134:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_11135:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_11137:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11136:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_11138:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_11139:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(EDX:EAX).LL =   *(T70(EAX)).A.LL
	___t:LINK(-24).LL =   T71(EDX:EAX).LL
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-28).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_11143:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_11147:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_11140:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_11144:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-28).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(EDX:ECX).LL =   *(T75(EAX)).A.LL
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.LL =   T76(EDX:ECX).LL
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-28).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_11145:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_11146:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_11142:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_11162:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-28).A
	T82(EAX).A = T81(EAX).A - #8.A
	___k:LINK(-28).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-28).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-24).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11140:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_11162:
	BLOCK END
	BLOCK 39

L_11141:
	BLOCK END
	BLOCK 40

L_11148:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-24).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(EDX:ECX).LL =   *(T88(EAX)).A.LL
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.LL =   T89(EDX:ECX).LL
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_11150:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_11149:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_11151:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #8.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_11104:PC
	BLOCK END
	BLOCK 44

L_11152:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_11149:
	BLOCK END
	BLOCK 46

L_11153:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_11154:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_11155:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_11136:
	BLOCK END
	BLOCK 50

L_11156:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_11157:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_11158:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_11132:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #8.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_11130:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_11129:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_11131:
	BLOCK END
	BLOCK 56

L_11159:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_11160:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_11104:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$LL~pL~$qpLpLr#__less$LL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$LL~pL~$qpLpLr#__less$LL~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_11166:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_11168:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11172:
	GOTO	L_11171:PC
	BLOCK END
	BLOCK 5

L_11169:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_11173:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_11174:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_11175:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #3.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_11177:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_11197:PC)
	SWBRANCH(#0.UI,L_11179:PC)
	SWBRANCH(#1.UI,L_11181:PC)
	SWBRANCH(#2.UI,L_11183:PC)
	SWBRANCH(#3.UI,L_11190:PC)
	SWBRANCH(#4.UI,L_11192:PC)
	SWBRANCH(#5.UI,L_11194:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_11178:
	BLOCK END
	BLOCK 11

L_11179:
	BLOCK END
	BLOCK 12

L_11181:
	DBG BLOCK START
	GOTO	L_11167:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_11183:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_11186:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #8.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11185:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_11187:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_11188:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_11185:
	BLOCK END
	BLOCK 19

L_11189:
	DBG BLOCK END
	GOTO	L_11167:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_11190:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #8.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #8.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#10.N
	GOTO	L_11167:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_11192:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #8.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #10.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #8.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$LL~pL~$qpLpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#14.N
	GOTO	L_11167:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_11194:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #8.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #18.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #10.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #8.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$LL~pL~$qpLpLpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#18.N
	GOTO	L_11167:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_11196:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_11197:
	BLOCK END
	BLOCK 25

L_11176:
	BLOCK END
	BLOCK 26

L_11198:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_11200:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_11199:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_11201:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_11202:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$LL~pL~$qpLpLr#__less$LL~:PC.UI
	PARMADJ	#C.N
	GOTO	L_11167:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_11203:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_11204:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_11199:
	BLOCK END
	BLOCK 34

L_11205:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #8.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_11206:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_11208:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_11207:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_11209:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_11210:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #3.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #3.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #3.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$LL~pL~$qpLpLpLpLpLr#__less$LL~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_11211:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_11213:
	DBG BLOCK END
	GOTO	L_11212:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_11214:
	BLOCK END
	BLOCK 44

L_11207:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_11215:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #3.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_11216:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_11217:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_11212:
	BLOCK END
	BLOCK 49

L_11218:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_11219:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_11221:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11220:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_11222:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_11223:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_11227:
	GOTO	L_11226:PC
	BLOCK END
	BLOCK 56

L_11224:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_11228:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_11229:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_11231:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #8.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11230:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_11232:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_11233:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #8.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_11235:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #8.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11234:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_11236:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_11237:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_11241:
	GOTO	L_11240:PC
	BLOCK END
	BLOCK 68

L_11238:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_11242:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_11243:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_11245:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11244:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_11246:
	GOTO	L_11167:PC
	BLOCK END
	BLOCK 74

L_11247:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_11244:
	BLOCK END
	BLOCK 76

L_11248:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_11250:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11249:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_11251:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_11252:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #8.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_11239:PC
	BLOCK END
	BLOCK 81

L_11253:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_11254:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_11249:
	BLOCK END
	BLOCK 84

L_11255:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #8.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_11256:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_11257:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_11240:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_11238:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_11239:
	BLOCK END
	BLOCK 89

L_11258:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_11259:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_11260:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_11234:
	BLOCK END
	BLOCK 93

L_11261:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_11263:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11262:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_11264:
	GOTO	L_11167:PC
	BLOCK END
	BLOCK 97

L_11265:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_11262:
	BLOCK END
	BLOCK 99

L_11266:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_11270:
	GOTO	L_11269:PC
	BLOCK END
	BLOCK 101

L_11267:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_11271:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_11272:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_11276:
	GOTO	L_11275:PC
	BLOCK END
	BLOCK 105

L_11273:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_11277:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #8.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_11278:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_11275:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11273:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_11274:
	BLOCK END
	BLOCK 110

L_11279:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_11283:
	BLOCK END
	BLOCK 112

L_11280:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_11284:
	BLOCK END
	BLOCK 114

L_11285:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_11282:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #8.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11280:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_11281:
	BLOCK END
	BLOCK 117

L_11286:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_11288:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11287:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_11289:
; Line 4029:	                            break; 

	GOTO	L_11268:PC
	BLOCK END
	BLOCK 121

L_11290:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_11287:
	BLOCK END
	BLOCK 123

L_11291:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #8.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_11292:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_11293:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_11269:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_11267:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_11268:
	BLOCK END
	BLOCK 128

L_11294:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_11175:PC
	BLOCK END
	BLOCK 129

L_11295:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_11296:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_11230:
	BLOCK END
	BLOCK 132

L_11297:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_11299:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11298:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_11300:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_11301:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_11225:PC
	BLOCK END
	BLOCK 137

L_11302:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_11303:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_11298:
	BLOCK END
	BLOCK 140

L_11304:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_11305:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_11306:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_11226:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_11224:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_11225:
	BLOCK END
	BLOCK 145

L_11307:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_11308:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_11309:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_11220:
	BLOCK END
	BLOCK 149

L_11310:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #8.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_11312:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11311:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_11313:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_11314:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_11318:
	GOTO	L_11317:PC
	BLOCK END
	BLOCK 155

L_11315:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_11319:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_11320:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_11324:
	GOTO	L_11323:PC
	BLOCK END
	BLOCK 159

L_11321:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_11325:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #8.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_11326:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_11323:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11321:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_11322:
	BLOCK END
	BLOCK 164

L_11327:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_11331:
	BLOCK END
	BLOCK 166

L_11328:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_11332:
	BLOCK END
	BLOCK 168

L_11333:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_11330:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #8.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11328:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_11329:
	BLOCK END
	BLOCK 171

L_11334:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_11336:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11335:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_11337:
; Line 4065:	                    break; 

	GOTO	L_11316:PC
	BLOCK END
	BLOCK 175

L_11338:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_11335:
	BLOCK END
	BLOCK 177

L_11339:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_11341:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_11340:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_11342:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_11343:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_11340:
	BLOCK END
	BLOCK 183

L_11344:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #8.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_11345:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_11346:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_11317:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_11315:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_11316:
	BLOCK END
	BLOCK 188

L_11347:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_11348:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_11349:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_11311:
	BLOCK END
	BLOCK 192

L_11350:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_11352:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11351:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11351:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_11353:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_11354:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_11355:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_11356:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_11351:
	BLOCK END
	BLOCK 201

L_11357:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_11359:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_11358:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_11360:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_11361:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$LL~pL~$qpLpLr#__less$LL~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_11363:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #8.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$LL~pL~$qpLpLr#__less$LL~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11362:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_11364:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_11365:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_11367:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11366:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_11368:
	GOTO	L_11167:PC
	BLOCK END
	BLOCK 213

L_11369:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_11366:
	BLOCK END
	BLOCK 215

L_11370:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_11171:PC
	BLOCK END
	BLOCK 216

L_11371:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_11373:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_11374:
	BLOCK END
	BLOCK 220

L_11362:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_11375:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_11377:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11376:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_11378:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_11379:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #8.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_11171:PC
	BLOCK END
	BLOCK 226

L_11380:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_11381:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_11376:
	BLOCK END
	BLOCK 229

L_11382:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_11383:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_11384:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_11372:
	BLOCK END
	BLOCK 233

L_11385:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_11386:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_11387:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_11358:
	BLOCK END
	BLOCK 237

L_11388:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_11390:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #3.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #3.UI
	CONDGO	L_11389:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_11391:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_11392:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$LL~pL~$qpLpLr#__less$LL~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #8.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_11393:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_11395:
	DBG BLOCK END
	GOTO	L_11394:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_11396:
	BLOCK END
	BLOCK 246

L_11389:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_11397:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #8.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$LL~pL~$qpLpLr#__less$LL~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_11398:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_11399:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_11394:
	BLOCK END
	BLOCK 251

L_11400:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_11401:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_11402:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_11171:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_11169:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_11170:
	BLOCK END
	BLOCK 256

L_11403:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_11404:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_11167:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$LL~pL~$qpLpLr#__less$LL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#1C.UI
	BLOCK END
	BLOCK 2

L_11409:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_11411:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11413:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #3.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_11433:PC)
	SWBRANCH(#0.UI,L_11415:PC)
	SWBRANCH(#1.UI,L_11417:PC)
	SWBRANCH(#2.UI,L_11419:PC)
	SWBRANCH(#3.UI,L_11426:PC)
	SWBRANCH(#4.UI,L_11428:PC)
	SWBRANCH(#5.UI,L_11430:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_11414:
	BLOCK END
	BLOCK 6

L_11415:
	BLOCK END
	BLOCK 7

L_11417:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_11410:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_11419:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_11422:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #8.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11421:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_11423:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_11424:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_11421:
	BLOCK END
	BLOCK 14

L_11425:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_11410:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_11426:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #8.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #8.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_11410:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_11428:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #8.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #10.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #8.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$uLuL~puL~$qpuLpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_11410:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_11430:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #8.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #18.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #10.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #8.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$uLuL~puL~$qpuLpuLpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_11410:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_11432:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_11433:
	BLOCK END
	BLOCK 20

L_11412:
	BLOCK END
	BLOCK 21

L_11434:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #10.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #8.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_11439:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #8.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_11436:PC
	BLOCK END
	BLOCK 23

L_11435:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_11440:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_11441:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_11443:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11442:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_11444:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_11445:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(EDX:EAX).ULL =   *(T70(EAX)).A.ULL
	___t:LINK(-24).ULL =   T71(EDX:EAX).ULL
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-28).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_11449:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_11453:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_11446:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_11450:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-28).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(EDX:ECX).ULL =   *(T75(EAX)).A.ULL
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.ULL =   T76(EDX:ECX).ULL
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-28).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_11451:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_11452:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_11448:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_11468:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-28).A
	T82(EAX).A = T81(EAX).A - #8.A
	___k:LINK(-28).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-28).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-24).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11446:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_11468:
	BLOCK END
	BLOCK 39

L_11447:
	BLOCK END
	BLOCK 40

L_11454:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-24).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(EDX:ECX).ULL =   *(T88(EAX)).A.ULL
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.ULL =   T89(EDX:ECX).ULL
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_11456:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_11455:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_11457:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #8.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_11410:PC
	BLOCK END
	BLOCK 44

L_11458:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_11455:
	BLOCK END
	BLOCK 46

L_11459:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_11460:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_11461:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_11442:
	BLOCK END
	BLOCK 50

L_11462:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_11463:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_11464:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_11438:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #8.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_11436:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_11435:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_11437:
	BLOCK END
	BLOCK 56

L_11465:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_11466:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_11410:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_11472:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_11474:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11478:
	GOTO	L_11477:PC
	BLOCK END
	BLOCK 5

L_11475:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_11479:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_11480:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_11481:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #3.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_11483:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_11503:PC)
	SWBRANCH(#0.UI,L_11485:PC)
	SWBRANCH(#1.UI,L_11487:PC)
	SWBRANCH(#2.UI,L_11489:PC)
	SWBRANCH(#3.UI,L_11496:PC)
	SWBRANCH(#4.UI,L_11498:PC)
	SWBRANCH(#5.UI,L_11500:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_11484:
	BLOCK END
	BLOCK 11

L_11485:
	BLOCK END
	BLOCK 12

L_11487:
	DBG BLOCK START
	GOTO	L_11473:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_11489:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_11492:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #8.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11491:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_11493:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_11494:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_11491:
	BLOCK END
	BLOCK 19

L_11495:
	DBG BLOCK END
	GOTO	L_11473:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_11496:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #8.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #8.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#10.N
	GOTO	L_11473:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_11498:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #8.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #10.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #8.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$uLuL~puL~$qpuLpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#14.N
	GOTO	L_11473:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_11500:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #8.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #18.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #10.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #8.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$uLuL~puL~$qpuLpuLpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#18.N
	GOTO	L_11473:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_11502:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_11503:
	BLOCK END
	BLOCK 25

L_11482:
	BLOCK END
	BLOCK 26

L_11504:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_11506:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_11505:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_11507:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_11508:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#C.N
	GOTO	L_11473:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_11509:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_11510:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_11505:
	BLOCK END
	BLOCK 34

L_11511:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #8.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_11512:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_11514:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_11513:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_11515:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_11516:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #3.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #3.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #3.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$uLuL~puL~$qpuLpuLpuLpuLpuLr#__less$uLuL~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_11517:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_11519:
	DBG BLOCK END
	GOTO	L_11518:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_11520:
	BLOCK END
	BLOCK 44

L_11513:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_11521:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #3.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_11522:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_11523:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_11518:
	BLOCK END
	BLOCK 49

L_11524:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_11525:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_11527:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11526:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_11528:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_11529:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_11533:
	GOTO	L_11532:PC
	BLOCK END
	BLOCK 56

L_11530:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_11534:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_11535:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_11537:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #8.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11536:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_11538:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_11539:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #8.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_11541:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #8.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11540:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_11542:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_11543:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_11547:
	GOTO	L_11546:PC
	BLOCK END
	BLOCK 68

L_11544:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_11548:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_11549:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_11551:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11550:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_11552:
	GOTO	L_11473:PC
	BLOCK END
	BLOCK 74

L_11553:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_11550:
	BLOCK END
	BLOCK 76

L_11554:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_11556:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11555:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_11557:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_11558:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #8.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_11545:PC
	BLOCK END
	BLOCK 81

L_11559:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_11560:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_11555:
	BLOCK END
	BLOCK 84

L_11561:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #8.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_11562:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_11563:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_11546:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_11544:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_11545:
	BLOCK END
	BLOCK 89

L_11564:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_11565:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_11566:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_11540:
	BLOCK END
	BLOCK 93

L_11567:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_11569:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11568:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_11570:
	GOTO	L_11473:PC
	BLOCK END
	BLOCK 97

L_11571:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_11568:
	BLOCK END
	BLOCK 99

L_11572:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_11576:
	GOTO	L_11575:PC
	BLOCK END
	BLOCK 101

L_11573:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_11577:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_11578:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_11582:
	GOTO	L_11581:PC
	BLOCK END
	BLOCK 105

L_11579:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_11583:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #8.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_11584:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_11581:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11579:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_11580:
	BLOCK END
	BLOCK 110

L_11585:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_11589:
	BLOCK END
	BLOCK 112

L_11586:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_11590:
	BLOCK END
	BLOCK 114

L_11591:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_11588:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #8.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11586:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_11587:
	BLOCK END
	BLOCK 117

L_11592:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_11594:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11593:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_11595:
; Line 4029:	                            break; 

	GOTO	L_11574:PC
	BLOCK END
	BLOCK 121

L_11596:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_11593:
	BLOCK END
	BLOCK 123

L_11597:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #8.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_11598:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_11599:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_11575:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_11573:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_11574:
	BLOCK END
	BLOCK 128

L_11600:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_11481:PC
	BLOCK END
	BLOCK 129

L_11601:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_11602:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_11536:
	BLOCK END
	BLOCK 132

L_11603:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_11605:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11604:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_11606:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_11607:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_11531:PC
	BLOCK END
	BLOCK 137

L_11608:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_11609:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_11604:
	BLOCK END
	BLOCK 140

L_11610:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_11611:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_11612:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_11532:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_11530:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_11531:
	BLOCK END
	BLOCK 145

L_11613:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_11614:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_11615:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_11526:
	BLOCK END
	BLOCK 149

L_11616:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #8.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_11618:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11617:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_11619:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_11620:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_11624:
	GOTO	L_11623:PC
	BLOCK END
	BLOCK 155

L_11621:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_11625:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_11626:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_11630:
	GOTO	L_11629:PC
	BLOCK END
	BLOCK 159

L_11627:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_11631:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #8.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_11632:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_11629:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11627:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_11628:
	BLOCK END
	BLOCK 164

L_11633:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_11637:
	BLOCK END
	BLOCK 166

L_11634:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_11638:
	BLOCK END
	BLOCK 168

L_11639:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_11636:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #8.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11634:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_11635:
	BLOCK END
	BLOCK 171

L_11640:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_11642:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11641:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_11643:
; Line 4065:	                    break; 

	GOTO	L_11622:PC
	BLOCK END
	BLOCK 175

L_11644:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_11641:
	BLOCK END
	BLOCK 177

L_11645:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_11647:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_11646:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_11648:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_11649:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_11646:
	BLOCK END
	BLOCK 183

L_11650:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #8.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_11651:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_11652:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_11623:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_11621:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_11622:
	BLOCK END
	BLOCK 188

L_11653:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_11654:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_11655:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_11617:
	BLOCK END
	BLOCK 192

L_11656:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_11658:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11657:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11657:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_11659:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_11660:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_11661:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_11662:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_11657:
	BLOCK END
	BLOCK 201

L_11663:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_11665:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_11664:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_11666:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_11667:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_11669:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #8.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11668:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_11670:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_11671:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_11673:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11672:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_11674:
	GOTO	L_11473:PC
	BLOCK END
	BLOCK 213

L_11675:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_11672:
	BLOCK END
	BLOCK 215

L_11676:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_11477:PC
	BLOCK END
	BLOCK 216

L_11677:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_11679:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_11680:
	BLOCK END
	BLOCK 220

L_11668:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_11681:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_11683:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11682:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_11684:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_11685:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #8.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_11477:PC
	BLOCK END
	BLOCK 226

L_11686:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_11687:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_11682:
	BLOCK END
	BLOCK 229

L_11688:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_11689:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_11690:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_11678:
	BLOCK END
	BLOCK 233

L_11691:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_11692:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_11693:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_11664:
	BLOCK END
	BLOCK 237

L_11694:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_11696:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #3.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #3.UI
	CONDGO	L_11695:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_11697:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_11698:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #8.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_11699:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_11701:
	DBG BLOCK END
	GOTO	L_11700:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_11702:
	BLOCK END
	BLOCK 246

L_11695:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_11703:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #8.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_11704:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_11705:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_11700:
	BLOCK END
	BLOCK 251

L_11706:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_11707:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_11708:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_11477:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_11475:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_11476:
	BLOCK END
	BLOCK 256

L_11709:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_11710:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_11473:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$ff~pf~$qpfpfr#__less$ff~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_11715:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_11717:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11719:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #2.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_11739:PC)
	SWBRANCH(#0.UI,L_11721:PC)
	SWBRANCH(#1.UI,L_11723:PC)
	SWBRANCH(#2.UI,L_11725:PC)
	SWBRANCH(#3.UI,L_11732:PC)
	SWBRANCH(#4.UI,L_11734:PC)
	SWBRANCH(#5.UI,L_11736:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_11720:
	BLOCK END
	BLOCK 6

L_11721:
	BLOCK END
	BLOCK 7

L_11723:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_11716:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_11725:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_11728:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #4.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11727:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_11729:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_11730:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_11727:
	BLOCK END
	BLOCK 14

L_11731:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_11716:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_11732:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #4.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #4.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_11716:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_11734:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #4.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #8.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #4.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ff~pf~$qpfpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_11716:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_11736:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #4.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #C.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #8.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #4.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ff~pf~$qpfpfpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_11716:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_11738:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_11739:
	BLOCK END
	BLOCK 20

L_11718:
	BLOCK END
	BLOCK 21

L_11740:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #8.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #4.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_11745:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #4.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_11742:PC
	BLOCK END
	BLOCK 23

L_11741:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_11746:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_11747:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_11749:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11748:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_11750:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_11751:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(xmm0s).F =   *(T70(EAX)).A.F
	___t:LINK(-16).F =   T71(xmm0s).F
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_11755:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_11759:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_11752:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_11756:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-20).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(xmm0s).F =   *(T75(EAX)).A.F
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.F =   T76(xmm0s).F
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_11757:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_11758:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_11754:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_11774:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-20).A
	T82(EAX).A = T81(EAX).A - #4.A
	___k:LINK(-20).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-20).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-16).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11752:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_11774:
	BLOCK END
	BLOCK 39

L_11753:
	BLOCK END
	BLOCK 40

L_11760:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-16).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(xmm0s).F =   *(T88(EAX)).A.F
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.F =   T89(xmm0s).F
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_11762:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_11761:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_11763:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #4.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_11716:PC
	BLOCK END
	BLOCK 44

L_11764:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_11761:
	BLOCK END
	BLOCK 46

L_11765:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_11766:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_11767:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_11748:
	BLOCK END
	BLOCK 50

L_11768:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_11769:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_11770:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_11744:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #4.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_11742:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_11741:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_11743:
	BLOCK END
	BLOCK 56

L_11771:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_11772:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_11716:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$ff~pf~$qpfpfr#__less$ff~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$ff~pf~$qpfpfr#__less$ff~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_11778:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_11780:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_11784:
	GOTO	L_11783:PC
	BLOCK END
	BLOCK 5

L_11781:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_11785:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_11786:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_11787:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #2.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_11789:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_11809:PC)
	SWBRANCH(#0.UI,L_11791:PC)
	SWBRANCH(#1.UI,L_11793:PC)
	SWBRANCH(#2.UI,L_11795:PC)
	SWBRANCH(#3.UI,L_11802:PC)
	SWBRANCH(#4.UI,L_11804:PC)
	SWBRANCH(#5.UI,L_11806:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_11790:
	BLOCK END
	BLOCK 11

L_11791:
	BLOCK END
	BLOCK 12

L_11793:
	DBG BLOCK START
	GOTO	L_11779:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_11795:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_11798:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #4.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11797:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_11799:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_11800:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_11797:
	BLOCK END
	BLOCK 19

L_11801:
	DBG BLOCK END
	GOTO	L_11779:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_11802:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #4.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #4.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#10.N
	GOTO	L_11779:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_11804:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #4.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #8.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #4.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ff~pf~$qpfpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#14.N
	GOTO	L_11779:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_11806:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #4.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #C.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #8.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #4.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ff~pf~$qpfpfpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#18.N
	GOTO	L_11779:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_11808:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_11809:
	BLOCK END
	BLOCK 25

L_11788:
	BLOCK END
	BLOCK 26

L_11810:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_11812:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_11811:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_11813:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_11814:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$ff~pf~$qpfpfr#__less$ff~:PC.UI
	PARMADJ	#C.N
	GOTO	L_11779:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_11815:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_11816:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_11811:
	BLOCK END
	BLOCK 34

L_11817:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #4.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_11818:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_11820:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_11819:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_11821:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_11822:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #2.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #2.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #2.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$ff~pf~$qpfpfpfpfpfr#__less$ff~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_11823:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_11825:
	DBG BLOCK END
	GOTO	L_11824:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_11826:
	BLOCK END
	BLOCK 44

L_11819:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_11827:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #2.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_11828:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_11829:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_11824:
	BLOCK END
	BLOCK 49

L_11830:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_11831:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_11833:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11832:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_11834:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_11835:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_11839:
	GOTO	L_11838:PC
	BLOCK END
	BLOCK 56

L_11836:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_11840:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_11841:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_11843:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #4.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11842:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_11844:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_11845:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #4.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_11847:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #4.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11846:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_11848:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_11849:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_11853:
	GOTO	L_11852:PC
	BLOCK END
	BLOCK 68

L_11850:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_11854:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_11855:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_11857:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11856:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_11858:
	GOTO	L_11779:PC
	BLOCK END
	BLOCK 74

L_11859:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_11856:
	BLOCK END
	BLOCK 76

L_11860:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_11862:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11861:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_11863:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_11864:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #4.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_11851:PC
	BLOCK END
	BLOCK 81

L_11865:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_11866:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_11861:
	BLOCK END
	BLOCK 84

L_11867:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #4.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_11868:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_11869:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_11852:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_11850:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_11851:
	BLOCK END
	BLOCK 89

L_11870:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_11871:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_11872:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_11846:
	BLOCK END
	BLOCK 93

L_11873:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_11875:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11874:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_11876:
	GOTO	L_11779:PC
	BLOCK END
	BLOCK 97

L_11877:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_11874:
	BLOCK END
	BLOCK 99

L_11878:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_11882:
	GOTO	L_11881:PC
	BLOCK END
	BLOCK 101

L_11879:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_11883:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_11884:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_11888:
	GOTO	L_11887:PC
	BLOCK END
	BLOCK 105

L_11885:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_11889:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #4.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_11890:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_11887:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11885:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_11886:
	BLOCK END
	BLOCK 110

L_11891:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_11895:
	BLOCK END
	BLOCK 112

L_11892:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_11896:
	BLOCK END
	BLOCK 114

L_11897:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_11894:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #4.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11892:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_11893:
	BLOCK END
	BLOCK 117

L_11898:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_11900:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11899:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_11901:
; Line 4029:	                            break; 

	GOTO	L_11880:PC
	BLOCK END
	BLOCK 121

L_11902:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_11899:
	BLOCK END
	BLOCK 123

L_11903:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #4.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_11904:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_11905:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_11881:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_11879:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_11880:
	BLOCK END
	BLOCK 128

L_11906:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_11787:PC
	BLOCK END
	BLOCK 129

L_11907:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_11908:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_11842:
	BLOCK END
	BLOCK 132

L_11909:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_11911:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11910:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_11912:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_11913:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_11837:PC
	BLOCK END
	BLOCK 137

L_11914:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_11915:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_11910:
	BLOCK END
	BLOCK 140

L_11916:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_11917:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_11918:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_11838:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_11836:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_11837:
	BLOCK END
	BLOCK 145

L_11919:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_11920:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_11921:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_11832:
	BLOCK END
	BLOCK 149

L_11922:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #4.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_11924:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11923:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_11925:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_11926:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_11930:
	GOTO	L_11929:PC
	BLOCK END
	BLOCK 155

L_11927:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_11931:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_11932:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_11936:
	GOTO	L_11935:PC
	BLOCK END
	BLOCK 159

L_11933:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_11937:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #4.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_11938:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_11935:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11933:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_11934:
	BLOCK END
	BLOCK 164

L_11939:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_11943:
	BLOCK END
	BLOCK 166

L_11940:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_11944:
	BLOCK END
	BLOCK 168

L_11945:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_11942:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #4.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11940:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_11941:
	BLOCK END
	BLOCK 171

L_11946:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_11948:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11947:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_11949:
; Line 4065:	                    break; 

	GOTO	L_11928:PC
	BLOCK END
	BLOCK 175

L_11950:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_11947:
	BLOCK END
	BLOCK 177

L_11951:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_11953:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_11952:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_11954:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_11955:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_11952:
	BLOCK END
	BLOCK 183

L_11956:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #4.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_11957:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_11958:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_11929:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_11927:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_11928:
	BLOCK END
	BLOCK 188

L_11959:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_11960:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_11961:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_11923:
	BLOCK END
	BLOCK 192

L_11962:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_11964:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_11963:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11963:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_11965:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_11966:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_11967:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_11968:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_11963:
	BLOCK END
	BLOCK 201

L_11969:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_11971:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_11970:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_11972:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_11973:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ff~pf~$qpfpfr#__less$ff~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_11975:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #4.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$ff~pf~$qpfpfr#__less$ff~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_11974:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_11976:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_11977:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_11979:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11978:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_11980:
	GOTO	L_11779:PC
	BLOCK END
	BLOCK 213

L_11981:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_11978:
	BLOCK END
	BLOCK 215

L_11982:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_11783:PC
	BLOCK END
	BLOCK 216

L_11983:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_11985:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_11986:
	BLOCK END
	BLOCK 220

L_11974:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_11987:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_11989:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_11988:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_11990:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_11991:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #4.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_11783:PC
	BLOCK END
	BLOCK 226

L_11992:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_11993:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_11988:
	BLOCK END
	BLOCK 229

L_11994:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_11995:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_11996:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_11984:
	BLOCK END
	BLOCK 233

L_11997:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_11998:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_11999:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_11970:
	BLOCK END
	BLOCK 237

L_12000:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_12002:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #2.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #2.UI
	CONDGO	L_12001:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_12003:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_12004:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ff~pf~$qpfpfr#__less$ff~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #4.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_12005:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_12007:
	DBG BLOCK END
	GOTO	L_12006:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_12008:
	BLOCK END
	BLOCK 246

L_12001:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_12009:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #4.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$ff~pf~$qpfpfr#__less$ff~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_12010:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_12011:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_12006:
	BLOCK END
	BLOCK 251

L_12012:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_12013:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_12014:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_11783:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_11781:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_11782:
	BLOCK END
	BLOCK 256

L_12015:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_12016:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_11779:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$ff~pf~$qpfpfr#__less$ff~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$dd~pd~$qpdpdr#__less$dd~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#1C.UI
	BLOCK END
	BLOCK 2

L_12021:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12023:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12025:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #3.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_12045:PC)
	SWBRANCH(#0.UI,L_12027:PC)
	SWBRANCH(#1.UI,L_12029:PC)
	SWBRANCH(#2.UI,L_12031:PC)
	SWBRANCH(#3.UI,L_12038:PC)
	SWBRANCH(#4.UI,L_12040:PC)
	SWBRANCH(#5.UI,L_12042:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12026:
	BLOCK END
	BLOCK 6

L_12027:
	BLOCK END
	BLOCK 7

L_12029:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_12022:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12031:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12034:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #8.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12033:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_12035:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_12036:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_12033:
	BLOCK END
	BLOCK 14

L_12037:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_12022:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_12038:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #8.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #8.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_12022:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_12040:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #8.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #10.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #8.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$dd~pd~$qpdpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_12022:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_12042:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #8.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #18.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #10.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #8.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$dd~pd~$qpdpdpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_12022:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_12044:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_12045:
	BLOCK END
	BLOCK 20

L_12024:
	BLOCK END
	BLOCK 21

L_12046:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #10.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #8.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_12051:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #8.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_12048:PC
	BLOCK END
	BLOCK 23

L_12047:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_12052:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_12053:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_12055:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12054:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_12056:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_12057:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(xmm0d).D =   *(T70(EAX)).A.D
	___t:LINK(-24).D =   T71(xmm0d).D
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-28).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_12061:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_12065:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_12058:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_12062:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-28).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(xmm0d).D =   *(T75(EAX)).A.D
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.D =   T76(xmm0d).D
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-28).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_12063:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_12064:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_12060:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_12080:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-28).A
	T82(EAX).A = T81(EAX).A - #8.A
	___k:LINK(-28).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-28).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-24).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12058:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_12080:
	BLOCK END
	BLOCK 39

L_12059:
	BLOCK END
	BLOCK 40

L_12066:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-24).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(xmm0d).D =   *(T88(EAX)).A.D
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.D =   T89(xmm0d).D
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_12068:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_12067:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_12069:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #8.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_12022:PC
	BLOCK END
	BLOCK 44

L_12070:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_12067:
	BLOCK END
	BLOCK 46

L_12071:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_12072:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_12073:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_12054:
	BLOCK END
	BLOCK 50

L_12074:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_12075:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_12076:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_12050:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #8.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_12048:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_12047:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_12049:
	BLOCK END
	BLOCK 56

L_12077:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_12078:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_12022:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$dd~pd~$qpdpdr#__less$dd~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$dd~pd~$qpdpdr#__less$dd~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_12084:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12086:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12090:
	GOTO	L_12089:PC
	BLOCK END
	BLOCK 5

L_12087:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12091:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12092:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_12093:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #3.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12095:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_12115:PC)
	SWBRANCH(#0.UI,L_12097:PC)
	SWBRANCH(#1.UI,L_12099:PC)
	SWBRANCH(#2.UI,L_12101:PC)
	SWBRANCH(#3.UI,L_12108:PC)
	SWBRANCH(#4.UI,L_12110:PC)
	SWBRANCH(#5.UI,L_12112:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_12096:
	BLOCK END
	BLOCK 11

L_12097:
	BLOCK END
	BLOCK 12

L_12099:
	DBG BLOCK START
	GOTO	L_12085:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_12101:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_12104:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #8.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12103:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_12105:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_12106:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_12103:
	BLOCK END
	BLOCK 19

L_12107:
	DBG BLOCK END
	GOTO	L_12085:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_12108:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #8.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #8.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#10.N
	GOTO	L_12085:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12110:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #8.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #10.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #8.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$dd~pd~$qpdpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#14.N
	GOTO	L_12085:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_12112:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #8.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #18.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #10.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #8.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$dd~pd~$qpdpdpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#18.N
	GOTO	L_12085:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_12114:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_12115:
	BLOCK END
	BLOCK 25

L_12094:
	BLOCK END
	BLOCK 26

L_12116:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_12118:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_12117:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_12119:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_12120:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$dd~pd~$qpdpdr#__less$dd~:PC.UI
	PARMADJ	#C.N
	GOTO	L_12085:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_12121:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_12122:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_12117:
	BLOCK END
	BLOCK 34

L_12123:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #8.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_12124:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_12126:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_12125:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_12127:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_12128:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #3.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #3.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #3.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$dd~pd~$qpdpdpdpdpdr#__less$dd~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_12129:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_12131:
	DBG BLOCK END
	GOTO	L_12130:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_12132:
	BLOCK END
	BLOCK 44

L_12125:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_12133:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #3.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_12134:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_12135:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_12130:
	BLOCK END
	BLOCK 49

L_12136:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_12137:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_12139:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12138:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_12140:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_12141:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_12145:
	GOTO	L_12144:PC
	BLOCK END
	BLOCK 56

L_12142:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_12146:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_12147:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_12149:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #8.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12148:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_12150:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_12151:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #8.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_12153:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #8.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12152:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_12154:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_12155:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_12159:
	GOTO	L_12158:PC
	BLOCK END
	BLOCK 68

L_12156:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_12160:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_12161:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_12163:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12162:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_12164:
	GOTO	L_12085:PC
	BLOCK END
	BLOCK 74

L_12165:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_12162:
	BLOCK END
	BLOCK 76

L_12166:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_12168:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12167:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_12169:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_12170:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #8.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_12157:PC
	BLOCK END
	BLOCK 81

L_12171:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_12172:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_12167:
	BLOCK END
	BLOCK 84

L_12173:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #8.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_12174:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_12175:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_12158:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_12156:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_12157:
	BLOCK END
	BLOCK 89

L_12176:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_12177:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_12178:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_12152:
	BLOCK END
	BLOCK 93

L_12179:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_12181:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12180:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_12182:
	GOTO	L_12085:PC
	BLOCK END
	BLOCK 97

L_12183:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_12180:
	BLOCK END
	BLOCK 99

L_12184:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_12188:
	GOTO	L_12187:PC
	BLOCK END
	BLOCK 101

L_12185:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_12189:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_12190:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_12194:
	GOTO	L_12193:PC
	BLOCK END
	BLOCK 105

L_12191:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_12195:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #8.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_12196:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_12193:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12191:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_12192:
	BLOCK END
	BLOCK 110

L_12197:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_12201:
	BLOCK END
	BLOCK 112

L_12198:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_12202:
	BLOCK END
	BLOCK 114

L_12203:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_12200:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #8.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12198:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_12199:
	BLOCK END
	BLOCK 117

L_12204:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_12206:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12205:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_12207:
; Line 4029:	                            break; 

	GOTO	L_12186:PC
	BLOCK END
	BLOCK 121

L_12208:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_12205:
	BLOCK END
	BLOCK 123

L_12209:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #8.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_12210:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_12211:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_12187:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_12185:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_12186:
	BLOCK END
	BLOCK 128

L_12212:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_12093:PC
	BLOCK END
	BLOCK 129

L_12213:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_12214:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_12148:
	BLOCK END
	BLOCK 132

L_12215:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_12217:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12216:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_12218:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_12219:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_12143:PC
	BLOCK END
	BLOCK 137

L_12220:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_12221:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_12216:
	BLOCK END
	BLOCK 140

L_12222:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_12223:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_12224:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_12144:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_12142:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_12143:
	BLOCK END
	BLOCK 145

L_12225:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_12226:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_12227:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_12138:
	BLOCK END
	BLOCK 149

L_12228:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #8.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_12230:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12229:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_12231:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_12232:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_12236:
	GOTO	L_12235:PC
	BLOCK END
	BLOCK 155

L_12233:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_12237:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_12238:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_12242:
	GOTO	L_12241:PC
	BLOCK END
	BLOCK 159

L_12239:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_12243:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #8.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_12244:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_12241:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12239:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_12240:
	BLOCK END
	BLOCK 164

L_12245:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_12249:
	BLOCK END
	BLOCK 166

L_12246:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_12250:
	BLOCK END
	BLOCK 168

L_12251:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_12248:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #8.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12246:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_12247:
	BLOCK END
	BLOCK 171

L_12252:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_12254:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12253:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_12255:
; Line 4065:	                    break; 

	GOTO	L_12234:PC
	BLOCK END
	BLOCK 175

L_12256:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_12253:
	BLOCK END
	BLOCK 177

L_12257:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_12259:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_12258:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_12260:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_12261:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_12258:
	BLOCK END
	BLOCK 183

L_12262:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #8.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_12263:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_12264:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_12235:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_12233:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_12234:
	BLOCK END
	BLOCK 188

L_12265:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_12266:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_12267:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_12229:
	BLOCK END
	BLOCK 192

L_12268:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_12270:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12269:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12269:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_12271:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_12272:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_12273:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_12274:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_12269:
	BLOCK END
	BLOCK 201

L_12275:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_12277:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_12276:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_12278:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_12279:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$dd~pd~$qpdpdr#__less$dd~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_12281:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #8.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$dd~pd~$qpdpdr#__less$dd~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12280:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_12282:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_12283:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_12285:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_12284:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_12286:
	GOTO	L_12085:PC
	BLOCK END
	BLOCK 213

L_12287:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_12284:
	BLOCK END
	BLOCK 215

L_12288:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_12089:PC
	BLOCK END
	BLOCK 216

L_12289:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_12291:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_12292:
	BLOCK END
	BLOCK 220

L_12280:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_12293:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_12295:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_12294:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_12296:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_12297:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #8.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_12089:PC
	BLOCK END
	BLOCK 226

L_12298:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_12299:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_12294:
	BLOCK END
	BLOCK 229

L_12300:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_12301:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_12302:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_12290:
	BLOCK END
	BLOCK 233

L_12303:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_12304:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_12305:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_12276:
	BLOCK END
	BLOCK 237

L_12306:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_12308:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #3.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #3.UI
	CONDGO	L_12307:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_12309:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_12310:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$dd~pd~$qpdpdr#__less$dd~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #8.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_12311:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_12313:
	DBG BLOCK END
	GOTO	L_12312:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_12314:
	BLOCK END
	BLOCK 246

L_12307:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_12315:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #8.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$dd~pd~$qpdpdr#__less$dd~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_12316:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_12317:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_12312:
	BLOCK END
	BLOCK 251

L_12318:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_12319:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_12320:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_12089:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_12087:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_12088:
	BLOCK END
	BLOCK 256

L_12321:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_12322:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_12085:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$dd~pd~$qpdpdr#__less$dd~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$gg~pg~$qpgpgpgpgpgr#__less$gg~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12327:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12329:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$gg~pg~$qpgpgpgpgr#__less$gg~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12331:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12330:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12332:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12333:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_12335:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12334:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_12336:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_12337:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_12339:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12338:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_12340:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_12341:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_12343:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12342:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_12344:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_12345:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_12346:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12347:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_12342:
	BLOCK END
	BLOCK 23

L_12348:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_12349:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_12350:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_12338:
	BLOCK END
	BLOCK 27

L_12351:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_12352:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_12353:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_12334:
	BLOCK END
	BLOCK 31

L_12354:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_12355:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_12356:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_12330:
	BLOCK END
	BLOCK 35

L_12357:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_12358:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_12328:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$gg~pg~$qpgpgpgpgpgr#__less$gg~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$gg~@$bcall$xqrxgrxg
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_12363:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12365:
	T1(EAX).A =   ___x:LINK(8).A
	T2(xmm1d).LD =   *(T1(EAX)).A.LD
	T3(EAX).A =   ___y:LINK(12).A
	T4(xmm0d).LD =   *(T3(EAX)).A.LD
	T5(EAX).UI = T4(xmm0d).LD S> T2(xmm1d).LD
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_12366:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_12364:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$gg~@$bcall$xqrxgrxg

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_incomplete$r#__less$gg~pg~$qpgpgr#__less$gg~
; Line 3842:	bool 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#1C.UI
	BLOCK END
	BLOCK 2

L_12371:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12373:
; Line 3845:	    switch (__last - __first) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12375:
	DBG BLOCK END
	T13(ECX).A =   ___last:LINK(8).A
	T14(EAX).A =   ___first:LINK(4).A
	T15(EAX).UI = T13(ECX).A - T14(EAX).A
	T16(EAX).A = T15(EAX).UI * #1.UI
	T17(EAX).A = T16(EAX).A S>> #3.UI
	COSWITCH(T17(EAX).A,#6.UI,#6.UI,L_12395:PC)
	SWBRANCH(#0.UI,L_12377:PC)
	SWBRANCH(#1.UI,L_12379:PC)
	SWBRANCH(#2.UI,L_12381:PC)
	SWBRANCH(#3.UI,L_12388:PC)
	SWBRANCH(#4.UI,L_12390:PC)
	SWBRANCH(#5.UI,L_12392:PC)
; Line 3846:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12376:
	BLOCK END
	BLOCK 6

L_12377:
	BLOCK END
	BLOCK 7

L_12379:
	DBG BLOCK START
	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_12372:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12381:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12384:
	T18(EAX).A =   ___first:LINK(4).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___last:LINK(8).A
	T20(EAX).A = T19(EAX).A - #8.A
	___last:LINK(8).A =   T20(EAX).A
	T21(EAX).A =   ___last:LINK(8).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___comp:LINK(12).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T23(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12383:PC ; T23(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_12385:
; Line 3852:	            swap(*__first, *__last); 

	T24(EAX).A =   ___last:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___first:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 12

L_12386:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_12383:
	BLOCK END
	BLOCK 14

L_12387:
	DBG BLOCK END
	RV.T2(AL).BOOL =   #1.BOOL
	GOTO	L_12372:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_12388:
	DBG BLOCK START
; Line 3855:	        _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___last:LINK(8).A
	T28(EAX).A = T27(EAX).A - #8.A
	___last:LINK(8).A =   T28(EAX).A
	T29(EAX).A =   ___last:LINK(8).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___first:LINK(4).A
	T31(EAX).A = T30(EAX).A + #8.A
	PARM	T31(EAX).A
	T32(EAX).A =   ___first:LINK(4).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#10.N
	RV.T3(AL).BOOL =   #1.BOOL
	GOTO	L_12372:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_12390:
	DBG BLOCK START
; Line 3858:	        _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T33(EAX).A =   ___comp:LINK(12).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___last:LINK(8).A
	T35(EAX).A = T34(EAX).A - #8.A
	___last:LINK(8).A =   T35(EAX).A
	T36(EAX).A =   ___last:LINK(8).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___first:LINK(4).A
	T38(EAX).A = T37(EAX).A + #10.A
	PARM	T38(EAX).A
	T39(EAX).A =   ___first:LINK(4).A
	T40(EAX).A = T39(EAX).A + #8.A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	PARM	T41(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$gg~pg~$qpgpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#14.N
	RV.T4(AL).BOOL =   #1.BOOL
	GOTO	L_12372:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_12392:
	DBG BLOCK START
; Line 3861:	        _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T42(EAX).A =   ___comp:LINK(12).A
	PARM	T42(EAX).A
	T43(EAX).A =   ___last:LINK(8).A
	T44(EAX).A = T43(EAX).A - #8.A
	___last:LINK(8).A =   T44(EAX).A
	T45(EAX).A =   ___last:LINK(8).A
	PARM	T45(EAX).A
	T46(EAX).A =   ___first:LINK(4).A
	T47(EAX).A = T46(EAX).A + #18.A
	PARM	T47(EAX).A
	T48(EAX).A =   ___first:LINK(4).A
	T49(EAX).A = T48(EAX).A + #10.A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #8.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	PARM	T52(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$gg~pg~$qpgpgpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#18.N
	RV.T5(AL).BOOL =   #1.BOOL
	GOTO	L_12372:PC
; Line 3863:	    } 

	BLOCK END
	BLOCK 18

L_12394:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_12395:
	BLOCK END
	BLOCK 20

L_12374:
	BLOCK END
	BLOCK 21

L_12396:
	DBG BLOCK END
	VAR START	__j
	T53(EAX).A =   ___first:LINK(4).A
	T54(EAX).A = T53(EAX).A + #10.A
	___j:LINK(-4).A =   T54(EAX).A
; Line 3866:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T55(EAX).A =   ___comp:LINK(12).A
	PARM	T55(EAX).A
	T56(EAX).A =   ___j:LINK(-4).A
	PARM	T56(EAX).A
	T57(EAX).A =   ___first:LINK(4).A
	T58(EAX).A = T57(EAX).A + #8.A
	PARM	T58(EAX).A
	T59(EAX).A =   ___first:LINK(4).A
	PARM	T59(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#10.N
	VAR START	__limit
	VAR START	__count
	T60(EAX).UI =   #0.UL
	___count:LINK(-8).UI =   T60(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 22

L_12401:
; Line 3869:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T61(EAX).A =   ___j:LINK(-4).A
	T62(EAX).A = T61(EAX).A + #8.A
	___i:LINK(-12).A =   T62(EAX).A
	GOTO	L_12398:PC
	BLOCK END
	BLOCK 23

L_12397:
	DBG BLOCK START
	BLOCK END
	BLOCK 24

L_12402:
; Line 3870:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_12403:
; Line 3871:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_12405:
	T65(EAX).A =   ___j:LINK(-4).A
	PARM	T65(EAX).A
	T66(EAX).A =   ___i:LINK(-12).A
	PARM	T66(EAX).A
	T67(EAX).A =   ___comp:LINK(12).A
	PARM	T67(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T68(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12404:PC ; T68(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_12406:
; Line 3872:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_12407:
; Line 3873:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T69(EAX).A =   ___i:LINK(-12).A
	PARM	T69(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T70(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	T71(xmm0d).LD =   *(T70(EAX)).A.LD
	___t:LINK(-24).LD =   T71(xmm0d).LD
	VAR START	__k
	T72(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-28).A =   T72(EAX).A
; Line 3875:	            __j = __i; 

	T73(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T73(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_12411:
	DBG BLOCK START
	BLOCK END
	BLOCK 31

L_12415:
; Line 3877:	            { 

	BLOCK END
	BLOCK 32

L_12408:
	DBG BLOCK START
	BLOCK END
	BLOCK 33

L_12412:
; Line 3878:	                *__j = _VSTD::move(*__k); 

	T74(EAX).A =   ___k:LINK(-28).A
	PARM	T74(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T75(EAX).A =   RV.T8(EAX).A
	PARMADJ	#4.N
	T76(xmm0d).LD =   *(T75(EAX)).A.LD
	T77(EAX).A =   ___j:LINK(-4).A
	*(T77(EAX)).A.LD =   T76(xmm0d).LD
; Line 3879:	                __j = __k; 

	T78(EAX).A =   ___k:LINK(-28).A
	___j:LINK(-4).A =   T78(EAX).A
; Line 3880:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 34

L_12413:
	DBG BLOCK END
	BLOCK END
	BLOCK 35

L_12414:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_12410:
	T79(ECX).A =   ___first:LINK(4).A
	T80(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_12430:PC ; T80(EAX).A == T79(ECX).A
	BLOCK END
	BLOCK 37
	T81(EAX).A =   ___k:LINK(-28).A
	T82(EAX).A = T81(EAX).A - #8.A
	___k:LINK(-28).A =   T82(EAX).A
	T83(EAX).A =   ___k:LINK(-28).A
	PARM	T83(EAX).A
	T84(EAX).A =   #___t:LINK(-24).A
	PARM	T84(EAX).A
	T85(EAX).A =   ___comp:LINK(12).A
	PARM	T85(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T86(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12408:PC ; T86(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 38

L_12430:
	BLOCK END
	BLOCK 39

L_12409:
	BLOCK END
	BLOCK 40

L_12416:
	DBG BLOCK END
; Line 3881:	            *__j = _VSTD::move(__t); 

	T87(EAX).A =   #___t:LINK(-24).A
	PARM	T87(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T88(EAX).A =   RV.T10(EAX).A
	PARMADJ	#4.N
	T89(xmm0d).LD =   *(T88(EAX)).A.LD
	T90(EAX).A =   ___j:LINK(-4).A
	*(T90(EAX)).A.LD =   T89(xmm0d).LD
	DBG BLOCK START
	BLOCK END
	BLOCK 41

L_12418:
	___count:LINK(-8).UI = ___count:LINK(-8).UI + #1.UI
	T91(EAX).UI =   ___count:LINK(-8).UI
	CONDGO	L_12417:PC ; T91(EAX).UI != #8.UI
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_12419:
	T92(EAX).A =   ___i:LINK(-12).A
	T93(EAX).A = T92(EAX).A + #8.A
	___i:LINK(-12).A =   T93(EAX).A
	T94(ECX).A =   ___i:LINK(-12).A
	T95(EAX).A =   ___last:LINK(8).A
	T96(EAX).UI = T94(ECX).A == T95(EAX).A
	T97(AL).BOOL =   T96(EAX).UI
	RV.T11(AL).BOOL =   T97(AL).BOOL
	GOTO	L_12372:PC
	BLOCK END
	BLOCK 44

L_12420:
	DBG BLOCK END
	BLOCK END
	BLOCK 45

L_12417:
	BLOCK END
	BLOCK 46

L_12421:
	DBG BLOCK END
; Line 3884:	        } 

	BLOCK END
	BLOCK 47

L_12422:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_12423:
	DBG BLOCK END
	BLOCK END
	BLOCK 49

L_12404:
	BLOCK END
	BLOCK 50

L_12424:
	DBG BLOCK END
; Line 3885:	        __j = __i; 

	T98(EAX).A =   ___i:LINK(-12).A
	___j:LINK(-4).A =   T98(EAX).A
; Line 3886:	    } 

	BLOCK END
	BLOCK 51

L_12425:
	DBG BLOCK END
	BLOCK END
	BLOCK 52

L_12426:
	DBG BLOCK END
	BLOCK END
	BLOCK 53

L_12400:
	T99(EAX).A =   ___i:LINK(-12).A
	T100(EAX).A = T99(EAX).A + #8.A
	___i:LINK(-12).A =   T100(EAX).A
	BLOCK END
	BLOCK 54

L_12398:
	T63(ECX).A =   ___last:LINK(8).A
	T64(EAX).A =   ___i:LINK(-12).A
	CONDGO	L_12397:PC ; T64(EAX).A != T63(ECX).A
	BLOCK END
	BLOCK 55

L_12399:
	BLOCK END
	BLOCK 56

L_12427:
	DBG BLOCK END
	RV.T12(AL).BOOL =   #1.BOOL
; Line 3888:	} 

	BLOCK END
	BLOCK 57

L_12428:
	DBG BLOCK END
	BLOCK END
	BLOCK 58

L_12372:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_incomplete$r#__less$gg~pg~$qpgpgr#__less$gg~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort$r#__less$gg~pg~$qpgpgr#__less$gg~
; Line 3926:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#20.UI
	BLOCK END
	BLOCK 2

L_12434:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12436:
; Line 3930:	    typedef typename iterator_traits<_RandomAccessIterator>::difference_type difference_type; 

	VAR START	__limit
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12440:
	GOTO	L_12439:PC
	BLOCK END
	BLOCK 5

L_12437:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12441:
; Line 3935:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12442:
; Line 3936:	    __restart: 

	BLOCK END
	BLOCK 8

L_12443:
	VAR START	__len
	T15(ECX).A =   ___last:LINK(8).A
	T16(EAX).A =   ___first:LINK(4).A
	T17(EAX).UI = T15(ECX).A - T16(EAX).A
	T18(EAX).A = T17(EAX).UI * #1.UI
	T20(EAX).A = T18(EAX).A S>> #3.UI
	___len:LINK(-4).I =   T20(EAX).I
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12445:
	DBG BLOCK END
	T21(EAX).I =   ___len:LINK(-4).I
	COSWITCH(T21(EAX).I,#6.UI,#6.UI,L_12465:PC)
	SWBRANCH(#0.UI,L_12447:PC)
	SWBRANCH(#1.UI,L_12449:PC)
	SWBRANCH(#2.UI,L_12451:PC)
	SWBRANCH(#3.UI,L_12458:PC)
	SWBRANCH(#4.UI,L_12460:PC)
	SWBRANCH(#5.UI,L_12462:PC)
; Line 3939:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_12446:
	BLOCK END
	BLOCK 11

L_12447:
	BLOCK END
	BLOCK 12

L_12449:
	DBG BLOCK START
	GOTO	L_12435:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_12451:
	DBG BLOCK START
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_12454:
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___last:LINK(8).A
	T24(EAX).A = T23(EAX).A - #8.A
	___last:LINK(8).A =   T24(EAX).A
	T25(EAX).A =   ___last:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___comp:LINK(12).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T27(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12453:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_12455:
; Line 3945:	                swap(*__first, *__last); 

	T28(EAX).A =   ___last:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___first:LINK(4).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 17

L_12456:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_12453:
	BLOCK END
	BLOCK 19

L_12457:
	DBG BLOCK END
	GOTO	L_12435:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_12458:
	DBG BLOCK START
; Line 3948:	            _VSTD::__sort3<_Compare>(__first, __first+1, --__last, __comp); 

	T30(EAX).A =   ___comp:LINK(12).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___last:LINK(8).A
	T32(EAX).A = T31(EAX).A - #8.A
	___last:LINK(8).A =   T32(EAX).A
	T33(EAX).A =   ___last:LINK(8).A
	PARM	T33(EAX).A
	T34(EAX).A =   ___first:LINK(4).A
	T35(EAX).A = T34(EAX).A + #8.A
	PARM	T35(EAX).A
	T36(EAX).A =   ___first:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#10.N
	GOTO	L_12435:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12460:
	DBG BLOCK START
; Line 3951:	            _VSTD::__sort4<_Compare>(__first, __first+1, __first+2, --__last, __comp); 

	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___last:LINK(8).A
	T39(EAX).A = T38(EAX).A - #8.A
	___last:LINK(8).A =   T39(EAX).A
	T40(EAX).A =   ___last:LINK(8).A
	PARM	T40(EAX).A
	T41(EAX).A =   ___first:LINK(4).A
	T42(EAX).A = T41(EAX).A + #10.A
	PARM	T42(EAX).A
	T43(EAX).A =   ___first:LINK(4).A
	T44(EAX).A = T43(EAX).A + #8.A
	PARM	T44(EAX).A
	T45(EAX).A =   ___first:LINK(4).A
	PARM	T45(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$gg~pg~$qpgpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#14.N
	GOTO	L_12435:PC
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_12462:
	DBG BLOCK START
; Line 3954:	            _VSTD::__sort5<_Compare>(__first, __first+1, __first+2, __first+3, --__last, __comp); 

	T46(EAX).A =   ___comp:LINK(12).A
	PARM	T46(EAX).A
	T47(EAX).A =   ___last:LINK(8).A
	T48(EAX).A = T47(EAX).A - #8.A
	___last:LINK(8).A =   T48(EAX).A
	T49(EAX).A =   ___last:LINK(8).A
	PARM	T49(EAX).A
	T50(EAX).A =   ___first:LINK(4).A
	T51(EAX).A = T50(EAX).A + #18.A
	PARM	T51(EAX).A
	T52(EAX).A =   ___first:LINK(4).A
	T53(EAX).A = T52(EAX).A + #10.A
	PARM	T53(EAX).A
	T54(EAX).A =   ___first:LINK(4).A
	T55(EAX).A = T54(EAX).A + #8.A
	PARM	T55(EAX).A
	T56(EAX).A =   ___first:LINK(4).A
	PARM	T56(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$gg~pg~$qpgpgpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#18.N
	GOTO	L_12435:PC
; Line 3956:	        } 

	BLOCK END
	BLOCK 23

L_12464:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_12465:
	BLOCK END
	BLOCK 25

L_12444:
	BLOCK END
	BLOCK 26

L_12466:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_12468:
	T57(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_12467:PC ; T57(EAX).I S> #6.I
	BLOCK END
	BLOCK 28
	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_12469:
; Line 3958:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_12470:
; Line 3959:	            _VSTD::__insertion_sort_3<_Compare>(__first, __last, __comp); 

	T58(EAX).A =   ___comp:LINK(12).A
	PARM	T58(EAX).A
	T59(EAX).A =   ___last:LINK(8).A
	PARM	T59(EAX).A
	T60(EAX).A =   ___first:LINK(4).A
	PARM	T60(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_3$r#__less$gg~pg~$qpgpgr#__less$gg~:PC.UI
	PARMADJ	#C.N
	GOTO	L_12435:PC
; Line 3961:	        } 

	BLOCK END
	BLOCK 31

L_12471:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_12472:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_12467:
	BLOCK END
	BLOCK 34

L_12473:
	DBG BLOCK END
	VAR START	__m
	T61(EAX).A =   ___first:LINK(4).A
	___m:LINK(-8).A =   T61(EAX).A
	VAR START	__lm1
	T62(EAX).A =   ___last:LINK(8).A
	___lm1:LINK(-12).A =   T62(EAX).A
; Line 3965:	        --__lm1; 

	T63(EAX).A =   ___lm1:LINK(-12).A
	T64(EAX).A = T63(EAX).A - #8.A
	___lm1:LINK(-12).A =   T64(EAX).A
	VAR START	__n_swaps
; Line 3967:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 35

L_12474:
; Line 3968:	        difference_type __delta; 

	VAR START	__delta
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_12476:
	T65(EAX).I =   ___len:LINK(-4).I
	CONDGO	L_12475:PC ; T65(EAX).I S< #3E8.I
	BLOCK END
	BLOCK 37
	DBG BLOCK START
	BLOCK END
	BLOCK 38

L_12477:
; Line 3970:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 39

L_12478:
; Line 3971:	            __delta = __len/2; 

	T67(EAX).I =   ___len:LINK(-4).I
	T68(ECX).I = T67(EAX).I U>> #1F.UI
	T69(EAX).I = T68(ECX).I + T67(EAX).I
	T71(EAX).I = T69(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T71(EAX).I
; Line 3972:	            __m += __delta; 

	T72(ECX).A =   ___m:LINK(-8).A
	T73(EAX).I =   ___delta:LINK(-32).I
	T74(EAX).I = T73(EAX).I << #3.I
	T75(EAX).A = T72(ECX).A + T74(EAX).I
	___m:LINK(-8).A =   T75(EAX).A
; Line 3973:	            __delta /= 2; 

	T77(EAX).I =   ___delta:LINK(-32).I
	T78(ECX).I = T77(EAX).I U>> #1F.UI
	T79(EAX).I = T78(ECX).I + T77(EAX).I
	T81(EAX).I = T79(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T81(EAX).I
; Line 3974:	            __n_swaps = _VSTD::__sort5<_Compare>(__first, __first + __delta, __m, __m+__delta, __lm1, __comp); 

	T82(EAX).A =   ___comp:LINK(12).A
	PARM	T82(EAX).A
	T83(EAX).A =   ___lm1:LINK(-12).A
	PARM	T83(EAX).A
	T84(ECX).A =   ___m:LINK(-8).A
	T85(EAX).I =   ___delta:LINK(-32).I
	T86(EAX).I = T85(EAX).I << #3.I
	T87(EAX).A = T84(ECX).A + T86(EAX).I
	PARM	T87(EAX).A
	T88(EAX).A =   ___m:LINK(-8).A
	PARM	T88(EAX).A
	T89(ECX).A =   ___first:LINK(4).A
	T90(EAX).I =   ___delta:LINK(-32).I
	T91(EAX).I = T90(EAX).I << #3.I
	T92(EAX).A = T89(ECX).A + T91(EAX).I
	PARM	T92(EAX).A
	T93(EAX).A =   ___first:LINK(4).A
	PARM	T93(EAX).A
	TAG
	GOSUB	#@std@#__sort5$r#__less$gg~pg~$qpgpgpgpgpgr#__less$gg~:PC.UI
	T94(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#18.N
	___n_swaps:LINK(-16).UI =   T94(EAX).UI
; Line 3975:	        } 

	BLOCK END
	BLOCK 40

L_12479:
	DBG BLOCK END
	BLOCK END
	BLOCK 41

L_12481:
	DBG BLOCK END
	GOTO	L_12480:PC
	BLOCK END
	BLOCK 42
	DBG BLOCK START
	BLOCK END
	BLOCK 43

L_12482:
	BLOCK END
	BLOCK 44

L_12475:
; Line 3976:	        else 

; Line 3977:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 45

L_12483:
; Line 3978:	            __delta = __len/2; 

	T96(EAX).I =   ___len:LINK(-4).I
	T97(ECX).I = T96(EAX).I U>> #1F.UI
	T98(EAX).I = T97(ECX).I + T96(EAX).I
	T100(EAX).I = T98(EAX).I S>> #1.UI
	___delta:LINK(-32).I =   T100(EAX).I
; Line 3979:	            __m += __delta; 

	T101(ECX).A =   ___m:LINK(-8).A
	T102(EAX).I =   ___delta:LINK(-32).I
	T103(EAX).I = T102(EAX).I << #3.I
	T104(EAX).A = T101(ECX).A + T103(EAX).I
	___m:LINK(-8).A =   T104(EAX).A
; Line 3980:	            __n_swaps = _VSTD::__sort3<_Compare>(__first, __m, __lm1, __comp); 

	T105(EAX).A =   ___comp:LINK(12).A
	PARM	T105(EAX).A
	T106(EAX).A =   ___lm1:LINK(-12).A
	PARM	T106(EAX).A
	T107(EAX).A =   ___m:LINK(-8).A
	PARM	T107(EAX).A
	T108(EAX).A =   ___first:LINK(4).A
	PARM	T108(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~:PC.UI
	T109(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#10.N
	___n_swaps:LINK(-16).UI =   T109(EAX).UI
; Line 3981:	        } 

	BLOCK END
	BLOCK 46

L_12484:
	DBG BLOCK END
	BLOCK END
	BLOCK 47

L_12485:
	DBG BLOCK END
	BLOCK END
	BLOCK 48

L_12480:
	BLOCK END
	BLOCK 49

L_12486:
	DBG BLOCK END
; Line 3982:	        } 

	BLOCK END
	BLOCK 50

L_12487:
	DBG BLOCK END
	VAR START	__i
	T110(EAX).A =   ___first:LINK(4).A
	___i:LINK(-20).A =   T110(EAX).A
	VAR START	__j
	T111(EAX).A =   ___lm1:LINK(-12).A
	___j:LINK(-24).A =   T111(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 51

L_12489:
	T112(EAX).A =   ___m:LINK(-8).A
	PARM	T112(EAX).A
	T113(EAX).A =   ___i:LINK(-20).A
	PARM	T113(EAX).A
	T114(EAX).A =   ___comp:LINK(12).A
	PARM	T114(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T115(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12488:PC ; T115(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 52
	DBG BLOCK START
	BLOCK END
	BLOCK 53

L_12490:
; Line 3992:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 54

L_12491:
; Line 3995:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 55

L_12495:
	GOTO	L_12494:PC
	BLOCK END
	BLOCK 56

L_12492:
	DBG BLOCK START
	BLOCK END
	BLOCK 57

L_12496:
; Line 3996:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 58

L_12497:
; Line 3997:	                if (__i == --__j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 59

L_12499:
	T117(EAX).A =   ___j:LINK(-24).A
	T118(EAX).A = T117(EAX).A - #8.A
	___j:LINK(-24).A =   T118(EAX).A
	T119(ECX).A =   ___j:LINK(-24).A
	T120(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12498:PC ; T120(EAX).A != T119(ECX).A
	BLOCK END
	BLOCK 60
	DBG BLOCK START
	BLOCK END
	BLOCK 61

L_12500:
; Line 3998:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 62

L_12501:
; Line 4001:	                    ++__i;   

	T121(EAX).A =   ___i:LINK(-20).A
	T122(EAX).A = T121(EAX).A + #8.A
	___i:LINK(-20).A =   T122(EAX).A
; Line 4002:	                    __j = __last; 

	T123(EAX).A =   ___last:LINK(8).A
	___j:LINK(-24).A =   T123(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 63

L_12503:
	T124(EAX).A =   ___j:LINK(-24).A
	T125(EAX).A = T124(EAX).A - #8.A
	___j:LINK(-24).A =   T125(EAX).A
	T126(EAX).A =   ___j:LINK(-24).A
	PARM	T126(EAX).A
	T127(EAX).A =   ___first:LINK(4).A
	PARM	T127(EAX).A
	T128(EAX).A =   ___comp:LINK(12).A
	PARM	T128(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T129(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12502:PC ; T129(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 64
	DBG BLOCK START
	BLOCK END
	BLOCK 65

L_12504:
; Line 4004:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 66

L_12505:
; Line 4005:	                        while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 67

L_12509:
	GOTO	L_12508:PC
	BLOCK END
	BLOCK 68

L_12506:
	DBG BLOCK START
	BLOCK END
	BLOCK 69

L_12510:
; Line 4006:	                        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 70

L_12511:
; Line 4007:	                            if (__i == __j) 

	DBG BLOCK START
	BLOCK END
	BLOCK 71

L_12513:
	T131(ECX).A =   ___j:LINK(-24).A
	T132(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12512:PC ; T132(EAX).A != T131(ECX).A
	BLOCK END
	BLOCK 72
	DBG BLOCK START
	BLOCK END
	BLOCK 73

L_12514:
	GOTO	L_12435:PC
	BLOCK END
	BLOCK 74

L_12515:
	DBG BLOCK END
	BLOCK END
	BLOCK 75

L_12512:
	BLOCK END
	BLOCK 76

L_12516:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 77

L_12518:
	T133(EAX).A =   ___i:LINK(-20).A
	PARM	T133(EAX).A
	T134(EAX).A =   ___first:LINK(4).A
	PARM	T134(EAX).A
	T135(EAX).A =   ___comp:LINK(12).A
	PARM	T135(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T136(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12517:PC ; T136(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 78
	DBG BLOCK START
	BLOCK END
	BLOCK 79

L_12519:
; Line 4010:	                            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 80

L_12520:
; Line 4011:	                                swap(*__i, *__j); 

	T137(EAX).A =   ___j:LINK(-24).A
	PARM	T137(EAX).A
	T138(EAX).A =   ___i:LINK(-20).A
	PARM	T138(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 4012:	                                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4013:	                                ++__i; 

	T139(EAX).A =   ___i:LINK(-20).A
	T140(EAX).A = T139(EAX).A + #8.A
	___i:LINK(-20).A =   T140(EAX).A
; Line 4014:	                                break; 

	GOTO	L_12507:PC
	BLOCK END
	BLOCK 81

L_12521:
	DBG BLOCK END
	BLOCK END
	BLOCK 82

L_12522:
	DBG BLOCK END
	BLOCK END
	BLOCK 83

L_12517:
	BLOCK END
	BLOCK 84

L_12523:
	DBG BLOCK END
; Line 4016:	                            ++__i; 

	T141(EAX).A =   ___i:LINK(-20).A
	T142(EAX).A = T141(EAX).A + #8.A
	___i:LINK(-20).A =   T142(EAX).A
; Line 4017:	                        } 

	BLOCK END
	BLOCK 85

L_12524:
	DBG BLOCK END
	BLOCK END
	BLOCK 86

L_12525:
	DBG BLOCK END
	BLOCK END
	BLOCK 87

L_12508:
	T130(AL).BOOL =   #0.BOOL
	CONDGO	L_12506:PC ; #1.BOOL != T130(AL).BOOL
	BLOCK END
	BLOCK 88

L_12507:
	BLOCK END
	BLOCK 89

L_12526:
	DBG BLOCK END
; Line 4018:	                    } 

	BLOCK END
	BLOCK 90

L_12527:
	DBG BLOCK END
	BLOCK END
	BLOCK 91

L_12528:
	DBG BLOCK END
	BLOCK END
	BLOCK 92

L_12502:
	BLOCK END
	BLOCK 93

L_12529:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 94

L_12531:
	T143(ECX).A =   ___j:LINK(-24).A
	T144(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12530:PC ; T144(EAX).A != T143(ECX).A
	BLOCK END
	BLOCK 95
	DBG BLOCK START
	BLOCK END
	BLOCK 96

L_12532:
	GOTO	L_12435:PC
	BLOCK END
	BLOCK 97

L_12533:
	DBG BLOCK END
	BLOCK END
	BLOCK 98

L_12530:
	BLOCK END
	BLOCK 99

L_12534:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 100

L_12538:
	GOTO	L_12537:PC
	BLOCK END
	BLOCK 101

L_12535:
	DBG BLOCK START
	BLOCK END
	BLOCK 102

L_12539:
; Line 4023:	                    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 103

L_12540:
; Line 4024:	                        while (!__comp(*__first, *__i)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 104

L_12544:
	GOTO	L_12543:PC
	BLOCK END
	BLOCK 105

L_12541:
	DBG BLOCK START
	BLOCK END
	BLOCK 106

L_12545:
; Line 4025:	                            ++__i; 

	T150(EAX).A =   ___i:LINK(-20).A
	T151(EAX).A = T150(EAX).A + #8.A
	___i:LINK(-20).A =   T151(EAX).A
	BLOCK END
	BLOCK 107

L_12546:
	DBG BLOCK END
	BLOCK END
	BLOCK 108

L_12543:
	T146(EAX).A =   ___i:LINK(-20).A
	PARM	T146(EAX).A
	T147(EAX).A =   ___first:LINK(4).A
	PARM	T147(EAX).A
	T148(EAX).A =   ___comp:LINK(12).A
	PARM	T148(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T149(AL).BOOL =   RV.T6(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12541:PC ; T149(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 109

L_12542:
	BLOCK END
	BLOCK 110

L_12547:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 111

L_12551:
	BLOCK END
	BLOCK 112

L_12548:
	DBG BLOCK START
	BLOCK END
	BLOCK 113

L_12552:
	BLOCK END
	BLOCK 114

L_12553:
	DBG BLOCK END
	BLOCK END
	BLOCK 115

L_12550:
; Line 4026:	                        while (__comp(*__first, *--__j)) 

	T152(EAX).A =   ___j:LINK(-24).A
	T153(EAX).A = T152(EAX).A - #8.A
	___j:LINK(-24).A =   T153(EAX).A
	T154(EAX).A =   ___j:LINK(-24).A
	PARM	T154(EAX).A
	T155(EAX).A =   ___first:LINK(4).A
	PARM	T155(EAX).A
	T156(EAX).A =   ___comp:LINK(12).A
	PARM	T156(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T157(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12548:PC ; T157(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 116

L_12549:
	BLOCK END
	BLOCK 117

L_12554:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 118

L_12556:
	T158(ECX).A =   ___j:LINK(-24).A
	T159(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12555:PC ; T159(EAX).A S< T158(ECX).A
	BLOCK END
	BLOCK 119
	DBG BLOCK START
	BLOCK END
	BLOCK 120

L_12557:
; Line 4029:	                            break; 

	GOTO	L_12536:PC
	BLOCK END
	BLOCK 121

L_12558:
	DBG BLOCK END
	BLOCK END
	BLOCK 122

L_12555:
	BLOCK END
	BLOCK 123

L_12559:
	DBG BLOCK END
; Line 4030:	                        swap(*__i, *__j); 

	T160(EAX).A =   ___j:LINK(-24).A
	PARM	T160(EAX).A
	T161(EAX).A =   ___i:LINK(-20).A
	PARM	T161(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 4031:	                        ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4032:	                        ++__i; 

	T162(EAX).A =   ___i:LINK(-20).A
	T163(EAX).A = T162(EAX).A + #8.A
	___i:LINK(-20).A =   T163(EAX).A
; Line 4033:	                    } 

	BLOCK END
	BLOCK 124

L_12560:
	DBG BLOCK END
	BLOCK END
	BLOCK 125

L_12561:
	DBG BLOCK END
	BLOCK END
	BLOCK 126

L_12537:
; Line 4022:	                    while (true) 

	T145(AL).BOOL =   #0.BOOL
	CONDGO	L_12535:PC ; #1.BOOL != T145(AL).BOOL
	BLOCK END
	BLOCK 127

L_12536:
	BLOCK END
	BLOCK 128

L_12562:
	DBG BLOCK END
; Line 4037:	                    __first = __i; 

	T164(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T164(EAX).A
	GOTO	L_12443:PC
	BLOCK END
	BLOCK 129

L_12563:
	DBG BLOCK END
	BLOCK END
	BLOCK 130

L_12564:
	DBG BLOCK END
	BLOCK END
	BLOCK 131

L_12498:
	BLOCK END
	BLOCK 132

L_12565:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 133

L_12567:
	T165(EAX).A =   ___m:LINK(-8).A
	PARM	T165(EAX).A
	T166(EAX).A =   ___j:LINK(-24).A
	PARM	T166(EAX).A
	T167(EAX).A =   ___comp:LINK(12).A
	PARM	T167(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T168(AL).BOOL =   RV.T8(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12566:PC ; T168(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 134
	DBG BLOCK START
	BLOCK END
	BLOCK 135

L_12568:
; Line 4041:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 136

L_12569:
; Line 4042:	                    swap(*__i, *__j); 

	T169(EAX).A =   ___j:LINK(-24).A
	PARM	T169(EAX).A
	T170(EAX).A =   ___i:LINK(-20).A
	PARM	T170(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 4043:	                    ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4044:	                    break;   

	GOTO	L_12493:PC
	BLOCK END
	BLOCK 137

L_12570:
	DBG BLOCK END
	BLOCK END
	BLOCK 138

L_12571:
	DBG BLOCK END
	BLOCK END
	BLOCK 139

L_12566:
	BLOCK END
	BLOCK 140

L_12572:
	DBG BLOCK END
; Line 4046:	            } 

	BLOCK END
	BLOCK 141

L_12573:
	DBG BLOCK END
	BLOCK END
	BLOCK 142

L_12574:
	DBG BLOCK END
	BLOCK END
	BLOCK 143

L_12494:
	T116(AL).BOOL =   #0.BOOL
	CONDGO	L_12492:PC ; #1.BOOL != T116(AL).BOOL
	BLOCK END
	BLOCK 144

L_12493:
	BLOCK END
	BLOCK 145

L_12575:
	DBG BLOCK END
; Line 4047:	        } 

	BLOCK END
	BLOCK 146

L_12576:
	DBG BLOCK END
	BLOCK END
	BLOCK 147

L_12577:
	DBG BLOCK END
	BLOCK END
	BLOCK 148

L_12488:
	BLOCK END
	BLOCK 149

L_12578:
	DBG BLOCK END
; Line 4049:	        ++__i; 

	T171(EAX).A =   ___i:LINK(-20).A
	T172(EAX).A = T171(EAX).A + #8.A
	___i:LINK(-20).A =   T172(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 150

L_12580:
	T173(ECX).A =   ___j:LINK(-24).A
	T174(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12579:PC ; T174(EAX).A S>= T173(ECX).A
	BLOCK END
	BLOCK 151
	DBG BLOCK START
	BLOCK END
	BLOCK 152

L_12581:
; Line 4053:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 153

L_12582:
; Line 4056:	            while (true) 

	DBG BLOCK START
	BLOCK END
	BLOCK 154

L_12586:
	GOTO	L_12585:PC
	BLOCK END
	BLOCK 155

L_12583:
	DBG BLOCK START
	BLOCK END
	BLOCK 156

L_12587:
; Line 4057:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 157

L_12588:
; Line 4059:	                while (__comp(*__i, *__m)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 158

L_12592:
	GOTO	L_12591:PC
	BLOCK END
	BLOCK 159

L_12589:
	DBG BLOCK START
	BLOCK END
	BLOCK 160

L_12593:
; Line 4060:	                    ++__i; 

	T180(EAX).A =   ___i:LINK(-20).A
	T181(EAX).A = T180(EAX).A + #8.A
	___i:LINK(-20).A =   T181(EAX).A
	BLOCK END
	BLOCK 161

L_12594:
	DBG BLOCK END
	BLOCK END
	BLOCK 162

L_12591:
	T176(EAX).A =   ___m:LINK(-8).A
	PARM	T176(EAX).A
	T177(EAX).A =   ___i:LINK(-20).A
	PARM	T177(EAX).A
	T178(EAX).A =   ___comp:LINK(12).A
	PARM	T178(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T179(AL).BOOL =   RV.T9(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12589:PC ; T179(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 163

L_12590:
	BLOCK END
	BLOCK 164

L_12595:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 165

L_12599:
	BLOCK END
	BLOCK 166

L_12596:
	DBG BLOCK START
	BLOCK END
	BLOCK 167

L_12600:
	BLOCK END
	BLOCK 168

L_12601:
	DBG BLOCK END
	BLOCK END
	BLOCK 169

L_12598:
; Line 4062:	                while (!__comp(*--__j, *__m)) 

	T182(EAX).A =   ___m:LINK(-8).A
	PARM	T182(EAX).A
	T183(EAX).A =   ___j:LINK(-24).A
	T184(EAX).A = T183(EAX).A - #8.A
	___j:LINK(-24).A =   T184(EAX).A
	T185(EAX).A =   ___j:LINK(-24).A
	PARM	T185(EAX).A
	T186(EAX).A =   ___comp:LINK(12).A
	PARM	T186(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T187(AL).BOOL =   RV.T10(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12596:PC ; T187(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 170

L_12597:
	BLOCK END
	BLOCK 171

L_12602:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 172

L_12604:
	T188(ECX).A =   ___j:LINK(-24).A
	T189(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12603:PC ; T189(EAX).A S<= T188(ECX).A
	BLOCK END
	BLOCK 173
	DBG BLOCK START
	BLOCK END
	BLOCK 174

L_12605:
; Line 4065:	                    break; 

	GOTO	L_12584:PC
	BLOCK END
	BLOCK 175

L_12606:
	DBG BLOCK END
	BLOCK END
	BLOCK 176

L_12603:
	BLOCK END
	BLOCK 177

L_12607:
	DBG BLOCK END
; Line 4066:	                swap(*__i, *__j); 

	T190(EAX).A =   ___j:LINK(-24).A
	PARM	T190(EAX).A
	T191(EAX).A =   ___i:LINK(-20).A
	PARM	T191(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 4067:	                ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 178

L_12609:
	T192(ECX).A =   ___i:LINK(-20).A
	T193(EAX).A =   ___m:LINK(-8).A
	CONDGO	L_12608:PC ; T193(EAX).A != T192(ECX).A
	BLOCK END
	BLOCK 179
	DBG BLOCK START
	BLOCK END
	BLOCK 180

L_12610:
; Line 4071:	                    __m = __j; 

	T194(EAX).A =   ___j:LINK(-24).A
	___m:LINK(-8).A =   T194(EAX).A
	BLOCK END
	BLOCK 181

L_12611:
	DBG BLOCK END
	BLOCK END
	BLOCK 182

L_12608:
	BLOCK END
	BLOCK 183

L_12612:
	DBG BLOCK END
; Line 4072:	                ++__i; 

	T195(EAX).A =   ___i:LINK(-20).A
	T196(EAX).A = T195(EAX).A + #8.A
	___i:LINK(-20).A =   T196(EAX).A
; Line 4073:	            } 

	BLOCK END
	BLOCK 184

L_12613:
	DBG BLOCK END
	BLOCK END
	BLOCK 185

L_12614:
	DBG BLOCK END
	BLOCK END
	BLOCK 186

L_12585:
	T175(AL).BOOL =   #0.BOOL
	CONDGO	L_12583:PC ; #1.BOOL != T175(AL).BOOL
	BLOCK END
	BLOCK 187

L_12584:
	BLOCK END
	BLOCK 188

L_12615:
	DBG BLOCK END
; Line 4074:	        } 

	BLOCK END
	BLOCK 189

L_12616:
	DBG BLOCK END
	BLOCK END
	BLOCK 190

L_12617:
	DBG BLOCK END
	BLOCK END
	BLOCK 191

L_12579:
	BLOCK END
	BLOCK 192

L_12618:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 193

L_12620:
	T197(ECX).A =   ___m:LINK(-8).A
	T198(EAX).A =   ___i:LINK(-20).A
	CONDGO	L_12619:PC ; T198(EAX).A == T197(ECX).A
	BLOCK END
	BLOCK 194
	T199(EAX).A =   ___i:LINK(-20).A
	PARM	T199(EAX).A
	T200(EAX).A =   ___m:LINK(-8).A
	PARM	T200(EAX).A
	T201(EAX).A =   ___comp:LINK(12).A
	PARM	T201(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T202(AL).BOOL =   RV.T11(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12619:PC ; T202(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 195
	DBG BLOCK START
	BLOCK END
	BLOCK 196

L_12621:
; Line 4077:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 197

L_12622:
; Line 4078:	            swap(*__i, *__m); 

	T203(EAX).A =   ___m:LINK(-8).A
	PARM	T203(EAX).A
	T204(EAX).A =   ___i:LINK(-20).A
	PARM	T204(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 4079:	            ++__n_swaps; 

	___n_swaps:LINK(-16).UI = ___n_swaps:LINK(-16).UI + #1.UI
; Line 4080:	        } 

	BLOCK END
	BLOCK 198

L_12623:
	DBG BLOCK END
	BLOCK END
	BLOCK 199

L_12624:
	DBG BLOCK END
	BLOCK END
	BLOCK 200

L_12619:
	BLOCK END
	BLOCK 201

L_12625:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 202

L_12627:
	T205(EAX).UI =   ___n_swaps:LINK(-16).UI
	CONDGO	L_12626:PC ; T205(EAX).UI != #0.UI
	BLOCK END
	BLOCK 203
	DBG BLOCK START
	BLOCK END
	BLOCK 204

L_12628:
; Line 4084:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 205

L_12629:
; Line 4085:	            bool __fs = _VSTD::__insertion_sort_incomplete<_Compare>(__first, __i, __comp); 

	VAR START	__fs
	T206(EAX).A =   ___comp:LINK(12).A
	PARM	T206(EAX).A
	T207(EAX).A =   ___i:LINK(-20).A
	PARM	T207(EAX).A
	T208(EAX).A =   ___first:LINK(4).A
	PARM	T208(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$gg~pg~$qpgpgr#__less$gg~:PC.UI
	T209(AL).BOOL =   RV.T12(AL).BOOL
	PARMADJ	#C.N
	___fs:LINK(-25).BOOL =   T209(AL).BOOL
	DBG BLOCK START
	BLOCK END
	BLOCK 206

L_12631:
	T210(EAX).A =   ___comp:LINK(12).A
	PARM	T210(EAX).A
	T211(EAX).A =   ___last:LINK(8).A
	PARM	T211(EAX).A
	T212(EAX).A =   ___i:LINK(-20).A
	T213(EAX).A = T212(EAX).A + #8.A
	PARM	T213(EAX).A
	TAG
	GOSUB	#@std@#__insertion_sort_incomplete$r#__less$gg~pg~$qpgpgr#__less$gg~:PC.UI
	T214(AL).BOOL =   RV.T13(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_12630:PC ; T214(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 207
	DBG BLOCK START
	BLOCK END
	BLOCK 208

L_12632:
; Line 4087:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 209

L_12633:
; Line 4088:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 210

L_12635:
	T215(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_12634:PC ; T215(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 211
	DBG BLOCK START
	BLOCK END
	BLOCK 212

L_12636:
	GOTO	L_12435:PC
	BLOCK END
	BLOCK 213

L_12637:
	DBG BLOCK END
	BLOCK END
	BLOCK 214

L_12634:
	BLOCK END
	BLOCK 215

L_12638:
	DBG BLOCK END
; Line 4090:	                __last = __i; 

	T216(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T216(EAX).A
; Line 4091:	                continue; 

	GOTO	L_12439:PC
	BLOCK END
	BLOCK 216

L_12639:
	DBG BLOCK END
	BLOCK END
	BLOCK 217

L_12641:
	DBG BLOCK END
	BLOCK END
	BLOCK 218
	DBG BLOCK START
	BLOCK END
	BLOCK 219

L_12642:
	BLOCK END
	BLOCK 220

L_12630:
; Line 4093:	            else 

; Line 4094:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 221

L_12643:
; Line 4095:	                if (__fs) 

	DBG BLOCK START
	BLOCK END
	BLOCK 222

L_12645:
	T217(AL).BOOL =   ___fs:LINK(-25).BOOL
	CONDGO	L_12644:PC ; T217(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 223
	DBG BLOCK START
	BLOCK END
	BLOCK 224

L_12646:
; Line 4096:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 225

L_12647:
; Line 4097:	                    __first = ++__i; 

	T218(EAX).A =   ___i:LINK(-20).A
	T219(EAX).A = T218(EAX).A + #8.A
	___i:LINK(-20).A =   T219(EAX).A
	T220(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T220(EAX).A
; Line 4098:	                    continue; 

	GOTO	L_12439:PC
	BLOCK END
	BLOCK 226

L_12648:
	DBG BLOCK END
	BLOCK END
	BLOCK 227

L_12649:
	DBG BLOCK END
	BLOCK END
	BLOCK 228

L_12644:
	BLOCK END
	BLOCK 229

L_12650:
	DBG BLOCK END
; Line 4100:	            } 

	BLOCK END
	BLOCK 230

L_12651:
	DBG BLOCK END
	BLOCK END
	BLOCK 231

L_12652:
	DBG BLOCK END
	BLOCK END
	BLOCK 232

L_12640:
	BLOCK END
	BLOCK 233

L_12653:
	DBG BLOCK END
; Line 4101:	        } 

	BLOCK END
	BLOCK 234

L_12654:
	DBG BLOCK END
	BLOCK END
	BLOCK 235

L_12655:
	DBG BLOCK END
	BLOCK END
	BLOCK 236

L_12626:
	BLOCK END
	BLOCK 237

L_12656:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 238

L_12658:
	T221(ECX).A =   ___last:LINK(8).A
	T222(EAX).A =   ___i:LINK(-20).A
	T223(EAX).UI = T221(ECX).A - T222(EAX).A
	T224(EAX).A = T223(EAX).UI * #1.UI
	T225(EDX).A = T224(EAX).A S>> #3.UI
	T226(ECX).A =   ___i:LINK(-20).A
	T227(EAX).A =   ___first:LINK(4).A
	T228(EAX).UI = T226(ECX).A - T227(EAX).A
	T229(EAX).A = T228(EAX).UI * #1.UI
	T230(EAX).A = T229(EAX).A S>> #3.UI
	CONDGO	L_12657:PC ; T230(EAX).A S>= T225(EDX).A
	BLOCK END
	BLOCK 239
	DBG BLOCK START
	BLOCK END
	BLOCK 240

L_12659:
; Line 4104:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 241

L_12660:
; Line 4105:	            _VSTD::__sort<_Compare>(__first, __i, __comp); 

	T231(EAX).A =   ___comp:LINK(12).A
	PARM	T231(EAX).A
	T232(EAX).A =   ___i:LINK(-20).A
	PARM	T232(EAX).A
	T233(EAX).A =   ___first:LINK(4).A
	PARM	T233(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$gg~pg~$qpgpgr#__less$gg~:PC.UI
	PARMADJ	#C.N
; Line 4107:	            __first = ++__i; 

	T234(EAX).A =   ___i:LINK(-20).A
	T235(EAX).A = T234(EAX).A + #8.A
	___i:LINK(-20).A =   T235(EAX).A
	T236(EAX).A =   ___i:LINK(-20).A
	___first:LINK(4).A =   T236(EAX).A
; Line 4108:	        } 

	BLOCK END
	BLOCK 242

L_12661:
	DBG BLOCK END
	BLOCK END
	BLOCK 243

L_12663:
	DBG BLOCK END
	GOTO	L_12662:PC
	BLOCK END
	BLOCK 244
	DBG BLOCK START
	BLOCK END
	BLOCK 245

L_12664:
	BLOCK END
	BLOCK 246

L_12657:
; Line 4109:	        else 

; Line 4110:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 247

L_12665:
; Line 4111:	            _VSTD::__sort<_Compare>(__i+1, __last, __comp); 

	T237(EAX).A =   ___comp:LINK(12).A
	PARM	T237(EAX).A
	T238(EAX).A =   ___last:LINK(8).A
	PARM	T238(EAX).A
	T239(EAX).A =   ___i:LINK(-20).A
	T240(EAX).A = T239(EAX).A + #8.A
	PARM	T240(EAX).A
	TAG
	GOSUB	#@std@#__sort$r#__less$gg~pg~$qpgpgr#__less$gg~:PC.UI
	PARMADJ	#C.N
; Line 4113:	            __last = __i; 

	T241(EAX).A =   ___i:LINK(-20).A
	___last:LINK(8).A =   T241(EAX).A
; Line 4114:	        } 

	BLOCK END
	BLOCK 248

L_12666:
	DBG BLOCK END
	BLOCK END
	BLOCK 249

L_12667:
	DBG BLOCK END
	BLOCK END
	BLOCK 250

L_12662:
	BLOCK END
	BLOCK 251

L_12668:
	DBG BLOCK END
; Line 4115:	    } 

	BLOCK END
	BLOCK 252

L_12669:
	DBG BLOCK END
	BLOCK END
	BLOCK 253

L_12670:
	DBG BLOCK END
	BLOCK END
	BLOCK 254

L_12439:
; Line 3934:	    while (true) 

	T14(AL).BOOL =   #0.BOOL
	CONDGO	L_12437:PC ; #1.BOOL != T14(AL).BOOL
	BLOCK END
	BLOCK 255

L_12438:
	BLOCK END
	BLOCK 256

L_12671:
	DBG BLOCK END
; Line 4116:	} 

	BLOCK END
	BLOCK 257

L_12672:
	DBG BLOCK END
	BLOCK END
	BLOCK 258

L_12435:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort$r#__less$gg~pg~$qpgpgr#__less$gg~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$c~@compare$qpxcpxcui
; Line 294:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12677:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12679:
; Line 295:	    if (__n == 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12681:
	T3(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12680:PC ; T3(EAX).UI != #0.UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12682:
; Line 296:	        return 0; 

	RV.T0(EAX).I =   #0.I
	GOTO	L_12678:PC
	BLOCK END
	BLOCK 7

L_12683:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12680:
	BLOCK END
	BLOCK 9

L_12684:
	DBG BLOCK END
; Line 298:	    return __builtin_memcmp(__s1, __s2, __n); 
; Line 302:	    for (; __n; --__n, ++__s1, ++__s2) 
; Line 303:	    { 
; Line 304:	        if (lt(*__s1, *__s2)) 
; Line 305:	            return -1; 
; Line 306:	        if (lt(*__s2, *__s1)) 
; Line 307:	            return 1; 
; Line 308:	    } 
; Line 309:	    return 0; 
; Line 311:	} 

	T4(EAX).UI =   ___n:LINK(12).UI
	PARM	T4(EAX).UI
	T5(EAX).A =   ___s2:LINK(8).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___s1:LINK(4).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#_memcmp:PC.UI
	T7(EAX).I =   RV.T1(EAX).I
	PARMADJ	#C.N
	RV.T2(EAX).I =   T7(EAX).I
; Line 300:	    return memcmp(__s1, __s2, __n); 

	BLOCK END
	BLOCK 10

L_12685:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12678:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$c~@compare$qpxcpxcui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$c~@find$qpxcuirxc
; Line 313:	inline _LIBCPP_CONSTEXPR_AFTER_CXX14 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12690:
	VAR START	__s
	VAR START	__n
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12692:
; Line 316:	{ 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12694:
; Line 317:	    if (__n == 0) 

	T4(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_12693:PC ; T4(EAX).UI != #0.UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12695:
; Line 318:	        return nullptr; 

	T5(EAX).A =   #0.UI
	RV.T0(EAX).A =   T5(EAX).A
	GOTO	L_12691:PC
	BLOCK END
	BLOCK 7

L_12696:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12693:
	BLOCK END
	BLOCK 9

L_12697:
	DBG BLOCK END
; Line 320:	    return __builtin_char_memchr(__s, to_int_type(__a), __n); 
; Line 324:	    for (; __n; --__n) 
; Line 325:	    { 
; Line 326:	        if (eq(*__s, __a)) 
; Line 327:	            return __s; 
; Line 328:	        ++__s; 
; Line 329:	    } 
; Line 330:	    return nullptr; 
; Line 332:	} 

	T6(EAX).UI =   ___n:LINK(8).UI
	PARM	T6(EAX).UI
	T7(EAX).A =   ___a:LINK(12).A
	T8(AL).C =   *(T7(EAX)).A.C
	PARM	T8(AL).C
	TAG
	GOSUB	#@std@#char_traits$c~@to_int_type$qc:PC.UI
	T9(EAX).I =   RV.T1(EAX).I
	PARMADJ	#4.N
	PARM	T9(EAX).I
	T10(EAX).A =   ___s:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#_memchr:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#C.N
	RV.T3(EAX).A =   T11(EAX).A
; Line 322:	    return (const char_type*) memchr(__s, to_int_type(__a), __n); 

	BLOCK END
	BLOCK 10

L_12698:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12691:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$c~@find$qpxcuirxc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$C~@compare$qpxCpxCui
; Line 396:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12703:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12705:
; Line 397:	    if (__n == 0) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12707:
	T3(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12706:PC ; T3(EAX).UI != #0.UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12708:
; Line 398:	        return 0; 

	RV.T0(EAX).I =   #0.I
	GOTO	L_12704:PC
	BLOCK END
	BLOCK 7

L_12709:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12706:
	BLOCK END
	BLOCK 9

L_12710:
	DBG BLOCK END
; Line 400:	    return __builtin_wmemcmp(__s1, __s2, __n); 
; Line 404:	    for (; __n; --__n, ++__s1, ++__s2) 
; Line 405:	    { 
; Line 406:	        if (lt(*__s1, *__s2)) 
; Line 407:	            return -1; 
; Line 408:	        if (lt(*__s2, *__s1)) 
; Line 409:	            return 1; 
; Line 410:	    } 
; Line 411:	    return 0; 
; Line 413:	} 

	T4(EAX).UI =   ___n:LINK(12).UI
	PARM	T4(EAX).UI
	T5(EAX).A =   ___s2:LINK(8).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___s1:LINK(4).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#_wmemcmp:PC.UI
	T7(EAX).I =   RV.T1(EAX).I
	PARMADJ	#C.N
	RV.T2(EAX).I =   T7(EAX).I
; Line 402:	    return wmemcmp(__s1, __s2, __n); 

	BLOCK END
	BLOCK 10

L_12711:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12704:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$C~@compare$qpxCpxCui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$C~@length$qpxC
; Line 428:	size_t 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12716:
	VAR START	__s
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12718:
; Line 430:	{ 

; Line 432:	    return __builtin_wcslen(__s); 
; Line 436:	    size_t __len = 0; 
; Line 437:	    for (; !eq(*__s, char_type(0)); ++__s) 
; Line 438:	        ++__len; 
; Line 439:	    return __len; 
; Line 441:	} 

	T2(EAX).A =   ___s:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#_wcslen:PC.UI
	T3(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	RV.T1(EAX).UI =   T3(EAX).UI
; Line 434:	    return wcslen(__s); 

	BLOCK END
	BLOCK 4

L_12719:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_12717:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$C~@length$qpxC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$C~@find$qpxCuirxC
; Line 443:	inline _LIBCPP_CONSTEXPR_AFTER_CXX14 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12724:
	VAR START	__s
	VAR START	__n
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12726:
; Line 446:	{ 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12728:
; Line 447:	    if (__n == 0) 

	T3(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_12727:PC ; T3(EAX).UI != #0.UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12729:
; Line 448:	        return nullptr; 

	T4(EAX).A =   #0.UI
	RV.T0(EAX).A =   T4(EAX).A
	GOTO	L_12725:PC
	BLOCK END
	BLOCK 7

L_12730:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12727:
	BLOCK END
	BLOCK 9

L_12731:
	DBG BLOCK END
; Line 450:	    return __builtin_wmemchr(__s, __a, __n); 
; Line 454:	    for (; __n; --__n) 
; Line 455:	    { 
; Line 456:	        if (eq(*__s, __a)) 
; Line 457:	            return __s; 
; Line 458:	        ++__s; 
; Line 459:	    } 
; Line 460:	    return nullptr; 
; Line 462:	} 

	T5(EAX).UI =   ___n:LINK(8).UI
	PARM	T5(EAX).UI
	T6(EAX).A =   ___a:LINK(12).A
	T7(AX).US =   *(T6(EAX)).A.US
	PARM	T7(AX).US
	T8(EAX).A =   ___s:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#_wmemchr:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#C.N
	RV.T2(EAX).A =   T9(EAX).A
; Line 452:	    return wmemchr(__s, __a, __n); 

	BLOCK END
	BLOCK 10

L_12732:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12725:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$C~@find$qpxCuirxC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@compare$qpxhpxhui
; Line 620:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12737:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12739:
; Line 621:	    for (; __n; --__n, ++__s1, ++__s2) 

	GOTO	L_12741:PC
	BLOCK END
	BLOCK 4

L_12740:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12744:
; Line 622:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12745:
; Line 623:	        if (lt(*__s1, *__s2)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12747:
	T6(EAX).A =   ___s2:LINK(8).A
	T7(AX).U16 =   *(T6(EAX)).A.U16
	PARM	T7(AX).U16
	T8(EAX).A =   ___s1:LINK(4).A
	T9(AX).U16 =   *(T8(EAX)).A.U16
	PARM	T9(AX).U16
	TAG
	GOSUB	#@std@#char_traits$h~@lt$qhh:PC.UI
	T10(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12746:PC ; T10(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12748:
; Line 624:	            return -1; 

	RV.T1(EAX).I =   #FFFFFFFFFFFFFFFF.I
	GOTO	L_12738:PC
	BLOCK END
	BLOCK 10

L_12749:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12746:
	BLOCK END
	BLOCK 12

L_12750:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_12752:
; Line 625:	        if (lt(*__s2, *__s1)) 

	T11(EAX).A =   ___s1:LINK(4).A
	T12(AX).U16 =   *(T11(EAX)).A.U16
	PARM	T12(AX).U16
	T13(EAX).A =   ___s2:LINK(8).A
	T14(AX).U16 =   *(T13(EAX)).A.U16
	PARM	T14(AX).U16
	TAG
	GOSUB	#@std@#char_traits$h~@lt$qhh:PC.UI
	T15(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12751:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_12753:
; Line 626:	            return 1; 

	RV.T3(EAX).I =   #1.I
	GOTO	L_12738:PC
	BLOCK END
	BLOCK 16

L_12754:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_12751:
	BLOCK END
	BLOCK 18

L_12755:
	DBG BLOCK END
; Line 627:	    } 

	BLOCK END
	BLOCK 19

L_12756:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_12757:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12743:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	T16(EAX).A =   ___s1:LINK(4).A
	T17(EAX).A = T16(EAX).A + #2.A
	___s1:LINK(4).A =   T17(EAX).A
	T18(EAX).A =   ___s2:LINK(8).A
	T19(EAX).A = T18(EAX).A + #2.A
	___s2:LINK(8).A =   T19(EAX).A
	BLOCK END
	BLOCK 22

L_12741:
	T5(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12740:PC ; T5(EAX).UI != #0.UI
	BLOCK END
	BLOCK 23

L_12742:
; Line 628:	    return 0; 

	RV.T4(EAX).I =   #0.I
; Line 629:	} 

	BLOCK END
	BLOCK 24

L_12758:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_12738:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@compare$qpxhpxhui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@length$qpxh
; Line 631:	inline _LIBCPP_CONSTEXPR_AFTER_CXX14 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12763:
	VAR START	__s
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12765:
; Line 634:	{ 

	VAR START	__len
; Line 635:	    size_t __len = 0; 

	T2(EAX).UI =   #0.UL
	___len:LINK(-4).UI =   T2(EAX).UI
; Line 636:	    for (; !eq(*__s, char_type(0)); ++__s) 

	GOTO	L_12767:PC
	BLOCK END
	BLOCK 4

L_12766:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12770:
; Line 637:	        ++__len; 

	___len:LINK(-4).UI = ___len:LINK(-4).UI + #1.UI
	BLOCK END
	BLOCK 6

L_12771:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_12769:
	T7(EAX).A =   ___s:LINK(4).A
	T8(EAX).A = T7(EAX).A + #2.A
	___s:LINK(4).A =   T8(EAX).A
	BLOCK END
	BLOCK 8

L_12767:
	T3(EAX).UI =   #0.U16
	PARM	T3(EAX).UI
	T4(EAX).A =   ___s:LINK(4).A
	T5(AX).U16 =   *(T4(EAX)).A.U16
	PARM	T5(AX).U16
	TAG
	GOSUB	#@std@#char_traits$h~@eq$qhh:PC.UI
	T6(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12766:PC ; T6(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9

L_12768:
; Line 638:	    return __len; 

	T9(EAX).UI =   ___len:LINK(-4).UI
	RV.T1(EAX).UI =   T9(EAX).UI
; Line 639:	} 

	BLOCK END
	BLOCK 10

L_12772:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12764:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@length$qpxh

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@eq$qhh
; Line 588:	        {return __c1 == __c2;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12777:
	VAR START	__c1
	VAR START	__c2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12779:
	T1(ECX).I =   ___c1:LINK(4).U16
	T2(EAX).I =   ___c2:LINK(8).U16
	T3(EAX).UI = T1(ECX).I == T2(EAX).I
	T4(AL).BOOL =   T3(EAX).UI
	RV.T0(AL).BOOL =   T4(AL).BOOL
	BLOCK END
	BLOCK 4

L_12780:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_12778:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@eq$qhh

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@find$qpxhuirxh
; Line 641:	inline _LIBCPP_CONSTEXPR_AFTER_CXX14 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12785:
	VAR START	__s
	VAR START	__n
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12787:
; Line 644:	{ 

	GOTO	L_12789:PC
	BLOCK END
	BLOCK 4

L_12788:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12792:
; Line 646:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12793:
; Line 647:	        if (eq(*__s, __a)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12795:
	T4(EAX).A =   ___a:LINK(12).A
	T5(AX).U16 =   *(T4(EAX)).A.U16
	PARM	T5(AX).U16
	T6(EAX).A =   ___s:LINK(4).A
	T7(AX).U16 =   *(T6(EAX)).A.U16
	PARM	T7(AX).U16
	TAG
	GOSUB	#@std@#char_traits$h~@eq$qhh:PC.UI
	T8(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12794:PC ; T8(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12796:
; Line 648:	            return __s; 

	T9(EAX).A =   ___s:LINK(4).A
	RV.T1(EAX).A =   T9(EAX).A
	GOTO	L_12786:PC
	BLOCK END
	BLOCK 10

L_12797:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12794:
	BLOCK END
	BLOCK 12

L_12798:
	DBG BLOCK END
; Line 649:	        ++__s; 

	T10(EAX).A =   ___s:LINK(4).A
	T11(EAX).A = T10(EAX).A + #2.A
	___s:LINK(4).A =   T11(EAX).A
; Line 650:	    } 

	BLOCK END
	BLOCK 13

L_12799:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_12800:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_12791:
	___n:LINK(8).UI = ___n:LINK(8).UI - #1.UI
; Line 645:	    for (; __n; --__n) 

	BLOCK END
	BLOCK 16

L_12789:
	T3(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_12788:PC ; T3(EAX).UI != #0.UI
	BLOCK END
	BLOCK 17

L_12790:
; Line 651:	    return 0; 

	T12(EAX).A =   #0.I
	RV.T2(EAX).A =   T12(EAX).A
; Line 652:	} 

	BLOCK END
	BLOCK 18

L_12801:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_12786:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@find$qpxhuirxh

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@move$qphpxhui
; Line 654:	inline _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12806:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12808:
; Line 657:	{ 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12810:
; Line 658:	    if (__n == 0) return __s1; 

	T2(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12809:PC ; T2(EAX).UI != #0.UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12811:
	T3(EAX).A =   ___s1:LINK(4).A
	RV.T0(EAX).A =   T3(EAX).A
	GOTO	L_12807:PC
	BLOCK END
	BLOCK 7

L_12812:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12809:
	BLOCK END
	BLOCK 9

L_12813:
	DBG BLOCK END
	VAR START	__r
; Line 659:	    char_type* __r = __s1; 

	T4(EAX).A =   ___s1:LINK(4).A
	___r:LINK(-4).A =   T4(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_12815:
; Line 660:	    if (__s1 < __s2) 

	T5(ECX).A =   ___s2:LINK(8).A
	T6(EAX).A =   ___s1:LINK(4).A
	CONDGO	L_12814:PC ; T6(EAX).A S>= T5(ECX).A
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_12816:
; Line 661:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_12817:
; Line 662:	        for (; __n; --__n, ++__s1, ++__s2) 

	GOTO	L_12819:PC
	BLOCK END
	BLOCK 14

L_12818:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_12822:
; Line 663:	            assign(*__s1, *__s2); 

	T8(EAX).A =   ___s2:LINK(8).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___s1:LINK(4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#char_traits$h~@assign$qrhrxh:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 16

L_12823:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_12821:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	T10(EAX).A =   ___s1:LINK(4).A
	T11(EAX).A = T10(EAX).A + #2.A
	___s1:LINK(4).A =   T11(EAX).A
	T12(EAX).A =   ___s2:LINK(8).A
	T13(EAX).A = T12(EAX).A + #2.A
	___s2:LINK(8).A =   T13(EAX).A
	BLOCK END
	BLOCK 18

L_12819:
	T7(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12818:PC ; T7(EAX).UI != #0.UI
	BLOCK END
	BLOCK 19

L_12820:
; Line 664:	    } 

	BLOCK END
	BLOCK 20

L_12824:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12826:
	DBG BLOCK END
	GOTO	L_12825:PC
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_12827:
	BLOCK END
	BLOCK 24

L_12814:
; Line 665:	    else if (__s2 < __s1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_12829:
	T14(ECX).A =   ___s1:LINK(4).A
	T15(EAX).A =   ___s2:LINK(8).A
	CONDGO	L_12828:PC ; T15(EAX).A S>= T14(ECX).A
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_12830:
; Line 666:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_12831:
; Line 667:	        __s1 += __n; 

	T16(ECX).A =   ___s1:LINK(4).A
	T17(EAX).I =   ___n:LINK(12).UI
	T18(EAX).I = T17(EAX).I << #1.I
	T19(EAX).A = T16(ECX).A + T18(EAX).I
	___s1:LINK(4).A =   T19(EAX).A
; Line 668:	        __s2 += __n; 

	T20(ECX).A =   ___s2:LINK(8).A
	T21(EAX).I =   ___n:LINK(12).UI
	T22(EAX).I = T21(EAX).I << #1.I
	T23(EAX).A = T20(ECX).A + T22(EAX).I
	___s2:LINK(8).A =   T23(EAX).A
; Line 669:	        for (; __n; --__n) 

	GOTO	L_12833:PC
	BLOCK END
	BLOCK 29

L_12832:
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_12836:
; Line 670:	            assign(*--__s1, *--__s2); 

	T25(EAX).A =   ___s2:LINK(8).A
	T26(EAX).A = T25(EAX).A - #2.A
	___s2:LINK(8).A =   T26(EAX).A
	T27(EAX).A =   ___s2:LINK(8).A
	PARM	T27(EAX).A
	T28(EAX).A =   ___s1:LINK(4).A
	T29(EAX).A = T28(EAX).A - #2.A
	___s1:LINK(4).A =   T29(EAX).A
	T30(EAX).A =   ___s1:LINK(4).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#char_traits$h~@assign$qrhrxh:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 31

L_12837:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_12835:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	BLOCK END
	BLOCK 33

L_12833:
	T24(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12832:PC ; T24(EAX).UI != #0.UI
	BLOCK END
	BLOCK 34

L_12834:
; Line 671:	    } 

	BLOCK END
	BLOCK 35

L_12838:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_12839:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_12828:
	BLOCK END
	BLOCK 38

L_12840:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_12841:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_12825:
	BLOCK END
	BLOCK 41

L_12842:
	DBG BLOCK END
; Line 672:	    return __r; 

	T31(EAX).A =   ___r:LINK(-4).A
	RV.T1(EAX).A =   T31(EAX).A
; Line 673:	} 

	BLOCK END
	BLOCK 42

L_12843:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_12807:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@move$qphpxhui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@assign$qrhrxh
; Line 586:	    void assign(char_type& __c1, const char_type& __c2) _NOEXCEPT {__c1 = __c2;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12848:
	VAR START	__c1
	VAR START	__c2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12850:
	T0(EAX).A =   ___c2:LINK(8).A
	T1(CX).U16 =   *(T0(EAX)).A.U16
	T2(EAX).A =   ___c1:LINK(4).A
	*(T2(EAX)).A.U16 =   T1(CX).U16
	BLOCK END
	BLOCK 4

L_12851:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_12849:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@assign$qrhrxh

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@copy$qphpxhui
; Line 675:	inline _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12856:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12858:
; Line 678:	{ 

; Line 679:	    _LIBCPP_ASSERT(__s2 < __s1 || __s2 >= __s1+__n, "char_traits::copy overlapped range"); 

	VAR START	__r
; Line 680:	    char_type* __r = __s1; 

	T1(EAX).A =   ___s1:LINK(4).A
	___r:LINK(-4).A =   T1(EAX).A
; Line 681:	    for (; __n; --__n, ++__s1, ++__s2) 

	GOTO	L_12860:PC
	BLOCK END
	BLOCK 4

L_12859:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12863:
; Line 682:	        assign(*__s1, *__s2); 

	T3(EAX).A =   ___s2:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___s1:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#char_traits$h~@assign$qrhrxh:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 6

L_12864:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_12862:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	T5(EAX).A =   ___s1:LINK(4).A
	T6(EAX).A = T5(EAX).A + #2.A
	___s1:LINK(4).A =   T6(EAX).A
	T7(EAX).A =   ___s2:LINK(8).A
	T8(EAX).A = T7(EAX).A + #2.A
	___s2:LINK(8).A =   T8(EAX).A
	BLOCK END
	BLOCK 8

L_12860:
	T2(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12859:PC ; T2(EAX).UI != #0.UI
	BLOCK END
	BLOCK 9

L_12861:
; Line 683:	    return __r; 

	T9(EAX).A =   ___r:LINK(-4).A
	RV.T0(EAX).A =   T9(EAX).A
; Line 684:	} 

	BLOCK END
	BLOCK 10

L_12865:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12857:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@copy$qphpxhui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@assign$qphuih
; Line 686:	inline _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12870:
	VAR START	__s
	VAR START	__n
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12872:
; Line 689:	{ 

	VAR START	__r
; Line 690:	    char_type* __r = __s; 

	T1(EAX).A =   ___s:LINK(4).A
	___r:LINK(-4).A =   T1(EAX).A
; Line 691:	    for (; __n; --__n, ++__s) 

	GOTO	L_12874:PC
	BLOCK END
	BLOCK 4

L_12873:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12877:
; Line 692:	        assign(*__s, __a); 

	T3(EAX).A =   #___a:LINK(12).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___s:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#char_traits$h~@assign$qrhrxh:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 6

L_12878:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_12876:
	___n:LINK(8).UI = ___n:LINK(8).UI - #1.UI
	T5(EAX).A =   ___s:LINK(4).A
	T6(EAX).A = T5(EAX).A + #2.A
	___s:LINK(4).A =   T6(EAX).A
	BLOCK END
	BLOCK 8

L_12874:
	T2(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_12873:PC ; T2(EAX).UI != #0.UI
	BLOCK END
	BLOCK 9

L_12875:
; Line 693:	    return __r; 

	T7(EAX).A =   ___r:LINK(-4).A
	RV.T0(EAX).A =   T7(EAX).A
; Line 694:	} 

	BLOCK END
	BLOCK 10

L_12879:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12871:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@assign$qphuih

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@compare$qpxHpxHui
; Line 740:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12884:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12886:
; Line 741:	    for (; __n; --__n, ++__s1, ++__s2) 

	GOTO	L_12888:PC
	BLOCK END
	BLOCK 4

L_12887:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12891:
; Line 742:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12892:
; Line 743:	        if (lt(*__s1, *__s2)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12894:
	T6(EAX).A =   ___s2:LINK(8).A
	T7(EAX).U32 =   *(T6(EAX)).A.U32
	PARM	T7(EAX).U32
	T8(EAX).A =   ___s1:LINK(4).A
	T9(EAX).U32 =   *(T8(EAX)).A.U32
	PARM	T9(EAX).U32
	TAG
	GOSUB	#@std@#char_traits$H~@lt$qHH:PC.UI
	T10(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12893:PC ; T10(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12895:
; Line 744:	            return -1; 

	RV.T1(EAX).I =   #FFFFFFFFFFFFFFFF.I
	GOTO	L_12885:PC
	BLOCK END
	BLOCK 10

L_12896:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12893:
	BLOCK END
	BLOCK 12

L_12897:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_12899:
; Line 745:	        if (lt(*__s2, *__s1)) 

	T11(EAX).A =   ___s1:LINK(4).A
	T12(EAX).U32 =   *(T11(EAX)).A.U32
	PARM	T12(EAX).U32
	T13(EAX).A =   ___s2:LINK(8).A
	T14(EAX).U32 =   *(T13(EAX)).A.U32
	PARM	T14(EAX).U32
	TAG
	GOSUB	#@std@#char_traits$H~@lt$qHH:PC.UI
	T15(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12898:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 14
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_12900:
; Line 746:	            return 1; 

	RV.T3(EAX).I =   #1.I
	GOTO	L_12885:PC
	BLOCK END
	BLOCK 16

L_12901:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_12898:
	BLOCK END
	BLOCK 18

L_12902:
	DBG BLOCK END
; Line 747:	    } 

	BLOCK END
	BLOCK 19

L_12903:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_12904:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12890:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	T16(EAX).A =   ___s1:LINK(4).A
	T17(EAX).A = T16(EAX).A + #4.A
	___s1:LINK(4).A =   T17(EAX).A
	T18(EAX).A =   ___s2:LINK(8).A
	T19(EAX).A = T18(EAX).A + #4.A
	___s2:LINK(8).A =   T19(EAX).A
	BLOCK END
	BLOCK 22

L_12888:
	T5(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12887:PC ; T5(EAX).UI != #0.UI
	BLOCK END
	BLOCK 23

L_12889:
; Line 748:	    return 0; 

	RV.T4(EAX).I =   #0.I
; Line 749:	} 

	BLOCK END
	BLOCK 24

L_12905:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_12885:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@compare$qpxHpxHui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@length$qpxH
; Line 751:	inline _LIBCPP_CONSTEXPR_AFTER_CXX14 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12910:
	VAR START	__s
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12912:
; Line 754:	{ 

	VAR START	__len
; Line 755:	    size_t __len = 0; 

	T2(EAX).UI =   #0.UL
	___len:LINK(-4).UI =   T2(EAX).UI
; Line 756:	    for (; !eq(*__s, char_type(0)); ++__s) 

	GOTO	L_12914:PC
	BLOCK END
	BLOCK 4

L_12913:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12917:
; Line 757:	        ++__len; 

	___len:LINK(-4).UI = ___len:LINK(-4).UI + #1.UI
	BLOCK END
	BLOCK 6

L_12918:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_12916:
	T6(EAX).A =   ___s:LINK(4).A
	T7(EAX).A = T6(EAX).A + #4.A
	___s:LINK(4).A =   T7(EAX).A
	BLOCK END
	BLOCK 8

L_12914:
	PARM	#0.U32
	T3(EAX).A =   ___s:LINK(4).A
	T4(EAX).U32 =   *(T3(EAX)).A.U32
	PARM	T4(EAX).U32
	TAG
	GOSUB	#@std@#char_traits$H~@eq$qHH:PC.UI
	T5(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12913:PC ; T5(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9

L_12915:
; Line 758:	    return __len; 

	T8(EAX).UI =   ___len:LINK(-4).UI
	RV.T1(EAX).UI =   T8(EAX).UI
; Line 759:	} 

	BLOCK END
	BLOCK 10

L_12919:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12911:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@length$qpxH

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@eq$qHH
; Line 708:	        {return __c1 == __c2;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12924:
	VAR START	__c1
	VAR START	__c2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12926:
	T1(ECX).U32 =   ___c1:LINK(4).U32
	T2(EAX).U32 =   ___c2:LINK(8).U32
	T3(EAX).UI = T1(ECX).U32 == T2(EAX).U32
	T4(AL).BOOL =   T3(EAX).UI
	RV.T0(AL).BOOL =   T4(AL).BOOL
	BLOCK END
	BLOCK 4

L_12927:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_12925:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@eq$qHH

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@find$qpxHuirxH
; Line 761:	inline _LIBCPP_CONSTEXPR_AFTER_CXX14 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12932:
	VAR START	__s
	VAR START	__n
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12934:
; Line 764:	{ 

	GOTO	L_12936:PC
	BLOCK END
	BLOCK 4

L_12935:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_12939:
; Line 766:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12940:
; Line 767:	        if (eq(*__s, __a)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_12942:
	T4(EAX).A =   ___a:LINK(12).A
	T5(EAX).U32 =   *(T4(EAX)).A.U32
	PARM	T5(EAX).U32
	T6(EAX).A =   ___s:LINK(4).A
	T7(EAX).U32 =   *(T6(EAX)).A.U32
	PARM	T7(EAX).U32
	TAG
	GOSUB	#@std@#char_traits$H~@eq$qHH:PC.UI
	T8(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#8.N
	CONDGO	L_12941:PC ; T8(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 8
	DBG BLOCK START
	BLOCK END
	BLOCK 9

L_12943:
; Line 768:	            return __s; 

	T9(EAX).A =   ___s:LINK(4).A
	RV.T1(EAX).A =   T9(EAX).A
	GOTO	L_12933:PC
	BLOCK END
	BLOCK 10

L_12944:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_12941:
	BLOCK END
	BLOCK 12

L_12945:
	DBG BLOCK END
; Line 769:	        ++__s; 

	T10(EAX).A =   ___s:LINK(4).A
	T11(EAX).A = T10(EAX).A + #4.A
	___s:LINK(4).A =   T11(EAX).A
; Line 770:	    } 

	BLOCK END
	BLOCK 13

L_12946:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_12947:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_12938:
	___n:LINK(8).UI = ___n:LINK(8).UI - #1.UI
; Line 765:	    for (; __n; --__n) 

	BLOCK END
	BLOCK 16

L_12936:
	T3(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_12935:PC ; T3(EAX).UI != #0.UI
	BLOCK END
	BLOCK 17

L_12937:
; Line 771:	    return 0; 

	T12(EAX).A =   #0.I
	RV.T2(EAX).A =   T12(EAX).A
; Line 772:	} 

	BLOCK END
	BLOCK 18

L_12948:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_12933:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@find$qpxHuirxH

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@move$qpHpxHui
; Line 774:	inline _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_12953:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12955:
; Line 777:	{ 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_12957:
; Line 778:	    if (__n == 0) return __s1; 

	T2(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12956:PC ; T2(EAX).UI != #0.UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_12958:
	T3(EAX).A =   ___s1:LINK(4).A
	RV.T0(EAX).A =   T3(EAX).A
	GOTO	L_12954:PC
	BLOCK END
	BLOCK 7

L_12959:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_12956:
	BLOCK END
	BLOCK 9

L_12960:
	DBG BLOCK END
	VAR START	__r
; Line 779:	    char_type* __r = __s1; 

	T4(EAX).A =   ___s1:LINK(4).A
	___r:LINK(-4).A =   T4(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_12962:
; Line 780:	    if (__s1 < __s2) 

	T5(ECX).A =   ___s2:LINK(8).A
	T6(EAX).A =   ___s1:LINK(4).A
	CONDGO	L_12961:PC ; T6(EAX).A S>= T5(ECX).A
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_12963:
; Line 781:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_12964:
; Line 782:	        for (; __n; --__n, ++__s1, ++__s2) 

	GOTO	L_12966:PC
	BLOCK END
	BLOCK 14

L_12965:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_12969:
; Line 783:	            assign(*__s1, *__s2); 

	T8(EAX).A =   ___s2:LINK(8).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___s1:LINK(4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#char_traits$H~@assign$qrHrxH:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 16

L_12970:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_12968:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	T10(EAX).A =   ___s1:LINK(4).A
	T11(EAX).A = T10(EAX).A + #4.A
	___s1:LINK(4).A =   T11(EAX).A
	T12(EAX).A =   ___s2:LINK(8).A
	T13(EAX).A = T12(EAX).A + #4.A
	___s2:LINK(8).A =   T13(EAX).A
	BLOCK END
	BLOCK 18

L_12966:
	T7(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12965:PC ; T7(EAX).UI != #0.UI
	BLOCK END
	BLOCK 19

L_12967:
; Line 784:	    } 

	BLOCK END
	BLOCK 20

L_12971:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_12973:
	DBG BLOCK END
	GOTO	L_12972:PC
	BLOCK END
	BLOCK 22
	DBG BLOCK START
	BLOCK END
	BLOCK 23

L_12974:
	BLOCK END
	BLOCK 24

L_12961:
; Line 785:	    else if (__s2 < __s1) 

	DBG BLOCK START
	BLOCK END
	BLOCK 25

L_12976:
	T14(ECX).A =   ___s1:LINK(4).A
	T15(EAX).A =   ___s2:LINK(8).A
	CONDGO	L_12975:PC ; T15(EAX).A S>= T14(ECX).A
	BLOCK END
	BLOCK 26
	DBG BLOCK START
	BLOCK END
	BLOCK 27

L_12977:
; Line 786:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_12978:
; Line 787:	        __s1 += __n; 

	T16(ECX).A =   ___s1:LINK(4).A
	T17(EAX).I =   ___n:LINK(12).UI
	T18(EAX).I = T17(EAX).I << #2.I
	T19(EAX).A = T16(ECX).A + T18(EAX).I
	___s1:LINK(4).A =   T19(EAX).A
; Line 788:	        __s2 += __n; 

	T20(ECX).A =   ___s2:LINK(8).A
	T21(EAX).I =   ___n:LINK(12).UI
	T22(EAX).I = T21(EAX).I << #2.I
	T23(EAX).A = T20(ECX).A + T22(EAX).I
	___s2:LINK(8).A =   T23(EAX).A
; Line 789:	        for (; __n; --__n) 

	GOTO	L_12980:PC
	BLOCK END
	BLOCK 29

L_12979:
	DBG BLOCK START
	BLOCK END
	BLOCK 30

L_12983:
; Line 790:	            assign(*--__s1, *--__s2); 

	T25(EAX).A =   ___s2:LINK(8).A
	T26(EAX).A = T25(EAX).A - #4.A
	___s2:LINK(8).A =   T26(EAX).A
	T27(EAX).A =   ___s2:LINK(8).A
	PARM	T27(EAX).A
	T28(EAX).A =   ___s1:LINK(4).A
	T29(EAX).A = T28(EAX).A - #4.A
	___s1:LINK(4).A =   T29(EAX).A
	T30(EAX).A =   ___s1:LINK(4).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#char_traits$H~@assign$qrHrxH:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 31

L_12984:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_12982:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	BLOCK END
	BLOCK 33

L_12980:
	T24(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_12979:PC ; T24(EAX).UI != #0.UI
	BLOCK END
	BLOCK 34

L_12981:
; Line 791:	    } 

	BLOCK END
	BLOCK 35

L_12985:
	DBG BLOCK END
	BLOCK END
	BLOCK 36

L_12986:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_12975:
	BLOCK END
	BLOCK 38

L_12987:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_12988:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_12972:
	BLOCK END
	BLOCK 41

L_12989:
	DBG BLOCK END
; Line 792:	    return __r; 

	T31(EAX).A =   ___r:LINK(-4).A
	RV.T1(EAX).A =   T31(EAX).A
; Line 793:	} 

	BLOCK END
	BLOCK 42

L_12990:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_12954:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@move$qpHpxHui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@assign$qrHrxH
; Line 706:	    void assign(char_type& __c1, const char_type& __c2) _NOEXCEPT {__c1 = __c2;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_12995:
	VAR START	__c1
	VAR START	__c2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_12997:
	T0(EAX).A =   ___c2:LINK(8).A
	T1(ECX).U32 =   *(T0(EAX)).A.U32
	T2(EAX).A =   ___c1:LINK(4).A
	*(T2(EAX)).A.U32 =   T1(ECX).U32
	BLOCK END
	BLOCK 4

L_12998:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_12996:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@assign$qrHrxH

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@copy$qpHpxHui
; Line 795:	inline _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13003:
	VAR START	__s1
	VAR START	__s2
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13005:
; Line 798:	{ 

; Line 799:	    _LIBCPP_ASSERT(__s2 < __s1 || __s2 >= __s1+__n, "char_traits::copy overlapped range"); 

	VAR START	__r
; Line 800:	    char_type* __r = __s1; 

	T1(EAX).A =   ___s1:LINK(4).A
	___r:LINK(-4).A =   T1(EAX).A
; Line 801:	    for (; __n; --__n, ++__s1, ++__s2) 

	GOTO	L_13007:PC
	BLOCK END
	BLOCK 4

L_13006:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_13010:
; Line 802:	        assign(*__s1, *__s2); 

	T3(EAX).A =   ___s2:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___s1:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#char_traits$H~@assign$qrHrxH:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 6

L_13011:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13009:
	___n:LINK(12).UI = ___n:LINK(12).UI - #1.UI
	T5(EAX).A =   ___s1:LINK(4).A
	T6(EAX).A = T5(EAX).A + #4.A
	___s1:LINK(4).A =   T6(EAX).A
	T7(EAX).A =   ___s2:LINK(8).A
	T8(EAX).A = T7(EAX).A + #4.A
	___s2:LINK(8).A =   T8(EAX).A
	BLOCK END
	BLOCK 8

L_13007:
	T2(EAX).UI =   ___n:LINK(12).UI
	CONDGO	L_13006:PC ; T2(EAX).UI != #0.UI
	BLOCK END
	BLOCK 9

L_13008:
; Line 803:	    return __r; 

	T9(EAX).A =   ___r:LINK(-4).A
	RV.T0(EAX).A =   T9(EAX).A
; Line 804:	} 

	BLOCK END
	BLOCK 10

L_13012:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_13004:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@copy$qpHpxHui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@assign$qpHuiH
; Line 806:	inline _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13017:
	VAR START	__s
	VAR START	__n
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13019:
; Line 809:	{ 

	VAR START	__r
; Line 810:	    char_type* __r = __s; 

	T1(EAX).A =   ___s:LINK(4).A
	___r:LINK(-4).A =   T1(EAX).A
; Line 811:	    for (; __n; --__n, ++__s) 

	GOTO	L_13021:PC
	BLOCK END
	BLOCK 4

L_13020:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_13024:
; Line 812:	        assign(*__s, __a); 

	T3(EAX).A =   #___a:LINK(12).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___s:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#char_traits$H~@assign$qrHrxH:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 6

L_13025:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13023:
	___n:LINK(8).UI = ___n:LINK(8).UI - #1.UI
	T5(EAX).A =   ___s:LINK(4).A
	T6(EAX).A = T5(EAX).A + #4.A
	___s:LINK(4).A =   T6(EAX).A
	BLOCK END
	BLOCK 8

L_13021:
	T2(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_13020:PC ; T2(EAX).UI != #0.UI
	BLOCK END
	BLOCK 9

L_13022:
; Line 813:	    return __r; 

	T7(EAX).A =   ___r:LINK(-4).A
	RV.T0(EAX).A =   T7(EAX).A
; Line 814:	} 

	BLOCK END
	BLOCK 10

L_13026:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_13018:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@assign$qpHuiH

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#copy$pxcpc~$qpxcpxcpc
; Line 1730:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17_WITH_IS_CONSTANT_EVALUATED 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13031:
	VAR START	__first
	VAR START	__last
	VAR START	__result
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13033:
; Line 1734:	    if (__libcpp_is_constant_evaluated()) { 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13035:
	T10(AL).BOOL =   #0.BOOL
	CONDGO	L_13034:PC ; #0.BOOL == T10(AL).BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13036:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13037:
; Line 1735:	        return _VSTD::__copy_constexpr( 

	T11(EAX).A =   ___result:LINK(12).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pc~$qpc:PC.UI
	T12(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	T13(EAX).A =   ___last:LINK(8).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxc~$qpxc:PC.UI
	T14(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T14(EAX).A
	T15(EAX).A =   ___first:LINK(4).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxc~$qpxc:PC.UI
	T16(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__copy_constexpr$pxcpc~$qpxcpxcpc:PC.UI
	T17(EAX).A =   RV.T3(EAX).A
	PARMADJ	#C.N
	RV.T4(EAX).A =   T17(EAX).A
	GOTO	L_13032:PC
; Line 1737:	    } else { 

	BLOCK END
	BLOCK 8

L_13038:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_13040:
	DBG BLOCK END
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13041:
	BLOCK END
	BLOCK 12

L_13034:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_13042:
; Line 1738:	        return _VSTD::__copy( 

	T18(EAX).A =   ___result:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pc~$qpc:PC.UI
	T19(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T19(EAX).A
	T20(EAX).A =   ___last:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxc~$qpxc:PC.UI
	T21(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T21(EAX).A
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxc~$qpxc:PC.UI
	T23(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__copy$pxcpc~$qpxcpxcpc:PC.UI
	T24(EAX).A =   RV.T8(EAX).A
	PARMADJ	#C.N
	RV.T9(EAX).A =   T24(EAX).A
; Line 1740:	    } 

	BLOCK END
	BLOCK 14

L_13043:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_13044:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_13039:
	BLOCK END
	BLOCK 17

L_13045:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13046:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_13032:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#copy$pxcpc~$qpxcpxcpc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#copy$pxCpC~$qpxCpxCpC
; Line 1730:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17_WITH_IS_CONSTANT_EVALUATED 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13051:
	VAR START	__first
	VAR START	__last
	VAR START	__result
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13053:
; Line 1734:	    if (__libcpp_is_constant_evaluated()) { 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13055:
	T10(AL).BOOL =   #0.BOOL
	CONDGO	L_13054:PC ; #0.BOOL == T10(AL).BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13056:
	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13057:
; Line 1735:	        return _VSTD::__copy_constexpr( 

	T11(EAX).A =   ___result:LINK(12).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pC~$qpC:PC.UI
	T12(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	T13(EAX).A =   ___last:LINK(8).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxC~$qpxC:PC.UI
	T14(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T14(EAX).A
	T15(EAX).A =   ___first:LINK(4).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxC~$qpxC:PC.UI
	T16(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__copy_constexpr$pxCpC~$qpxCpxCpC:PC.UI
	T17(EAX).A =   RV.T3(EAX).A
	PARMADJ	#C.N
	RV.T4(EAX).A =   T17(EAX).A
	GOTO	L_13052:PC
; Line 1737:	    } else { 

	BLOCK END
	BLOCK 8

L_13058:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_13060:
	DBG BLOCK END
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13061:
	BLOCK END
	BLOCK 12

L_13054:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_13062:
; Line 1738:	        return _VSTD::__copy( 

	T18(EAX).A =   ___result:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pC~$qpC:PC.UI
	T19(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T19(EAX).A
	T20(EAX).A =   ___last:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxC~$qpxC:PC.UI
	T21(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T21(EAX).A
	T22(EAX).A =   ___first:LINK(4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#__unwrap_iter$pxC~$qpxC:PC.UI
	T23(EAX).A =   RV.T7(EAX).A
	PARMADJ	#4.N
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__copy$pxCpC~$qpxCpxCpC:PC.UI
	T24(EAX).A =   RV.T8(EAX).A
	PARMADJ	#C.N
	RV.T9(EAX).A =   T24(EAX).A
; Line 1740:	    } 

	BLOCK END
	BLOCK 14

L_13063:
	DBG BLOCK END
	BLOCK END
	BLOCK 15

L_13064:
	DBG BLOCK END
	BLOCK END
	BLOCK 16

L_13059:
	BLOCK END
	BLOCK 17

L_13065:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13066:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_13052:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#copy$pxCpC~$qpxCpxCpC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @FPF@$basn$qrx3FPF
; Line 141:	    { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13071:
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13073:
; Line 142:	        exp = right.exp; 

	T1(EAX).A =   _right:LINK(8).A
	T2(ECX).I =   *(T1(EAX) + 0).A.I
	T3(EAX).A =   ___$$this:LINK(4).A
	*(T3(EAX) + 0).A.I =   T2(ECX).I
; Line 143:	        memcpy(mantissa, right.mantissa, sizeof(mantissa)); 

	T4(EAX).UI =   #A.I
	PARM	T4(EAX).UI
	T5(EAX).A =   _right:LINK(8).A
	T6(EAX).A = T5(EAX).A + #4.A
	PARM	T6(EAX).A
	T7(EAX).A =   ___$$this:LINK(4).A
	T8(EAX).A = T7(EAX).A + #4.A
	PARM	T8(EAX).A
	TAG
	GOSUB	#_memcpy:PC.UI
	PARMADJ	#C.N
; Line 144:	        sign = right.sign; 

	T9(EAX).A =   _right:LINK(8).A
	T10(CL).UC =   *(T9(EAX) + F).A.UC
	T11(EAX).A =   ___$$this:LINK(4).A
	*(T11(EAX) + F).A.UC =   T10(CL).UC
; Line 145:	        type = right.type; 

	T12(EAX).A =   _right:LINK(8).A
	T13(CL).UC =   *(T12(EAX) + E).A.UC
	T14(EAX).A =   ___$$this:LINK(4).A
	*(T14(EAX) + E).A.UC =   T13(CL).UC
	T15(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T15(EAX).A
; Line 147:	    } 
; Line 148:	    FPF& operator=(const FPF&& right) 

; Line 148:	    FPF& operator=(const FPF&& right) 

	BLOCK END
	BLOCK 4

L_13074:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13072:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @FPF@$basn$qrx3FPF

segment end exitseg

segment codeseg

segment end codeseg

	virtual @FPF@$basn$qL
; Line 157:	    { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13079:
	VAR START	right
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13081:
; Line 158:	        FromLongLong(right); 

	T1(EDX:EAX).LL =   _right:LINK(8).LL
	PARM	T1(EDX:EAX).LL
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@FPF@FromLongLong$qL:PC.UI
	PARMADJ	#C.N
	T3(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T3(EAX).A
; Line 160:	    } 
; Line 161:	    FPF& operator=(unsigned long long right) 

; Line 161:	    FPF& operator=(unsigned long long right) 

	BLOCK END
	BLOCK 4

L_13082:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13080:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @FPF@$basn$qL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@isintconst$qp27@Optimizer@SimpleExpression
; Line 351:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13087:
	VAR START	e
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13089:
; Line 352:	    switch (e->type) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13091:
	DBG BLOCK END
	T2(EAX).A =   _e:LINK(4).A
	T3(EAX).I =   *(T2(EAX) + 0).A.I
	COSWITCH(T3(EAX).I,#2.UI,#2.UI,L_13096:PC)
	SWBRANCH(#4.UI,L_13092:PC)
	SWBRANCH(#5.UI,L_13094:PC)
	BLOCK END
	BLOCK 5

L_13092:
	BLOCK END
	BLOCK 6

L_13094:
	DBG BLOCK START
; Line 353:	    case se_i: 

	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_13088:PC
	BLOCK END
	BLOCK 7

L_13096:
	BLOCK END
	BLOCK 8

L_13090:
	BLOCK END
	BLOCK 9

L_13097:
	DBG BLOCK END
; Line 355:	        return true; 
; Line 356:	    return false; 

; Line 356:	    return false; 

	RV.T1(AL).BOOL =   #0.BOOL
; Line 357:	} 

	BLOCK END
	BLOCK 10

L_13098:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_13088:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@isintconst$qp27@Optimizer@SimpleExpression

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@isfloatconst$qp27@Optimizer@SimpleExpression
; Line 359:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13103:
	VAR START	e
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13105:
; Line 360:	    switch (e->type) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13107:
	DBG BLOCK END
	T2(EAX).A =   _e:LINK(4).A
	T3(EAX).I =   *(T2(EAX) + 0).A.I
	COSWITCH(T3(EAX).I,#1.UI,#1.UI,L_13110:PC)
	SWBRANCH(#6.UI,L_13108:PC)
	BLOCK END
	BLOCK 5

L_13108:
	DBG BLOCK START
; Line 361:	    case se_f: 
; Line 362:	        return true; 

; Line 362:	        return true; 

	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_13104:PC
	BLOCK END
	BLOCK 6

L_13110:
	BLOCK END
	BLOCK 7

L_13106:
	BLOCK END
	BLOCK 8

L_13111:
	DBG BLOCK END
; Line 363:	    return false; 

	RV.T1(AL).BOOL =   #0.BOOL
; Line 364:	} 

	BLOCK END
	BLOCK 9

L_13112:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_13104:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@isfloatconst$qp27@Optimizer@SimpleExpression

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@iscomplexconst$qp27@Optimizer@SimpleExpression
; Line 366:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13117:
	VAR START	e
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13119:
; Line 367:	    switch (e->type) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13121:
	DBG BLOCK END
	T2(EAX).A =   _e:LINK(4).A
	T3(EAX).I =   *(T2(EAX) + 0).A.I
	COSWITCH(T3(EAX).I,#1.UI,#1.UI,L_13124:PC)
	SWBRANCH(#8.UI,L_13122:PC)
	BLOCK END
	BLOCK 5

L_13122:
	DBG BLOCK START
; Line 368:	    case se_fc: 
; Line 369:	        return true; 

; Line 369:	        return true; 

	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_13118:PC
	BLOCK END
	BLOCK 6

L_13124:
	BLOCK END
	BLOCK 7

L_13120:
	BLOCK END
	BLOCK 8

L_13125:
	DBG BLOCK END
; Line 370:	    return false; 

	RV.T1(AL).BOOL =   #0.BOOL
; Line 371:	} 

	BLOCK END
	BLOCK 9

L_13126:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_13118:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@iscomplexconst$qp27@Optimizer@SimpleExpression

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@isimaginaryconst$qp27@Optimizer@SimpleExpression
; Line 373:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13131:
	VAR START	e
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13133:
; Line 374:	    switch (e->type) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13135:
	DBG BLOCK END
	T2(EAX).A =   _e:LINK(4).A
	T3(EAX).I =   *(T2(EAX) + 0).A.I
	COSWITCH(T3(EAX).I,#1.UI,#1.UI,L_13138:PC)
	SWBRANCH(#7.UI,L_13136:PC)
	BLOCK END
	BLOCK 5

L_13136:
	DBG BLOCK START
; Line 375:	    case se_fi: 
; Line 376:	        return true; 

; Line 376:	        return true; 

	RV.T0(AL).BOOL =   #1.BOOL
	GOTO	L_13132:PC
	BLOCK END
	BLOCK 6

L_13138:
	BLOCK END
	BLOCK 7

L_13134:
	BLOCK END
	BLOCK 8

L_13139:
	DBG BLOCK END
; Line 377:	    return false; 

	RV.T1(AL).BOOL =   #0.BOOL
; Line 378:	} 

	BLOCK END
	BLOCK 9

L_13140:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_13132:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@isimaginaryconst$qp27@Optimizer@SimpleExpression

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$uiui~@$bcall$xqrxuirxui
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13145:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13147:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).UI =   *(T1(EAX)).A.UI
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).UI =   *(T3(EAX)).A.UI
	T5(EAX).UI = T2(ECX).UI U< T4(EAX).UI
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_13148:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13146:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$uiui~@$bcall$xqrxuirxui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@push_back$qRpn0

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13153:
	VAR START	__x
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13155:
; Line 1650:	    if (this->__end_ < this->__end_cap()) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13157:
	T3(EAX).A =   ___$$this:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$qv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(ECX).A =   *(T4(EAX)).A.A
	T6(EAX).A =   ___$$this:LINK(4).A
	T7(EAX).A =   *(T6(EAX) + 8).A.A
	CONDGO	L_13156:PC ; T7(EAX).A S>= T5(ECX).A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13158:
; Line 1651:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13159:
; Line 1652:	        __construct_one_at_end(_VSTD::move(__x)); 

	T8(EAX).A =   ___x:LINK(8).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#move$rp23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T9(EAX).A
	T10(EAX).A =   ___$$this:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~$qRpn0:PC.UI
	PARMADJ	#8.N
; Line 1653:	    } 

	BLOCK END
	BLOCK 8

L_13160:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_13162:
	DBG BLOCK END
	GOTO	L_13161:PC
	BLOCK END
	BLOCK 10
	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13163:
	BLOCK END
	BLOCK 12

L_13156:
; Line 1654:	    else 

; Line 1655:	        __push_back_slow_path(_VSTD::move(__x)); 

	T11(EAX).A =   ___x:LINK(8).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#move$rp23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T12(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	T13(EAX).A =   ___$$this:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~$qRpn0:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 13

L_13164:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_13161:
	BLOCK END
	BLOCK 15

L_13165:
	DBG BLOCK END
; Line 1656:	} 

	BLOCK END
	BLOCK 16

L_13166:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13154:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@push_back$qRpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#Allocate$27@Optimizer@SimpleExpression~$qi
; Line 66:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13171:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13173:
; Line 67:	    auto rv = static_cast<T*>(Alloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I * #48.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 68:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#48.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp303:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp303:LINK(-8).A
	CONDGO	L_13176:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp303:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@Optimizer@SimpleExpression@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13176:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 70:	} 
; Line 71:	template <class T> 

; Line 71:	template <class T> 

	BLOCK END
	BLOCK 6

L_13174:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13172:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#Allocate$27@Optimizer@SimpleExpression~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#Allocate$5amode~$qi
; Line 66:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13180:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13182:
; Line 67:	    auto rv = static_cast<T*>(Alloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I * #18.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 68:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#18.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp304:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp304:LINK(-8).A
	CONDGO	L_13185:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp304:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@amode@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13185:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 70:	} 
; Line 71:	template <class T> 

; Line 71:	template <class T> 

	BLOCK END
	BLOCK 6

L_13183:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13181:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#Allocate$5amode~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @amode@$basn$qrx5amode

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13189:
	T1(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.I
	T3(EAX).A =   ___$$this:LINK(4).A
	*(T3(EAX)).A.I =   T2(ECX).I
	T4(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T5(CL).C =   *(T4(EAX) + 4).A.C
	T6(EAX).A =   ___$$this:LINK(4).A
	*(T6(EAX) + 4).A.C =   T5(CL).C
	T7(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T8(CL).C =   *(T7(EAX) + 5).A.C
	T9(EAX).A =   ___$$this:LINK(4).A
	*(T9(EAX) + 5).A.C =   T8(CL).C
	T10(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T11(CL).C =   *(T10(EAX) + 6).A.C
	T12(EAX).A =   ___$$this:LINK(4).A
	*(T12(EAX) + 6).A.C =   T11(CL).C
	T13(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T14(CL).C =   *(T13(EAX) + 7).A.C
	T15(EAX).A =   ___$$this:LINK(4).A
	*(T15(EAX) + 7).A.C =   T14(CL).C
	T16(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T17(CL).C =   *(T16(EAX) + 8).A.C
	T18(EAX).A =   ___$$this:LINK(4).A
	*(T18(EAX) + 8).A.C =   T17(CL).C
	T19(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T20(CL).C =   *(T19(EAX) + 9).A.C
	T21(EAX).A =   ___$$this:LINK(4).A
	*(T21(EAX) + 9).A.C =   T20(CL).C
	T22(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T23(CL).C =   *(T22(EAX) + A).A.C
	T24(EAX).A =   ___$$this:LINK(4).A
	*(T24(EAX) + A).A.C =   T23(CL).C
	T25(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T26(ECX).A =   *(T25(EAX) + C).A.A
	T27(EAX).A =   ___$$this:LINK(4).A
	*(T27(EAX) + C).A.A =   T26(ECX).A
	T28(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T29(ECX).I =   *(T28(EAX) + 10).A.I
	T30(EAX).A =   ___$$this:LINK(4).A
	*(T30(EAX) + 10).A.I =   T29(ECX).I
	T31(EAX).A =   Anonymous++Identifier 64854:LINK(8).A
	T32(ECX).I =   *(T31(EAX) + 14).A.I
	T33(EAX).A =   ___$$this:LINK(4).A
	*(T33(EAX) + 14).A.I =   T32(ECX).I
	T34(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T34(EAX).A
	BLOCK END
	BLOCK 3

L_13190:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @amode@$basn$qrx5amode

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@SimpleExpression@$bctr$qv
; Line 275:	struct SimpleExpression 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13195:
	VAR START	Unnamed++Identifier 23633
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13197:
	T1(EAX).A =   ___$$this:LINK(4).A
	T2(EAX).A = T1(EAX).A + #8.A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@Optimizer@SimpleExpression@__anontype_fa409fba_0005@__anontype_fa409fba_0006@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T3(EAX).A =   ___$$this:LINK(4).A
	T4(EAX).A = T3(EAX).A + #8.A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@FPF@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T5(EAX).A =   ___$$this:LINK(4).A
	T6(EAX).A = T5(EAX).A + #8.A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@Optimizer@SimpleExpression@__anontype_fa409fba_0005@__anontype_fa409fba_0007@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 4

L_13200:
	DBG BLOCK END
	T7(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T7(EAX).A
	BLOCK END
	BLOCK 5

L_13196:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@SimpleExpression@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#beLocalAllocate$27@Optimizer@SimpleExpression~$qi
; Line 122:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13205:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13207:
; Line 123:	    auto rv = static_cast<T*>(beLocalAlloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I * #48.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 124:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#48.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp305:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp305:LINK(-8).A
	CONDGO	L_13210:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp305:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@Optimizer@SimpleExpression@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13210:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 126:	} 
; Line 127:	template <class T> 

; Line 127:	template <class T> 

	BLOCK END
	BLOCK 6

L_13208:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13206:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#beLocalAllocate$27@Optimizer@SimpleExpression~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @amode@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13214:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_13215:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @amode@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#beLocalAllocate$5amode~$qi
; Line 122:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13222:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13224:
; Line 123:	    auto rv = static_cast<T*>(beLocalAlloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I * #18.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 124:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#18.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp306:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp306:LINK(-8).A
	CONDGO	L_13227:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp306:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@amode@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13227:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 126:	} 
; Line 127:	template <class T> 

; Line 127:	template <class T> 

	BLOCK END
	BLOCK 6

L_13225:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13223:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#beLocalAllocate$5amode~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#Allocate$23@Optimizer@SimpleSymbol~$qi
; Line 66:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13231:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13233:
; Line 67:	    auto rv = static_cast<T*>(Alloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I * #70.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 68:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#70.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp312:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp312:LINK(-8).A
	CONDGO	L_13236:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp312:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@Optimizer@SimpleSymbol@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13236:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 70:	} 
; Line 71:	template <class T> 

; Line 71:	template <class T> 

	BLOCK END
	BLOCK 6

L_13234:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13232:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#Allocate$23@Optimizer@SimpleSymbol~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#Allocate$21@Optimizer@SimpleType~$qi
; Line 66:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13240:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13242:
; Line 67:	    auto rv = static_cast<T*>(Alloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I << #5.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 68:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#20.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp313:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp313:LINK(-8).A
	CONDGO	L_13245:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp313:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@Optimizer@SimpleType@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13245:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 70:	} 
; Line 71:	template <class T> 

; Line 71:	template <class T> 

	BLOCK END
	BLOCK 6

L_13243:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13241:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#Allocate$21@Optimizer@SimpleType~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$qv
; Line 354:	        {return __end_cap_.first();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13249:
	VAR START	Unnamed++Identifier 65834
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13251:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #C.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@first$qv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_13252:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13250:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rp23@Optimizer@SimpleSymbol~$qrpn0
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13257:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13259:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_13260:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13258:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rp23@Optimizer@SimpleSymbol~$qrpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~$qRpn0
; Line 922:	  void __construct_one_at_end(_Args&& ...__args) { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#54.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13265:
	PARM	#@$xc@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~$qRpn0:RAM.A
	T3(EAX).A =   #$$xctab:LINK(-84).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_13268:
	VAR START	__args
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13267:
; Line 923:	    _ConstructTransaction __tx(*this, 1); 

	VAR START	__tx
	T4(EAX).UI =   #1.I
	PARM	T4(EAX).UI
	T5(EAX).A =   ___$$this:LINK(4).A
	PARM	T5(EAX).A
	T6(EAX).A = #@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~@__tx:LINK(-12).A + #0.A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bctr$qr#vector$pn0#allocator$pn0~~ui:PC.UI
	PARMADJ	#C.N
	$$xctab:LINK(-84)+14.A =   #1.A
; Line 924:	    __alloc_traits::construct(this->__alloc(), _VSTD::__to_address(__tx.__pos_), 

	T7(EAX).A =   ___args:LINK(8).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T8(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T8(EAX).A
	T9(EAX).A =   @#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~@__tx:LINK(-12)+4.A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0:PC.UI
	T10(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T10(EAX).A
	T11(EAX).A =   ___$$this:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv:PC.UI
	T12(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0:PC.UI
	PARMADJ	#C.N
; Line 926:	    ++__tx.__pos_; 

	T13(EAX).A =   @#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~@__tx:LINK(-12)+4.A
	T14(EAX).A = T13(EAX).A + #4.A
	@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~@__tx:LINK(-12)+4.A =   T14(EAX).A
; Line 927:	  } 
; Line 928:	}; 

; Line 928:	}; 

	BLOCK END
	BLOCK 5

L_13270:
	$$xctab:LINK(-84)+14.A =   #2.A
	T15(EAX).A = #@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~@__tx:LINK(-12).A + #0.A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_13266:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~$qRpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~
	DC.A @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x70
	DC.B 0x72
	DC.B 0x65
	DC.B 0x73
	DC.B 0x73
	DC.B 0x65
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x70
	DC.B 0x61
	DC.B 0x69
	DC.B 0x72
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x6c
	DC.B 0x65
	DC.B 0x6d
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#allocator$p23@Optimizer@SimpleSymbol~
	DC.A @std@#allocator$p23@Optimizer@SimpleSymbol~@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x61
	DC.B 0x6c
	DC.B 0x6c
	DC.B 0x6f
	DC.B 0x63
	DC.B 0x61
	DC.B 0x74
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@#allocator$p23@Optimizer@SimpleSymbol~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~
	DC.A @std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x70
	DC.B 0x72
	DC.B 0x65
	DC.B 0x73
	DC.B 0x73
	DC.B 0x65
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x70
	DC.B 0x61
	DC.B 0x69
	DC.B 0x72
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x6c
	DC.B 0x65
	DC.B 0x6d
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~
	DC.A @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x70
	DC.B 0x72
	DC.B 0x65
	DC.B 0x73
	DC.B 0x73
	DC.B 0x65
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x70
	DC.B 0x61
	DC.B 0x69
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~+0
	DC.I 0x0
	DC.I 0x800
	DC.A @$xt@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~+0
	DC.I 0x4
	DC.I 0x0
	virtual end @$xt@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~
	DC.A @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv+0
	DC.I 0x14
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x76
	DC.B 0x65
	DC.B 0x63
	DC.B 0x74
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x5f
	DC.B 0x62
	DC.B 0x61
	DC.B 0x73
	DC.B 0x65
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#__vector_base_common$4bool?1?~+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~
	DC.A @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv+0
	DC.I 0x14
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x76
	DC.B 0x65
	DC.B 0x63
	DC.B 0x74
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@77@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction
	DC.A @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bdtr$qv+0
	DC.I 0xc
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x76
	DC.B 0x65
	DC.B 0x63
	DC.B 0x74
	DC.B 0x6f
	DC.B 0x72
	DC.B 0x5f
	DC.B 0x43
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x73
	DC.B 0x74
	DC.B 0x72
	DC.B 0x75
	DC.B 0x63
	DC.B 0x74
	DC.B 0x54
	DC.B 0x72
	DC.B 0x61
	DC.B 0x6e
	DC.B 0x73
	DC.B 0x61
	DC.B 0x63
	DC.B 0x74
	DC.B 0x69
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@77@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~$qRpn0
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@77@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction+0
	DC.I OFFSETOF @#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~@__tx + 0
	DC.I 0x1
	DC.I 0x2
	DC.I 0x0
	virtual end @$xc@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__construct_one_at_end$pn0~$qRpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv
; Line 348:	        {return __end_cap_.second();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13275:
	VAR START	Unnamed++Identifier 65832
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13277:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #C.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@second$qv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_13278:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13276:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13283:
	BLOCK END
	BLOCK 3

L_13284:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~$qRpn0

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#64.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13289:
	PARM	#@$xc@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~$qRpn0:RAM.A
	T6(EAX).A =   #$$xctab:LINK(-100).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_13292:
	VAR START	__x
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13291:
; Line 1622:	    allocator_type& __a = this->__alloc(); 

	VAR START	__a
	T7(EAX).A =   ___$$this:LINK(4).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv:PC.UI
	T8(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	___a:LINK(-4).A =   T8(EAX).A
	VAR START	__v
	T9(EAX).A =   ___a:LINK(-4).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___$$this:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@size$xqv:PC.UI
	T11(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#4.N
	PARM	T11(EAX).UI
	T12(EAX).A =   ___$$this:LINK(4).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@size$xqv:PC.UI
	T13(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#4.N
	T14(EAX).UL = T13(EAX).UI + #1.UI
	PARM	T14(EAX).UL
	T15(EAX).A =   ___$$this:LINK(4).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__recommend$xqui:PC.UI
	T16(EAX).UI =   RV.T3(EAX).UI
	PARMADJ	#8.N
	PARM	T16(EAX).UI
	T17(EAX).A = #@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v:LINK(-28).A + #0.A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bctr$quiuir#allocator$pn0~:PC.UI
	PARMADJ	#10.N
	$$xctab:LINK(-100)+14.A =   #1.A
; Line 1625:	    __alloc_traits::construct(__a, _VSTD::__to_address(__v.__end_), _VSTD::forward<_Up>(__x)); 

	T18(EAX).A =   ___x:LINK(8).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T19(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	PARM	T19(EAX).A
	T20(EAX).A =   @#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v:LINK(-28)+C.A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0:PC.UI
	T21(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T21(EAX).A
	T22(EAX).A =   ___a:LINK(-4).A
	PARM	T22(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0:PC.UI
	PARMADJ	#C.N
; Line 1626:	    __v.__end_++; 

	T23(EAX).A =   @#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v:LINK(-28)+C.A
	T24(EAX).A = T23(EAX).A + #4.A
	@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v:LINK(-28)+C.A =   T24(EAX).A
; Line 1627:	    __swap_out_circular_buffer(__v); 

	T25(EAX).A =   #@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v:LINK(-28).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___$$this:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__swap_out_circular_buffer$qr#__split_buffer$pn0r#allocator$pn0~~:PC.UI
	PARMADJ	#8.N
; Line 1628:	} 

	BLOCK END
	BLOCK 5

L_13294:
	$$xctab:LINK(-100)+14.A =   #2.A
	T27(EAX).A = #@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v:LINK(-28).A + #0.A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_13290:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~$qRpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__split_buffer_common$4bool?1?~
	DC.A @std@#__split_buffer_common$4bool?1?~@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x73
	DC.B 0x70
	DC.B 0x6c
	DC.B 0x69
	DC.B 0x74
	DC.B 0x5f
	DC.B 0x62
	DC.B 0x75
	DC.B 0x66
	DC.B 0x66
	DC.B 0x65
	DC.B 0x72
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x6d
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@#__split_buffer_common$4bool?1?~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~
	DC.A @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv+0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x70
	DC.B 0x72
	DC.B 0x65
	DC.B 0x73
	DC.B 0x73
	DC.B 0x65
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x70
	DC.B 0x61
	DC.B 0x69
	DC.B 0x72
	DC.B 0x5f
	DC.B 0x65
	DC.B 0x6c
	DC.B 0x65
	DC.B 0x6d
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~
	DC.A @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv+0
	DC.I 0x8
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6d
	DC.B 0x70
	DC.B 0x72
	DC.B 0x65
	DC.B 0x73
	DC.B 0x73
	DC.B 0x65
	DC.B 0x64
	DC.B 0x5f
	DC.B 0x70
	DC.B 0x61
	DC.B 0x69
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~+0
	DC.I 0x0
	DC.I 0x800
	DC.A @$xt@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~+0
	DC.I 0x4
	DC.I 0x0
	virtual end @$xt@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~
	DC.A @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv+0
	DC.I 0x18
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x73
	DC.B 0x70
	DC.B 0x6c
	DC.B 0x69
	DC.B 0x74
	DC.B 0x5f
	DC.B 0x62
	DC.B 0x75
	DC.B 0x66
	DC.B 0x66
	DC.B 0x65
	DC.B 0x72
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#__split_buffer_common$4bool?1?~+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~$qRpn0
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~+0
	DC.I OFFSETOF @#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~@__v + 0
	DC.I 0x1
	DC.I 0x2
	DC.I 0x0
	virtual end @$xc@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@#__push_back_slow_path$pn0~$qRpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @#beLocalAllocate$5ocode~$qi
; Line 122:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_13299:
	VAR START	sz
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13301:
; Line 123:	    auto rv = static_cast<T*>(beLocalAlloc(sz * sizeof(T))); 

	VAR START	rv
	T3(EAX).I =   _sz:LINK(4).I
	T4(EAX).I = T3(EAX).I * #28.I
	PARM	T4(EAX).I
	TAG
	GOSUB	#@Alloc$qi:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	_rv:LINK(-4).A =   T5(EAX).A
; Line 124:	    new (rv) T; 

	T6(EAX).A =   _rv:LINK(-4).A
	PARM	T6(EAX).A
	PARM	#28.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	$anontemp360:LINK(-8).A =   T7(EAX).A
	T8(EAX).A =   $anontemp360:LINK(-8).A
	CONDGO	L_13304:PC ; T8(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T9(EAX).A =   $anontemp360:LINK(-8).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@ocode@$bctr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 5

L_13304:
	T10(EAX).A =   _rv:LINK(-4).A
	RV.T2(EAX).A =   T10(EAX).A
; Line 126:	} 
; Line 127:	template <class T> 

; Line 127:	template <class T> 

	BLOCK END
	BLOCK 6

L_13302:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_13300:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @#beLocalAllocate$5ocode~$qi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @ocode@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13308:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_13309:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @ocode@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator$p23@Optimizer@SimpleSymbol~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13316:
	BLOCK END
	BLOCK 3

L_13317:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator$p23@Optimizer@SimpleSymbol~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13322:
	T0(EAX).A =   ___$$this:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_13323:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13328:
	T0(EAX).A =   ___$$this:LINK(4).A
	T1(EAX).A = T0(EAX).A + #4.A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_13329:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13334:
	VAR START	Unnamed++Identifier 65837
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13336:
; Line 461:	    if (__begin_ != nullptr) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13338:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A =   *(T2(EAX) + 4).A.A
	CONDGO	L_13337:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13339:
; Line 462:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13340:
; Line 463:	        clear(); 

	T4(EAX).A =   ___$$this:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@clear$qv:PC.UI
	PARMADJ	#4.N
; Line 464:	        __alloc_traits::deallocate(__alloc(), __begin_, capacity()); 

	T5(EAX).A =   ___$$this:LINK(4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T6(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	PARM	T6(EAX).UI
	T7(EAX).A =   ___$$this:LINK(4).A
	T8(EAX).A =   *(T7(EAX) + 4).A.A
	PARM	T8(EAX).A
	T9(EAX).A =   ___$$this:LINK(4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv:PC.UI
	T10(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@deallocate$qr#allocator$pn0~ppn0ui:PC.UI
	PARMADJ	#C.N
; Line 465:	    } 

	BLOCK END
	BLOCK 8

L_13341:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_13342:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_13337:
	BLOCK END
	BLOCK 11

L_13343:
	DBG BLOCK END
; Line 466:	} 

	T11(EAX).A =   ___$$this:LINK(4).A
	T12(EAX).A = T11(EAX).A + #C.A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	T13(EAX).A =   ___$$this:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#__vector_base_common$4bool?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 12

L_13344:
	DBG BLOCK END
	BLOCK END
	BLOCK 13

L_13335:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv
; Line 550:	    { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13349:
	VAR START	Unnamed++Identifier 66171
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13351:
; Line 551:	        __annotate_delete(); 

	T0(EAX).A =   ___$$this:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_delete$xqv:PC.UI
	PARMADJ	#4.N
; Line 553:	        __get_db()->__erase_c(this); 

	T1(EAX).A =   ___$$this:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 4

L_13352:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13350:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bdtr$qv
; Line 902:	    ~_ConstructTransaction() { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13357:
	VAR START	Unnamed++Identifier 66360
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13359:
; Line 903:	      __v_.__end_ = __pos_; 

	T0(EAX).A =   ___$$this:LINK(4).A
	T1(ECX).A =   *(T0(EAX) + 4).A.A
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A =   *(T2(EAX) + 0).A.A
	*(T3(EAX) + 8).A.A =   T1(ECX).A
; Line 905:	      if (__pos_ != __new_end_) { 
; Line 906:	        __v_.__annotate_shrink(__new_end_ - __v_.__begin_); 

; Line 906:	        __v_.__annotate_shrink(__new_end_ - __v_.__begin_); 

	BLOCK END
	BLOCK 4

L_13360:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13358:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13365:
	VAR START	Unnamed++Identifier 66319
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13367:
; Line 348:	    clear(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@clear$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13369:
	T3(EAX).A =   ___$$this:LINK(4).A
	T4(EAX).A =   *(T3(EAX) + 4).A.A
	CONDGO	L_13368:PC ; T4(EAX).A == #0.A
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13370:
; Line 350:	        __alloc_traits::deallocate(__alloc(), __first_, capacity()); 

	T5(EAX).A =   ___$$this:LINK(4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@capacity$xqv:PC.UI
	T6(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	PARM	T6(EAX).UI
	T7(EAX).A =   ___$$this:LINK(4).A
	T8(EAX).A =   *(T7(EAX) + 4).A.A
	PARM	T8(EAX).A
	T9(EAX).A =   ___$$this:LINK(4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__alloc$qv:PC.UI
	T10(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@deallocate$qr#allocator$pn0~ppn0ui:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 7

L_13371:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_13368:
	BLOCK END
	BLOCK 9

L_13372:
	DBG BLOCK END
; Line 351:	} 

	T11(EAX).A =   ___$$this:LINK(4).A
	T12(EAX).A = T11(EAX).A + #10.A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	T13(EAX).A =   ___$$this:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer_common$4bool?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 10

L_13373:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_13366:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$cc~@$bcall$xqrxcrxc
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13378:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13380:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.C
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).I =   *(T3(EAX)).A.C
	T5(EAX).UI = T2(ECX).I S< T4(EAX).I
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_13381:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13379:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$cc~@$bcall$xqrxcrxc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rc~$qrc
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13386:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13388:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_13389:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13387:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rc~$qrc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$c~$qrcrc
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13394:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13396:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(AL).C =   *(T4(EAX)).A.C
	___t:LINK(-1).C =   T5(AL).C
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(CL).C =   *(T7(EAX)).A.C
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.C =   T8(CL).C
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-1).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(CL).C =   *(T11(EAX)).A.C
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.C =   T12(CL).C
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_13397:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13395:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$c~$qrcrc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13402:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13404:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13406:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13405:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13407:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13408:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13410:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13409:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13411:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_13403:PC
	BLOCK END
	BLOCK 11

L_13412:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_13409:
	BLOCK END
	BLOCK 13

L_13413:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13415:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13414:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13416:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_13417:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_13418:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_13419:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_13414:
	BLOCK END
	BLOCK 21

L_13420:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_13403:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_13421:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_13422:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13405:
	BLOCK END
	BLOCK 25

L_13423:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_13425:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13424:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_13426:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_13427:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_13403:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_13428:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_13429:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_13424:
	BLOCK END
	BLOCK 33

L_13430:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_13432:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13431:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_13433:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_13434:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_13435:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_13436:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_13431:
	BLOCK END
	BLOCK 41

L_13437:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_13438:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_13403:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$cc~pc~$qpcpcpcpcr#__less$cc~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13443:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13445:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13447:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13446:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13448:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13449:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13451:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13450:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13452:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13453:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13455:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13454:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13456:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13457:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_13458:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13459:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13454:
	BLOCK END
	BLOCK 19

L_13460:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_13461:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13462:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13450:
	BLOCK END
	BLOCK 23

L_13463:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_13464:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13465:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13446:
	BLOCK END
	BLOCK 27

L_13466:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_13467:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13444:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$cc~pc~$qpcpcpcpcr#__less$cc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$cc~pc~$qpcpcpcpcpcr#__less$cc~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13472:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13474:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$cc~pc~$qpcpcpcpcr#__less$cc~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13476:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13475:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13477:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13478:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13480:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13479:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13481:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13482:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13484:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13483:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13485:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13486:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13488:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13487:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_13489:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_13490:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$c~$qrcrc:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_13491:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13492:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13487:
	BLOCK END
	BLOCK 23

L_13493:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_13494:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13495:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13483:
	BLOCK END
	BLOCK 27

L_13496:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_13497:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13498:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_13479:
	BLOCK END
	BLOCK 31

L_13499:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_13500:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_13501:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13475:
	BLOCK END
	BLOCK 35

L_13502:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_13503:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_13473:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$cc~pc~$qpcpcpcpcpcr#__less$cc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$cc~pc~$qpcpcr#__less$cc~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_13508:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13510:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #2.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #1.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$cc~pc~$qpcpcpcr#__less$cc~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13515:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #1.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_13512:PC
	BLOCK END
	BLOCK 5

L_13511:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13516:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13517:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13519:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13518:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13520:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13521:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(AL).C =   *(T21(EAX)).A.C
	___t:LINK(-9).C =   T22(AL).C
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13525:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_13529:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_13522:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13526:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(CL).C =   *(T26(EAX)).A.C
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.C =   T27(CL).C
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_13527:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13528:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13524:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_13539:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #1.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-9).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$cc~@$bcall$xqrxcrxc:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13522:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_13539:
	BLOCK END
	BLOCK 21

L_13523:
	BLOCK END
	BLOCK 22

L_13530:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-9).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rc~$qrc:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(CL).C =   *(T39(EAX)).A.C
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.C =   T40(CL).C
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_13531:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13532:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13518:
	BLOCK END
	BLOCK 26

L_13533:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_13534:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_13535:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13514:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #1.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_13512:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_13511:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_13513:
	BLOCK END
	BLOCK 32

L_13536:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_13537:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13509:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$cc~pc~$qpcpcr#__less$cc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$CC~@$bcall$xqrxCrxC
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13543:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13545:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).UI =   *(T1(EAX)).A.US
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).UI =   *(T3(EAX)).A.US
	T5(EAX).UI = T2(ECX).UI U< T4(EAX).UI
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_13546:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13544:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$CC~@$bcall$xqrxCrxC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rC~$qrC
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13551:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13553:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_13554:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13552:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rC~$qrC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$C~$qrCrC
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13559:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13561:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T6(AX).W =   *(T4(EAX)).A.US
	___t:LINK(-2).US =   T6(AX).US
; Line 3716:	    __x = _VSTD::move(__y); 

	T7(EAX).A =   ___y:LINK(8).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T8(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T9(CX).US =   *(T8(EAX)).A.US
	T10(EAX).A =   ___x:LINK(4).A
	*(T10(EAX)).A.US =   T9(CX).US
; Line 3717:	    __y = _VSTD::move(__t); 

	T11(EAX).A =   #___t:LINK(-2).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T12(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T13(CX).US =   *(T12(EAX)).A.US
	T14(EAX).A =   ___y:LINK(8).A
	*(T14(EAX)).A.US =   T13(CX).US
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_13562:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13560:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$C~$qrCrC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13567:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13569:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13571:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13570:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13572:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13573:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13575:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13574:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13576:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_13568:PC
	BLOCK END
	BLOCK 11

L_13577:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_13574:
	BLOCK END
	BLOCK 13

L_13578:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13580:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13579:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13581:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_13582:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_13583:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_13584:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_13579:
	BLOCK END
	BLOCK 21

L_13585:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_13568:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_13586:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_13587:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13570:
	BLOCK END
	BLOCK 25

L_13588:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_13590:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13589:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_13591:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_13592:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_13568:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_13593:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_13594:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_13589:
	BLOCK END
	BLOCK 33

L_13595:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_13597:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13596:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_13598:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_13599:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_13600:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_13601:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_13596:
	BLOCK END
	BLOCK 41

L_13602:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_13603:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_13568:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$CC~pC~$qpCpCpCpCr#__less$CC~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13608:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13610:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13612:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13611:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13613:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13614:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13616:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13615:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13617:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13618:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13620:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13619:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13621:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13622:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_13623:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13624:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13619:
	BLOCK END
	BLOCK 19

L_13625:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_13626:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13627:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13615:
	BLOCK END
	BLOCK 23

L_13628:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_13629:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13630:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13611:
	BLOCK END
	BLOCK 27

L_13631:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_13632:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13609:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$CC~pC~$qpCpCpCpCr#__less$CC~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$CC~pC~$qpCpCpCpCpCr#__less$CC~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13637:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13639:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$CC~pC~$qpCpCpCpCr#__less$CC~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13641:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13640:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13642:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13643:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13645:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13644:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13646:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13647:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13649:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13648:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13650:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13651:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13653:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13652:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_13654:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_13655:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$C~$qrCrC:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_13656:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13657:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13652:
	BLOCK END
	BLOCK 23

L_13658:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_13659:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13660:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13648:
	BLOCK END
	BLOCK 27

L_13661:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_13662:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13663:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_13644:
	BLOCK END
	BLOCK 31

L_13664:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_13665:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_13666:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13640:
	BLOCK END
	BLOCK 35

L_13667:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_13668:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_13638:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$CC~pC~$qpCpCpCpCpCr#__less$CC~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$CC~pC~$qpCpCr#__less$CC~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_13673:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13675:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #4.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #2.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$CC~pC~$qpCpCpCr#__less$CC~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13680:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #2.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_13677:PC
	BLOCK END
	BLOCK 5

L_13676:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13681:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13682:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13684:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13683:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13685:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13686:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T23(AX).W =   *(T21(EAX)).A.US
	___t:LINK(-10).US =   T23(AX).US
	VAR START	__k
	T24(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T24(EAX).A
; Line 3829:	            __j = __i; 

	T25(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T25(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13690:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_13694:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_13687:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13691:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T26(EAX).A =   ___k:LINK(-16).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T27(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T28(CX).US =   *(T27(EAX)).A.US
	T29(EAX).A =   ___j:LINK(-4).A
	*(T29(EAX)).A.US =   T28(CX).US
; Line 3833:	                __j = __k; 

	T30(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T30(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_13692:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13693:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13689:
	T31(ECX).A =   ___first:LINK(4).A
	T32(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_13704:PC ; T32(EAX).A == T31(ECX).A
	BLOCK END
	BLOCK 19
	T33(EAX).A =   ___k:LINK(-16).A
	T34(EAX).A = T33(EAX).A - #2.A
	___k:LINK(-16).A =   T34(EAX).A
	T35(EAX).A =   ___k:LINK(-16).A
	PARM	T35(EAX).A
	T36(EAX).A =   #___t:LINK(-10).A
	PARM	T36(EAX).A
	T37(EAX).A =   ___comp:LINK(12).A
	PARM	T37(EAX).A
	TAG
	GOSUB	#@std@#__less$CC~@$bcall$xqrxCrxC:PC.UI
	T38(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13687:PC ; T38(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_13704:
	BLOCK END
	BLOCK 21

L_13688:
	BLOCK END
	BLOCK 22

L_13695:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T39(EAX).A =   #___t:LINK(-10).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#move$rC~$qrC:PC.UI
	T40(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T41(CX).US =   *(T40(EAX)).A.US
	T42(EAX).A =   ___j:LINK(-4).A
	*(T42(EAX)).A.US =   T41(CX).US
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_13696:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13697:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13683:
	BLOCK END
	BLOCK 26

L_13698:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T43(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T43(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_13699:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_13700:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13679:
	T44(EAX).A =   ___i:LINK(-8).A
	T45(EAX).A = T44(EAX).A + #2.A
	___i:LINK(-8).A =   T45(EAX).A
	BLOCK END
	BLOCK 30

L_13677:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_13676:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_13678:
	BLOCK END
	BLOCK 32

L_13701:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_13702:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13674:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$CC~pC~$qpCpCr#__less$CC~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ScSc~@$bcall$xqrxScrxSc
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13708:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13710:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.C
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).I =   *(T3(EAX)).A.C
	T5(EAX).UI = T2(ECX).I S< T4(EAX).I
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_13711:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13709:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ScSc~@$bcall$xqrxScrxSc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rSc~$qrSc
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13716:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13718:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_13719:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13717:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rSc~$qrSc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$Sc~$qrScrSc
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13724:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13726:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(AL).C =   *(T4(EAX)).A.C
	___t:LINK(-1).C =   T5(AL).C
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(CL).C =   *(T7(EAX)).A.C
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.C =   T8(CL).C
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-1).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(CL).C =   *(T11(EAX)).A.C
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.C =   T12(CL).C
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_13727:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13725:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$Sc~$qrScrSc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13732:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13734:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13736:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13735:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13737:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13738:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13740:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13739:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13741:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_13733:PC
	BLOCK END
	BLOCK 11

L_13742:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_13739:
	BLOCK END
	BLOCK 13

L_13743:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13745:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13744:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13746:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_13747:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_13748:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_13749:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_13744:
	BLOCK END
	BLOCK 21

L_13750:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_13733:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_13751:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_13752:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13735:
	BLOCK END
	BLOCK 25

L_13753:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_13755:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13754:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_13756:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_13757:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_13733:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_13758:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_13759:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_13754:
	BLOCK END
	BLOCK 33

L_13760:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_13762:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13761:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_13763:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_13764:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_13765:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_13766:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_13761:
	BLOCK END
	BLOCK 41

L_13767:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_13768:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_13733:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ScSc~pSc~$qpScpScpScpScr#__less$ScSc~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13773:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13775:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13777:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13776:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13778:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13779:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13781:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13780:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13782:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13783:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13785:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13784:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13786:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13787:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_13788:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13789:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13784:
	BLOCK END
	BLOCK 19

L_13790:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_13791:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13792:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13780:
	BLOCK END
	BLOCK 23

L_13793:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_13794:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13795:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13776:
	BLOCK END
	BLOCK 27

L_13796:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_13797:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13774:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ScSc~pSc~$qpScpScpScpScr#__less$ScSc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ScSc~pSc~$qpScpScpScpScpScr#__less$ScSc~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13802:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13804:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ScSc~pSc~$qpScpScpScpScr#__less$ScSc~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13806:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13805:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13807:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13808:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13810:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13809:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13811:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13812:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13814:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13813:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13815:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13816:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13818:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13817:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_13819:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_13820:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$Sc~$qrScrSc:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_13821:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13822:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13817:
	BLOCK END
	BLOCK 23

L_13823:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_13824:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13825:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13813:
	BLOCK END
	BLOCK 27

L_13826:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_13827:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13828:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_13809:
	BLOCK END
	BLOCK 31

L_13829:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_13830:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_13831:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13805:
	BLOCK END
	BLOCK 35

L_13832:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_13833:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_13803:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ScSc~pSc~$qpScpScpScpScpScr#__less$ScSc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_13838:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13840:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #2.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #1.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ScSc~pSc~$qpScpScpScr#__less$ScSc~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13845:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #1.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_13842:PC
	BLOCK END
	BLOCK 5

L_13841:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13846:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13847:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13849:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13848:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13850:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13851:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(AL).C =   *(T21(EAX)).A.C
	___t:LINK(-9).C =   T22(AL).C
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13855:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_13859:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_13852:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13856:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(CL).C =   *(T26(EAX)).A.C
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.C =   T27(CL).C
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_13857:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13858:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13854:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_13869:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #1.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-9).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ScSc~@$bcall$xqrxScrxSc:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13852:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_13869:
	BLOCK END
	BLOCK 21

L_13853:
	BLOCK END
	BLOCK 22

L_13860:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-9).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rSc~$qrSc:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(CL).C =   *(T39(EAX)).A.C
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.C =   T40(CL).C
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_13861:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13862:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13848:
	BLOCK END
	BLOCK 26

L_13863:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_13864:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_13865:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13844:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #1.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_13842:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_13841:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_13843:
	BLOCK END
	BLOCK 32

L_13866:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_13867:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13839:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ScSc~pSc~$qpScpScr#__less$ScSc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ucuc~@$bcall$xqrxucrxuc
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_13873:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13875:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.UC
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).I =   *(T3(EAX)).A.UC
	T5(EAX).UI = T2(ECX).I S< T4(EAX).I
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_13876:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13874:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ucuc~@$bcall$xqrxucrxuc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$ruc~$qruc
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_13881:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13883:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_13884:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13882:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$ruc~$qruc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$uc~$qrucruc
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13889:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13891:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(AL).UC =   *(T4(EAX)).A.UC
	___t:LINK(-1).UC =   T5(AL).UC
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(CL).UC =   *(T7(EAX)).A.UC
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.UC =   T8(CL).UC
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-1).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(CL).UC =   *(T11(EAX)).A.UC
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.UC =   T12(CL).UC
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_13892:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_13890:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$uc~$qrucruc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13897:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13899:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13901:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13900:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13902:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13903:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13905:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13904:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13906:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_13898:PC
	BLOCK END
	BLOCK 11

L_13907:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_13904:
	BLOCK END
	BLOCK 13

L_13908:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13910:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13909:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13911:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_13912:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_13913:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_13914:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_13909:
	BLOCK END
	BLOCK 21

L_13915:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_13898:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_13916:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_13917:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_13900:
	BLOCK END
	BLOCK 25

L_13918:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_13920:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13919:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_13921:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_13922:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_13898:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_13923:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_13924:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_13919:
	BLOCK END
	BLOCK 33

L_13925:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_13927:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13926:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_13928:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_13929:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_13930:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_13931:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_13926:
	BLOCK END
	BLOCK 41

L_13932:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_13933:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_13898:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ucuc~puc~$qpucpucpucpucr#__less$ucuc~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13938:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13940:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13942:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13941:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13943:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13944:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13946:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13945:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13947:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13948:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13950:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13949:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13951:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13952:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_13953:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_13954:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_13949:
	BLOCK END
	BLOCK 19

L_13955:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_13956:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13957:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13945:
	BLOCK END
	BLOCK 23

L_13958:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_13959:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13960:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13941:
	BLOCK END
	BLOCK 27

L_13961:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_13962:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13939:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ucuc~puc~$qpucpucpucpucr#__less$ucuc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ucuc~puc~$qpucpucpucpucpucr#__less$ucuc~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_13967:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_13969:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ucuc~puc~$qpucpucpucpucr#__less$ucuc~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_13971:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13970:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_13972:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_13973:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_13975:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13974:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_13976:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_13977:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_13979:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13978:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_13980:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_13981:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_13983:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_13982:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_13984:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_13985:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$uc~$qrucruc:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_13986:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_13987:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_13982:
	BLOCK END
	BLOCK 23

L_13988:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_13989:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_13990:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_13978:
	BLOCK END
	BLOCK 27

L_13991:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_13992:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_13993:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_13974:
	BLOCK END
	BLOCK 31

L_13994:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_13995:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_13996:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_13970:
	BLOCK END
	BLOCK 35

L_13997:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_13998:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_13968:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ucuc~puc~$qpucpucpucpucpucr#__less$ucuc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14003:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14005:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #2.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #1.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ucuc~puc~$qpucpucpucr#__less$ucuc~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14010:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #1.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14007:PC
	BLOCK END
	BLOCK 5

L_14006:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14011:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14012:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14014:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14013:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14015:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14016:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(AL).UC =   *(T21(EAX)).A.UC
	___t:LINK(-9).UC =   T22(AL).UC
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14020:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_14024:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14017:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14021:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(CL).UC =   *(T26(EAX)).A.UC
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.UC =   T27(CL).UC
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_14022:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14023:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14019:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_14034:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #1.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-9).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ucuc~@$bcall$xqrxucrxuc:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14017:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_14034:
	BLOCK END
	BLOCK 21

L_14018:
	BLOCK END
	BLOCK 22

L_14025:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-9).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$ruc~$qruc:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(CL).UC =   *(T39(EAX)).A.UC
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.UC =   T40(CL).UC
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_14026:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14027:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14013:
	BLOCK END
	BLOCK 26

L_14028:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_14029:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_14030:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14009:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #1.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14007:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14006:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14008:
	BLOCK END
	BLOCK 32

L_14031:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_14032:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14004:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ucuc~puc~$qpucpucr#__less$ucuc~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ss~@$bcall$xqrxsrxs
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_14038:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14040:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.S
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).I =   *(T3(EAX)).A.S
	T5(EAX).UI = T2(ECX).I S< T4(EAX).I
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_14041:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14039:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ss~@$bcall$xqrxsrxs

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rs~$qrs
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_14046:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14048:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_14049:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14047:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rs~$qrs

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$s~$qrsrs
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14054:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14056:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(AX).S =   *(T4(EAX)).A.S
	___t:LINK(-2).S =   T5(AX).S
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(CX).S =   *(T7(EAX)).A.S
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.S =   T8(CX).S
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-2).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(CX).S =   *(T11(EAX)).A.S
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.S =   T12(CX).S
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_14057:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14055:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$s~$qrsrs

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14062:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14064:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14066:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14065:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14067:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14068:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14070:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14069:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14071:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_14063:PC
	BLOCK END
	BLOCK 11

L_14072:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_14069:
	BLOCK END
	BLOCK 13

L_14073:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14075:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14074:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14076:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_14077:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_14078:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_14079:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_14074:
	BLOCK END
	BLOCK 21

L_14080:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_14063:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_14081:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_14082:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14065:
	BLOCK END
	BLOCK 25

L_14083:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_14085:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14084:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_14086:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_14087:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_14063:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_14088:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_14089:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_14084:
	BLOCK END
	BLOCK 33

L_14090:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_14092:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14091:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_14093:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_14094:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_14095:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_14096:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_14091:
	BLOCK END
	BLOCK 41

L_14097:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_14098:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_14063:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ss~ps~$qpspspspsr#__less$ss~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14103:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14105:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14107:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14106:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14108:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14109:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14111:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14110:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14112:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14113:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14115:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14114:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14116:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14117:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_14118:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14119:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14114:
	BLOCK END
	BLOCK 19

L_14120:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_14121:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14122:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14110:
	BLOCK END
	BLOCK 23

L_14123:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_14124:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14125:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14106:
	BLOCK END
	BLOCK 27

L_14126:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_14127:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14104:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ss~ps~$qpspspspsr#__less$ss~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ss~ps~$qpspspspspsr#__less$ss~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14132:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14134:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ss~ps~$qpspspspsr#__less$ss~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14136:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14135:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14137:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14138:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14140:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14139:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14141:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14142:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14144:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14143:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14145:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14146:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14148:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14147:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_14149:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_14150:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$s~$qrsrs:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_14151:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14152:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14147:
	BLOCK END
	BLOCK 23

L_14153:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_14154:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14155:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14143:
	BLOCK END
	BLOCK 27

L_14156:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_14157:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14158:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_14139:
	BLOCK END
	BLOCK 31

L_14159:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_14160:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_14161:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14135:
	BLOCK END
	BLOCK 35

L_14162:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_14163:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_14133:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ss~ps~$qpspspspspsr#__less$ss~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ss~ps~$qpspsr#__less$ss~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14168:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14170:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #4.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #2.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ss~ps~$qpspspsr#__less$ss~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14175:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #2.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14172:PC
	BLOCK END
	BLOCK 5

L_14171:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14176:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14177:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14179:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14178:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14180:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14181:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(AX).S =   *(T21(EAX)).A.S
	___t:LINK(-10).S =   T22(AX).S
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14185:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_14189:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14182:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14186:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(CX).S =   *(T26(EAX)).A.S
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.S =   T27(CX).S
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_14187:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14188:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14184:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_14199:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #2.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-10).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ss~@$bcall$xqrxsrxs:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14182:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_14199:
	BLOCK END
	BLOCK 21

L_14183:
	BLOCK END
	BLOCK 22

L_14190:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-10).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rs~$qrs:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(CX).S =   *(T39(EAX)).A.S
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.S =   T40(CX).S
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_14191:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14192:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14178:
	BLOCK END
	BLOCK 26

L_14193:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_14194:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_14195:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14174:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #2.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14172:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14171:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14173:
	BLOCK END
	BLOCK 32

L_14196:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_14197:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14169:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ss~ps~$qpspsr#__less$ss~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$usus~@$bcall$xqrxusrxus
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_14203:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14205:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.US
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).I =   *(T3(EAX)).A.US
	T5(EAX).UI = T2(ECX).I S< T4(EAX).I
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_14206:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14204:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$usus~@$bcall$xqrxusrxus

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rus~$qrus
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_14211:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14213:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_14214:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14212:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rus~$qrus

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$us~$qrusrus
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14219:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14221:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(AX).US =   *(T4(EAX)).A.US
	___t:LINK(-2).US =   T5(AX).US
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(CX).US =   *(T7(EAX)).A.US
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.US =   T8(CX).US
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-2).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(CX).US =   *(T11(EAX)).A.US
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.US =   T12(CX).US
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_14222:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14220:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$us~$qrusrus

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14227:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14229:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14231:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14230:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14232:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14233:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14235:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14234:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14236:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_14228:PC
	BLOCK END
	BLOCK 11

L_14237:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_14234:
	BLOCK END
	BLOCK 13

L_14238:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14240:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14239:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14241:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_14242:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_14243:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_14244:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_14239:
	BLOCK END
	BLOCK 21

L_14245:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_14228:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_14246:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_14247:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14230:
	BLOCK END
	BLOCK 25

L_14248:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_14250:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14249:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_14251:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_14252:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_14228:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_14253:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_14254:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_14249:
	BLOCK END
	BLOCK 33

L_14255:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_14257:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14256:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_14258:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_14259:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_14260:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_14261:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_14256:
	BLOCK END
	BLOCK 41

L_14262:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_14263:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_14228:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$usus~pus~$qpuspuspuspusr#__less$usus~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14268:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14270:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14272:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14271:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14273:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14274:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14276:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14275:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14277:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14278:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14280:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14279:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14281:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14282:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_14283:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14284:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14279:
	BLOCK END
	BLOCK 19

L_14285:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_14286:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14287:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14275:
	BLOCK END
	BLOCK 23

L_14288:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_14289:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14290:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14271:
	BLOCK END
	BLOCK 27

L_14291:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_14292:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14269:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$usus~pus~$qpuspuspuspusr#__less$usus~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$usus~pus~$qpuspuspuspuspusr#__less$usus~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14297:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14299:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$usus~pus~$qpuspuspuspusr#__less$usus~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14301:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14300:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14302:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14303:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14305:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14304:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14306:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14307:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14309:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14308:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14310:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14311:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14313:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14312:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_14314:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_14315:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$us~$qrusrus:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_14316:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14317:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14312:
	BLOCK END
	BLOCK 23

L_14318:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_14319:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14320:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14308:
	BLOCK END
	BLOCK 27

L_14321:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_14322:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14323:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_14304:
	BLOCK END
	BLOCK 31

L_14324:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_14325:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_14326:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14300:
	BLOCK END
	BLOCK 35

L_14327:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_14328:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_14298:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$usus~pus~$qpuspuspuspuspusr#__less$usus~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$usus~pus~$qpuspusr#__less$usus~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14333:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14335:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #4.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #2.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$usus~pus~$qpuspuspusr#__less$usus~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14340:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #2.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14337:PC
	BLOCK END
	BLOCK 5

L_14336:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14341:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14342:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14344:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14343:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14345:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14346:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(AX).US =   *(T21(EAX)).A.US
	___t:LINK(-10).US =   T22(AX).US
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14350:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_14354:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14347:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14351:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(CX).US =   *(T26(EAX)).A.US
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.US =   T27(CX).US
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_14352:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14353:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14349:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_14364:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #2.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-10).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$usus~@$bcall$xqrxusrxus:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14347:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_14364:
	BLOCK END
	BLOCK 21

L_14348:
	BLOCK END
	BLOCK 22

L_14355:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-10).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rus~$qrus:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(CX).US =   *(T39(EAX)).A.US
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.US =   T40(CX).US
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_14356:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14357:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14343:
	BLOCK END
	BLOCK 26

L_14358:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_14359:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_14360:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14339:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #2.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14337:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14336:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14338:
	BLOCK END
	BLOCK 32

L_14361:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_14362:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14334:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$usus~pus~$qpuspusr#__less$usus~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ii~@$bcall$xqrxirxi
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_14368:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14370:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).I =   *(T1(EAX)).A.I
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).I =   *(T3(EAX)).A.I
	T5(EAX).UI = T2(ECX).I S< T4(EAX).I
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_14371:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14369:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ii~@$bcall$xqrxirxi

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$ri~$qri
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_14376:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14378:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_14379:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14377:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$ri~$qri

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$i~$qriri
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14384:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14386:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EAX).I =   *(T4(EAX)).A.I
	___t:LINK(-4).I =   T5(EAX).I
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(ECX).I =   *(T7(EAX)).A.I
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.I =   T8(ECX).I
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(ECX).I =   *(T11(EAX)).A.I
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.I =   T12(ECX).I
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_14387:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14385:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$i~$qriri

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14392:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14394:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14396:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14395:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14397:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14398:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14400:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14399:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14401:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_14393:PC
	BLOCK END
	BLOCK 11

L_14402:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_14399:
	BLOCK END
	BLOCK 13

L_14403:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14405:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14404:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14406:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_14407:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_14408:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_14409:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_14404:
	BLOCK END
	BLOCK 21

L_14410:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_14393:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_14411:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_14412:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14395:
	BLOCK END
	BLOCK 25

L_14413:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_14415:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14414:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_14416:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_14417:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_14393:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_14418:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_14419:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_14414:
	BLOCK END
	BLOCK 33

L_14420:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_14422:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14421:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_14423:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_14424:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_14425:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_14426:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_14421:
	BLOCK END
	BLOCK 41

L_14427:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_14428:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_14393:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ii~pi~$qpipipipir#__less$ii~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14433:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14435:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14437:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14436:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14438:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14439:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14441:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14440:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14442:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14443:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14445:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14444:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14446:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14447:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_14448:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14449:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14444:
	BLOCK END
	BLOCK 19

L_14450:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_14451:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14452:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14440:
	BLOCK END
	BLOCK 23

L_14453:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_14454:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14455:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14436:
	BLOCK END
	BLOCK 27

L_14456:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_14457:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14434:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ii~pi~$qpipipipir#__less$ii~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ii~pi~$qpipipipipir#__less$ii~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14462:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14464:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ii~pi~$qpipipipir#__less$ii~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14466:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14465:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14467:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14468:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14470:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14469:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14471:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14472:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14474:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14473:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14475:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14476:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14478:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14477:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_14479:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_14480:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$i~$qriri:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_14481:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14482:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14477:
	BLOCK END
	BLOCK 23

L_14483:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_14484:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14485:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14473:
	BLOCK END
	BLOCK 27

L_14486:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_14487:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14488:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_14469:
	BLOCK END
	BLOCK 31

L_14489:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_14490:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_14491:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14465:
	BLOCK END
	BLOCK 35

L_14492:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_14493:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_14463:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ii~pi~$qpipipipipir#__less$ii~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ii~pi~$qpipir#__less$ii~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14498:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14500:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #8.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #4.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ii~pi~$qpipipir#__less$ii~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14505:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #4.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14502:PC
	BLOCK END
	BLOCK 5

L_14501:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14506:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14507:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14509:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14508:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14510:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14511:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(EAX).I =   *(T21(EAX)).A.I
	___t:LINK(-12).I =   T22(EAX).I
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14515:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_14519:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14512:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14516:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(ECX).I =   *(T26(EAX)).A.I
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.I =   T27(ECX).I
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_14517:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14518:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14514:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_14529:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #4.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ii~@$bcall$xqrxirxi:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14512:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_14529:
	BLOCK END
	BLOCK 21

L_14513:
	BLOCK END
	BLOCK 22

L_14520:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-12).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$ri~$qri:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(ECX).I =   *(T39(EAX)).A.I
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.I =   T40(ECX).I
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_14521:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14522:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14508:
	BLOCK END
	BLOCK 26

L_14523:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_14524:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_14525:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14504:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #4.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14502:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14501:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14503:
	BLOCK END
	BLOCK 32

L_14526:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_14527:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14499:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ii~pi~$qpipir#__less$ii~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rui~$qrui
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_14533:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14535:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_14536:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14534:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rui~$qrui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$ui~$qruirui
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14541:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14543:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EAX).UI =   *(T4(EAX)).A.UI
	___t:LINK(-4).UI =   T5(EAX).UI
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(ECX).UI =   *(T7(EAX)).A.UI
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.UI =   T8(ECX).UI
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(ECX).UI =   *(T11(EAX)).A.UI
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.UI =   T12(ECX).UI
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_14544:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14542:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$ui~$qruirui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14549:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14551:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14553:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14552:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14554:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14555:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14557:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14556:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14558:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_14550:PC
	BLOCK END
	BLOCK 11

L_14559:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_14556:
	BLOCK END
	BLOCK 13

L_14560:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14562:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14561:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14563:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_14564:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_14565:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_14566:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_14561:
	BLOCK END
	BLOCK 21

L_14567:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_14550:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_14568:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_14569:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14552:
	BLOCK END
	BLOCK 25

L_14570:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_14572:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14571:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_14573:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_14574:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_14550:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_14575:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_14576:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_14571:
	BLOCK END
	BLOCK 33

L_14577:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_14579:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14578:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_14580:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_14581:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_14582:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_14583:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_14578:
	BLOCK END
	BLOCK 41

L_14584:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_14585:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_14550:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$uiui~pui~$qpuipuipuipuir#__less$uiui~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14590:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14592:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14594:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14593:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14595:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14596:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14598:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14597:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14599:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14600:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14602:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14601:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14603:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14604:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_14605:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14606:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14601:
	BLOCK END
	BLOCK 19

L_14607:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_14608:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14609:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14597:
	BLOCK END
	BLOCK 23

L_14610:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_14611:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14612:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14593:
	BLOCK END
	BLOCK 27

L_14613:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_14614:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14591:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$uiui~pui~$qpuipuipuipuir#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$uiui~pui~$qpuipuipuipuipuir#__less$uiui~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14619:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14621:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$uiui~pui~$qpuipuipuipuir#__less$uiui~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14623:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14622:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14624:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14625:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14627:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14626:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14628:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14629:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14631:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14630:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14632:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14633:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14635:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14634:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_14636:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_14637:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$ui~$qruirui:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_14638:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14639:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14634:
	BLOCK END
	BLOCK 23

L_14640:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_14641:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14642:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14630:
	BLOCK END
	BLOCK 27

L_14643:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_14644:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14645:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_14626:
	BLOCK END
	BLOCK 31

L_14646:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_14647:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_14648:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14622:
	BLOCK END
	BLOCK 35

L_14649:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_14650:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_14620:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$uiui~pui~$qpuipuipuipuipuir#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$uiui~pui~$qpuipuir#__less$uiui~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14655:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14657:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #8.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #4.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uiui~pui~$qpuipuipuir#__less$uiui~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14662:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #4.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14659:PC
	BLOCK END
	BLOCK 5

L_14658:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14663:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14664:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14666:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14665:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14667:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14668:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(EAX).UI =   *(T21(EAX)).A.UI
	___t:LINK(-12).UI =   T22(EAX).UI
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14672:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_14676:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14669:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14673:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(ECX).UI =   *(T26(EAX)).A.UI
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.UI =   T27(ECX).UI
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_14674:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14675:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14671:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_14686:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #4.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14669:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_14686:
	BLOCK END
	BLOCK 21

L_14670:
	BLOCK END
	BLOCK 22

L_14677:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-12).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rui~$qrui:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(ECX).UI =   *(T39(EAX)).A.UI
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.UI =   T40(ECX).UI
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_14678:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14679:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14665:
	BLOCK END
	BLOCK 26

L_14680:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_14681:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_14682:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14661:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #4.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14659:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14658:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14660:
	BLOCK END
	BLOCK 32

L_14683:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_14684:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14656:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$uiui~pui~$qpuipuir#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ll~@$bcall$xqrxlrxl
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_14690:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14692:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).L =   *(T1(EAX)).A.L
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).L =   *(T3(EAX)).A.L
	T5(EAX).UI = T2(ECX).L S< T4(EAX).L
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_14693:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14691:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ll~@$bcall$xqrxlrxl

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rl~$qrl
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_14698:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14700:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_14701:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14699:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rl~$qrl

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$l~$qrlrl
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14706:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14708:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EAX).L =   *(T4(EAX)).A.L
	___t:LINK(-4).L =   T5(EAX).L
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(ECX).L =   *(T7(EAX)).A.L
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.L =   T8(ECX).L
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(ECX).L =   *(T11(EAX)).A.L
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.L =   T12(ECX).L
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_14709:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14707:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$l~$qrlrl

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14714:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14716:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14718:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14717:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14719:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14720:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14722:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14721:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14723:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_14715:PC
	BLOCK END
	BLOCK 11

L_14724:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_14721:
	BLOCK END
	BLOCK 13

L_14725:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14727:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14726:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14728:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_14729:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_14730:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_14731:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_14726:
	BLOCK END
	BLOCK 21

L_14732:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_14715:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_14733:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_14734:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14717:
	BLOCK END
	BLOCK 25

L_14735:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_14737:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14736:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_14738:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_14739:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_14715:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_14740:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_14741:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_14736:
	BLOCK END
	BLOCK 33

L_14742:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_14744:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14743:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_14745:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_14746:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_14747:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_14748:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_14743:
	BLOCK END
	BLOCK 41

L_14749:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_14750:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_14715:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ll~pl~$qplplplplr#__less$ll~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14755:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14757:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14759:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14758:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14760:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14761:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14763:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14762:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14764:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14765:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14767:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14766:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14768:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14769:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_14770:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14771:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14766:
	BLOCK END
	BLOCK 19

L_14772:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_14773:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14774:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14762:
	BLOCK END
	BLOCK 23

L_14775:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_14776:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14777:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14758:
	BLOCK END
	BLOCK 27

L_14778:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_14779:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14756:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ll~pl~$qplplplplr#__less$ll~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ll~pl~$qplplplplplr#__less$ll~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14784:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14786:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ll~pl~$qplplplplr#__less$ll~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14788:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14787:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14789:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14790:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14792:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14791:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14793:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14794:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14796:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14795:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14797:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14798:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14800:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14799:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_14801:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_14802:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$l~$qrlrl:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_14803:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14804:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14799:
	BLOCK END
	BLOCK 23

L_14805:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_14806:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14807:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14795:
	BLOCK END
	BLOCK 27

L_14808:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_14809:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14810:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_14791:
	BLOCK END
	BLOCK 31

L_14811:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_14812:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_14813:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14787:
	BLOCK END
	BLOCK 35

L_14814:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_14815:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_14785:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ll~pl~$qplplplplplr#__less$ll~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ll~pl~$qplplr#__less$ll~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14820:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14822:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #8.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #4.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ll~pl~$qplplplr#__less$ll~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14827:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #4.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14824:PC
	BLOCK END
	BLOCK 5

L_14823:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14828:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14829:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14831:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14830:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14832:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14833:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(EAX).L =   *(T21(EAX)).A.L
	___t:LINK(-12).L =   T22(EAX).L
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14837:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_14841:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14834:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14838:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(ECX).L =   *(T26(EAX)).A.L
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.L =   T27(ECX).L
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_14839:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14840:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14836:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_14851:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #4.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ll~@$bcall$xqrxlrxl:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14834:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_14851:
	BLOCK END
	BLOCK 21

L_14835:
	BLOCK END
	BLOCK 22

L_14842:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-12).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rl~$qrl:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(ECX).L =   *(T39(EAX)).A.L
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.L =   T40(ECX).L
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_14843:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14844:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14830:
	BLOCK END
	BLOCK 26

L_14845:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_14846:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_14847:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14826:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #4.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14824:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14823:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14825:
	BLOCK END
	BLOCK 32

L_14848:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_14849:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14821:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ll~pl~$qplplr#__less$ll~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ulul~@$bcall$xqrxulrxul
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_14855:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14857:
	T1(EAX).A =   ___x:LINK(8).A
	T2(ECX).UL =   *(T1(EAX)).A.UL
	T3(EAX).A =   ___y:LINK(12).A
	T4(EAX).UL =   *(T3(EAX)).A.UL
	T5(EAX).UI = T2(ECX).UL U< T4(EAX).UL
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_14858:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14856:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ulul~@$bcall$xqrxulrxul

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rul~$qrul
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_14863:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14865:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_14866:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14864:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rul~$qrul

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$ul~$qrulrul
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14871:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14873:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EAX).UL =   *(T4(EAX)).A.UL
	___t:LINK(-4).UL =   T5(EAX).UL
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(ECX).UL =   *(T7(EAX)).A.UL
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.UL =   T8(ECX).UL
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(ECX).UL =   *(T11(EAX)).A.UL
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.UL =   T12(ECX).UL
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_14874:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_14872:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$ul~$qrulrul

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14879:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14881:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14883:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14882:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14884:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14885:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14887:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14886:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14888:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_14880:PC
	BLOCK END
	BLOCK 11

L_14889:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_14886:
	BLOCK END
	BLOCK 13

L_14890:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14892:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14891:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14893:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_14894:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_14895:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_14896:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_14891:
	BLOCK END
	BLOCK 21

L_14897:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_14880:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_14898:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_14899:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_14882:
	BLOCK END
	BLOCK 25

L_14900:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_14902:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14901:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_14903:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_14904:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_14880:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_14905:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_14906:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_14901:
	BLOCK END
	BLOCK 33

L_14907:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_14909:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14908:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_14910:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_14911:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_14912:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_14913:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_14908:
	BLOCK END
	BLOCK 41

L_14914:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_14915:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_14880:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ulul~pul~$qpulpulpulpulr#__less$ulul~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14920:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14922:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14924:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14923:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14925:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14926:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14928:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14927:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14929:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14930:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14932:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14931:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14933:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14934:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_14935:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_14936:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_14931:
	BLOCK END
	BLOCK 19

L_14937:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_14938:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14939:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14927:
	BLOCK END
	BLOCK 23

L_14940:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_14941:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14942:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14923:
	BLOCK END
	BLOCK 27

L_14943:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_14944:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14921:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ulul~pul~$qpulpulpulpulr#__less$ulul~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ulul~pul~$qpulpulpulpulpulr#__less$ulul~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_14949:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14951:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ulul~pul~$qpulpulpulpulr#__less$ulul~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14953:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14952:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14954:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14955:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14957:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14956:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14958:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14959:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_14961:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14960:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_14962:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_14963:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_14965:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14964:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_14966:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_14967:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$ul~$qrulrul:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_14968:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_14969:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_14964:
	BLOCK END
	BLOCK 23

L_14970:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_14971:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14972:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_14960:
	BLOCK END
	BLOCK 27

L_14973:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_14974:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14975:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_14956:
	BLOCK END
	BLOCK 31

L_14976:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_14977:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_14978:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14952:
	BLOCK END
	BLOCK 35

L_14979:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_14980:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_14950:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ulul~pul~$qpulpulpulpulpulr#__less$ulul~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ulul~pul~$qpulpulr#__less$ulul~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_14985:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_14987:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #8.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #4.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ulul~pul~$qpulpulpulr#__less$ulul~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_14992:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #4.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_14989:PC
	BLOCK END
	BLOCK 5

L_14988:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_14993:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_14994:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_14996:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14995:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_14997:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_14998:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(EAX).UL =   *(T21(EAX)).A.UL
	___t:LINK(-12).UL =   T22(EAX).UL
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15002:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_15006:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_14999:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15003:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(ECX).UL =   *(T26(EAX)).A.UL
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.UL =   T27(ECX).UL
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_15004:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15005:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15001:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_15016:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #4.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ulul~@$bcall$xqrxulrxul:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_14999:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_15016:
	BLOCK END
	BLOCK 21

L_15000:
	BLOCK END
	BLOCK 22

L_15007:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-12).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rul~$qrul:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(ECX).UL =   *(T39(EAX)).A.UL
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.UL =   T40(ECX).UL
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_15008:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15009:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_14995:
	BLOCK END
	BLOCK 26

L_15010:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_15011:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_15012:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_14991:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #4.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_14989:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_14988:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_14990:
	BLOCK END
	BLOCK 32

L_15013:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_15014:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_14986:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ulul~pul~$qpulpulr#__less$ulul~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$LL~@$bcall$xqrxLrxL
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15020:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15022:
	T1(EAX).A =   ___x:LINK(8).A
	T2(EBX:ESI).LL =   *(T1(EAX)).A.LL
	T3(EAX).A =   ___y:LINK(12).A
	T4(EDX:EAX).LL =   *(T3(EAX)).A.LL
	T5(EAX).UI = T2(EBX:ESI).LL S< T4(EDX:EAX).LL
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_15023:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15021:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$LL~@$bcall$xqrxLrxL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rL~$qrL
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15028:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15030:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_15031:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15029:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rL~$qrL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$L~$qrLrL
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_15036:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15038:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EDX:EAX).LL =   *(T4(EAX)).A.LL
	___t:LINK(-8).LL =   T5(EDX:EAX).LL
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(EDX:ECX).LL =   *(T7(EAX)).A.LL
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.LL =   T8(EDX:ECX).LL
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-8).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(EDX:ECX).LL =   *(T11(EAX)).A.LL
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.LL =   T12(EDX:ECX).LL
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_15039:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15037:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$L~$qrLrL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15044:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15046:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15048:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15047:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15049:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15050:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15052:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15051:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15053:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_15045:PC
	BLOCK END
	BLOCK 11

L_15054:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_15051:
	BLOCK END
	BLOCK 13

L_15055:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15057:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15056:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15058:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_15059:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_15060:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_15061:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_15056:
	BLOCK END
	BLOCK 21

L_15062:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_15045:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_15063:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_15064:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15047:
	BLOCK END
	BLOCK 25

L_15065:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_15067:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15066:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_15068:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_15069:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_15045:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_15070:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_15071:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_15066:
	BLOCK END
	BLOCK 33

L_15072:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_15074:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15073:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_15075:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_15076:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_15077:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_15078:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_15073:
	BLOCK END
	BLOCK 41

L_15079:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_15080:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_15045:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$LL~pL~$qpLpLpLpLr#__less$LL~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15085:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15087:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15089:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15088:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15090:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15091:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15093:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15092:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15094:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15095:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15097:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15096:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15098:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15099:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_15100:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15101:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15096:
	BLOCK END
	BLOCK 19

L_15102:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_15103:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15104:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15092:
	BLOCK END
	BLOCK 23

L_15105:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_15106:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15107:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15088:
	BLOCK END
	BLOCK 27

L_15108:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_15109:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15086:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$LL~pL~$qpLpLpLpLr#__less$LL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$LL~pL~$qpLpLpLpLpLr#__less$LL~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15114:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15116:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$LL~pL~$qpLpLpLpLr#__less$LL~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15118:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15117:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15119:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15120:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15122:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15121:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15123:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15124:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15126:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15125:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15127:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15128:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15130:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15129:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_15131:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_15132:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$L~$qrLrL:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_15133:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15134:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15129:
	BLOCK END
	BLOCK 23

L_15135:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_15136:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15137:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15125:
	BLOCK END
	BLOCK 27

L_15138:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_15139:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15140:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_15121:
	BLOCK END
	BLOCK 31

L_15141:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_15142:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_15143:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15117:
	BLOCK END
	BLOCK 35

L_15144:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_15145:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_15115:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$LL~pL~$qpLpLpLpLpLr#__less$LL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$LL~pL~$qpLpLr#__less$LL~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_15150:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15152:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #10.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #8.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$LL~pL~$qpLpLpLr#__less$LL~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15157:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #8.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_15154:PC
	BLOCK END
	BLOCK 5

L_15153:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15158:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15159:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15161:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15160:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15162:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15163:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(EDX:EAX).LL =   *(T21(EAX)).A.LL
	___t:LINK(-16).LL =   T22(EDX:EAX).LL
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15167:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_15171:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_15164:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15168:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-20).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(EDX:ECX).LL =   *(T26(EAX)).A.LL
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.LL =   T27(EDX:ECX).LL
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_15169:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15170:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15166:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_15181:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-20).A
	T33(EAX).A = T32(EAX).A - #8.A
	___k:LINK(-20).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-20).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-16).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$LL~@$bcall$xqrxLrxL:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15164:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_15181:
	BLOCK END
	BLOCK 21

L_15165:
	BLOCK END
	BLOCK 22

L_15172:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-16).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rL~$qrL:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(EDX:ECX).LL =   *(T39(EAX)).A.LL
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.LL =   T40(EDX:ECX).LL
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_15173:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15174:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15160:
	BLOCK END
	BLOCK 26

L_15175:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_15176:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_15177:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15156:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #8.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_15154:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_15153:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_15155:
	BLOCK END
	BLOCK 32

L_15178:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_15179:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15151:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$LL~pL~$qpLpLr#__less$LL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$uLuL~@$bcall$xqrxuLrxuL
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000048.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15185:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15187:
	T1(EAX).A =   ___x:LINK(8).A
	T2(EBX:ESI).ULL =   *(T1(EAX)).A.ULL
	T3(EAX).A =   ___y:LINK(12).A
	T4(EDX:EAX).ULL =   *(T3(EAX)).A.ULL
	T5(EAX).UI = T2(EBX:ESI).ULL U< T4(EDX:EAX).ULL
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_15188:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15186:
	EPILOGUE	#8000000000000048.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$uLuL~@$bcall$xqrxuLrxuL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$ruL~$qruL
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15193:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15195:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_15196:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15194:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$ruL~$qruL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$uL~$qruLruL
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_15201:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15203:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EDX:EAX).ULL =   *(T4(EAX)).A.ULL
	___t:LINK(-8).ULL =   T5(EDX:EAX).ULL
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(EDX:ECX).ULL =   *(T7(EAX)).A.ULL
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.ULL =   T8(EDX:ECX).ULL
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-8).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(EDX:ECX).ULL =   *(T11(EAX)).A.ULL
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.ULL =   T12(EDX:ECX).ULL
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_15204:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15202:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$uL~$qruLruL

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15209:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15211:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15213:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15212:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15214:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15215:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15217:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15216:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15218:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_15210:PC
	BLOCK END
	BLOCK 11

L_15219:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_15216:
	BLOCK END
	BLOCK 13

L_15220:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15222:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15221:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15223:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_15224:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_15225:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_15226:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_15221:
	BLOCK END
	BLOCK 21

L_15227:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_15210:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_15228:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_15229:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15212:
	BLOCK END
	BLOCK 25

L_15230:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_15232:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15231:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_15233:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_15234:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_15210:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_15235:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_15236:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_15231:
	BLOCK END
	BLOCK 33

L_15237:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_15239:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15238:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_15240:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_15241:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_15242:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_15243:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_15238:
	BLOCK END
	BLOCK 41

L_15244:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_15245:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_15210:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$uLuL~puL~$qpuLpuLpuLpuLr#__less$uLuL~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15250:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15252:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15254:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15253:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15255:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15256:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15258:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15257:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15259:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15260:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15262:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15261:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15263:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15264:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_15265:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15266:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15261:
	BLOCK END
	BLOCK 19

L_15267:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_15268:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15269:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15257:
	BLOCK END
	BLOCK 23

L_15270:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_15271:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15272:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15253:
	BLOCK END
	BLOCK 27

L_15273:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_15274:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15251:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$uLuL~puL~$qpuLpuLpuLpuLr#__less$uLuL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$uLuL~puL~$qpuLpuLpuLpuLpuLr#__less$uLuL~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15279:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15281:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$uLuL~puL~$qpuLpuLpuLpuLr#__less$uLuL~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15283:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15282:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15284:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15285:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15287:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15286:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15288:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15289:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15291:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15290:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15292:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15293:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15295:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15294:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_15296:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_15297:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$uL~$qruLruL:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_15298:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15299:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15294:
	BLOCK END
	BLOCK 23

L_15300:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_15301:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15302:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15290:
	BLOCK END
	BLOCK 27

L_15303:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_15304:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15305:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_15286:
	BLOCK END
	BLOCK 31

L_15306:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_15307:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_15308:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15282:
	BLOCK END
	BLOCK 35

L_15309:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_15310:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_15280:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$uLuL~puL~$qpuLpuLpuLpuLpuLr#__less$uLuL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_15315:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15317:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #10.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #8.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$uLuL~puL~$qpuLpuLpuLr#__less$uLuL~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15322:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #8.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_15319:PC
	BLOCK END
	BLOCK 5

L_15318:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15323:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15324:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15326:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15325:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15327:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15328:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(EDX:EAX).ULL =   *(T21(EAX)).A.ULL
	___t:LINK(-16).ULL =   T22(EDX:EAX).ULL
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15332:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_15336:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_15329:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15333:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-20).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(EDX:ECX).ULL =   *(T26(EAX)).A.ULL
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.ULL =   T27(EDX:ECX).ULL
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_15334:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15335:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15331:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_15346:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-20).A
	T33(EAX).A = T32(EAX).A - #8.A
	___k:LINK(-20).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-20).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-16).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$uLuL~@$bcall$xqrxuLrxuL:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15329:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_15346:
	BLOCK END
	BLOCK 21

L_15330:
	BLOCK END
	BLOCK 22

L_15337:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-16).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$ruL~$qruL:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(EDX:ECX).ULL =   *(T39(EAX)).A.ULL
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.ULL =   T40(EDX:ECX).ULL
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_15338:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15339:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15325:
	BLOCK END
	BLOCK 26

L_15340:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_15341:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_15342:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15321:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #8.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_15319:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_15318:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_15320:
	BLOCK END
	BLOCK 32

L_15343:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_15344:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15316:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$uLuL~puL~$qpuLpuLr#__less$uLuL~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$ff~@$bcall$xqrxfrxf
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15350:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15352:
	T1(EAX).A =   ___x:LINK(8).A
	T2(xmm1s).F =   *(T1(EAX)).A.F
	T3(EAX).A =   ___y:LINK(12).A
	T4(xmm0s).F =   *(T3(EAX)).A.F
	T5(EAX).UI = T4(xmm0s).F S> T2(xmm1s).F
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_15353:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15351:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$ff~@$bcall$xqrxfrxf

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rf~$qrf
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15358:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15360:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_15361:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15359:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rf~$qrf

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$f~$qrfrf
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15366:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15368:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(xmm0s).F =   *(T4(EAX)).A.F
	___t:LINK(-4).F =   T5(xmm0s).F
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(xmm0s).F =   *(T7(EAX)).A.F
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.F =   T8(xmm0s).F
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(xmm0s).F =   *(T11(EAX)).A.F
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.F =   T12(xmm0s).F
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_15369:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15367:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$f~$qrfrf

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15374:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15376:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15378:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15377:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15379:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15380:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15382:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15381:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15383:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_15375:PC
	BLOCK END
	BLOCK 11

L_15384:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_15381:
	BLOCK END
	BLOCK 13

L_15385:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15387:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15386:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15388:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_15389:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_15390:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_15391:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_15386:
	BLOCK END
	BLOCK 21

L_15392:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_15375:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_15393:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_15394:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15377:
	BLOCK END
	BLOCK 25

L_15395:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_15397:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15396:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_15398:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_15399:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_15375:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_15400:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_15401:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_15396:
	BLOCK END
	BLOCK 33

L_15402:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_15404:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15403:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_15405:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_15406:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_15407:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_15408:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_15403:
	BLOCK END
	BLOCK 41

L_15409:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_15410:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_15375:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$ff~pf~$qpfpfpfpfr#__less$ff~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15415:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15417:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15419:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15418:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15420:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15421:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15423:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15422:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15424:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15425:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15427:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15426:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15428:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15429:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_15430:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15431:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15426:
	BLOCK END
	BLOCK 19

L_15432:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_15433:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15434:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15422:
	BLOCK END
	BLOCK 23

L_15435:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_15436:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15437:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15418:
	BLOCK END
	BLOCK 27

L_15438:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_15439:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15416:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$ff~pf~$qpfpfpfpfr#__less$ff~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$ff~pf~$qpfpfpfpfpfr#__less$ff~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15444:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15446:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$ff~pf~$qpfpfpfpfr#__less$ff~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15448:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15447:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15449:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15450:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15452:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15451:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15453:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15454:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15456:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15455:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15457:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15458:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15460:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15459:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_15461:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_15462:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$f~$qrfrf:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_15463:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15464:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15459:
	BLOCK END
	BLOCK 23

L_15465:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_15466:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15467:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15455:
	BLOCK END
	BLOCK 27

L_15468:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_15469:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15470:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_15451:
	BLOCK END
	BLOCK 31

L_15471:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_15472:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_15473:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15447:
	BLOCK END
	BLOCK 35

L_15474:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_15475:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_15445:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$ff~pf~$qpfpfpfpfpfr#__less$ff~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$ff~pf~$qpfpfr#__less$ff~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_15480:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15482:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #8.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #4.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$ff~pf~$qpfpfpfr#__less$ff~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15487:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #4.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_15484:PC
	BLOCK END
	BLOCK 5

L_15483:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15488:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15489:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15491:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15490:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15492:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15493:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(xmm0s).F =   *(T21(EAX)).A.F
	___t:LINK(-12).F =   T22(xmm0s).F
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-16).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15497:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_15501:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_15494:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15498:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-16).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(xmm0s).F =   *(T26(EAX)).A.F
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.F =   T27(xmm0s).F
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-16).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_15499:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15500:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15496:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_15511:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-16).A
	T33(EAX).A = T32(EAX).A - #4.A
	___k:LINK(-16).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-16).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-12).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$ff~@$bcall$xqrxfrxf:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15494:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_15511:
	BLOCK END
	BLOCK 21

L_15495:
	BLOCK END
	BLOCK 22

L_15502:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-12).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rf~$qrf:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(xmm0s).F =   *(T39(EAX)).A.F
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.F =   T40(xmm0s).F
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_15503:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15504:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15490:
	BLOCK END
	BLOCK 26

L_15505:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_15506:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_15507:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15486:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #4.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_15484:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_15483:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_15485:
	BLOCK END
	BLOCK 32

L_15508:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_15509:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15481:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$ff~pf~$qpfpfr#__less$ff~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$dd~@$bcall$xqrxdrxd
; Line 715:	    bool operator()(const _T1& __x, const _T1& __y) const {return __x < __y;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15515:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15517:
	T1(EAX).A =   ___x:LINK(8).A
	T2(xmm1d).D =   *(T1(EAX)).A.D
	T3(EAX).A =   ___y:LINK(12).A
	T4(xmm0d).D =   *(T3(EAX)).A.D
	T5(EAX).UI = T4(xmm0d).D S> T2(xmm1d).D
	T6(AL).BOOL =   T5(EAX).UI
	RV.T0(AL).BOOL =   T6(AL).BOOL
	BLOCK END
	BLOCK 4

L_15518:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15516:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$dd~@$bcall$xqrxdrxd

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rd~$qrd
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15523:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15525:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_15526:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15524:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rd~$qrd

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$d~$qrdrd
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_15531:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15533:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(xmm0d).D =   *(T4(EAX)).A.D
	___t:LINK(-8).D =   T5(xmm0d).D
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(xmm0d).D =   *(T7(EAX)).A.D
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.D =   T8(xmm0d).D
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-8).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(xmm0d).D =   *(T11(EAX)).A.D
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.D =   T12(xmm0d).D
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_15534:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15532:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$d~$qrdrd

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15539:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15541:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15543:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15542:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15544:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15545:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15547:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15546:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15548:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_15540:PC
	BLOCK END
	BLOCK 11

L_15549:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_15546:
	BLOCK END
	BLOCK 13

L_15550:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15552:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15551:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15553:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_15554:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_15555:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_15556:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_15551:
	BLOCK END
	BLOCK 21

L_15557:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_15540:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_15558:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_15559:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15542:
	BLOCK END
	BLOCK 25

L_15560:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_15562:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15561:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_15563:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_15564:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_15540:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_15565:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_15566:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_15561:
	BLOCK END
	BLOCK 33

L_15567:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_15569:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15568:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_15570:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_15571:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_15572:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_15573:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_15568:
	BLOCK END
	BLOCK 41

L_15574:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_15575:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_15540:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$dd~pd~$qpdpdpdpdr#__less$dd~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15580:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15582:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15584:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15583:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15585:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15586:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15588:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15587:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15589:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15590:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15592:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15591:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15593:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15594:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_15595:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15596:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15591:
	BLOCK END
	BLOCK 19

L_15597:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_15598:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15599:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15587:
	BLOCK END
	BLOCK 23

L_15600:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_15601:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15602:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15583:
	BLOCK END
	BLOCK 27

L_15603:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_15604:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15581:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$dd~pd~$qpdpdpdpdr#__less$dd~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort5$r#__less$dd~pd~$qpdpdpdpdpdr#__less$dd~
; Line 3752:	_LIBCPP_HIDDEN 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15609:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__x5
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15611:
; Line 3757:	    unsigned __r = __sort4<_Compare>(__x1, __x2, __x3, __x4, __c); 

	VAR START	__r
	T6(EAX).A =   ___c:LINK(24).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x4:LINK(16).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x3:LINK(12).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___x2:LINK(8).A
	PARM	T9(EAX).A
	T10(EAX).A =   ___x1:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__sort4$r#__less$dd~pd~$qpdpdpdpdr#__less$dd~:PC.UI
	T11(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#14.N
	___r:LINK(-4).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15613:
	T12(EAX).A =   ___x4:LINK(16).A
	PARM	T12(EAX).A
	T13(EAX).A =   ___x5:LINK(20).A
	PARM	T13(EAX).A
	T14(EAX).A =   ___c:LINK(24).A
	PARM	T14(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T15(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15612:PC ; T15(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15614:
; Line 3759:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15615:
; Line 3760:	        swap(*__x4, *__x5); 

	T16(EAX).A =   ___x5:LINK(20).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x4:LINK(16).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3761:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15617:
	T18(EAX).A =   ___x3:LINK(12).A
	PARM	T18(EAX).A
	T19(EAX).A =   ___x4:LINK(16).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___c:LINK(24).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T21(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15616:PC ; T21(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15618:
; Line 3763:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15619:
; Line 3764:	            swap(*__x3, *__x4); 

	T22(EAX).A =   ___x4:LINK(16).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x3:LINK(12).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3765:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15621:
	T24(EAX).A =   ___x2:LINK(8).A
	PARM	T24(EAX).A
	T25(EAX).A =   ___x3:LINK(12).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___c:LINK(24).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T27(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15620:PC ; T27(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15622:
; Line 3767:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15623:
; Line 3768:	                swap(*__x2, *__x3); 

	T28(EAX).A =   ___x3:LINK(12).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___x2:LINK(8).A
	PARM	T29(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3769:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15625:
	T30(EAX).A =   ___x1:LINK(4).A
	PARM	T30(EAX).A
	T31(EAX).A =   ___x2:LINK(8).A
	PARM	T31(EAX).A
	T32(EAX).A =   ___c:LINK(24).A
	PARM	T32(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T33(AL).BOOL =   RV.T4(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15624:PC ; T33(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 17
	DBG BLOCK START
	BLOCK END
	BLOCK 18

L_15626:
; Line 3771:	                { 

	DBG BLOCK START
	BLOCK END
	BLOCK 19

L_15627:
; Line 3772:	                    swap(*__x1, *__x2); 

	T34(EAX).A =   ___x2:LINK(8).A
	PARM	T34(EAX).A
	T35(EAX).A =   ___x1:LINK(4).A
	PARM	T35(EAX).A
	TAG
	GOSUB	#@std@#swap$d~$qrdrd:PC.UI
	PARMADJ	#8.N
; Line 3773:	                    ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3774:	                } 

	BLOCK END
	BLOCK 20

L_15628:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15629:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15624:
	BLOCK END
	BLOCK 23

L_15630:
	DBG BLOCK END
; Line 3775:	            } 

	BLOCK END
	BLOCK 24

L_15631:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15632:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15620:
	BLOCK END
	BLOCK 27

L_15633:
	DBG BLOCK END
; Line 3776:	        } 

	BLOCK END
	BLOCK 28

L_15634:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15635:
	DBG BLOCK END
	BLOCK END
	BLOCK 30

L_15616:
	BLOCK END
	BLOCK 31

L_15636:
	DBG BLOCK END
; Line 3777:	    } 

	BLOCK END
	BLOCK 32

L_15637:
	DBG BLOCK END
	BLOCK END
	BLOCK 33

L_15638:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15612:
	BLOCK END
	BLOCK 35

L_15639:
	DBG BLOCK END
	T36(EAX).UI =   ___r:LINK(-4).UI
	RV.T5(EAX).UI =   T36(EAX).UI
; Line 3779:	} 

	BLOCK END
	BLOCK 36

L_15640:
	DBG BLOCK END
	BLOCK END
	BLOCK 37

L_15610:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort5$r#__less$dd~pd~$qpdpdpdpdpdr#__less$dd~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$dd~pd~$qpdpdr#__less$dd~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_15645:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15647:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #10.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #8.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$dd~pd~$qpdpdpdr#__less$dd~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15652:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #8.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_15649:PC
	BLOCK END
	BLOCK 5

L_15648:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15653:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15654:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15656:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15655:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15657:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15658:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(xmm0d).D =   *(T21(EAX)).A.D
	___t:LINK(-16).D =   T22(xmm0d).D
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15662:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_15666:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_15659:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15663:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-20).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(xmm0d).D =   *(T26(EAX)).A.D
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.D =   T27(xmm0d).D
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_15664:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15665:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15661:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_15676:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-20).A
	T33(EAX).A = T32(EAX).A - #8.A
	___k:LINK(-20).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-20).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-16).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$dd~@$bcall$xqrxdrxd:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15659:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_15676:
	BLOCK END
	BLOCK 21

L_15660:
	BLOCK END
	BLOCK 22

L_15667:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-16).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rd~$qrd:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(xmm0d).D =   *(T39(EAX)).A.D
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.D =   T40(xmm0d).D
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_15668:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15669:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15655:
	BLOCK END
	BLOCK 26

L_15670:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_15671:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_15672:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15651:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #8.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_15649:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_15648:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_15650:
	BLOCK END
	BLOCK 32

L_15673:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_15674:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15646:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$dd~pd~$qpdpdr#__less$dd~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rg~$qrg
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15680:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15682:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_15683:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15681:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rg~$qrg

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$g~$qrgrg
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	BLOCK END
	BLOCK 2

L_15688:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15690:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(xmm0d).LD =   *(T4(EAX)).A.LD
	___t:LINK(-8).LD =   T5(xmm0d).LD
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(xmm0d).LD =   *(T7(EAX)).A.LD
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.LD =   T8(xmm0d).LD
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-8).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(xmm0d).LD =   *(T11(EAX)).A.LD
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.LD =   T12(xmm0d).LD
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_15691:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15689:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$g~$qrgrg

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~
; Line 3689:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15696:
	VAR START	__x
	VAR START	__y
	VAR START	__z
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15698:
; Line 3692:	    unsigned __r = 0; 

	VAR START	__r
	T9(EAX).UI =   #0.UL
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15700:
	T10(EAX).A =   ___x:LINK(4).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___y:LINK(8).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(16).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T13(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15699:PC ; T13(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15701:
; Line 3694:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15702:
; Line 3695:	        if (!__c(*__z, *__y))       

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15704:
	T14(EAX).A =   ___y:LINK(8).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___z:LINK(12).A
	PARM	T15(EAX).A
	T16(EAX).A =   ___c:LINK(16).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T17(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15703:PC ; T17(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15705:
	T18(EAX).UI =   ___r:LINK(-4).UI
	RV.T2(EAX).UI =   T18(EAX).UI
	GOTO	L_15697:PC
	BLOCK END
	BLOCK 11

L_15706:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_15703:
	BLOCK END
	BLOCK 13

L_15707:
	DBG BLOCK END
; Line 3698:	        swap(*__y, *__z);           

	T19(EAX).A =   ___z:LINK(12).A
	PARM	T19(EAX).A
	T20(EAX).A =   ___y:LINK(8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3699:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15709:
	T21(EAX).A =   ___x:LINK(4).A
	PARM	T21(EAX).A
	T22(EAX).A =   ___y:LINK(8).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___c:LINK(16).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T24(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15708:PC ; T24(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 15
	DBG BLOCK START
	BLOCK END
	BLOCK 16

L_15710:
; Line 3701:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 17

L_15711:
; Line 3702:	            swap(*__x, *__y);       

	T25(EAX).A =   ___y:LINK(8).A
	PARM	T25(EAX).A
	T26(EAX).A =   ___x:LINK(4).A
	PARM	T26(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3703:	            __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3704:	        } 

	BLOCK END
	BLOCK 18

L_15712:
	DBG BLOCK END
	BLOCK END
	BLOCK 19

L_15713:
	DBG BLOCK END
	BLOCK END
	BLOCK 20

L_15708:
	BLOCK END
	BLOCK 21

L_15714:
	DBG BLOCK END
	T27(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T27(EAX).UI
	GOTO	L_15697:PC
; Line 3706:	    } 

	BLOCK END
	BLOCK 22

L_15715:
	DBG BLOCK END
	BLOCK END
	BLOCK 23

L_15716:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15699:
	BLOCK END
	BLOCK 25

L_15717:
	DBG BLOCK END
	DBG BLOCK START
	BLOCK END
	BLOCK 26

L_15719:
	T28(EAX).A =   ___y:LINK(8).A
	PARM	T28(EAX).A
	T29(EAX).A =   ___z:LINK(12).A
	PARM	T29(EAX).A
	T30(EAX).A =   ___c:LINK(16).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T31(AL).BOOL =   RV.T5(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15718:PC ; T31(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 27
	DBG BLOCK START
	BLOCK END
	BLOCK 28

L_15720:
; Line 3708:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 29

L_15721:
; Line 3709:	        swap(*__x, *__z);           

	T32(EAX).A =   ___z:LINK(12).A
	PARM	T32(EAX).A
	T33(EAX).A =   ___x:LINK(4).A
	PARM	T33(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3710:	        __r = 1; 

	___r:LINK(-4).UI =   #1.UI
	T34(EAX).UI =   ___r:LINK(-4).UI
	RV.T6(EAX).UI =   T34(EAX).UI
	GOTO	L_15697:PC
; Line 3712:	    } 

	BLOCK END
	BLOCK 30

L_15722:
	DBG BLOCK END
	BLOCK END
	BLOCK 31

L_15723:
	DBG BLOCK END
	BLOCK END
	BLOCK 32

L_15718:
	BLOCK END
	BLOCK 33

L_15724:
	DBG BLOCK END
; Line 3713:	    swap(*__x, *__y);               

	T35(EAX).A =   ___y:LINK(8).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___x:LINK(4).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3714:	    __r = 1;                        

	___r:LINK(-4).UI =   #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 34

L_15726:
	T37(EAX).A =   ___y:LINK(8).A
	PARM	T37(EAX).A
	T38(EAX).A =   ___z:LINK(12).A
	PARM	T38(EAX).A
	T39(EAX).A =   ___c:LINK(16).A
	PARM	T39(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T40(AL).BOOL =   RV.T7(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15725:PC ; T40(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 35
	DBG BLOCK START
	BLOCK END
	BLOCK 36

L_15727:
; Line 3716:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 37

L_15728:
; Line 3717:	        swap(*__y, *__z);           

	T41(EAX).A =   ___z:LINK(12).A
	PARM	T41(EAX).A
	T42(EAX).A =   ___y:LINK(8).A
	PARM	T42(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3718:	        __r = 2; 

	___r:LINK(-4).UI =   #2.UI
; Line 3719:	    } 

	BLOCK END
	BLOCK 38

L_15729:
	DBG BLOCK END
	BLOCK END
	BLOCK 39

L_15730:
	DBG BLOCK END
	BLOCK END
	BLOCK 40

L_15725:
	BLOCK END
	BLOCK 41

L_15731:
	DBG BLOCK END
	T43(EAX).UI =   ___r:LINK(-4).UI
	RV.T8(EAX).UI =   T43(EAX).UI
; Line 3721:	}                                   

	BLOCK END
	BLOCK 42

L_15732:
	DBG BLOCK END
	BLOCK END
	BLOCK 43

L_15697:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__sort4$r#__less$gg~pg~$qpgpgpgpgr#__less$gg~
; Line 3726:	unsigned 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_15737:
	VAR START	__x1
	VAR START	__x2
	VAR START	__x3
	VAR START	__x4
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15739:
; Line 3730:	    unsigned __r = __sort3<_Compare>(__x1, __x2, __x3, __c); 

	VAR START	__r
	T5(EAX).A =   ___c:LINK(20).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___x3:LINK(12).A
	PARM	T6(EAX).A
	T7(EAX).A =   ___x2:LINK(8).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___x1:LINK(4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~:PC.UI
	T9(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#10.N
	___r:LINK(-4).UI =   T9(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15741:
	T10(EAX).A =   ___x3:LINK(12).A
	PARM	T10(EAX).A
	T11(EAX).A =   ___x4:LINK(16).A
	PARM	T11(EAX).A
	T12(EAX).A =   ___c:LINK(20).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T13(AL).BOOL =   RV.T1(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15740:PC ; T13(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15742:
; Line 3732:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15743:
; Line 3733:	        swap(*__x3, *__x4); 

	T14(EAX).A =   ___x4:LINK(16).A
	PARM	T14(EAX).A
	T15(EAX).A =   ___x3:LINK(12).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3734:	        ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15745:
	T16(EAX).A =   ___x2:LINK(8).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___x3:LINK(12).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___c:LINK(20).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T19(AL).BOOL =   RV.T2(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15744:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15746:
; Line 3736:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15747:
; Line 3737:	            swap(*__x2, *__x3); 

	T20(EAX).A =   ___x3:LINK(12).A
	PARM	T20(EAX).A
	T21(EAX).A =   ___x2:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3738:	            ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15749:
	T22(EAX).A =   ___x1:LINK(4).A
	PARM	T22(EAX).A
	T23(EAX).A =   ___x2:LINK(8).A
	PARM	T23(EAX).A
	T24(EAX).A =   ___c:LINK(20).A
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T25(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15748:PC ; T25(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 13
	DBG BLOCK START
	BLOCK END
	BLOCK 14

L_15750:
; Line 3740:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15751:
; Line 3741:	                swap(*__x1, *__x2); 

	T26(EAX).A =   ___x2:LINK(8).A
	PARM	T26(EAX).A
	T27(EAX).A =   ___x1:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#swap$g~$qrgrg:PC.UI
	PARMADJ	#8.N
; Line 3742:	                ++__r; 

	___r:LINK(-4).UI = ___r:LINK(-4).UI + #1.UI
; Line 3743:	            } 

	BLOCK END
	BLOCK 16

L_15752:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15753:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15748:
	BLOCK END
	BLOCK 19

L_15754:
	DBG BLOCK END
; Line 3744:	        } 

	BLOCK END
	BLOCK 20

L_15755:
	DBG BLOCK END
	BLOCK END
	BLOCK 21

L_15756:
	DBG BLOCK END
	BLOCK END
	BLOCK 22

L_15744:
	BLOCK END
	BLOCK 23

L_15757:
	DBG BLOCK END
; Line 3745:	    } 

	BLOCK END
	BLOCK 24

L_15758:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15759:
	DBG BLOCK END
	BLOCK END
	BLOCK 26

L_15740:
	BLOCK END
	BLOCK 27

L_15760:
	DBG BLOCK END
	T28(EAX).UI =   ___r:LINK(-4).UI
	RV.T4(EAX).UI =   T28(EAX).UI
; Line 3747:	} 

	BLOCK END
	BLOCK 28

L_15761:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15738:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__sort4$r#__less$gg~pg~$qpgpgpgpgr#__less$gg~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__insertion_sort_3$r#__less$gg~pg~$qpgpgr#__less$gg~
; Line 3817:	void 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#14.UI
	BLOCK END
	BLOCK 2

L_15766:
	VAR START	__first
	VAR START	__last
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15768:
; Line 3820:	    typedef typename iterator_traits<_RandomAccessIterator>::value_type value_type; 

	VAR START	__j
	T5(EAX).A =   ___first:LINK(4).A
	T6(EAX).A = T5(EAX).A + #10.A
	___j:LINK(-4).A =   T6(EAX).A
; Line 3822:	    __sort3<_Compare>(__first, __first+1, __j, __comp); 

	T7(EAX).A =   ___comp:LINK(12).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___j:LINK(-4).A
	PARM	T8(EAX).A
	T9(EAX).A =   ___first:LINK(4).A
	T10(EAX).A = T9(EAX).A + #8.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___first:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__sort3$r#__less$gg~pg~$qpgpgpgr#__less$gg~:PC.UI
	PARMADJ	#10.N
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15773:
; Line 3823:	    for (_RandomAccessIterator __i = __j+1; __i != __last; ++__i) 

	VAR START	__i
	T12(EAX).A =   ___j:LINK(-4).A
	T13(EAX).A = T12(EAX).A + #8.A
	___i:LINK(-8).A =   T13(EAX).A
	GOTO	L_15770:PC
	BLOCK END
	BLOCK 5

L_15769:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15774:
; Line 3824:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_15775:
; Line 3825:	        if (__comp(*__i, *__j)) 

	DBG BLOCK START
	BLOCK END
	BLOCK 8

L_15777:
	T16(EAX).A =   ___j:LINK(-4).A
	PARM	T16(EAX).A
	T17(EAX).A =   ___i:LINK(-8).A
	PARM	T17(EAX).A
	T18(EAX).A =   ___comp:LINK(12).A
	PARM	T18(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T19(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15776:PC ; T19(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 9
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15778:
; Line 3826:	        { 

	DBG BLOCK START
	BLOCK END
	BLOCK 11

L_15779:
; Line 3827:	            value_type __t(_VSTD::move(*__i)); 

	VAR START	__t
	T20(EAX).A =   ___i:LINK(-8).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T21(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T22(xmm0d).LD =   *(T21(EAX)).A.LD
	___t:LINK(-16).LD =   T22(xmm0d).LD
	VAR START	__k
	T23(EAX).A =   ___j:LINK(-4).A
	___k:LINK(-20).A =   T23(EAX).A
; Line 3829:	            __j = __i; 

	T24(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T24(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15783:
	DBG BLOCK START
	BLOCK END
	BLOCK 13

L_15787:
; Line 3831:	            { 

	BLOCK END
	BLOCK 14

L_15780:
	DBG BLOCK START
	BLOCK END
	BLOCK 15

L_15784:
; Line 3832:	                *__j = _VSTD::move(*__k); 

	T25(EAX).A =   ___k:LINK(-20).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T26(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T27(xmm0d).LD =   *(T26(EAX)).A.LD
	T28(EAX).A =   ___j:LINK(-4).A
	*(T28(EAX)).A.LD =   T27(xmm0d).LD
; Line 3833:	                __j = __k; 

	T29(EAX).A =   ___k:LINK(-20).A
	___j:LINK(-4).A =   T29(EAX).A
; Line 3834:	            } while (__j != __first && __comp(__t, *--__k)); 

	BLOCK END
	BLOCK 16

L_15785:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15786:
	DBG BLOCK END
	BLOCK END
	BLOCK 18

L_15782:
	T30(ECX).A =   ___first:LINK(4).A
	T31(EAX).A =   ___j:LINK(-4).A
	CONDGO	L_15797:PC ; T31(EAX).A == T30(ECX).A
	BLOCK END
	BLOCK 19
	T32(EAX).A =   ___k:LINK(-20).A
	T33(EAX).A = T32(EAX).A - #8.A
	___k:LINK(-20).A =   T33(EAX).A
	T34(EAX).A =   ___k:LINK(-20).A
	PARM	T34(EAX).A
	T35(EAX).A =   #___t:LINK(-16).A
	PARM	T35(EAX).A
	T36(EAX).A =   ___comp:LINK(12).A
	PARM	T36(EAX).A
	TAG
	GOSUB	#@std@#__less$gg~@$bcall$xqrxgrxg:PC.UI
	T37(AL).BOOL =   RV.T3(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_15780:PC ; T37(AL).BOOL != #0.BOOL
	BLOCK END
	BLOCK 20

L_15797:
	BLOCK END
	BLOCK 21

L_15781:
	BLOCK END
	BLOCK 22

L_15788:
	DBG BLOCK END
; Line 3835:	            *__j = _VSTD::move(__t); 

	T38(EAX).A =   #___t:LINK(-16).A
	PARM	T38(EAX).A
	TAG
	GOSUB	#@std@#move$rg~$qrg:PC.UI
	T39(EAX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T40(xmm0d).LD =   *(T39(EAX)).A.LD
	T41(EAX).A =   ___j:LINK(-4).A
	*(T41(EAX)).A.LD =   T40(xmm0d).LD
; Line 3836:	        } 

	BLOCK END
	BLOCK 23

L_15789:
	DBG BLOCK END
	BLOCK END
	BLOCK 24

L_15790:
	DBG BLOCK END
	BLOCK END
	BLOCK 25

L_15776:
	BLOCK END
	BLOCK 26

L_15791:
	DBG BLOCK END
; Line 3837:	        __j = __i; 

	T42(EAX).A =   ___i:LINK(-8).A
	___j:LINK(-4).A =   T42(EAX).A
; Line 3838:	    } 

	BLOCK END
	BLOCK 27

L_15792:
	DBG BLOCK END
	BLOCK END
	BLOCK 28

L_15793:
	DBG BLOCK END
	BLOCK END
	BLOCK 29

L_15772:
	T43(EAX).A =   ___i:LINK(-8).A
	T44(EAX).A = T43(EAX).A + #8.A
	___i:LINK(-8).A =   T44(EAX).A
	BLOCK END
	BLOCK 30

L_15770:
	T14(ECX).A =   ___last:LINK(8).A
	T15(EAX).A =   ___i:LINK(-8).A
	CONDGO	L_15769:PC ; T15(EAX).A != T14(ECX).A
	BLOCK END
	BLOCK 31

L_15771:
	BLOCK END
	BLOCK 32

L_15794:
	DBG BLOCK END
; Line 3839:	} 

	BLOCK END
	BLOCK 33

L_15795:
	DBG BLOCK END
	BLOCK END
	BLOCK 34

L_15767:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__insertion_sort_3$r#__less$gg~pg~$qpgpgr#__less$gg~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$c~@to_int_type$qc
; Line 284:	        {return int_type((unsigned char)__c);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15801:
	VAR START	__c
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15803:
	T1(AL).UC =   ___c:LINK(4).C
	T2(EAX).I =   T1(AL).UC
	RV.T0(EAX).I =   T2(EAX).I
	BLOCK END
	BLOCK 4

L_15804:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15802:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$c~@to_int_type$qc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$h~@lt$qhh
; Line 590:	        {return __c1 < __c2;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15809:
	VAR START	__c1
	VAR START	__c2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15811:
	T1(ECX).I =   ___c1:LINK(4).U16
	T2(EAX).I =   ___c2:LINK(8).U16
	T3(EAX).UI = T1(ECX).I S< T2(EAX).I
	T4(AL).BOOL =   T3(EAX).UI
	RV.T0(AL).BOOL =   T4(AL).BOOL
	BLOCK END
	BLOCK 4

L_15812:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15810:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$h~@lt$qhh

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#char_traits$H~@lt$qHH
; Line 710:	        {return __c1 < __c2;} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15817:
	VAR START	__c1
	VAR START	__c2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15819:
	T1(ECX).U32 =   ___c1:LINK(4).U32
	T2(EAX).U32 =   ___c2:LINK(8).U32
	T3(EAX).UI = T1(ECX).U32 S< T2(EAX).U32
	T4(AL).BOOL =   T3(EAX).UI
	RV.T0(AL).BOOL =   T4(AL).BOOL
	BLOCK END
	BLOCK 4

L_15820:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15818:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#char_traits$H~@lt$qHH

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__unwrap_iter$pxc~$qpxc
; Line 1634:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15825:
	VAR START	__i
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15827:
; Line 1638:	    return __i; 

	T1(EAX).A =   ___i:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 1639:	} 

	BLOCK END
	BLOCK 4

L_15828:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15826:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__unwrap_iter$pxc~$qpxc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__unwrap_iter$pc~$qpc
; Line 1634:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15833:
	VAR START	__i
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15835:
; Line 1638:	    return __i; 

	T1(EAX).A =   ___i:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 1639:	} 

	BLOCK END
	BLOCK 4

L_15836:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15834:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__unwrap_iter$pc~$qpc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__copy_constexpr$pxcpc~$qpxcpxcpc
; Line 1696:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15841:
	VAR START	__first
	VAR START	__last
	VAR START	__result
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15843:
; Line 1700:	    for (; __first != __last; ++__first, (void) ++__result) 

	GOTO	L_15845:PC
	BLOCK END
	BLOCK 4

L_15844:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_15848:
; Line 1701:	        *__result = *__first; 

	T3(EAX).A =   ___first:LINK(4).A
	T4(CL).C =   *(T3(EAX)).A.C
	T5(EAX).A =   ___result:LINK(12).A
	*(T5(EAX)).A.C =   T4(CL).C
	BLOCK END
	BLOCK 6

L_15849:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_15847:
	T6(EAX).A =   ___first:LINK(4).A
	T7(EAX).A = T6(EAX).A + #1.A
	___first:LINK(4).A =   T7(EAX).A
	T8(EAX).A =   ___result:LINK(12).A
	T9(EAX).A = T8(EAX).A + #1.A
	___result:LINK(12).A =   T9(EAX).A
	BLOCK END
	BLOCK 8

L_15845:
	T1(ECX).A =   ___last:LINK(8).A
	T2(EAX).A =   ___first:LINK(4).A
	CONDGO	L_15844:PC ; T2(EAX).A != T1(ECX).A
	BLOCK END
	BLOCK 9

L_15846:
	T10(EAX).A =   ___result:LINK(12).A
	RV.T0(EAX).A =   T10(EAX).A
; Line 1703:	} 

	BLOCK END
	BLOCK 10

L_15850:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_15842:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__copy_constexpr$pxcpc~$qpxcpxcpc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__copy$pxcpc~$qpxcpxcpc
; Line 1706:	inline _LIBCPP_INLINE_VISIBILITY 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15855:
	VAR START	__first
	VAR START	__last
	VAR START	__result
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15857:
; Line 1710:	    return __copy_constexpr(__first, __last, __result); 

	T2(EAX).A =   ___result:LINK(12).A
	PARM	T2(EAX).A
	T3(EAX).A =   ___last:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___first:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__copy_constexpr$pxcpc~$qpxcpxcpc:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	RV.T1(EAX).A =   T5(EAX).A
; Line 1711:	} 

	BLOCK END
	BLOCK 4

L_15858:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15856:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__copy$pxcpc~$qpxcpxcpc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__unwrap_iter$pxC~$qpxC
; Line 1634:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15863:
	VAR START	__i
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15865:
; Line 1638:	    return __i; 

	T1(EAX).A =   ___i:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 1639:	} 

	BLOCK END
	BLOCK 4

L_15866:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15864:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__unwrap_iter$pxC~$qpxC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__unwrap_iter$pC~$qpC
; Line 1634:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15871:
	VAR START	__i
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15873:
; Line 1638:	    return __i; 

	T1(EAX).A =   ___i:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 1639:	} 

	BLOCK END
	BLOCK 4

L_15874:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15872:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__unwrap_iter$pC~$qpC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__copy_constexpr$pxCpC~$qpxCpxCpC
; Line 1696:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15879:
	VAR START	__first
	VAR START	__last
	VAR START	__result
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15881:
; Line 1700:	    for (; __first != __last; ++__first, (void) ++__result) 

	GOTO	L_15883:PC
	BLOCK END
	BLOCK 4

L_15882:
	DBG BLOCK START
	BLOCK END
	BLOCK 5

L_15886:
; Line 1701:	        *__result = *__first; 

	T3(EAX).A =   ___first:LINK(4).A
	T4(CX).US =   *(T3(EAX)).A.US
	T5(EAX).A =   ___result:LINK(12).A
	*(T5(EAX)).A.US =   T4(CX).US
	BLOCK END
	BLOCK 6

L_15887:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_15885:
	T6(EAX).A =   ___first:LINK(4).A
	T7(EAX).A = T6(EAX).A + #2.A
	___first:LINK(4).A =   T7(EAX).A
	T8(EAX).A =   ___result:LINK(12).A
	T9(EAX).A = T8(EAX).A + #2.A
	___result:LINK(12).A =   T9(EAX).A
	BLOCK END
	BLOCK 8

L_15883:
	T1(ECX).A =   ___last:LINK(8).A
	T2(EAX).A =   ___first:LINK(4).A
	CONDGO	L_15882:PC ; T2(EAX).A != T1(ECX).A
	BLOCK END
	BLOCK 9

L_15884:
	T10(EAX).A =   ___result:LINK(12).A
	RV.T0(EAX).A =   T10(EAX).A
; Line 1703:	} 

	BLOCK END
	BLOCK 10

L_15888:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_15880:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__copy_constexpr$pxCpC~$qpxCpxCpC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__copy$pxCpC~$qpxCpxCpC
; Line 1706:	inline _LIBCPP_INLINE_VISIBILITY 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15893:
	VAR START	__first
	VAR START	__last
	VAR START	__result
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15895:
; Line 1710:	    return __copy_constexpr(__first, __last, __result); 

	T2(EAX).A =   ___result:LINK(12).A
	PARM	T2(EAX).A
	T3(EAX).A =   ___last:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___first:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__copy_constexpr$pxCpC~$qpxCpxCpC:PC.UI
	T5(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	RV.T1(EAX).A =   T5(EAX).A
; Line 1711:	} 

	BLOCK END
	BLOCK 4

L_15896:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15894:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__copy$pxCpC~$qpxCpxCpC

segment end exitseg

segment codeseg

segment end codeseg

	virtual @FPF@$bctr$qv
; Line 102:	class FPF 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15901:
	VAR START	Unnamed++Identifier 23562
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15903:
	PARM	#0.I
	T1(EAX).A =   ___$$this:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@FPF@SetZero$qi:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_15906:
	DBG BLOCK END
	T2(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 5

L_15902:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @FPF@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@deallocate$qr#allocator$pn0~ppn0ui
; Line 1589:	        {__a.deallocate(__p, __n);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_15911:
	VAR START	__a
	VAR START	__p
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15913:
	T0(EAX).UI =   ___n:LINK(12).UI
	PARM	T0(EAX).UI
	T1(EAX).A =   ___p:LINK(8).A
	PARM	T1(EAX).A
	T2(EAX).A =   ___a:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@deallocate$qppn0ui:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 4

L_15914:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15912:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@deallocate$qr#allocator$pn0~ppn0ui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@first$qv
; Line 2303:	  typename _Base1::reference first() _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15919:
	VAR START	Unnamed++Identifier 65823
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15921:
; Line 2304:	    return static_cast<_Base1&>(*this).__get(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	_$anontemp314:LINK(-4).A =   T2(EAX).A
	T3(EAX).A =   _$anontemp314:LINK(-4).A
	CONDGO	L_15924:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T5(EAX).A =   _$anontemp314:LINK(-4).A
	GOTO	L_15925:PC
	BLOCK END
	BLOCK 5

L_15924:
	T6(EAX).A =   _$anontemp314:LINK(-4).A
	T5(EAX).A =   T6(EAX).A
	BLOCK END
	BLOCK 6

L_15925:
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$qv:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T7(EAX).A
; Line 2305:	  } 

	BLOCK END
	BLOCK 7

L_15922:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_15920:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@first$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@second$qv
; Line 2313:	  typename _Base2::reference second() _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15929:
	VAR START	Unnamed++Identifier 65825
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15931:
; Line 2314:	    return static_cast<_Base2&>(*this).__get(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	_$anontemp315:LINK(-4).A =   T2(EAX).A
	T3(EAX).A =   _$anontemp315:LINK(-4).A
	CONDGO	L_15934:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T4(EAX).A =   _$anontemp315:LINK(-4).A
	T6(EAX).A = T4(EAX).A + #4.A
	GOTO	L_15935:PC
	BLOCK END
	BLOCK 5

L_15934:
	T7(EAX).A =   _$anontemp315:LINK(-4).A
	T6(EAX).A =   T7(EAX).A
	BLOCK END
	BLOCK 6

L_15935:
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@__get$qv:PC.UI
	T8(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T8(EAX).A
; Line 2315:	  } 

	BLOCK END
	BLOCK 7

L_15932:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_15930:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@second$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@clear$qv
; Line 369:	    void clear() _NOEXCEPT {__destruct_at_end(__begin_);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15939:
	VAR START	Unnamed++Identifier 65838
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15941:
	T0(EAX).A =   ___$$this:LINK(4).A
	T1(EAX).A =   *(T0(EAX) + 4).A.A
	PARM	T1(EAX).A
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__destruct_at_end$qppn0:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_15942:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15940:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@clear$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv
; Line 372:	        {return static_cast<size_type>(__end_cap() - __begin_);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15947:
	VAR START	Unnamed++Identifier 65839
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15949:
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$xqv:PC.UI
	T3(ECX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T4(EAX).A =   ___$$this:LINK(4).A
	T5(EAX).A =   *(T4(EAX) + 4).A.A
	T6(EAX).UI = *(T3(ECX)).A.A - T5(EAX).A
	T7(EAX).A = T6(EAX).UI * #1.UI
	T9(EAX).A = T7(EAX).A S>> #2.UI
	RV.T1(EAX).UI =   T9(EAX).UI
	BLOCK END
	BLOCK 4

L_15950:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15948:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__destruct_at_end$qppn0

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15955:
	VAR START	__new_last
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15957:
; Line 424:	    pointer __soon_to_be_end = __end_; 

	VAR START	__soon_to_be_end
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A =   *(T2(EAX) + 8).A.A
	___soon_to_be_end:LINK(-4).A =   T3(EAX).A
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15961:
	GOTO	L_15960:PC
	BLOCK END
	BLOCK 5

L_15958:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15962:
; Line 426:	        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(--__soon_to_be_end)); 

	T6(EAX).A =   ___soon_to_be_end:LINK(-4).A
	T7(EAX).A = T6(EAX).A - #4.A
	___soon_to_be_end:LINK(-4).A =   T7(EAX).A
	T8(EAX).A =   ___soon_to_be_end:LINK(-4).A
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0:PC.UI
	T9(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T9(EAX).A
	T10(EAX).A =   ___$$this:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv:PC.UI
	T11(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 7

L_15963:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_15960:
; Line 425:	    while (__new_last != __soon_to_be_end) 

	T4(ECX).A =   ___soon_to_be_end:LINK(-4).A
	T5(EAX).A =   ___new_last:LINK(8).A
	CONDGO	L_15958:PC ; T5(EAX).A != T4(ECX).A
	BLOCK END
	BLOCK 9

L_15959:
	BLOCK END
	BLOCK 10

L_15964:
	DBG BLOCK END
; Line 427:	    __end_ = __new_last; 

	T12(ECX).A =   ___new_last:LINK(8).A
	T13(EAX).A =   ___$$this:LINK(4).A
	*(T13(EAX) + 8).A.A =   T12(ECX).A
; Line 428:	} 

	BLOCK END
	BLOCK 11

L_15965:
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_15956:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__destruct_at_end$qppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@size$xqv
; Line 656:	        {return static_cast<size_type>(this->__end_ - this->__begin_);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15970:
	VAR START	Unnamed++Identifier 66203
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15972:
	T1(ECX).A =   ___$$this:LINK(4).A
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A =   *(T2(EAX) + 4).A.A
	T4(EAX).UI = *(T1(ECX) + 8).A.A - T3(EAX).A
	T5(EAX).A = T4(EAX).UI * #1.UI
	T7(EAX).A = T5(EAX).A S>> #2.UI
	RV.T0(EAX).UI =   T7(EAX).UI
	BLOCK END
	BLOCK 4

L_15973:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15971:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@size$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__recommend$xqui

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#C.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15978:
	VAR START	__new_size
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15980:
; Line 1025:	    const size_type __ms = max_size(); 

	VAR START	__ms
	T5(EAX).A =   ___$$this:LINK(4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@max_size$xqv:PC.UI
	T6(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	___ms:LINK(-4).UI =   T6(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_15982:
	T7(ECX).UI =   ___ms:LINK(-4).UI
	T8(EAX).UI =   ___new_size:LINK(8).UI
	CONDGO	L_15981:PC ; T8(EAX).UI U<= T7(ECX).UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_15983:
; Line 1027:	        this->__throw_length_error(); 

	T9(EAX).A =   ___$$this:LINK(4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__vector_base_common$4bool?1?~@__throw_length_error$xqv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 7

L_15984:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_15981:
	BLOCK END
	BLOCK 9

L_15985:
	DBG BLOCK END
	VAR START	__cap
	T10(EAX).A =   ___$$this:LINK(4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T11(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#4.N
	___cap:LINK(-8).UI =   T11(EAX).UI
	DBG BLOCK START
	BLOCK END
	BLOCK 10

L_15987:
	T12(EAX).UI =   ___ms:LINK(-4).UI
	T14(EAX).UL = T12(EAX).UI U>> #1.UI
	T15(ECX).UI =   ___cap:LINK(-8).UI
	CONDGO	L_15986:PC ; T15(ECX).UI U< T14(EAX).UL
	BLOCK END
	BLOCK 11
	DBG BLOCK START
	BLOCK END
	BLOCK 12

L_15988:
	T16(EAX).UI =   ___ms:LINK(-4).UI
	RV.T2(EAX).UI =   T16(EAX).UI
	GOTO	L_15979:PC
	BLOCK END
	BLOCK 13

L_15989:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_15986:
	BLOCK END
	BLOCK 15

L_15990:
	DBG BLOCK END
	T17(EAX).A =   #___new_size:LINK(8).A
	PARM	T17(EAX).A
	T18(EAX).UI =   ___cap:LINK(-8).UI
	T19(EAX).UI = T18(EAX).UI << #1.I
	_$anontemp323:LINK(-12).UI =   T19(EAX).UI
	T20(EAX).A =   #_$anontemp323:LINK(-12).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#max$ui~$qrxuirxui:PC.UI
	T21(EAX).A =   RV.T3(EAX).A
	PARMADJ	#8.N
	T22(EAX).UI =   *(T21(EAX)).A.UI
	RV.T4(EAX).UI =   T22(EAX).UI
; Line 1032:	} 

	BLOCK END
	BLOCK 16

L_15991:
	DBG BLOCK END
	BLOCK END
	BLOCK 17

L_15979:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__recommend$xqui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__alloc$qv
; Line 56:	    _LIBCPP_INLINE_VISIBILITY __alloc_rr&           __alloc() _NOEXCEPT         {return __end_cap_.second();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_15996:
	VAR START	Unnamed++Identifier 66314
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_15998:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #10.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@second$qv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_15999:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_15997:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__alloc$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bctr$quiuir#allocator$pn0~
; Line 317:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16004:
	VAR START	__cap
	VAR START	__start
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16006:
	T4(EAX).A =   ___$$this:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer_common$4bool?1?~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T5(EAX).A =   ___a:LINK(16).A
	PARM	T5(EAX).A
	T6(EAX).A =   #0.UI
	_$anontemp324:LINK(-4).A =   T6(EAX).A
	T7(EAX).A =   #_$anontemp324:LINK(-4).A
	PARM	T7(EAX).A
	T8(EAX).A =   ___$$this:LINK(4).A
	T9(EAX).A = T8(EAX).A + #10.A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bctr$9nullptr_tr#allocator$pn0~~$qRn1r#allocator$pn0~:PC.UI
	PARMADJ	#C.N
; Line 318:	    __first_ = __cap != 0 ? __alloc_traits::allocate(__alloc(), __cap) : nullptr; 

	T10(EAX).UI =   ___cap:LINK(8).UI
	CONDGO	L_16011:PC ; T10(EAX).UI == #0.UI
	BLOCK END
	BLOCK 4
	T11(EAX).UI =   ___cap:LINK(8).UI
	PARM	T11(EAX).UI
	T12(EAX).A =   ___$$this:LINK(4).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__alloc$qv:PC.UI
	T13(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@allocate$qr#allocator$pn0~ui:PC.UI
	T17(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	GOTO	L_16012:PC
	BLOCK END
	BLOCK 5

L_16011:
	T17(EAX).UI =   #0.A
	BLOCK END
	BLOCK 6

L_16012:
	T16(ECX).A =   ___$$this:LINK(4).A
	*(T16(ECX) + 4).A.A =   T17(EAX).A
; Line 319:	    __begin_ = __end_ = __first_ + __start; 

	T18(EAX).A =   ___$$this:LINK(4).A
	T19(ECX).A =   *(T18(EAX) + 4).A.A
	T20(EAX).UI =   ___start:LINK(12).UI
	T21(EAX).UI = T20(EAX).UI << #2.I
	T22(ECX).A = T19(ECX).A + T21(EAX).UI
	T23(EAX).A =   ___$$this:LINK(4).A
	*(T23(EAX) + C).A.A =   T22(ECX).A
	T24(ECX).A =   *(T23(EAX) + C).A.A
	T25(EAX).A =   ___$$this:LINK(4).A
	*(T25(EAX) + 8).A.A =   T24(ECX).A
; Line 320:	    __end_cap() = __first_ + __cap; 

	T26(EAX).A =   ___$$this:LINK(4).A
	T27(ECX).A =   *(T26(EAX) + 4).A.A
	T28(EAX).UI =   ___cap:LINK(8).UI
	T29(EAX).UI = T28(EAX).UI << #2.I
	T30(EBX).A = T27(ECX).A + T29(EAX).UI
	T31(EAX).A =   ___$$this:LINK(4).A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$qv:PC.UI
	T32(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	*(T32(EAX)).A.A =   T30(EBX).A
; Line 321:	} 

	BLOCK END
	BLOCK 7

L_16009:
	DBG BLOCK END
	T33(EAX).A =   ___$$this:LINK(4).A
	RV.T3(EAX).A =   T33(EAX).A
	BLOCK END
	BLOCK 8

L_16005:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bctr$quiuir#allocator$pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@clear$qv
; Line 88:	        {__destruct_at_end(__begin_);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16016:
	VAR START	Unnamed++Identifier 66324
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16018:
	T0(EAX).A =   ___$$this:LINK(4).A
	T1(EAX).A =   *(T0(EAX) + 8).A.A
	PARM	T1(EAX).A
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__destruct_at_end$qppn0:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_16019:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16017:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@clear$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@capacity$xqv
; Line 91:	    _LIBCPP_INLINE_VISIBILITY size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16024:
	VAR START	Unnamed++Identifier 66327
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16026:
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$xqv:PC.UI
	T3(ECX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T4(EAX).A =   ___$$this:LINK(4).A
	T5(EAX).A =   *(T4(EAX) + 4).A.A
	T6(EAX).UI = *(T3(ECX)).A.A - T5(EAX).A
	T7(EAX).A = T6(EAX).UI * #1.UI
	T9(EAX).A = T7(EAX).A S>> #2.UI
	RV.T1(EAX).UI =   T9(EAX).UI
	BLOCK END
	BLOCK 4

L_16027:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16025:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@capacity$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__destruct_at_end$qppn0
; Line 141:	        {__destruct_at_end(__new_last, false_type());} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#28.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16032:
	VAR START	__new_last
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16034:
	#_$anontemp327:LINK(-4).UI BLKCLR (#4.UI)
	T1(EAX).A =   #_$anontemp327:LINK(-4).UI
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?0?~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	PARMBLOCKRV.T0(EAX).A,#4.UI
	T2(EAX).A =   ___new_last:LINK(8).A
	PARM	T2(EAX).A
	T3(EAX).A =   ___$$this:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp?0?~:PC.UI
	T4(EAX).A =   #_$anontemp327:LINK(-4).UI
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?0?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	PARMADJ	#C.N
	BLOCK END
	BLOCK 4

L_16037:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16033:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__destruct_at_end$qppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp?0?~

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#24.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16042:
	VAR START	__new_last
	VAR START	Unnamed++Identifier 66344
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16044:
; Line 302:	    while (__new_last != __end_) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16048:
	GOTO	L_16047:PC
	BLOCK END
	BLOCK 5

L_16045:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_16049:
; Line 303:	        __alloc_traits::destroy(__alloc(), __to_address(--__end_)); 

	T5(EAX).A =   ___$$this:LINK(4).A
	T6(EAX).A =   *(T5(EAX) + C).A.A
	T7(ECX).A = T6(EAX).A - #4.A
	T8(EAX).A =   ___$$this:LINK(4).A
	*(T8(EAX) + C).A.A =   T7(ECX).A
	T9(EAX).A =   *(T8(EAX) + C).A.A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0:PC.UI
	T10(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T10(EAX).A
	T11(EAX).A =   ___$$this:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__alloc$qv:PC.UI
	T12(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 7

L_16050:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16047:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(ECX).A =   *(T2(EAX) + C).A.A
	T4(EAX).A =   ___new_last:LINK(8).A
	CONDGO	L_16045:PC ; T4(EAX).A != T3(ECX).A
	BLOCK END
	BLOCK 9

L_16046:
	BLOCK END
	BLOCK 10

L_16051:
	DBG BLOCK END
; Line 304:	} 

	BLOCK END
	BLOCK 11

L_16054:
	T13(EAX).A =   #Unnamed++Identifier 66344:LINK(12).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?0?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 12

L_16043:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__destruct_at_end$qppn0#integral_constant$4bool3_Tp?0?~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__swap_out_circular_buffer$qr#__split_buffer$pn0r#allocator$pn0~~

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16059:
	VAR START	__v
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16061:
; Line 951:	    __annotate_delete(); 

	T4(EAX).A =   ___$$this:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_delete$xqv:PC.UI
	PARMADJ	#4.N
; Line 952:	    __alloc_traits::__construct_backward_with_exception_guarantees( 

	T5(EAX).A =   ___v:LINK(8).A
	T6(EAX).A = T5(EAX).A + #8.A
	PARM	T6(EAX).A
	T7(EAX).A =   ___$$this:LINK(4).A
	T8(EAX).A =   *(T7(EAX) + 8).A.A
	PARM	T8(EAX).A
	T9(EAX).A =   ___$$this:LINK(4).A
	T10(EAX).A =   *(T9(EAX) + 4).A.A
	PARM	T10(EAX).A
	T11(EAX).A =   ___$$this:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv:PC.UI
	T12(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct_backward_with_exception_guarantees$ppn0~$qr#allocator$pn0~ppn0ppn0rppn0:PC.UI
	PARMADJ	#10.N
; Line 954:	    _VSTD::swap(this->__begin_, __v.__begin_); 

	T13(EAX).A =   ___v:LINK(8).A
	T14(EAX).A = T13(EAX).A + #8.A
	PARM	T14(EAX).A
	T15(EAX).A =   ___$$this:LINK(4).A
	T16(EAX).A = #4.I + T15(EAX).A
	PARM	T16(EAX).A
	TAG
	GOSUB	#@std@#swap$pp23@Optimizer@SimpleSymbol~$qrppn0rppn0:PC.UI
	PARMADJ	#8.N
; Line 955:	    _VSTD::swap(this->__end_, __v.__end_); 

	T17(EAX).A =   ___v:LINK(8).A
	T18(EAX).A = T17(EAX).A + #C.A
	PARM	T18(EAX).A
	T19(EAX).A =   ___$$this:LINK(4).A
	T20(EAX).A = #8.I + T19(EAX).A
	PARM	T20(EAX).A
	TAG
	GOSUB	#@std@#swap$pp23@Optimizer@SimpleSymbol~$qrppn0rppn0:PC.UI
	PARMADJ	#8.N
; Line 956:	    _VSTD::swap(this->__end_cap(), __v.__end_cap()); 

	T21(EAX).A =   ___v:LINK(8).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$qv:PC.UI
	T22(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T22(EAX).A
	T23(EAX).A =   ___$$this:LINK(4).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$qv:PC.UI
	T24(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	PARM	T24(EAX).A
	TAG
	GOSUB	#@std@#swap$pp23@Optimizer@SimpleSymbol~$qrppn0rppn0:PC.UI
	PARMADJ	#8.N
; Line 957:	    __v.__first_ = __v.__begin_; 

	T25(EAX).A =   ___v:LINK(8).A
	T26(ECX).A =   *(T25(EAX) + 8).A.A
	T27(EAX).A =   ___v:LINK(8).A
	*(T27(EAX) + 4).A.A =   T26(ECX).A
; Line 958:	    __annotate_new(size()); 

	T28(EAX).A =   ___$$this:LINK(4).A
	PARM	T28(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@size$xqv:PC.UI
	T29(EAX).UI =   RV.T3(EAX).UI
	PARMADJ	#4.N
	PARM	T29(EAX).UI
	T30(EAX).A =   ___$$this:LINK(4).A
	PARM	T30(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_new$xqui:PC.UI
	PARMADJ	#8.N
; Line 959:	    __invalidate_all_iterators(); 

	T31(EAX).A =   ___$$this:LINK(4).A
	PARM	T31(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__invalidate_all_iterators$qv:PC.UI
	PARMADJ	#4.N
; Line 960:	} 

	BLOCK END
	BLOCK 4

L_16062:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16060:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__swap_out_circular_buffer$qr#__split_buffer$pn0r#allocator$pn0~~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_new$xqui
; Line 870:	    void __annotate_new(size_type __current_size) const _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16067:
	VAR START	__current_size
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16069:
; Line 871:	      __annotate_contiguous_container(data(), data() + capacity(), 

	T6(EAX).A =   ___$$this:LINK(4).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T7(ECX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T8(EAX).UI =   ___current_size:LINK(8).UI
	T9(EAX).UI = T8(EAX).UI << #2.I
	T10(EAX).A = T7(ECX).A + T9(EAX).UI
	PARM	T10(EAX).A
	T11(EAX).A =   ___$$this:LINK(4).A
	PARM	T11(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T12(EBX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T13(EAX).A =   ___$$this:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T14(EAX).UI =   RV.T2(EAX).UI
	PARMADJ	#4.N
	T15(EAX).UI = T14(EAX).UI << #2.I
	T16(EAX).A = T12(EBX).A + T15(EAX).UI
	PARM	T16(EAX).A
	T17(EAX).A =   ___$$this:LINK(4).A
	PARM	T17(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T18(EBX).A =   RV.T3(EAX).A
	PARMADJ	#4.N
	T19(EAX).A =   ___$$this:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T20(EAX).UI =   RV.T4(EAX).UI
	PARMADJ	#4.N
	T21(EAX).UI = T20(EAX).UI << #2.I
	T22(EAX).A = T18(EBX).A + T21(EAX).UI
	PARM	T22(EAX).A
	T23(EAX).A =   ___$$this:LINK(4).A
	PARM	T23(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T24(EAX).A =   RV.T5(EAX).A
	PARMADJ	#4.N
	PARM	T24(EAX).A
	T25(EAX).A =   ___$$this:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_contiguous_container$xqpxvpxvpxvpxv:PC.UI
	PARMADJ	#14.N
; Line 873:	    } 

	BLOCK END
	BLOCK 4

L_16070:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16068:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_new$xqui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_delete$xqv
; Line 876:	    void __annotate_delete() const _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16075:
	VAR START	Unnamed++Identifier 66359
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16077:
; Line 877:	      __annotate_contiguous_container(data(), data() + capacity(), 

	T7(EAX).A =   ___$$this:LINK(4).A
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T8(EBX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T9(EAX).A =   ___$$this:LINK(4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T10(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#4.N
	T11(EAX).UI = T10(EAX).UI << #2.I
	T12(EAX).A = T8(EBX).A + T11(EAX).UI
	PARM	T12(EAX).A
	T13(EAX).A =   ___$$this:LINK(4).A
	PARM	T13(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T14(EBX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T15(EAX).A =   ___$$this:LINK(4).A
	PARM	T15(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@size$xqv:PC.UI
	T16(EAX).UI =   RV.T3(EAX).UI
	PARMADJ	#4.N
	T17(EAX).UI = T16(EAX).UI << #2.I
	T18(EAX).A = T14(EBX).A + T17(EAX).UI
	PARM	T18(EAX).A
	T19(EAX).A =   ___$$this:LINK(4).A
	PARM	T19(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T20(EBX).A =   RV.T4(EAX).A
	PARMADJ	#4.N
	T21(EAX).A =   ___$$this:LINK(4).A
	PARM	T21(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T22(EAX).UI =   RV.T5(EAX).UI
	PARMADJ	#4.N
	T23(EAX).UI = T22(EAX).UI << #2.I
	T24(EAX).A = T20(EBX).A + T23(EAX).UI
	PARM	T24(EAX).A
	T25(EAX).A =   ___$$this:LINK(4).A
	PARM	T25(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv:PC.UI
	T26(EAX).A =   RV.T6(EAX).A
	PARMADJ	#4.N
	PARM	T26(EAX).A
	T27(EAX).A =   ___$$this:LINK(4).A
	PARM	T27(EAX).A
	TAG
	GOSUB	#@std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_contiguous_container$xqpxvpxvpxvpxv:PC.UI
	PARMADJ	#14.N
; Line 879:	    } 

	BLOCK END
	BLOCK 4

L_16078:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16076:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_delete$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bctr$qr#vector$pn0#allocator$pn0~~ui
; Line 897:	      : __v_(__v),  __pos_(__v.__end_), __new_end_(__v.__end_ + __n) { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16083:
	VAR START	__v
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16085:
	T1(ECX).A =   ___v:LINK(8).A
	T2(EAX).A =   ___$$this:LINK(4).A
	*(T2(EAX) + 0).A.A =   T1(ECX).A
	T3(EAX).A =   ___v:LINK(8).A
	T4(ECX).A =   *(T3(EAX) + 8).A.A
	T5(EAX).A =   ___$$this:LINK(4).A
	*(T5(EAX) + 4).A.A =   T4(ECX).A
	T6(EAX).A =   ___v:LINK(8).A
	T7(ECX).A =   *(T6(EAX) + 8).A.A
	T8(EAX).UI =   ___n:LINK(12).UI
	T9(EAX).UI = T8(EAX).UI << #2.I
	T10(ECX).A = T7(ECX).A + T9(EAX).UI
	T11(EAX).A =   ___$$this:LINK(4).A
	*(T11(EAX) + 8).A.A =   T10(ECX).A
; Line 899:	      __v_.__annotate_increase(__n); 

	BLOCK END
	BLOCK 4

L_16088:
	DBG BLOCK END
	T12(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T12(EAX).A
	BLOCK END
	BLOCK 5

L_16084:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@_ConstructTransaction@$bctr$qr#vector$pn0#allocator$pn0~~ui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@SimpleExpression@__anontype_fa409fba_0005@__anontype_fa409fba_0006@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16093:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16094:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@SimpleExpression@__anontype_fa409fba_0005@__anontype_fa409fba_0006@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@SimpleExpression@__anontype_fa409fba_0005@__anontype_fa409fba_0007@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16101:
	T1(EAX).A =   ___$$this:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@FPF@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #10.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@FPF@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T4(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 3

L_16102:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@SimpleExpression@__anontype_fa409fba_0005@__anontype_fa409fba_0007@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@SimpleSymbol@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16109:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16110:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@SimpleSymbol@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @Optimizer@SimpleType@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16117:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16118:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @Optimizer@SimpleType@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$qv
; Line 2218:	  _LIBCPP_INLINE_VISIBILITY reference __get() _NOEXCEPT { return __value_; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16125:
	VAR START	Unnamed++Identifier 65774
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16127:
	T1(EAX).A =   ___$$this:LINK(4).A
	T2(EAX).A = T1(EAX).A + #0.A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 4

L_16128:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16126:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@__get$qv
; Line 2218:	  _LIBCPP_INLINE_VISIBILITY reference __get() _NOEXCEPT { return __value_; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16133:
	VAR START	Unnamed++Identifier 65805
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16135:
	T1(EAX).A =   ___$$this:LINK(4).A
	T2(EAX).A = T1(EAX).A + #0.A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 4

L_16136:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16134:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@__get$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0
; Line 1119:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16141:
	VAR START	__p
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16143:
; Line 1123:	    static_assert(!is_function<_Tp>::value, "_Tp is a function type"); 

	T1(EAX).A =   ___p:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 1125:	} 

	BLOCK END
	BLOCK 4

L_16144:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16142:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0
; Line 2265:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16149:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16151:
; Line 2269:	    return static_cast<_Tp&&>(__t); 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2270:	} 

	BLOCK END
	BLOCK 4

L_16152:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16150:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0
; Line 1595:	            {__construct(__has_construct<allocator_type, _Tp*, _Args...>(), 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4C.UI
	BLOCK END
	BLOCK 2

L_16157:
	PARM	#@$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0:RAM.A
	T2(EAX).A =   #$$xctab:LINK(-76).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_16160:
	VAR START	__a
	VAR START	__p
	VAR START	__args
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16159:
	T3(EAX).A =   ___args:LINK(12).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T4(EAX).A
	T5(EAX).A =   ___p:LINK(8).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___a:LINK(4).A
	PARM	T6(EAX).A
	#_$anontemp317:LINK(-4).UI BLKCLR (#4.UI)
	T7(EAX).A =   #_$anontemp317:LINK(-4).UI
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	$$xctab:LINK(-76)+14.A =   #1.A
	PARMBLOCKRV.T1(EAX).A,#4.UI
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct$pn0pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0Rpn0:PC.UI
	$$xctab:LINK(-76)+14.A =   #2.A
	T8(EAX).A =   #_$anontemp317:LINK(-4).UI
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	PARMADJ	#10.N
	BLOCK END
	BLOCK 5

L_16162:
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_16158:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#integral_constant$4bool3_Tp?1?~
	DC.A 0x0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x69
	DC.B 0x6e
	DC.B 0x74
	DC.B 0x65
	DC.B 0x67
	DC.B 0x72
	DC.B 0x61
	DC.B 0x6c
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x73
	DC.B 0x74
	DC.B 0x61
	DC.B 0x6e
	DC.B 0x74
	DC.B 0x0
	DC.I 0x0
	virtual end @$xt@#integral_constant$4bool3_Tp?1?~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~
	DC.A 0x0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x68
	DC.B 0x61
	DC.B 0x73
	DC.B 0x5f
	DC.B 0x63
	DC.B 0x6f
	DC.B 0x6e
	DC.B 0x73
	DC.B 0x74
	DC.B 0x72
	DC.B 0x75
	DC.B 0x63
	DC.B 0x74
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#integral_constant$4bool3_Tp?1?~+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~+0
	DC.I OFFSETOF _$anontemp317 + 0
	DC.I 0x1
	DC.I 0x2
	DC.I 0x0
	virtual end @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@max_size$xqv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#8.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16167:
	VAR START	Unnamed++Identifier 66206
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16169:
; Line 1015:	    return _VSTD::min<size_type>(__alloc_traits::max_size(this->__alloc()), 

	T4(EAX).UI =   #7FFFFFFF.I
	_$anontemp320:LINK(-8).UI =   T4(EAX).UI
	T5(EAX).A =   #_$anontemp320:LINK(-8).A
	PARM	T5(EAX).A
	T6(EAX).A =   ___$$this:LINK(4).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__alloc$qv:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@max_size$qrx#allocator$pn0~:PC.UI
	T8(EAX).UI =   RV.T1(EAX).UI
	PARMADJ	#4.N
	_$anontemp319:LINK(-4).UI =   T8(EAX).UI
	T9(EAX).A =   #_$anontemp319:LINK(-4).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#min$ui~$qrxuirxui:PC.UI
	T10(EAX).A =   RV.T2(EAX).A
	PARMADJ	#8.N
	T11(EAX).UI =   *(T10(EAX)).A.UI
	RV.T3(EAX).UI =   T11(EAX).UI
; Line 1017:	} 

	BLOCK END
	BLOCK 4

L_16170:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16168:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@max_size$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$xqv
; Line 357:	        {return __end_cap_.first();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16175:
	VAR START	Unnamed++Identifier 65835
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16177:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #C.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@first$xqv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_16178:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16176:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__end_cap$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv
; Line 659:	        {return __base::capacity();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16183:
	VAR START	Unnamed++Identifier 66204
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16185:
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__vector_base$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv:PC.UI
	T3(EAX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	RV.T1(EAX).UI =   T3(EAX).UI
	BLOCK END
	BLOCK 4

L_16186:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16184:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@capacity$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#max$ui~$qrxuirxui
; Line 2630:	_LIBCPP_NODISCARD_EXT inline 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#4.UI
	BLOCK END
	BLOCK 2

L_16191:
	VAR START	__a
	VAR START	__b
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16193:
; Line 2635:	    return _VSTD::max(__a, __b, __less<_Tp>()); 

	#_$anontemp322:LINK(-4).UI BLKCLR (#4.UI)
	T3(EAX).A =   #_$anontemp322:LINK(-4).UI
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	PARMBLOCKRV.T0(EAX).A,#4.UI
	T4(EAX).A =   ___b:LINK(8).A
	PARM	T4(EAX).A
	T5(EAX).A =   ___a:LINK(4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#max$ui#__less$uiui~~$qrxuirxui#__less$uiui~:PC.UI
	T7(EBX).A =   RV.T1(EAX).A
	T8(EAX).A =   #_$anontemp322:LINK(-4).UI
	PARM	T8(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	PARMADJ	#C.N
	RV.T2(EAX).A =   T7(EBX).A
; Line 2636:	} 

	BLOCK END
	BLOCK 4

L_16194:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16192:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#max$ui~$qrxuirxui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bctr$9nullptr_tr#allocator$pn0~~$qRn1r#allocator$pn0~
; Line 2289:	      : _Base1(std::forward<_U1>(__t1)), _Base2(std::forward<_U2>(__t2)) {} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16199:
	VAR START	__t1
	VAR START	__t2
; Line 2289:	      : _Base1(std::forward<_U1>(__t1)), _Base2(std::forward<_U2>(__t2)) {} 

	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16201:
	T3(EAX).A =   ___t1:LINK(8).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#forward$9nullptr_t~$qrn0:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T4(EAX).A
	T5(EAX).A =   ___$$this:LINK(4).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bctr$9nullptr_tv~$qRn2:PC.UI
	PARMADJ	#8.N
	T6(EAX).A =   ___t2:LINK(12).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#forward$r#allocator$p23@Optimizer@SimpleSymbol~~$qr#allocator$pn0~:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T7(EAX).A
	T8(EAX).A =   ___$$this:LINK(4).A
	T9(EAX).A = T8(EAX).A + #4.A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bctr$r#allocator$pn0~v~$qr#allocator$pn0~:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 4

L_16204:
	DBG BLOCK END
	T10(EAX).A =   ___$$this:LINK(4).A
	RV.T2(EAX).A =   T10(EAX).A
	BLOCK END
	BLOCK 5

L_16200:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bctr$9nullptr_tr#allocator$pn0~~$qRn1r#allocator$pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer_common$4bool?1?~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16209:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16210:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer_common$4bool?1?~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@second$qv
; Line 2313:	  typename _Base2::reference second() _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16217:
	VAR START	Unnamed++Identifier 66283
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16219:
; Line 2314:	    return static_cast<_Base2&>(*this).__get(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	_$anontemp325:LINK(-4).A =   T2(EAX).A
	T3(EAX).A =   _$anontemp325:LINK(-4).A
	CONDGO	L_16222:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T4(EAX).A =   _$anontemp325:LINK(-4).A
	T6(EAX).A = T4(EAX).A + #4.A
	GOTO	L_16223:PC
	BLOCK END
	BLOCK 5

L_16222:
	T7(EAX).A =   _$anontemp325:LINK(-4).A
	T6(EAX).A =   T7(EAX).A
	BLOCK END
	BLOCK 6

L_16223:
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@__get$qv:PC.UI
	T8(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T8(EAX).A
; Line 2315:	  } 

	BLOCK END
	BLOCK 7

L_16220:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16218:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@second$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@allocate$qr#allocator$pn0~ui
; Line 1581:	        {return __a.allocate(__n);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16227:
	VAR START	__a
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16229:
	PARM	#0.I
	T2(EAX).UI =   ___n:LINK(8).UI
	PARM	T2(EAX).UI
	T3(EAX).A =   ___a:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@allocate$quipxv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_16230:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16228:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@allocate$qr#allocator$pn0~ui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$qv
; Line 58:	    _LIBCPP_INLINE_VISIBILITY pointer&              __end_cap() _NOEXCEPT       {return __end_cap_.first();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16235:
	VAR START	Unnamed++Identifier 66316
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16237:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #10.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@first$qv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_16238:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16236:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#integral_constant$4bool3_Tp?0?~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16243:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16244:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#integral_constant$4bool3_Tp?0?~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0
; Line 1630:	            {__destroy(__has_destroy<allocator_type, _Tp*>(), __a, __p);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4C.UI
	BLOCK END
	BLOCK 2

L_16251:
	PARM	#@$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0:RAM.A
	T1(EAX).A =   #$$xctab:LINK(-76).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_16254:
	VAR START	__a
	VAR START	__p
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16253:
	T2(EAX).A =   ___p:LINK(8).A
	PARM	T2(EAX).A
	T3(EAX).A =   ___a:LINK(4).A
	PARM	T3(EAX).A
	#_$anontemp328:LINK(-4).UI BLKCLR (#4.UI)
	T4(EAX).A =   #_$anontemp328:LINK(-4).UI
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	$$xctab:LINK(-76)+14.A =   #1.A
	PARMBLOCKRV.T0(EAX).A,#4.UI
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0:PC.UI
	$$xctab:LINK(-76)+14.A =   #2.A
	T5(EAX).A =   #_$anontemp328:LINK(-4).UI
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	PARMADJ	#C.N
	BLOCK END
	BLOCK 5

L_16256:
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_16252:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xt@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~
	DC.A 0x0
	DC.I 0x4
	DC.I 0x400
	DC.B 0x73
	DC.B 0x74
	DC.B 0x64
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x31
	DC.B 0x3a
	DC.B 0x3a
	DC.B 0x5f
	DC.B 0x5f
	DC.B 0x68
	DC.B 0x61
	DC.B 0x73
	DC.B 0x5f
	DC.B 0x64
	DC.B 0x65
	DC.B 0x73
	DC.B 0x74
	DC.B 0x72
	DC.B 0x6f
	DC.B 0x79
	DC.B 0x0
	DC.I 0x800
	DC.A @$xt@#integral_constant$4bool3_Tp?1?~+0
	DC.I 0x0
	DC.I 0x0
	virtual end @$xt@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~+0
	DC.I OFFSETOF _$anontemp328 + 0
	DC.I 0x1
	DC.I 0x2
	DC.I 0x0
	virtual end @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#destroy$pn0~$qr#allocator$pn0~ppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$xqv
; Line 59:	    _LIBCPP_INLINE_VISIBILITY const pointer&        __end_cap() const _NOEXCEPT {return __end_cap_.first();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16261:
	VAR START	Unnamed++Identifier 66317
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16263:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A = T2(EAX).A + #10.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@first$xqv:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_16264:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16262:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer$p23@Optimizer@SimpleSymbolr#allocator$pn0~~@__end_cap$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator$p23@Optimizer@SimpleSymbol~@deallocate$qppn0ui
; Line 1866:	    _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type __n) _NOEXCEPT 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16269:
	VAR START	__p
	VAR START	__n
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16271:
	T0(EAX).UI =   #4.I
	PARM	T0(EAX).UI
	T1(EAX).UI =   ___n:LINK(12).UI
	T2(EAX).UI = T1(EAX).UI << #2.I
	PARM	T2(EAX).UI
	T3(EAX).A =   ___p:LINK(8).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@__libcpp_deallocate$qpvuiui:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 4

L_16272:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16270:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator$p23@Optimizer@SimpleSymbol~@deallocate$qppn0ui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16277:
	BLOCK END
	BLOCK 3

L_16278:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16283:
	T0(EAX).A =   ___$$this:LINK(4).A
	T1(EAX).A = T0(EAX).A + #4.A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_16284:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__split_buffer_common$4bool?1?~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16289:
	BLOCK END
	BLOCK 3

L_16290:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__split_buffer_common$4bool?1?~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv
; Line 698:	        {return _VSTD::__to_address(this->__begin_);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16295:
	VAR START	Unnamed++Identifier 66213
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16297:
	T2(EAX).A =   ___$$this:LINK(4).A
	T3(EAX).A =   *(T2(EAX) + 4).A.A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T4(EAX).A
	BLOCK END
	BLOCK 4

L_16298:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16296:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@data$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_contiguous_container$xqpxvpxvpxvpxv
; Line 867:	                                         const void*) const _NOEXCEPT {} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16303:
	VAR START	Unnamed++Identifier 66355
	VAR START	Unnamed++Identifier 66356
	VAR START	Unnamed++Identifier 66357
	VAR START	Unnamed++Identifier 66358
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16305:
	BLOCK END
	BLOCK 4

L_16306:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16304:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__annotate_contiguous_container$xqpxvpxvpxvpxv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct_backward_with_exception_guarantees$ppn0~$qr#allocator$pn0~ppn0ppn0rppn0
; Line 1719:	        { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16311:
	VAR START	__a
	VAR START	__begin1
	VAR START	__end1
	VAR START	__end2
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16313:
; Line 1720:	            static_assert(__is_cpp17_move_insertable<allocator_type>::value, 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16317:
	GOTO	L_16316:PC
	BLOCK END
	BLOCK 5

L_16314:
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_16318:
; Line 1723:	            { 

	DBG BLOCK START
	BLOCK END
	BLOCK 7

L_16319:
; Line 1724:	              construct(__a, _VSTD::__to_address(__end2 - 1), 

	T4(EAX).A =   ___end1:LINK(12).A
	T5(EAX).A = T4(EAX).A - #4.A
	___end1:LINK(12).A =   T5(EAX).A
	T6(EAX).A =   ___end1:LINK(12).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move_if_noexcept$p23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T7(EAX).A
	T8(EAX).A =   ___end2:LINK(16).A
	T9(EAX).A =   *(T8(EAX)).A.A
	T10(EAX).A = T9(EAX).A - #4.A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#__to_address$p23@Optimizer@SimpleSymbol~$qppn0:PC.UI
	T11(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	PARM	T11(EAX).A
	T12(EAX).A =   ___a:LINK(4).A
	PARM	T12(EAX).A
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#construct$pn0pn0~$qr#allocator$pn0~ppn0Rpn0:PC.UI
	PARMADJ	#C.N
; Line 1731:	              --__end2; 

	T13(EAX).A =   ___end2:LINK(16).A
	T14(EAX).A =   *(T13(EAX)).A.A
	T15(ECX).A = T14(EAX).A - #4.A
	T16(EAX).A =   ___end2:LINK(16).A
	*(T16(EAX)).A.A =   T15(ECX).A
; Line 1732:	            } 

	BLOCK END
	BLOCK 8

L_16320:
	DBG BLOCK END
	BLOCK END
	BLOCK 9

L_16321:
	DBG BLOCK END
	BLOCK END
	BLOCK 10

L_16316:
; Line 1722:	            while (__end1 != __begin1) 

	T2(ECX).A =   ___begin1:LINK(8).A
	T3(EAX).A =   ___end1:LINK(12).A
	CONDGO	L_16314:PC ; T3(EAX).A != T2(ECX).A
	BLOCK END
	BLOCK 11

L_16315:
	BLOCK END
	BLOCK 12

L_16322:
	DBG BLOCK END
; Line 1733:	        } 

	BLOCK END
	BLOCK 13

L_16323:
	DBG BLOCK END
	BLOCK END
	BLOCK 14

L_16312:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct_backward_with_exception_guarantees$ppn0~$qr#allocator$pn0~ppn0ppn0rppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#swap$pp23@Optimizer@SimpleSymbol~$qrppn0rppn0
; Line 3714:	{ 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	BLOCK END
	BLOCK 2

L_16328:
	VAR START	__x
	VAR START	__y
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16330:
; Line 3715:	    _Tp __t(_VSTD::move(__x)); 

	VAR START	__t
	T3(EAX).A =   ___x:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#move$rpp23@Optimizer@SimpleSymbol~$qrppn0:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T5(EAX).A =   *(T4(EAX)).A.A
	___t:LINK(-4).A =   T5(EAX).A
; Line 3716:	    __x = _VSTD::move(__y); 

	T6(EAX).A =   ___y:LINK(8).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#move$rpp23@Optimizer@SimpleSymbol~$qrppn0:PC.UI
	T7(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T8(ECX).A =   *(T7(EAX)).A.A
	T9(EAX).A =   ___x:LINK(4).A
	*(T9(EAX)).A.A =   T8(ECX).A
; Line 3717:	    __y = _VSTD::move(__t); 

	T10(EAX).A =   #___t:LINK(-4).A
	PARM	T10(EAX).A
	TAG
	GOSUB	#@std@#move$rpp23@Optimizer@SimpleSymbol~$qrppn0:PC.UI
	T11(EAX).A =   RV.T2(EAX).A
	PARMADJ	#4.N
	T12(ECX).A =   *(T11(EAX)).A.A
	T13(EAX).A =   ___y:LINK(8).A
	*(T13(EAX)).A.A =   T12(ECX).A
; Line 3718:	} 

	BLOCK END
	BLOCK 4

L_16331:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16329:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#swap$pp23@Optimizer@SimpleSymbol~$qrppn0rppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__invalidate_all_iterators$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16336:
	VAR START	Unnamed++Identifier 66227
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16338:
; Line 2123:	    __get_db()->__invalidate_all(this); 

	BLOCK END
	BLOCK 4

L_16339:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16337:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#vector$p23@Optimizer@SimpleSymbol#allocator$pn0~~@__invalidate_all_iterators$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@__libcpp_deallocate$qpvuiui
; Line 339:	inline _LIBCPP_INLINE_VISIBILITY void __libcpp_deallocate(void* __ptr, size_t __size, size_t __align) { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16344:
	VAR START	__ptr
	VAR START	__size
	VAR START	__align
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16346:
; Line 340:	  _DeallocateCaller::__do_deallocate_handle_size_align(__ptr, __size, __align); 

	T0(EAX).UI =   ___align:LINK(12).UI
	PARM	T0(EAX).UI
	T1(EAX).UI =   ___size:LINK(8).UI
	PARM	T1(EAX).UI
	T2(EAX).A =   ___ptr:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@_DeallocateCaller@__do_deallocate_handle_size_align$qpvuiui:PC.UI
	PARMADJ	#C.N
; Line 341:	} 

	BLOCK END
	BLOCK 4

L_16347:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16345:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@__libcpp_deallocate$qpvuiui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#integral_constant$4bool3_Tp?0?~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16352:
	BLOCK END
	BLOCK 3

L_16353:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#integral_constant$4bool3_Tp?0?~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$uiui~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16358:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16359:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$uiui~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__less$uiui~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16366:
	BLOCK END
	BLOCK 3

L_16367:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__less$uiui~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#min$ui~$qrxuirxui
; Line 2557:	_LIBCPP_NODISCARD_EXT inline 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#8.UI
	BLOCK END
	BLOCK 2

L_16372:
	VAR START	__a
	VAR START	__b
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16374:
; Line 2562:	    return _VSTD::min(__a, __b, __less<_Tp>()); 

	#_$anontemp300:LINK(-4).UI BLKCLR (#4.UI)
	T2(EAX).A =   #_$anontemp300:LINK(-4).UI
	_$anontemp301:LINK(-8).A =   T2(EAX).A
	PARMBLOCK#_$anontemp300:LINK(-4).UI,#4.UI
	T3(EAX).A =   ___b:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   ___a:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#min$uix#__less$uiui~~$qrxuirxuix#__less$uiui~:PC.UI
	T5(EBX).A =   RV.T0(EAX).A
	PARMADJ	#C.N
	T6(EAX).A =   #_$anontemp300:LINK(-4).UI
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	RV.T1(EAX).A =   T5(EBX).A
; Line 2563:	} 

	BLOCK END
	BLOCK 4

L_16375:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16373:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#min$ui~$qrxuirxui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator$p23@Optimizer@SimpleSymbol~@allocate$quipxv
; Line 1860:	        { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16380:
	VAR START	__n
	VAR START	Unnamed++Identifier 65404
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16382:
; Line 1861:	        if (__n > max_size()) 

	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16384:
	T3(EAX).A =   ___$$this:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@max_size$xqv:PC.UI
	T4(ECX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	T5(EAX).UI =   ___n:LINK(8).UI
	CONDGO	L_16383:PC ; T5(EAX).UI U<= T4(ECX).UI
	BLOCK END
	BLOCK 5
	DBG BLOCK START
	BLOCK END
	BLOCK 6

L_16385:
; Line 1862:	            __throw_length_error("allocator<T>::allocate(size_t n)" 

	PARM	#L_2:PC.A
	TAG
	GOSUB	#@std@__throw_length_error$qpxc:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 7

L_16386:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16383:
	BLOCK END
	BLOCK 9

L_16387:
	DBG BLOCK END
	T6(EAX).UI =   #4.I
	PARM	T6(EAX).UI
	T7(EAX).UI =   ___n:LINK(8).UI
	T8(EAX).UI = T7(EAX).UI << #2.I
	PARM	T8(EAX).UI
	TAG
	GOSUB	#@std@__libcpp_allocate$quiui:PC.UI
	T9(EAX).A =   RV.T1(EAX).A
	PARMADJ	#8.N
	RV.T2(EAX).A =   T9(EAX).A
; Line 1865:	        } 
; Line 1866:	    _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type __n) _NOEXCEPT 

; Line 1866:	    _LIBCPP_INLINE_VISIBILITY void deallocate(pointer __p, size_type __n) _NOEXCEPT 

	BLOCK END
	BLOCK 10

L_16388:
	DBG BLOCK END
	BLOCK END
	BLOCK 11

L_16381:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator$p23@Optimizer@SimpleSymbol~@allocate$quipxv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator$p23@Optimizer@SimpleSymbol~@max_size$xqv
; Line 1869:	        {return size_type(~0) / sizeof(_Tp);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16393:
	VAR START	Unnamed++Identifier 65405
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16395:
	T1(EAX).UI =   #3FFFFFFF.UL
	RV.T0(EAX).UI =   T1(EAX).UI
	BLOCK END
	BLOCK 4

L_16396:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16394:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator$p23@Optimizer@SimpleSymbol~@max_size$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@max_size$qrx#allocator$pn0~
; Line 1634:	        {return __max_size(__has_max_size<const allocator_type>(), __a);} 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#28.UI
	BLOCK END
	BLOCK 2

L_16401:
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16403:
	T3(EAX).A =   ___a:LINK(4).A
	PARM	T3(EAX).A
	#_$anontemp318:LINK(-4).UI BLKCLR (#4.UI)
	T4(EAX).A =   #_$anontemp318:LINK(-4).UI
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__has_max_size$x#allocator$p23@Optimizer@SimpleSymbol~~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	PARMBLOCKRV.T0(EAX).A,#4.UI
	TAG
	GOSUB	#@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@__max_size$q#integral_constant$4bool3_Tp?1?~rx#allocator$pn0~:PC.UI
	T6(EBX).UI =   RV.T1(EAX).UI
	T7(EAX).A =   #_$anontemp318:LINK(-4).UI
	PARM	T7(EAX).A
	TAG
	GOSUB	#@std@#__has_max_size$x#allocator$p23@Optimizer@SimpleSymbol~~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	PARMADJ	#8.N
	RV.T2(EAX).UI =   T6(EBX).UI
	BLOCK END
	BLOCK 4

L_16406:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16402:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@max_size$qrx#allocator$pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@__max_size$q#integral_constant$4bool3_Tp?1?~rx#allocator$pn0~
; Line 1803:	            {return __a.max_size();} 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#24.UI
	BLOCK END
	BLOCK 2

L_16411:
	VAR START	Unnamed++Identifier 65739
	VAR START	__a
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16413:
	T2(EAX).A =   ___a:LINK(8).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@max_size$xqv:PC.UI
	T3(EBX).UI =   RV.T0(EAX).UI
	PARMADJ	#4.N
	T4(EAX).A =   #Unnamed++Identifier 65739:LINK(4).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	RV.T1(EAX).UI =   T3(EBX).UI
	BLOCK END
	BLOCK 4

L_16416:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16412:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@__max_size$q#integral_constant$4bool3_Tp?1?~rx#allocator$pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@first$xqv
; Line 2308:	  typename _Base1::const_reference first() const _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16421:
	VAR START	Unnamed++Identifier 65824
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16423:
; Line 2309:	    return static_cast<_Base1 const&>(*this).__get(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	_$anontemp321:LINK(-4).A =   T2(EAX).A
	T3(EAX).A =   _$anontemp321:LINK(-4).A
	CONDGO	L_16426:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T5(EAX).A =   _$anontemp321:LINK(-4).A
	GOTO	L_16427:PC
	BLOCK END
	BLOCK 5

L_16426:
	T6(EAX).A =   _$anontemp321:LINK(-4).A
	T5(EAX).A =   T6(EAX).A
	BLOCK END
	BLOCK 6

L_16427:
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$xqv:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T7(EAX).A
; Line 2310:	  } 

	BLOCK END
	BLOCK 7

L_16424:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16422:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbol#allocator$pn0~~@first$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@__get$qv
; Line 2218:	  _LIBCPP_INLINE_VISIBILITY reference __get() _NOEXCEPT { return __value_; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16431:
	VAR START	Unnamed++Identifier 66263
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16433:
	T1(EAX).A =   ___$$this:LINK(4).A
	T2(EAX).A =   *(T1(EAX) + 0).A.A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 4

L_16434:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16432:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@__get$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@first$qv
; Line 2303:	  typename _Base1::reference first() _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16439:
	VAR START	Unnamed++Identifier 66281
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16441:
; Line 2304:	    return static_cast<_Base1&>(*this).__get(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	_$anontemp326:LINK(-4).A =   T2(EAX).A
	T3(EAX).A =   _$anontemp326:LINK(-4).A
	CONDGO	L_16444:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T5(EAX).A =   _$anontemp326:LINK(-4).A
	GOTO	L_16445:PC
	BLOCK END
	BLOCK 5

L_16444:
	T6(EAX).A =   _$anontemp326:LINK(-4).A
	T5(EAX).A =   T6(EAX).A
	BLOCK END
	BLOCK 6

L_16445:
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$qv:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T7(EAX).A
; Line 2305:	  } 

	BLOCK END
	BLOCK 7

L_16442:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16440:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@first$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@first$xqv
; Line 2308:	  typename _Base1::const_reference first() const _NOEXCEPT { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16449:
	VAR START	Unnamed++Identifier 66282
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16451:
; Line 2309:	    return static_cast<_Base1 const&>(*this).__get(); 

	T2(EAX).A =   ___$$this:LINK(4).A
	_$anontemp329:LINK(-4).A =   T2(EAX).A
	T3(EAX).A =   _$anontemp329:LINK(-4).A
	CONDGO	L_16454:PC ; T3(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T5(EAX).A =   _$anontemp329:LINK(-4).A
	GOTO	L_16455:PC
	BLOCK END
	BLOCK 5

L_16454:
	T6(EAX).A =   _$anontemp329:LINK(-4).A
	T5(EAX).A =   T6(EAX).A
	BLOCK END
	BLOCK 6

L_16455:
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$xqv:PC.UI
	T7(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T7(EAX).A
; Line 2310:	  } 

	BLOCK END
	BLOCK 7

L_16452:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16450:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair$pp23@Optimizer@SimpleSymbolr#allocator$pn0~~@first$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16459:
	T1(EAX).A =   ___$$this:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T2(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 3

L_16460:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#integral_constant$4bool3_Tp?1?~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16467:
	T1(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
	BLOCK END
	BLOCK 3

L_16468:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#integral_constant$4bool3_Tp?1?~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16475:
	T0(EAX).A =   ___$$this:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_16476:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__has_construct$#allocator$p23@Optimizer@SimpleSymbol~ppn0pn0~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct$pn0pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0Rpn0
; Line 1768:	            {__a.construct(__p, _VSTD::forward<_Args>(__args)...);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#48.UI
	BLOCK END
	BLOCK 2

L_16481:
	PARM	#@$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct$pn0pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0Rpn0:RAM.A
	T1(EAX).A =   #$$xctab:LINK(-72).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_16484:
	VAR START	Unnamed++Identifier 65733
	VAR START	__a
	VAR START	__p
	VAR START	__args
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16483:
	T2(EAX).A =   ___args:LINK(16).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	PARM	T3(EAX).A
	T4(EAX).A =   ___p:LINK(12).A
	PARM	T4(EAX).A
	T5(EAX).A =   ___a:LINK(8).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@#construct$pn0pn0~$qppn0Rpn0:PC.UI
	PARMADJ	#C.N
	BLOCK END
	BLOCK 5

L_16486:
	$$xctab:LINK(-72)+14.A =   #1.A
	T6(EAX).A =   #Unnamed++Identifier 65733:LINK(4).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_16482:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct$pn0pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0Rpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct$pn0pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0Rpn0
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@#integral_constant$4bool3_Tp?1?~+0
	DC.I OFFSETOF Unnamed++Identifier 65733 + 4
	DC.I 0x0
	DC.I 0x1
	DC.I 0x0
	virtual end @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__construct$pn0pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0Rpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__has_max_size$x#allocator$p23@Optimizer@SimpleSymbol~~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16491:
	T1(EAX).A =   ___$$this:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T2(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 3

L_16492:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__has_max_size$x#allocator$p23@Optimizer@SimpleSymbol~~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__has_max_size$x#allocator$p23@Optimizer@SimpleSymbol~~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16499:
	T0(EAX).A =   ___$$this:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_16500:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__has_max_size$x#allocator$p23@Optimizer@SimpleSymbol~~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$xqv
; Line 2220:	  const_reference __get() const _NOEXCEPT { return __value_; } 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16505:
	VAR START	Unnamed++Identifier 65775
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16507:
	T1(EAX).A =   ___$$this:LINK(4).A
	T2(EAX).A = T1(EAX).A + #0.A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 4

L_16508:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16506:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@__get$xqv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#max$ui#__less$uiui~~$qrxuirxui#__less$uiui~
; Line 2621:	_LIBCPP_NODISCARD_EXT inline 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16513:
	VAR START	__a
	VAR START	__b
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16515:
; Line 2626:	    return __comp(__a, __b) ? __b : __a; 

	T2(EAX).A =   ___b:LINK(8).A
	PARM	T2(EAX).A
	T3(EAX).A =   ___a:LINK(4).A
	PARM	T3(EAX).A
	T4(EAX).A =   #___comp:LINK(12).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T5(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_16518:PC ; T5(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 4
	T7(EBX).A =   ___b:LINK(8).A
	GOTO	L_16519:PC
	BLOCK END
	BLOCK 5

L_16518:
	T8(EAX).A =   ___a:LINK(4).A
	T7(EBX).A =   T8(EAX).A
	BLOCK END
	BLOCK 6

L_16519:
	T9(EAX).A =   #___comp:LINK(12).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	RV.T1(EAX).A =   T7(EBX).A
; Line 2627:	} 

	BLOCK END
	BLOCK 7

L_16516:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16514:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#max$ui#__less$uiui~~$qrxuirxui#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#forward$9nullptr_t~$qrn0
; Line 2265:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16523:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16525:
; Line 2269:	    return static_cast<_Tp&&>(__t); 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2270:	} 

	BLOCK END
	BLOCK 4

L_16526:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16524:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#forward$9nullptr_t~$qrn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#forward$r#allocator$p23@Optimizer@SimpleSymbol~~$qr#allocator$pn0~
; Line 2265:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16531:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16533:
; Line 2269:	    return static_cast<_Tp&&>(__t); 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2270:	} 

	BLOCK END
	BLOCK 4

L_16534:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16532:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#forward$r#allocator$p23@Optimizer@SimpleSymbol~~$qr#allocator$pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bctr$9nullptr_tv~$qRn2
; Line 2205:	    { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16539:
	VAR START	__u
; Line 2205:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16541:
	T2(EAX).A =   ___u:LINK(8).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#forward$9nullptr_t~$qrn0:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T4(ECX).A =   *(T3(EAX)).A.A
	T5(EAX).A =   ___$$this:LINK(4).A
	*(T5(EAX) + 0).A.A =   T4(ECX).A
; Line 2206:	    } 

	BLOCK END
	BLOCK 4

L_16544:
	DBG BLOCK END
	T6(EAX).A =   ___$$this:LINK(4).A
	RV.T1(EAX).A =   T6(EAX).A
	BLOCK END
	BLOCK 5

L_16540:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$pp23@Optimizer@SimpleSymboli?0?4bool?0?~@$bctr$9nullptr_tv~$qRn2

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bctr$r#allocator$pn0~v~$qr#allocator$pn0~
; Line 2205:	    { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16549:
	VAR START	__u
; Line 2205:	    { 

	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16551:
	T2(EAX).A =   ___u:LINK(8).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#forward$r#allocator$p23@Optimizer@SimpleSymbol~~$qr#allocator$pn0~:PC.UI
	T3(ECX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	T4(EAX).A =   ___$$this:LINK(4).A
	*(T4(EAX) + 0).A.A =   T3(ECX).A
; Line 2206:	    } 

	BLOCK END
	BLOCK 4

L_16554:
	DBG BLOCK END
	T5(EAX).A =   ___$$this:LINK(4).A
	RV.T1(EAX).A =   T5(EAX).A
	BLOCK END
	BLOCK 5

L_16550:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__compressed_pair_elem$r#allocator$p23@Optimizer@SimpleSymbol~i?1?4bool?0?~@$bctr$r#allocator$pn0~v~$qr#allocator$pn0~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@__throw_length_error$qpxc
; Line 247:	_LIBCPP_NORETURN inline _LIBCPP_INLINE_VISIBILITY 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#50.UI
	BLOCK END
	BLOCK 2

L_16559:
	PARM	#@$xc@std@__throw_length_error$qpxc:RAM.A
	T1(EAX).A =   #$$xctab:LINK(-80).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_16562:
	VAR START	__msg
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16561:
; Line 249:	{ 

	PARM	#@$xt@17@std@length_error:RAM.A
	PARM	#@std@length_error@$bctr$qrx17@std@length_error:PC.A
	PARM	#1.I
	T2(EAX).A =   ___msg:LINK(4).A
	PARM	T2(EAX).A
	T3(EAX).A =   #_$anontemp23:LINK(-44).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@length_error@$bctr$qpxc:PC.UI
	T4(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	$$xctab:LINK(-80)+14.A =   #1.A
	PARM	T4(EAX).A
	T5(EAX).A =   #$$xctab:LINK(-80).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@_ThrowException$qpvpvipvpv:PC.UI
	PARMADJ	#14.N
; Line 251:	    throw length_error(__msg); 

	BLOCK END
	BLOCK 5

L_16564:
	$$xctab:LINK(-80)+14.A =   #2.A
	T6(EAX).A =   #_$anontemp23:LINK(-44).A
	PARM	T6(EAX).A
	TAG
	GOSUB	#@std@length_error@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_16560:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@__throw_length_error$qpxc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@__throw_length_error$qpxc
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@17@std@length_error+0
	DC.I OFFSETOF _$anontemp23 + 0
	DC.I 0x1
	DC.I 0x2
	DC.I 0x0
	virtual end @$xc@std@__throw_length_error$qpxc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@__libcpp_allocate$quiui
; Line 237:	inline _LIBCPP_INLINE_VISIBILITY void *__libcpp_allocate(size_t __size, size_t __align) { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16569:
	VAR START	__size
	VAR START	__align
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16571:
; Line 239:	  if (__is_overaligned_for_new(__align)) { 

; Line 240:	    const align_val_t __align_val = static_cast<align_val_t>(__align); 

; Line 242:	    return ::operator new(__size, __align_val); 
; Line 253:	  return __builtin_operator_new(__size); 
; Line 255:	} 
; Line 257:	struct _DeallocateCaller { 

	T2(EAX).UI =   ___size:LINK(4).UI
	PARM	T2(EAX).UI
	TAG
	GOSUB	#@$bnew$qui:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T3(EAX).A
; Line 244:	    return __builtin_operator_new(__size, __align_val); 

	BLOCK END
	BLOCK 4

L_16572:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16570:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@__libcpp_allocate$quiui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~@$bctr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16577:
	T1(EAX).A =   ___$$this:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bctr$qv:PC.UI
	PARMADJ	#4.N
	T2(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T2(EAX).A
	BLOCK END
	BLOCK 3

L_16578:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~@$bctr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16585:
	T0(EAX).A =   ___$$this:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	BLOCK END
	BLOCK 3

L_16586:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#__has_destroy$#allocator$p23@Optimizer@SimpleSymbol~ppn0~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0
; Line 1793:	            {__a.destroy(__p);} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#48.UI
	BLOCK END
	BLOCK 2

L_16591:
	PARM	#@$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0:RAM.A
	T0(EAX).A =   #$$xctab:LINK(-72).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@_InitializeException$qpvpv:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 3

L_16594:
	VAR START	Unnamed++Identifier 65736
	VAR START	__a
	VAR START	__p
	DBG BLOCK START
	BLOCK END
	BLOCK 4

L_16593:
	T1(EAX).A =   ___p:LINK(12).A
	PARM	T1(EAX).A
	T2(EAX).A =   ___a:LINK(8).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#allocator$p23@Optimizer@SimpleSymbol~@destroy$qppn0:PC.UI
	PARMADJ	#8.N
	BLOCK END
	BLOCK 5

L_16596:
	$$xctab:LINK(-72)+14.A =   #1.A
	T3(EAX).A =   #Unnamed++Identifier 65736:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 6

L_16592:
	TAG
	GOSUB	#@_RundownException$qv:PC.UI
	PARMADJ	#0.N
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0
	DC.A 0x0
	DC.I OFFSETOF $$xctab + 0
	DC.I 0x400
	DC.A @$xt@#integral_constant$4bool3_Tp?1?~+0
	DC.I OFFSETOF Unnamed++Identifier 65736 + 4
	DC.I 0x0
	DC.I 0x1
	DC.I 0x0
	virtual end @$xc@std@#allocator_traits$#allocator$p23@Optimizer@SimpleSymbol~~@#__destroy$pn0~$q#integral_constant$4bool3_Tp?1?~r#allocator$pn0~ppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move_if_noexcept$p23@Optimizer@SimpleSymbol~$qrpn0
; Line 257:	template <class _Tp> 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16601:
	VAR START	__x
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16603:
; Line 271:	    return _VSTD::move(__x); 

	T2(EAX).A =   ___x:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@#move$rp23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#4.N
	RV.T1(EAX).A =   T3(EAX).A
; Line 272:	} 

	BLOCK END
	BLOCK 4

L_16604:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16602:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move_if_noexcept$p23@Optimizer@SimpleSymbol~$qrpn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#move$rpp23@Optimizer@SimpleSymbol~$qrppn0
; Line 2256:	inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16609:
	VAR START	__t
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16611:
; Line 2260:	    typedef _LIBCPP_NODEBUG_TYPE typename remove_reference<_Tp>::type _Up; 

	T1(EAX).A =   ___t:LINK(4).A
	RV.T0(EAX).A =   T1(EAX).A
; Line 2262:	} 

	BLOCK END
	BLOCK 4

L_16612:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16610:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#move$rpp23@Optimizer@SimpleSymbol~$qrppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@_DeallocateCaller@__do_deallocate_handle_size_align$qpvuiui
; Line 259:	  void __do_deallocate_handle_size_align(void *__ptr, size_t __size, size_t __align) { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16617:
	VAR START	__ptr
	VAR START	__size
	VAR START	__align
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16619:
; Line 261:	    ((void)__align); 

	T0(EAX).UI =   ___size:LINK(8).UI
	PARM	T0(EAX).UI
	T1(EAX).A =   ___ptr:LINK(4).A
	PARM	T1(EAX).A
	TAG
	GOSUB	#@std@_DeallocateCaller@__do_deallocate_handle_size$qpvui:PC.UI
	PARMADJ	#8.N
; Line 264:	    if (__is_overaligned_for_new(__align)) { 
; Line 265:	      const align_val_t __align_val = static_cast<align_val_t>(__align); 

; Line 265:	      const align_val_t __align_val = static_cast<align_val_t>(__align); 

	BLOCK END
	BLOCK 4

L_16620:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16618:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@_DeallocateCaller@__do_deallocate_handle_size_align$qpvuiui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@_DeallocateCaller@__do_deallocate_handle_size$qpvui
; Line 289:	  static inline void __do_deallocate_handle_size(void *__ptr, size_t __size) { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16625:
	VAR START	__ptr
	VAR START	__size
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16627:
; Line 291:	    ((void)__size); 

	T0(EAX).A =   ___ptr:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@std@_DeallocateCaller@__do_call$qpv:PC.UI
	PARMADJ	#4.N
; Line 294:	    return __do_call(__ptr, __size); 

	BLOCK END
	BLOCK 4

L_16628:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16626:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@_DeallocateCaller@__do_deallocate_handle_size$qpvui

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@_DeallocateCaller@__do_call$qpv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16633:
	VAR START	__ptr
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16635:
; Line 332:	    return ::operator delete(__ptr); 

	T0(EAX).A =   ___ptr:LINK(4).A
	PARM	T0(EAX).A
	TAG
	GOSUB	#@$bdel$qpv:PC.UI
	PARMADJ	#4.N
; Line 334:	    return __builtin_operator_delete(__ptr); 

	BLOCK END
	BLOCK 4

L_16636:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16634:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@_DeallocateCaller@__do_call$qpv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@length_error@$bctr$qpxc
; Line 153:	    _LIBCPP_INLINE_VISIBILITY explicit length_error(const char* __s)   : logic_error(__s) {} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16641:
	VAR START	__s
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16643:
	T1(EAX).A =   ___s:LINK(8).A
	PARM	T1(EAX).A
	T2(EAX).A =   ___$$this:LINK(4).A
	PARM	T2(EAX).A
	TAG
	GOSUB	#@std@logic_error@$bctr$qpxc:PC.UI
	PARMADJ	#8.N
	T3(ECX).A = #@std@length_error@_$vt:RAM.A + #C.A
	T4(EAX).A =   ___$$this:LINK(4).A
	*(T4(EAX)).A.A =   T3(ECX).A
	BLOCK END
	BLOCK 4

L_16646:
	DBG BLOCK END
	T5(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T5(EAX).A
	BLOCK END
	BLOCK 5

L_16642:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@length_error@$bctr$qpxc

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@length_error@$bctr$qrx17@std@length_error

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16651:
	T1(EAX).A =   Anonymous++Identifier 6429:LINK(8).A
	T2(EAX).A = T1(EAX).A + #0.A
	PARM	T2(EAX).A
	T3(EAX).A =   ___$$this:LINK(4).A
	PARM	T3(EAX).A
	TAG
	GOSUB	#@std@logic_error@$bctr$qrx16@std@logic_error:PC.UI
	PARMADJ	#8.N
	T4(ECX).A = #@std@length_error@_$vt:RAM.A + #C.A
	T5(EAX).A =   ___$$this:LINK(4).A
	*(T5(EAX)).A.A =   T4(ECX).A
	T6(EAX).A =   ___$$this:LINK(4).A
	RV.T0(EAX).A =   T6(EAX).A
	BLOCK END
	BLOCK 3

L_16652:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@length_error@$bctr$qrx17@std@length_error

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16659:
	BLOCK END
	BLOCK 3

L_16660:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#integral_constant$4bool3_Tp?1?~@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#min$uix#__less$uiui~~$qrxuirxuix#__less$uiui~
; Line 2548:	_LIBCPP_NODISCARD_EXT inline 


	BLOCK 1
	PROLOGUE	#8000000000000008.UI,#0.UI
	BLOCK END
	BLOCK 2

L_16665:
	VAR START	__a
	VAR START	__b
	VAR START	__comp
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16667:
; Line 2553:	    return __comp(__b, __a) ? __b : __a; 

	T2(EAX).A =   ___a:LINK(4).A
	PARM	T2(EAX).A
	T3(EAX).A =   ___b:LINK(8).A
	PARM	T3(EAX).A
	T4(EAX).A =   #___comp:LINK(12).A
	PARM	T4(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bcall$xqrxuirxui:PC.UI
	T5(AL).BOOL =   RV.T0(AL).BOOL
	PARMADJ	#C.N
	CONDGO	L_16670:PC ; T5(AL).BOOL == #0.BOOL
	BLOCK END
	BLOCK 4
	T7(EBX).A =   ___b:LINK(8).A
	GOTO	L_16671:PC
	BLOCK END
	BLOCK 5

L_16670:
	T8(EAX).A =   ___a:LINK(4).A
	T7(EBX).A =   T8(EAX).A
	BLOCK END
	BLOCK 6

L_16671:
	T9(EAX).A =   #___comp:LINK(12).A
	PARM	T9(EAX).A
	TAG
	GOSUB	#@std@#__less$uiui~@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	RV.T1(EAX).A =   T7(EBX).A
; Line 2554:	} 

	BLOCK END
	BLOCK 7

L_16668:
	DBG BLOCK END
	BLOCK END
	BLOCK 8

L_16666:
	EPILOGUE	#8000000000000008.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#min$uix#__less$uiui~~$qrxuirxuix#__less$uiui~

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator$p23@Optimizer@SimpleSymbol~@destroy$qppn0
; Line 1931:	    _LIBCPP_INLINE_VISIBILITY void destroy(pointer __p) {__p->~_Tp();} 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16675:
	VAR START	__p
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16677:
	BLOCK END
	BLOCK 4

L_16678:
	DBG BLOCK END
	BLOCK END
	BLOCK 5

L_16676:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator$p23@Optimizer@SimpleSymbol~@destroy$qppn0

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@#allocator$p23@Optimizer@SimpleSymbol~@#construct$pn0pn0~$qppn0Rpn0
; Line 1875:	        { 


	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#4.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16683:
	VAR START	__p
	VAR START	__args
	DBG BLOCK START
	BLOCK END
	BLOCK 3

L_16685:
; Line 1876:	            ::new((void*)__p) _Up(_VSTD::forward<_Args>(__args)...); 

	T2(EAX).A =   ___p:LINK(8).A
	PARM	T2(EAX).A
	PARM	#4.I
	TAG
	GOSUB	#@$bnew$quipv:PC.UI
	T3(EAX).A =   RV.T0(EAX).A
	PARMADJ	#8.N
	$anontemp316:LINK(-4).A =   T3(EAX).A
	T4(EAX).A =   $anontemp316:LINK(-4).A
	CONDGO	L_16688:PC ; T4(EAX).A == #0.A
	BLOCK END
	BLOCK 4
	T5(EAX).A =   ___args:LINK(12).A
	PARM	T5(EAX).A
	TAG
	GOSUB	#@std@#forward$p23@Optimizer@SimpleSymbol~$qrpn0:PC.UI
	T6(EAX).A =   RV.T1(EAX).A
	PARMADJ	#4.N
	T7(ECX).A =   *(T6(EAX)).A.A
	T8(EAX).A =   $anontemp316:LINK(-4).A
	*(T8(EAX)).A.A =   T7(ECX).A
	BLOCK END
	BLOCK 5

L_16688:
; Line 1877:	        } 

	BLOCK END
	BLOCK 6

L_16686:
	DBG BLOCK END
	BLOCK END
	BLOCK 7

L_16684:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@#allocator$p23@Optimizer@SimpleSymbol~@#construct$pn0pn0~$qppn0Rpn0

segment end exitseg

segment codeseg

segment end codeseg

segment dataseg

segment end dataseg

	virtual @std@length_error@_$vt
	DC.A @$xt@17@std@length_error+0
	DC.A 0x0
	DC.A 0x0
	DC.A @std@length_error@$bdtr$qv+0
	DC.A @std@logic_error@what$xqv+0
	virtual end @std@length_error@_$vt

segment end exitseg

segment dataseg

@std@piecewise_construct:
	reserve 4

@std@allocator_arg:
	reserve 4

@std@__gen_cpp__d8005f6e@ignore:
	reserve 4

segment end dataseg

segment bssxseg

@std@placeholders@_1:
	reserve 4

@std@placeholders@_2:
	reserve 4

@std@placeholders@_3:
	reserve 4

@std@placeholders@_4:
	reserve 4

@std@placeholders@_5:
	reserve 4

@std@placeholders@_6:
	reserve 4

@std@placeholders@_7:
	reserve 4

@std@placeholders@_8:
	reserve 4

@std@placeholders@_9:
	reserve 4

@std@placeholders@_10:
	reserve 4

segment end bssxseg

segment dataseg

@Token@GetId$xqv_aa_47610:
	reserve 20

segment end dataseg

segment bssxseg

_$anontemp299:
	reserve 4

segment end bssxseg

segment dataseg

@Optimizer@magic:
	DC.A L_6


global @occx86@pushlevel
@occx86@pushlevel:
	DC.I 0x0


global @occx86@funcstackheight
@occx86@funcstackheight:
	DC.I 0x0

segment end dataseg

segment bssxseg


global @occx86@singleLabel
@occx86@singleLabel:
	reserve 4


global @occx86@doubleLabel
@occx86@doubleLabel:
	reserve 4


global @occx86@zerolabel
@occx86@zerolabel:
	reserve 4

segment end bssxseg

segment dataseg

@occx86@fconstcleanup:
	DC.I 0xffffffff

segment end dataseg

segment bssxseg

@occx86@floatpop:
	reserve 4

@occx86@fstackid:
	reserve 4

@occx86@inframe:
	reserve 4

@occx86@switch_deflab:
	reserve 4

@occx86@switch_range:
	reserve 8

@occx86@switch_case_count:
	reserve 8

@occx86@switch_case_max:
	reserve 8

@occx86@switch_ip:
	reserve 4

@occx86@switch_mode:
	reserve 4

@occx86@switch_lastcase:
	reserve 4

@occx86@switch_apl:
	reserve 4

@occx86@switch_aph:
	reserve 4

@occx86@switch_live:
	reserve 4

@occx86@switchTreeLabels:
	reserve 4

@occx86@switchTreeBranchLabels:
	reserve 4

@occx86@switchTreeCases:
	reserve 4

@occx86@switchTreeLabelCount:
	reserve 4

@occx86@switchTreePos:
	reserve 4

segment end bssxseg

segment codeseg

@__DYNAMIC_STARTUP___0_d8005f6e$q:

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_16692:
	DBG BLOCK START
	#@std@piecewise_construct:RAM.UI BLKCLR (#4.UI)
	T0(EAX).A =   #@std@piecewise_construct:RAM.UI
	_$anontemp10:LINK(-4).A =   T0(EAX).A
	#@std@allocator_arg:RAM.UI BLKCLR (#4.UI)
	T1(EAX).A =   #@std@allocator_arg:RAM.UI
	_$anontemp14:LINK(-8).A =   T1(EAX).A
	#_$anontemp15:LINK(-12).UI BLKCLR (#4.UI)
	T2(EAX).A =   #_$anontemp15:LINK(-12).UI
	_$anontemp16:LINK(-16).A =   T2(EAX).A
	#@std@__gen_cpp__d8005f6e@ignore:RAM.UI BLOCK= #_$anontemp15:LINK(-12).UI(#4.UI)
	DBG BLOCK END
	BLOCK END
	BLOCK 3

L_16693:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

segment end codeseg

segment startupxseg
	DC.A	@__DYNAMIC_STARTUP___0_d8005f6e$q,32

segment end startupxseg

segment codeseg

@__DYNAMIC_RUNDOWN___0_d8005f6e$q:

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#10.UI
	BLOCK END
	BLOCK 2

L_16698:
	DBG BLOCK START
	PARM	#@std@allocator_arg:RAM.UI
	TAG
	GOSUB	#@std@allocator_arg_t@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	PARM	#@std@piecewise_construct:RAM.UI
	TAG
	GOSUB	#@std@piecewise_construct_t@$bdtr$qv:PC.UI
	PARMADJ	#4.N
	DBG BLOCK END
	BLOCK END
	BLOCK 3

L_16699:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END

segment end codeseg

segment rundownxseg
	DC.A	@__DYNAMIC_RUNDOWN___0_d8005f6e$q,32

segment end rundownxseg

segment codeseg

segment end codeseg

	virtual @std@piecewise_construct_t@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16704:
	BLOCK END
	BLOCK 3

L_16705:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@piecewise_construct_t@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

	virtual @std@allocator_arg_t@$bdtr$qv

	BLOCK 1
	PROLOGUE	#8000000000000000.UI,#0.UI
	VAR START	__$$this
	BLOCK END
	BLOCK 2

L_16710:
	BLOCK END
	BLOCK 3

L_16711:
	EPILOGUE	#8000000000000000.UI
	RET	#0.UI

	BLOCK END
	virtual end @std@allocator_arg_t@$bdtr$qv

segment end exitseg

segment codeseg

segment end codeseg

segment dataseg

segment end dataseg

segment stringseg

L_7410:

	DC.B "___atomic_yield	DC.B 0x0

L_7242:

	DC.B "asm_tryblock: Unknown tryblock type	DC.B 0x0

L_7110:

	DC.B "asm_epilogue: pushlevel not aligned	DC.B 0x0

L_6977:

	DC.B "___substackp	DC.B 0x0

L_5137:

	DC.B "asm_assn: untranslated conversion from long or longlong	DC.B 0x0

L_5136:

	DC.B "asm_assn: Conversion of invalid reg to byte	DC.B 0x0

L_5135:

	DC.B "asm_assn: Expected register in bit processing	DC.B 0x0

L_5134:

	DC.B "asm_assn: no float store area	DC.B 0x0

L_5133:

	DC.B "asm_assn: unknown opcode	DC.B 0x0

L_4615:

	DC.B "asm_asr: long long shift by non-const	DC.B 0x0

L_4497:

	DC.B "asm_lsr: long long shift by non-const	DC.B 0x0

L_4357:

	DC.B "asm_smul: long long	DC.B 0x0

L_3786:

	DC.B "asm_add: expected dreg in add from EBP	DC.B 0x0

L_2151:

	DC.B "asm_mulxh: answer not a dreg	DC.B 0x0

L_2150:

	DC.B "gen_mulxh: long long	DC.B 0x0

L_2149:

	DC.B "gen_mulxh: floating point	DC.B 0x0

L_2072:

	DC.B "asm_udiv: answer not a dreg	DC.B 0x0

L_2071:

	DC.B "gen_div: long long	DC.B 0x0

L_2070:

	DC.B "gen_div: floating point in mod operation	DC.B 0x0

L_1925:

	DC.B "gen_goto: Unknown bit type	DC.B 0x0

L_1924:

	DC.B "gen_goto: too many bits	DC.B 0x0

L_1619:

	DC.B "gen_xset: Unknown bit type	DC.B 0x0

L_1618:

	DC.B "gen_xset: too many bits	DC.B 0x0

L_844:

	DC.B "getAmodes: no room for EBP in ind processing	DC.B 0x0

L_843:

	DC.B "___tlsaddr	DC.B 0x0

L_842:

	DC.B "__TLSINITSTART	DC.B 0x0

L_631:

	DC.B "__fzero	DC.B 0x0

L_529:

	DC.B "__fdchsmask	DC.B 0x0

L_528:

	DC.B "__fschsmask	DC.B 0x0

L_388:

	DC.B "make_offset: orignode	DC.B 0x0

L_6:

	DC.B "LSIL	DC.B 0x0

L_3:

	DC.B "basic_string	DC.B 0x0

L_2:

	DC.B "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size	DC.B 0x0

L_1:

	DC.B "vector	DC.B 0x0
	extern @std@exception@$bdtr$qv
	extern @std@__libcpp_refstring@$bdtr$qv
	extern @std@logic_error@$bdtr$qv
	extern @std@domain_error@$bdtr$qv
	extern @std@invalid_argument@$bdtr$qv
	extern @std@length_error@$bdtr$qv
	extern @std@out_of_range@$bdtr$qv
	extern @std@runtime_error@$bdtr$qv
	extern @std@range_error@$bdtr$qv
	extern @std@overflow_error@$bdtr$qv
	extern @std@underflow_error@$bdtr$qv
	extern @std@bad_weak_ptr@$bdtr$qv
	extern @std@#basic_string$c#char_traits$c~#allocator$c~~@$bdtr$qv
	extern _memcpy
	extern @occx86@makedreg$qi
	extern @occx86@gen_codes$qiip5amodepn0
	extern @occx86@gen_code$qip5amodepn0
	extern @occx86@queue_muldivval$ql
	extern @occx86@queue_floatval$qp3FPFi
	extern @occx86@gen_code_sse$qiiip5amodepn0
	extern @diag$qpxce
	extern _usingEsp
	extern @Optimizer@SymbolManager@Get$qpxc
	extern @litlate$qpxc
	extern @Optimizer@SymbolManager@Put$qp23@Optimizer@SimpleSymbol
	extern @Optimizer@externals
	extern @Optimizer@chosenAssembler
	extern @occx86@flush_peep$qp23@Optimizer@SimpleSymbolp15@Optimizer@quad
	extern @Optimizer@simpleIntNode$q18@Optimizer@se_typeuL
	extern @Optimizer@simpleExpressionNode$q18@Optimizer@se_typep27@Optimizer@SimpleExpressionpn1
	extern @Optimizer@cparams
	extern @occx86@copy_addr$qp5amode
	extern @occx86@equal_address$qp5amodepn0
	extern @occx86@gen_code3$qip5amodepn0pn0
	extern @Optimizer@nextLabel
	extern @occx86@peep_tail
	extern @occx86@gen_branch$qii
	extern @occx86@oa_gen_label$qi
	extern @occx86@gen_code2$qiiip5amodepn0
	extern @occx86@gen_coden$qiip5amodepn0
	extern @occx86@gen_code_sse$qip5amodepn0
	extern @occx86@add_peep$qp5ocode
	extern @Optimizer@varsp$qp27@Optimizer@SimpleExpression
	extern @occx86@BackendIntrinsic$qp15@Optimizer@quad
	extern @Optimizer@GetSymRef$qp27@Optimizer@SimpleExpression
	extern @occx86@makefreg$qi
	extern @occx86@gen_code_sse_imm$qiiip5amodepn0pn0
	extern @Optimizer@fltexp
	extern @occx86@gen_codef$qip5amodepn0
	extern _free
	extern _calloc
	extern _memset
	extern _currentFunction
	extern _memcmp
	extern _memchr
	extern _wmemcmp
	extern _wcslen
	extern _wmemchr
	extern @FPF@FromLongLong$qL
	extern @Alloc$qi
	extern @_InitializeException$qpvpv
	extern @_RundownException$qv
	extern @$xt@#__vector_base_common$4bool?1?~
	extern @std@#__vector_base_common$4bool?1?~@$bdtr$qv
	extern @FPF@SetZero$qi
	extern @std@#__vector_base_common$4bool?1?~@__throw_length_error$xqv
	extern @_ThrowException$qpvpvipvpv
	extern @$bnew$qui
	extern @$bdel$qpv
	extern @std@logic_error@$bctr$qpxc
	extern @std@logic_error@$bctr$qrx16@std@logic_error
	extern @std@logic_error@what$xqv
	extern __LXSHL
	extern __LXMUL
	extern __LXMUL
	extern __LXDIVS
	extern __LXDIVS
	extern __LXSHL
	extern __LXSHL
